----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 512, 2, 2)     2359808     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 512, 2, 2)     1024        deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 512, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 512, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 256, 4, 4)     1179904     dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 256, 4, 4)     512         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 256, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 384, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 128, 8, 8)     442496      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 128, 8, 8)     256         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 128, 8, 8)     0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 192, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 64, 16, 16)    110656      merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 64, 16, 16)    128         deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 64, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 96, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    27680       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
merge_5 (Merge)                  (None, 33, 32, 32)    0           activation_5[0][0]               
                                                                   input_1[0][0]                    
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     596         merge_5[0][0]                    
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 5693108
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     5693108                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 6606549
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 512, 2, 2)     2359808     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 512, 2, 2)     1024        deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 512, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 512, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 256, 4, 4)     1179904     dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 256, 4, 4)     512         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 256, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 384, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 128, 8, 8)     442496      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 128, 8, 8)     256         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 128, 8, 8)     0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 192, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 64, 16, 16)    110656      merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 64, 16, 16)    128         deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 64, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 96, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    27680       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
merge_5 (Merge)                  (None, 33, 32, 32)    0           activation_5[0][0]               
                                                                   input_1[0][0]                    
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     596         merge_5[0][0]                    
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 5693108
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     5693108                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 6606549
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 256, 2, 2)     1179904     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 256, 2, 2)     512         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 256, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     295040      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 64, 8, 8)      147520      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 64, 8, 8)      128         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 64, 8, 8)      0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 128, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 32, 16, 16)    36896       merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 32, 16, 16)    64          deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 32, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 64, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    18464       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     578         activation_5[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 3249410
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3249410                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4162851
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 256, 2, 2)     1179904     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 256, 2, 2)     512         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 256, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     295040      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 64, 8, 8)      147520      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 64, 8, 8)      128         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 64, 8, 8)      0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 128, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 32, 16, 16)    36896       merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 32, 16, 16)    64          deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 32, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 64, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    18464       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     578         activation_5[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 3249410
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3249410                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4162851
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 256, 2, 2)     1179904     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 256, 2, 2)     512         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 256, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     295040      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 64, 8, 8)      147520      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 64, 8, 8)      128         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 64, 8, 8)      0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 128, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 32, 16, 16)    36896       merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 32, 16, 16)    64          deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 32, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 64, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    18464       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     578         activation_5[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 3249410
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3249410                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4162851
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
('generated_images.shape=', (256, 2, 32, 32))
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 256, 2, 2)     1179904     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 256, 2, 2)     512         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 256, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     295040      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 64, 8, 8)      147520      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 64, 8, 8)      128         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 64, 8, 8)      0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 128, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 32, 16, 16)    36896       merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 32, 16, 16)    64          deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 32, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 64, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    18464       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     578         activation_5[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 3249410
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3249410                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4162851
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 256, 2, 2)     1179904     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 256, 2, 2)     512         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 256, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     295040      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 64, 8, 8)      147520      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 64, 8, 8)      128         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 64, 8, 8)      0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 128, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 32, 16, 16)    36896       merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 32, 16, 16)    64          deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 32, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 64, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    18464       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     578         activation_5[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 3249410
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3249410                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4162851
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 256, 2, 2)     1179904     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 256, 2, 2)     512         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 256, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     295040      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 64, 8, 8)      147520      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 64, 8, 8)      128         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 64, 8, 8)      0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 128, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 32, 16, 16)    36896       merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 32, 16, 16)    64          deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 32, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 64, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    18464       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     578         activation_5[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 3249410
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3249410                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4162851
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
('generated_images.shape=', (256, 2, 32, 32))
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 256, 2, 2)     1179904     leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 256, 2, 2)     512         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 256, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     295040      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 64, 8, 8)      147520      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 64, 8, 8)      128         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 64, 8, 8)      0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 128, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 32, 16, 16)    36896       merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 32, 16, 16)    64          deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 32, 16, 16)    0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 64, 16, 16)    0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 32, 32, 32)    18464       merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 32, 32, 32)    64          deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 32, 32, 32)    0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 2, 32, 32)     578         activation_5[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_10[0][0]           
====================================================================================================
Total params: 3249410
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3249410                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4162851
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
('generated_images.shape=', (256, 2, 32, 32))
('d_predict.shape=', array([[ 0.72786683],
       [ 0.75744802],
       [ 0.75321829],
       [ 0.73974526],
       [ 0.76750237],
       [ 0.72213453],
       [ 0.72683322],
       [ 0.73890877],
       [ 0.76703966],
       [ 0.75574571],
       [ 0.7466855 ],
       [ 0.76224947],
       [ 0.76698816],
       [ 0.75930053],
       [ 0.75326425],
       [ 0.77134997],
       [ 0.75522441],
       [ 0.75220817],
       [ 0.75580788],
       [ 0.73598713],
       [ 0.76342291],
       [ 0.72465253],
       [ 0.74514556],
       [ 0.74291039],
       [ 0.76117897],
       [ 0.74904948],
       [ 0.74291986],
       [ 0.76506901],
       [ 0.74175698],
       [ 0.75903314],
       [ 0.75744426],
       [ 0.75687826],
       [ 0.75637066],
       [ 0.74242616],
       [ 0.73362571],
       [ 0.7263993 ],
       [ 0.76185548],
       [ 0.76094878],
       [ 0.76004928],
       [ 0.74942356],
       [ 0.74322313],
       [ 0.73572999],
       [ 0.74562961],
       [ 0.73839813],
       [ 0.76351339],
       [ 0.7308358 ],
       [ 0.75730544],
       [ 0.76775229],
       [ 0.74343139],
       [ 0.75607675],
       [ 0.75408089],
       [ 0.73293728],
       [ 0.74890488],
       [ 0.75642282],
       [ 0.73466635],
       [ 0.74221766],
       [ 0.73834306],
       [ 0.74678487],
       [ 0.72683841],
       [ 0.75961858],
       [ 0.7538802 ],
       [ 0.76313853],
       [ 0.77307177],
       [ 0.73239988],
       [ 0.75389808],
       [ 0.76370728],
       [ 0.72386277],
       [ 0.76826632],
       [ 0.75675446],
       [ 0.75928807],
       [ 0.75318831],
       [ 0.75275964],
       [ 0.75370103],
       [ 0.75498986],
       [ 0.74310082],
       [ 0.7651298 ],
       [ 0.76263261],
       [ 0.74661112],
       [ 0.75110883],
       [ 0.75836611],
       [ 0.7597059 ],
       [ 0.75565767],
       [ 0.73121524],
       [ 0.75820023],
       [ 0.75618482],
       [ 0.75705385],
       [ 0.75189036],
       [ 0.73335147],
       [ 0.76299167],
       [ 0.73722684],
       [ 0.74773681],
       [ 0.76630884],
       [ 0.75512242],
       [ 0.76072729],
       [ 0.75306922],
       [ 0.69336677],
       [ 0.75841141],
       [ 0.75069249],
       [ 0.74293166],
       [ 0.71079129],
       [ 0.76728404],
       [ 0.75496429],
       [ 0.74190825],
       [ 0.73935407],
       [ 0.70233583],
       [ 0.76320976],
       [ 0.76555479],
       [ 0.75092512],
       [ 0.7551865 ],
       [ 0.764902  ],
       [ 0.76137233],
       [ 0.76505613],
       [ 0.77086866],
       [ 0.75125444],
       [ 0.73749751],
       [ 0.75882041],
       [ 0.75728422],
       [ 0.75205094],
       [ 0.76036507],
       [ 0.7594828 ],
       [ 0.74819261],
       [ 0.73679894],
       [ 0.75752205],
       [ 0.74991417],
       [ 0.74556869],
       [ 0.7496227 ],
       [ 0.76324451],
       [ 0.75882041],
       [ 0.76048577],
       [ 0.77259767],
       [ 0.73671144],
       [ 0.75372547],
       [ 0.75089091],
       [ 0.75045556],
       [ 0.75056916],
       [ 0.76154041],
       [ 0.76459658],
       [ 0.75626868],
       [ 0.75250369],
       [ 0.75882041],
       [ 0.74239403],
       [ 0.72721732],
       [ 0.75302368],
       [ 0.73785698],
       [ 0.73051113],
       [ 0.76021469],
       [ 0.75226516],
       [ 0.7691294 ],
       [ 0.73640507],
       [ 0.74986976],
       [ 0.74947548],
       [ 0.75224584],
       [ 0.74892813],
       [ 0.75266463],
       [ 0.75351357],
       [ 0.75475323],
       [ 0.74222785],
       [ 0.75178719],
       [ 0.74048328],
       [ 0.75360978],
       [ 0.75899428],
       [ 0.7700268 ],
       [ 0.75631166],
       [ 0.74616462],
       [ 0.75017411],
       [ 0.75201416],
       [ 0.75328708],
       [ 0.73308706],
       [ 0.76383966],
       [ 0.7442261 ],
       [ 0.754538  ],
       [ 0.75482512],
       [ 0.75090128],
       [ 0.74626154],
       [ 0.75535667],
       [ 0.75636238],
       [ 0.76142687],
       [ 0.75184453],
       [ 0.72896332],
       [ 0.76368994],
       [ 0.73146051],
       [ 0.75634497],
       [ 0.74233788],
       [ 0.75729114],
       [ 0.73051834],
       [ 0.7602517 ],
       [ 0.7261526 ],
       [ 0.72953373],
       [ 0.75678545],
       [ 0.76417506],
       [ 0.7541877 ],
       [ 0.76525646],
       [ 0.75913405],
       [ 0.76525885],
       [ 0.76489234],
       [ 0.74462694],
       [ 0.74188763],
       [ 0.75676179],
       [ 0.75524324],
       [ 0.76758319],
       [ 0.73163146],
       [ 0.7638917 ],
       [ 0.7543053 ],
       [ 0.7583304 ],
       [ 0.74114305],
       [ 0.75707978],
       [ 0.75502795],
       [ 0.75827646],
       [ 0.74127394],
       [ 0.73143375],
       [ 0.75242418],
       [ 0.74813795],
       [ 0.76651615],
       [ 0.77782255],
       [ 0.77285182],
       [ 0.75416964],
       [ 0.75392807],
       [ 0.75144386],
       [ 0.74212313],
       [ 0.73785549],
       [ 0.76080096],
       [ 0.74624693],
       [ 0.76733756],
       [ 0.75634366],
       [ 0.75657099],
       [ 0.76349324],
       [ 0.76309043],
       [ 0.74492687],
       [ 0.72558397],
       [ 0.75188023],
       [ 0.74674535],
       [ 0.73220891],
       [ 0.70446104],
       [ 0.75485277],
       [ 0.75373626],
       [ 0.72781056],
       [ 0.76603889],
       [ 0.75006807],
       [ 0.77106041],
       [ 0.75591052],
       [ 0.75647086],
       [ 0.73110431],
       [ 0.71981883],
       [ 0.73965651],
       [ 0.76515412],
       [ 0.73881114],
       [ 0.77290505],
       [ 0.75968057],
       [ 0.7487911 ],
       [ 0.75400257],
       [ 0.759453  ],
       [ 0.75662971],
       [ 0.76847947],
       [ 0.74263465],
       [ 0.74976909],
       [ 0.74378943]], dtype=float32))
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 32, 16, 16)    320         input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 32, 16, 16)    64          convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 64, 8, 8)      128         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 256, 2, 2)     295168      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 256, 2, 2)     512         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 512, 1, 1)     1180160     leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 512, 1, 1)     1024        convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 512, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 128, 2, 2)     589952      leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 128, 2, 2)     256         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 128, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 128, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     147584      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 128, 8, 8)     295040      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 128, 8, 8)     256         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 128, 8, 8)     0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 192, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 128, 16, 16)   221312      merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 128, 16, 16)   256         deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 128, 16, 16)   0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 160, 16, 16)   0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 128, 32, 32)   184448      merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 128, 32, 32)   256         deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 128, 32, 32)   0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 64, 32, 32)    73792       activation_5[0][0]               
____________________________________________________________________________________________________
batchnormalization_11 (BatchNorma(None, 64, 32, 32)    128         convolution2d_10[0][0]           
____________________________________________________________________________________________________
leakyrelu_11 (LeakyReLU)         (None, 64, 32, 32)    0           batchnormalization_11[0][0]      
____________________________________________________________________________________________________
convolution2d_11 (Convolution2D) (None, 32, 32, 32)    18464       leakyrelu_11[0][0]               
____________________________________________________________________________________________________
batchnormalization_12 (BatchNorma(None, 32, 32, 32)    64          convolution2d_11[0][0]           
____________________________________________________________________________________________________
leakyrelu_12 (LeakyReLU)         (None, 32, 32, 32)    0           batchnormalization_12[0][0]      
____________________________________________________________________________________________________
convolution2d_12 (Convolution2D) (None, 2, 32, 32)     578         leakyrelu_12[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_12[0][0]           
====================================================================================================
Total params: 3102626
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     3102626                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 4016067
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 128, 16, 16)   1280        input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 128, 16, 16)   256         convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 128, 16, 16)   0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 128, 8, 8)     147584      leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 128, 8, 8)     256         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 128, 8, 8)     0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     147584      leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 128, 2, 2)     147584      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 128, 2, 2)     256         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 128, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 128, 1, 1)     147584      leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 128, 1, 1)     256         convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 128, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 128, 2, 2)     147584      leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 128, 2, 2)     256         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 128, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 128, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     147584      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 128, 8, 8)     295040      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 128, 8, 8)     256         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 128, 8, 8)     0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 256, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 128, 16, 16)   295040      merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 128, 16, 16)   256         deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 128, 16, 16)   0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 256, 16, 16)   0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 128, 32, 32)   295040      merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 128, 32, 32)   256         deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 128, 32, 32)   0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 64, 32, 32)    73792       activation_5[0][0]               
____________________________________________________________________________________________________
batchnormalization_11 (BatchNorma(None, 64, 32, 32)    128         convolution2d_10[0][0]           
____________________________________________________________________________________________________
leakyrelu_11 (LeakyReLU)         (None, 64, 32, 32)    0           batchnormalization_11[0][0]      
____________________________________________________________________________________________________
convolution2d_11 (Convolution2D) (None, 32, 32, 32)    18464       leakyrelu_11[0][0]               
____________________________________________________________________________________________________
batchnormalization_12 (BatchNorma(None, 32, 32, 32)    64          convolution2d_11[0][0]           
____________________________________________________________________________________________________
leakyrelu_12 (LeakyReLU)         (None, 32, 32, 32)    0           batchnormalization_12[0][0]      
____________________________________________________________________________________________________
convolution2d_12 (Convolution2D) (None, 2, 32, 32)     578         leakyrelu_12[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_12[0][0]           
====================================================================================================
Total params: 1867490
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     1867490                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2780931
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
('GAN loss 1.4363 ', 'GAN acc 0.0195', 'Discriminator loss 0.5529', 'Discriminator accuracy 0.6758', 'Total loss: 1.9892', 'for batch', 0)
('GAN loss 1.0938 ', 'GAN acc 0.1172', 'Discriminator loss 0.6452', 'Discriminator accuracy 0.6641', 'Total loss: 1.7390', 'for batch', 1)
('GAN loss 1.2981 ', 'GAN acc 0.0352', 'Discriminator loss 0.7431', 'Discriminator accuracy 0.5312', 'Total loss: 2.0413', 'for batch', 2)
('GAN loss 1.5882 ', 'GAN acc 0.0078', 'Discriminator loss 0.6850', 'Discriminator accuracy 0.5586', 'Total loss: 2.2732', 'for batch', 3)
('GAN loss 1.5792 ', 'GAN acc 0.0117', 'Discriminator loss 0.6471', 'Discriminator accuracy 0.6016', 'Total loss: 2.2263', 'for batch', 4)
('GAN loss 1.5719 ', 'GAN acc 0.0000', 'Discriminator loss 0.6326', 'Discriminator accuracy 0.6621', 'Total loss: 2.2045', 'for batch', 5)
('GAN loss 1.9762 ', 'GAN acc 0.0000', 'Discriminator loss 0.5917', 'Discriminator accuracy 0.6797', 'Total loss: 2.5679', 'for batch', 6)
('GAN loss 2.1569 ', 'GAN acc 0.0000', 'Discriminator loss 0.5038', 'Discriminator accuracy 0.7520', 'Total loss: 2.6607', 'for batch', 7)
('GAN loss 1.8213 ', 'GAN acc 0.0078', 'Discriminator loss 0.4457', 'Discriminator accuracy 0.8867', 'Total loss: 2.2670', 'for batch', 8)
('GAN loss 2.1354 ', 'GAN acc 0.0000', 'Discriminator loss 0.4116', 'Discriminator accuracy 0.9473', 'Total loss: 2.5470', 'for batch', 9)
('GAN loss 2.1584 ', 'GAN acc 0.0000', 'Discriminator loss 0.4206', 'Discriminator accuracy 0.9492', 'Total loss: 2.5791', 'for batch', 10)
('GAN loss 2.1843 ', 'GAN acc 0.0000', 'Discriminator loss 0.4176', 'Discriminator accuracy 0.9414', 'Total loss: 2.6019', 'for batch', 11)
('GAN loss 2.2548 ', 'GAN acc 0.0000', 'Discriminator loss 0.4084', 'Discriminator accuracy 0.9395', 'Total loss: 2.6632', 'for batch', 12)
('GAN loss 2.5657 ', 'GAN acc 0.0000', 'Discriminator loss 0.3568', 'Discriminator accuracy 0.9648', 'Total loss: 2.9225', 'for batch', 13)
('GAN loss 2.5834 ', 'GAN acc 0.0000', 'Discriminator loss 0.3347', 'Discriminator accuracy 0.9492', 'Total loss: 2.9181', 'for batch', 14)
('GAN loss 3.2687 ', 'GAN acc 0.0000', 'Discriminator loss 0.2969', 'Discriminator accuracy 0.9668', 'Total loss: 3.5657', 'for batch', 15)
('GAN loss 2.5842 ', 'GAN acc 0.0000', 'Discriminator loss 0.2577', 'Discriminator accuracy 0.9824', 'Total loss: 2.8419', 'for batch', 16)
('GAN loss 5.1689 ', 'GAN acc 0.0000', 'Discriminator loss 0.2539', 'Discriminator accuracy 0.9707', 'Total loss: 5.4228', 'for batch', 17)
('GAN loss 1.3486 ', 'GAN acc 0.1523', 'Discriminator loss 0.3121', 'Discriminator accuracy 0.8691', 'Total loss: 1.6608', 'for batch', 18)
('GAN loss 6.3049 ', 'GAN acc 0.0000', 'Discriminator loss 0.6494', 'Discriminator accuracy 0.6016', 'Total loss: 6.9542', 'for batch', 19)
('GAN loss 3.5501 ', 'GAN acc 0.0000', 'Discriminator loss 0.5017', 'Discriminator accuracy 0.5586', 'Total loss: 4.0519', 'for batch', 20)
('GAN loss 1.7710 ', 'GAN acc 0.1016', 'Discriminator loss 0.2648', 'Discriminator accuracy 0.9668', 'Total loss: 2.0358', 'for batch', 21)
('GAN loss 3.0787 ', 'GAN acc 0.0039', 'Discriminator loss 0.4524', 'Discriminator accuracy 0.8086', 'Total loss: 3.5310', 'for batch', 22)
('GAN loss 3.2790 ', 'GAN acc 0.0039', 'Discriminator loss 0.3284', 'Discriminator accuracy 0.9199', 'Total loss: 3.6075', 'for batch', 23)
('GAN loss 2.5138 ', 'GAN acc 0.0352', 'Discriminator loss 0.3868', 'Discriminator accuracy 0.9023', 'Total loss: 2.9006', 'for batch', 24)
('GAN loss 3.6223 ', 'GAN acc 0.0000', 'Discriminator loss 0.4738', 'Discriminator accuracy 0.8320', 'Total loss: 4.0961', 'for batch', 25)
('GAN loss 0.6747 ', 'GAN acc 0.6523', 'Discriminator loss 0.5929', 'Discriminator accuracy 0.5352', 'Total loss: 1.2676', 'for batch', 26)
('GAN loss 3.8573 ', 'GAN acc 0.0000', 'Discriminator loss 0.7769', 'Discriminator accuracy 0.5625', 'Total loss: 4.6343', 'for batch', 27)
('GAN loss 1.2166 ', 'GAN acc 0.1250', 'Discriminator loss 0.7729', 'Discriminator accuracy 0.5000', 'Total loss: 1.9895', 'for batch', 28)
('GAN loss 1.4144 ', 'GAN acc 0.0273', 'Discriminator loss 0.6002', 'Discriminator accuracy 0.7363', 'Total loss: 2.0146', 'for batch', 29)
('GAN loss 2.0398 ', 'GAN acc 0.0000', 'Discriminator loss 0.5663', 'Discriminator accuracy 0.7402', 'Total loss: 2.6061', 'for batch', 30)
('GAN loss 1.3077 ', 'GAN acc 0.0195', 'Discriminator loss 0.6146', 'Discriminator accuracy 0.5391', 'Total loss: 1.9223', 'for batch', 31)
('GAN loss 1.2949 ', 'GAN acc 0.0391', 'Discriminator loss 0.6153', 'Discriminator accuracy 0.6289', 'Total loss: 1.9102', 'for batch', 32)
('GAN loss 1.6949 ', 'GAN acc 0.0000', 'Discriminator loss 0.6218', 'Discriminator accuracy 0.6309', 'Total loss: 2.3167', 'for batch', 33)
('GAN loss 1.1857 ', 'GAN acc 0.0469', 'Discriminator loss 0.6160', 'Discriminator accuracy 0.5488', 'Total loss: 1.8017', 'for batch', 34)
('GAN loss 1.4462 ', 'GAN acc 0.0078', 'Discriminator loss 0.6235', 'Discriminator accuracy 0.6250', 'Total loss: 2.0698', 'for batch', 35)
('GAN loss 1.4779 ', 'GAN acc 0.0000', 'Discriminator loss 0.6258', 'Discriminator accuracy 0.5684', 'Total loss: 2.1037', 'for batch', 36)
('GAN loss 1.3095 ', 'GAN acc 0.0039', 'Discriminator loss 0.5979', 'Discriminator accuracy 0.5918', 'Total loss: 1.9073', 'for batch', 37)
('GAN loss 1.5251 ', 'GAN acc 0.0000', 'Discriminator loss 0.6087', 'Discriminator accuracy 0.6289', 'Total loss: 2.1339', 'for batch', 38)
('GAN loss 1.2666 ', 'GAN acc 0.0469', 'Discriminator loss 0.5813', 'Discriminator accuracy 0.5801', 'Total loss: 1.8479', 'for batch', 39)
('GAN loss 1.5392 ', 'GAN acc 0.0000', 'Discriminator loss 0.6050', 'Discriminator accuracy 0.6250', 'Total loss: 2.1443', 'for batch', 40)
('GAN loss 1.2924 ', 'GAN acc 0.0117', 'Discriminator loss 0.5997', 'Discriminator accuracy 0.5938', 'Total loss: 1.8921', 'for batch', 41)
('GAN loss 1.5086 ', 'GAN acc 0.0000', 'Discriminator loss 0.5852', 'Discriminator accuracy 0.6797', 'Total loss: 2.0939', 'for batch', 42)
('GAN loss 1.1897 ', 'GAN acc 0.0469', 'Discriminator loss 0.5798', 'Discriminator accuracy 0.6289', 'Total loss: 1.7695', 'for batch', 43)
('GAN loss 1.9505 ', 'GAN acc 0.0000', 'Discriminator loss 0.5600', 'Discriminator accuracy 0.7598', 'Total loss: 2.5106', 'for batch', 44)
('GAN loss 0.7301 ', 'GAN acc 0.4492', 'Discriminator loss 0.5973', 'Discriminator accuracy 0.5332', 'Total loss: 1.3274', 'for batch', 45)
('GAN loss 2.9772 ', 'GAN acc 0.0000', 'Discriminator loss 0.6362', 'Discriminator accuracy 0.6758', 'Total loss: 3.6134', 'for batch', 46)
('GAN loss 0.8226 ', 'GAN acc 0.2930', 'Discriminator loss 0.7098', 'Discriminator accuracy 0.5000', 'Total loss: 1.5324', 'for batch', 47)
('GAN loss 1.4781 ', 'GAN acc 0.0039', 'Discriminator loss 0.6198', 'Discriminator accuracy 0.7363', 'Total loss: 2.0979', 'for batch', 48)
('GAN loss 1.8251 ', 'GAN acc 0.0000', 'Discriminator loss 0.5557', 'Discriminator accuracy 0.6445', 'Total loss: 2.3808', 'for batch', 49)
('GAN loss 1.1684 ', 'GAN acc 0.0273', 'Discriminator loss 0.5705', 'Discriminator accuracy 0.5352', 'Total loss: 1.7389', 'for batch', 50)
('GAN loss 1.6044 ', 'GAN acc 0.0000', 'Discriminator loss 0.5526', 'Discriminator accuracy 0.7812', 'Total loss: 2.1570', 'for batch', 51)
('GAN loss 1.4759 ', 'GAN acc 0.0000', 'Discriminator loss 0.5306', 'Discriminator accuracy 0.6250', 'Total loss: 2.0065', 'for batch', 52)
('GAN loss 1.5423 ', 'GAN acc 0.0000', 'Discriminator loss 0.5285', 'Discriminator accuracy 0.7188', 'Total loss: 2.0708', 'for batch', 53)
('GAN loss 1.4907 ', 'GAN acc 0.0000', 'Discriminator loss 0.5150', 'Discriminator accuracy 0.6777', 'Total loss: 2.0057', 'for batch', 54)
('GAN loss 1.6745 ', 'GAN acc 0.0000', 'Discriminator loss 0.5057', 'Discriminator accuracy 0.7500', 'Total loss: 2.1802', 'for batch', 55)
('GAN loss 1.3760 ', 'GAN acc 0.0000', 'Discriminator loss 0.5002', 'Discriminator accuracy 0.7051', 'Total loss: 1.8762', 'for batch', 56)
('GAN loss 2.1464 ', 'GAN acc 0.0000', 'Discriminator loss 0.5030', 'Discriminator accuracy 0.8477', 'Total loss: 2.6494', 'for batch', 57)
('GAN loss 0.7480 ', 'GAN acc 0.4414', 'Discriminator loss 0.4921', 'Discriminator accuracy 0.6250', 'Total loss: 1.2401', 'for batch', 58)
('GAN loss 4.2370 ', 'GAN acc 0.0000', 'Discriminator loss 0.5989', 'Discriminator accuracy 0.7070', 'Total loss: 4.8359', 'for batch', 59)
('GAN loss 0.8765 ', 'GAN acc 0.2070', 'Discriminator loss 0.7939', 'Discriminator accuracy 0.5000', 'Total loss: 1.6704', 'for batch', 60)
('GAN loss 1.5404 ', 'GAN acc 0.0000', 'Discriminator loss 0.5552', 'Discriminator accuracy 0.7988', 'Total loss: 2.0957', 'for batch', 61)
('GAN loss 1.9627 ', 'GAN acc 0.0000', 'Discriminator loss 0.4800', 'Discriminator accuracy 0.7852', 'Total loss: 2.4427', 'for batch', 62)
('GAN loss 1.3499 ', 'GAN acc 0.0078', 'Discriminator loss 0.4761', 'Discriminator accuracy 0.6738', 'Total loss: 1.8259', 'for batch', 63)
('GAN loss 1.9056 ', 'GAN acc 0.0000', 'Discriminator loss 0.4889', 'Discriminator accuracy 0.9199', 'Total loss: 2.3945', 'for batch', 64)
('GAN loss 1.5730 ', 'GAN acc 0.0000', 'Discriminator loss 0.4745', 'Discriminator accuracy 0.7227', 'Total loss: 2.0474', 'for batch', 65)
('GAN loss 1.5597 ', 'GAN acc 0.0000', 'Discriminator loss 0.4560', 'Discriminator accuracy 0.8594', 'Total loss: 2.0157', 'for batch', 66)
('GAN loss 1.8535 ', 'GAN acc 0.0000', 'Discriminator loss 0.4405', 'Discriminator accuracy 0.8809', 'Total loss: 2.2940', 'for batch', 67)
('GAN loss 1.4322 ', 'GAN acc 0.0039', 'Discriminator loss 0.4288', 'Discriminator accuracy 0.8242', 'Total loss: 1.8610', 'for batch', 68)
('GAN loss 2.7500 ', 'GAN acc 0.0000', 'Discriminator loss 0.4274', 'Discriminator accuracy 0.9297', 'Total loss: 3.1775', 'for batch', 69)
('GAN loss 0.4782 ', 'GAN acc 0.8867', 'Discriminator loss 0.4685', 'Discriminator accuracy 0.6621', 'Total loss: 0.9467', 'for batch', 70)
('GAN loss 5.7533 ', 'GAN acc 0.0000', 'Discriminator loss 0.6731', 'Discriminator accuracy 0.5371', 'Total loss: 6.4263', 'for batch', 71)
('GAN loss 1.6111 ', 'GAN acc 0.0078', 'Discriminator loss 1.0310', 'Discriminator accuracy 0.5000', 'Total loss: 2.6421', 'for batch', 72)
('GAN loss 0.7557 ', 'GAN acc 0.4414', 'Discriminator loss 0.4546', 'Discriminator accuracy 0.8730', 'Total loss: 1.2102', 'for batch', 73)
('GAN loss 1.8633 ', 'GAN acc 0.0000', 'Discriminator loss 0.5656', 'Discriminator accuracy 0.6992', 'Total loss: 2.4289', 'for batch', 74)
('GAN loss 2.3406 ', 'GAN acc 0.0000', 'Discriminator loss 0.4004', 'Discriminator accuracy 0.7754', 'Total loss: 2.7410', 'for batch', 75)
('GAN loss 1.6645 ', 'GAN acc 0.0078', 'Discriminator loss 0.3891', 'Discriminator accuracy 0.9004', 'Total loss: 2.0536', 'for batch', 76)
('GAN loss 2.1305 ', 'GAN acc 0.0000', 'Discriminator loss 0.4205', 'Discriminator accuracy 0.9688', 'Total loss: 2.5510', 'for batch', 77)
('GAN loss 2.1903 ', 'GAN acc 0.0000', 'Discriminator loss 0.3936', 'Discriminator accuracy 0.9160', 'Total loss: 2.5839', 'for batch', 78)
('GAN loss 1.4082 ', 'GAN acc 0.0000', 'Discriminator loss 0.4054', 'Discriminator accuracy 0.8320', 'Total loss: 1.8136', 'for batch', 79)
('GAN loss 2.4838 ', 'GAN acc 0.0000', 'Discriminator loss 0.3944', 'Discriminator accuracy 0.9727', 'Total loss: 2.8781', 'for batch', 80)
('GAN loss 1.2754 ', 'GAN acc 0.0039', 'Discriminator loss 0.3946', 'Discriminator accuracy 0.8066', 'Total loss: 1.6700', 'for batch', 81)
('GAN loss 3.4813 ', 'GAN acc 0.0000', 'Discriminator loss 0.3809', 'Discriminator accuracy 0.9766', 'Total loss: 3.8623', 'for batch', 82)
('GAN loss 0.7823 ', 'GAN acc 0.3750', 'Discriminator loss 0.4437', 'Discriminator accuracy 0.6406', 'Total loss: 1.2260', 'for batch', 83)
('GAN loss 5.0241 ', 'GAN acc 0.0000', 'Discriminator loss 0.4878', 'Discriminator accuracy 0.7715', 'Total loss: 5.5119', 'for batch', 84)
('GAN loss 1.4397 ', 'GAN acc 0.0117', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5059', 'Total loss: 2.1190', 'for batch', 85)
('GAN loss 1.3383 ', 'GAN acc 0.0156', 'Discriminator loss 0.3811', 'Discriminator accuracy 0.9570', 'Total loss: 1.7194', 'for batch', 86)
('GAN loss 2.7987 ', 'GAN acc 0.0000', 'Discriminator loss 0.3787', 'Discriminator accuracy 0.9668', 'Total loss: 3.1774', 'for batch', 87)
('GAN loss 1.5067 ', 'GAN acc 0.0078', 'Discriminator loss 0.4166', 'Discriminator accuracy 0.7363', 'Total loss: 1.9233', 'for batch', 88)
('GAN loss 2.0716 ', 'GAN acc 0.0000', 'Discriminator loss 0.3760', 'Discriminator accuracy 0.9551', 'Total loss: 2.4476', 'for batch', 89)
('GAN loss 2.0317 ', 'GAN acc 0.0000', 'Discriminator loss 0.3345', 'Discriminator accuracy 0.9551', 'Total loss: 2.3662', 'for batch', 90)
('GAN loss 1.5973 ', 'GAN acc 0.0156', 'Discriminator loss 0.2745', 'Discriminator accuracy 0.9570', 'Total loss: 1.8718', 'for batch', 91)
('GAN loss 3.8678 ', 'GAN acc 0.0000', 'Discriminator loss 0.2785', 'Discriminator accuracy 0.9609', 'Total loss: 4.1463', 'for batch', 92)
('GAN loss 1.8548 ', 'GAN acc 0.0039', 'Discriminator loss 0.2837', 'Discriminator accuracy 0.9316', 'Total loss: 2.1385', 'for batch', 93)
('GAN loss 5.6265 ', 'GAN acc 0.0000', 'Discriminator loss 0.3501', 'Discriminator accuracy 0.9375', 'Total loss: 5.9767', 'for batch', 94)
('GAN loss 0.5462 ', 'GAN acc 0.8203', 'Discriminator loss 0.6271', 'Discriminator accuracy 0.5059', 'Total loss: 1.1733', 'for batch', 95)
('GAN loss 5.6270 ', 'GAN acc 0.0000', 'Discriminator loss 0.5679', 'Discriminator accuracy 0.5645', 'Total loss: 6.1949', 'for batch', 96)
('GAN loss 2.8136 ', 'GAN acc 0.0000', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5000', 'Total loss: 3.4873', 'for batch', 97)
('GAN loss 0.6831 ', 'GAN acc 0.5508', 'Discriminator loss 0.3338', 'Discriminator accuracy 0.8887', 'Total loss: 1.0169', 'for batch', 98)
('GAN loss 3.2729 ', 'GAN acc 0.0000', 'Discriminator loss 0.5000', 'Discriminator accuracy 0.6660', 'Total loss: 3.7729', 'for batch', 99)
('GAN loss 2.8787 ', 'GAN acc 0.0000', 'Discriminator loss 0.3868', 'Discriminator accuracy 0.7461', 'Total loss: 3.2655', 'for batch', 100)
('GAN loss 1.4220 ', 'GAN acc 0.0000', 'Discriminator loss 0.3273', 'Discriminator accuracy 0.8984', 'Total loss: 1.7493', 'for batch', 101)
('GAN loss 2.0435 ', 'GAN acc 0.0000', 'Discriminator loss 0.3061', 'Discriminator accuracy 0.9922', 'Total loss: 2.3495', 'for batch', 102)
('GAN loss 2.5312 ', 'GAN acc 0.0000', 'Discriminator loss 0.2808', 'Discriminator accuracy 0.9648', 'Total loss: 2.8120', 'for batch', 103)
('GAN loss 2.0417 ', 'GAN acc 0.0039', 'Discriminator loss 0.2798', 'Discriminator accuracy 0.9590', 'Total loss: 2.3215', 'for batch', 104)
('GAN loss 2.1907 ', 'GAN acc 0.0000', 'Discriminator loss 0.2678', 'Discriminator accuracy 0.9668', 'Total loss: 2.4584', 'for batch', 105)
('GAN loss 2.5424 ', 'GAN acc 0.0000', 'Discriminator loss 0.2726', 'Discriminator accuracy 0.9688', 'Total loss: 2.8150', 'for batch', 106)
('GAN loss 2.2014 ', 'GAN acc 0.0039', 'Discriminator loss 0.2771', 'Discriminator accuracy 0.9551', 'Total loss: 2.4785', 'for batch', 107)
('GAN loss 2.5315 ', 'GAN acc 0.0000', 'Discriminator loss 0.2562', 'Discriminator accuracy 0.9648', 'Total loss: 2.7877', 'for batch', 108)
('GAN loss 2.0360 ', 'GAN acc 0.0117', 'Discriminator loss 0.2250', 'Discriminator accuracy 0.9707', 'Total loss: 2.2609', 'for batch', 109)
('GAN loss 3.1282 ', 'GAN acc 0.0000', 'Discriminator loss 0.1816', 'Discriminator accuracy 0.9863', 'Total loss: 3.3098', 'for batch', 110)
('GAN loss 2.9272 ', 'GAN acc 0.0078', 'Discriminator loss 0.1888', 'Discriminator accuracy 0.9727', 'Total loss: 3.1161', 'for batch', 111)
('GAN loss 2.3702 ', 'GAN acc 0.0000', 'Discriminator loss 0.1727', 'Discriminator accuracy 0.9824', 'Total loss: 2.5429', 'for batch', 112)
('GAN loss 6.4546 ', 'GAN acc 0.0000', 'Discriminator loss 0.2882', 'Discriminator accuracy 0.9102', 'Total loss: 6.7428', 'for batch', 113)
('GAN loss 0.1197 ', 'GAN acc 1.0000', 'Discriminator loss 0.8295', 'Discriminator accuracy 0.5000', 'Total loss: 0.9493', 'for batch', 114)
('GAN loss 3.4154 ', 'GAN acc 0.0000', 'Discriminator loss 0.9597', 'Discriminator accuracy 0.5020', 'Total loss: 4.3751', 'for batch', 115)
('GAN loss 3.4824 ', 'GAN acc 0.0039', 'Discriminator loss 0.2605', 'Discriminator accuracy 0.9453', 'Total loss: 3.7429', 'for batch', 116)
('GAN loss 1.7693 ', 'GAN acc 0.0859', 'Discriminator loss 0.4033', 'Discriminator accuracy 0.8379', 'Total loss: 2.1726', 'for batch', 117)
('GAN loss 1.5659 ', 'GAN acc 0.1758', 'Discriminator loss 0.3379', 'Discriminator accuracy 0.8750', 'Total loss: 1.9038', 'for batch', 118)
('GAN loss 2.1884 ', 'GAN acc 0.1406', 'Discriminator loss 0.4114', 'Discriminator accuracy 0.8105', 'Total loss: 2.5998', 'for batch', 119)
('GAN loss 2.2820 ', 'GAN acc 0.1289', 'Discriminator loss 0.3892', 'Discriminator accuracy 0.8379', 'Total loss: 2.6712', 'for batch', 120)
('GAN loss 1.7643 ', 'GAN acc 0.2344', 'Discriminator loss 0.4128', 'Discriminator accuracy 0.8438', 'Total loss: 2.1771', 'for batch', 121)
('GAN loss 1.8533 ', 'GAN acc 0.2227', 'Discriminator loss 0.3997', 'Discriminator accuracy 0.8242', 'Total loss: 2.2530', 'for batch', 122)
('GAN loss 2.0619 ', 'GAN acc 0.2617', 'Discriminator loss 0.4257', 'Discriminator accuracy 0.7871', 'Total loss: 2.4876', 'for batch', 123)
('GAN loss 1.6914 ', 'GAN acc 0.3125', 'Discriminator loss 0.4433', 'Discriminator accuracy 0.8105', 'Total loss: 2.1347', 'for batch', 124)
('GAN loss 1.9534 ', 'GAN acc 0.3164', 'Discriminator loss 0.4545', 'Discriminator accuracy 0.7773', 'Total loss: 2.4079', 'for batch', 125)
('GAN loss 1.8172 ', 'GAN acc 0.3398', 'Discriminator loss 0.4729', 'Discriminator accuracy 0.7871', 'Total loss: 2.2901', 'for batch', 126)
('GAN loss 1.7594 ', 'GAN acc 0.3516', 'Discriminator loss 0.4681', 'Discriminator accuracy 0.7754', 'Total loss: 2.2275', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.7613126)
('DISCRIMINATOR_Imagem FAKE=', 0.40615851)
('Discriminator trained', 37, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:01:16.528349')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 128)
('GAN loss 1.9637 ', 'GAN acc 0.3477', 'Discriminator loss 0.4866', 'Discriminator accuracy 0.7734', 'Total loss: 2.4503', 'for batch', 0)
('GAN loss 1.5034 ', 'GAN acc 0.4336', 'Discriminator loss 0.5414', 'Discriminator accuracy 0.7207', 'Total loss: 2.0448', 'for batch', 1)
('GAN loss 1.6736 ', 'GAN acc 0.4336', 'Discriminator loss 0.5471', 'Discriminator accuracy 0.7227', 'Total loss: 2.2207', 'for batch', 2)
('GAN loss 1.3141 ', 'GAN acc 0.4648', 'Discriminator loss 0.5757', 'Discriminator accuracy 0.7012', 'Total loss: 1.8898', 'for batch', 3)
('GAN loss 1.5481 ', 'GAN acc 0.4492', 'Discriminator loss 0.5654', 'Discriminator accuracy 0.7090', 'Total loss: 2.1135', 'for batch', 4)
('GAN loss 1.2975 ', 'GAN acc 0.5156', 'Discriminator loss 0.6157', 'Discriminator accuracy 0.6680', 'Total loss: 1.9132', 'for batch', 5)
('GAN loss 1.2510 ', 'GAN acc 0.4766', 'Discriminator loss 0.5727', 'Discriminator accuracy 0.7051', 'Total loss: 1.8237', 'for batch', 6)
('GAN loss 1.4578 ', 'GAN acc 0.4805', 'Discriminator loss 0.5733', 'Discriminator accuracy 0.7031', 'Total loss: 2.0311', 'for batch', 7)
('GAN loss 1.3157 ', 'GAN acc 0.4922', 'Discriminator loss 0.5825', 'Discriminator accuracy 0.7012', 'Total loss: 1.8981', 'for batch', 8)
('GAN loss 1.1569 ', 'GAN acc 0.5977', 'Discriminator loss 0.6274', 'Discriminator accuracy 0.6543', 'Total loss: 1.7843', 'for batch', 9)
('GAN loss 1.0850 ', 'GAN acc 0.6055', 'Discriminator loss 0.6585', 'Discriminator accuracy 0.6230', 'Total loss: 1.7434', 'for batch', 10)
('GAN loss 1.0985 ', 'GAN acc 0.5664', 'Discriminator loss 0.6144', 'Discriminator accuracy 0.6621', 'Total loss: 1.7128', 'for batch', 11)
('GAN loss 0.9978 ', 'GAN acc 0.6055', 'Discriminator loss 0.6453', 'Discriminator accuracy 0.6309', 'Total loss: 1.6432', 'for batch', 12)
('GAN loss 1.0418 ', 'GAN acc 0.5938', 'Discriminator loss 0.6434', 'Discriminator accuracy 0.6406', 'Total loss: 1.6852', 'for batch', 13)
('GAN loss 0.9984 ', 'GAN acc 0.6094', 'Discriminator loss 0.6487', 'Discriminator accuracy 0.6230', 'Total loss: 1.6471', 'for batch', 14)
('GAN loss 0.9619 ', 'GAN acc 0.5977', 'Discriminator loss 0.6365', 'Discriminator accuracy 0.6328', 'Total loss: 1.5985', 'for batch', 15)
('GAN loss 0.9000 ', 'GAN acc 0.6758', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.6113', 'Total loss: 1.5654', 'for batch', 16)
('GAN loss 0.9218 ', 'GAN acc 0.6250', 'Discriminator loss 0.6425', 'Discriminator accuracy 0.6289', 'Total loss: 1.5643', 'for batch', 17)
('GAN loss 0.9451 ', 'GAN acc 0.5273', 'Discriminator loss 0.5938', 'Discriminator accuracy 0.6973', 'Total loss: 1.5389', 'for batch', 18)
('GAN loss 0.9189 ', 'GAN acc 0.5625', 'Discriminator loss 0.6124', 'Discriminator accuracy 0.6738', 'Total loss: 1.5314', 'for batch', 19)
('GAN loss 0.9037 ', 'GAN acc 0.6367', 'Discriminator loss 0.6502', 'Discriminator accuracy 0.6387', 'Total loss: 1.5538', 'for batch', 20)
('GAN loss 0.8299 ', 'GAN acc 0.7031', 'Discriminator loss 0.6616', 'Discriminator accuracy 0.6016', 'Total loss: 1.4916', 'for batch', 21)
('GAN loss 0.7706 ', 'GAN acc 0.7148', 'Discriminator loss 0.6595', 'Discriminator accuracy 0.5996', 'Total loss: 1.4301', 'for batch', 22)
('GAN loss 0.7639 ', 'GAN acc 0.7266', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5820', 'Total loss: 1.4401', 'for batch', 23)
('GAN loss 0.7497 ', 'GAN acc 0.7383', 'Discriminator loss 0.6914', 'Discriminator accuracy 0.5527', 'Total loss: 1.4412', 'for batch', 24)
('GAN loss 0.7468 ', 'GAN acc 0.7070', 'Discriminator loss 0.6815', 'Discriminator accuracy 0.5586', 'Total loss: 1.4283', 'for batch', 25)
('GAN loss 0.7406 ', 'GAN acc 0.7344', 'Discriminator loss 0.6586', 'Discriminator accuracy 0.5918', 'Total loss: 1.3992', 'for batch', 26)
('GAN loss 0.7640 ', 'GAN acc 0.7109', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.5859', 'Total loss: 1.4208', 'for batch', 27)
('GAN loss 0.7151 ', 'GAN acc 0.7383', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5684', 'Total loss: 1.3894', 'for batch', 28)
('GAN loss 0.7771 ', 'GAN acc 0.6836', 'Discriminator loss 0.6353', 'Discriminator accuracy 0.6289', 'Total loss: 1.4124', 'for batch', 29)
('GAN loss 0.7746 ', 'GAN acc 0.7148', 'Discriminator loss 0.6484', 'Discriminator accuracy 0.5820', 'Total loss: 1.4230', 'for batch', 30)
('GAN loss 0.7380 ', 'GAN acc 0.7227', 'Discriminator loss 0.6509', 'Discriminator accuracy 0.5703', 'Total loss: 1.3889', 'for batch', 31)
('GAN loss 0.7282 ', 'GAN acc 0.7812', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.5527', 'Total loss: 1.3888', 'for batch', 32)
('GAN loss 0.7605 ', 'GAN acc 0.7578', 'Discriminator loss 0.6614', 'Discriminator accuracy 0.5508', 'Total loss: 1.4219', 'for batch', 33)
('GAN loss 0.7486 ', 'GAN acc 0.7734', 'Discriminator loss 0.6554', 'Discriminator accuracy 0.5488', 'Total loss: 1.4040', 'for batch', 34)
('GAN loss 0.7306 ', 'GAN acc 0.7656', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.5566', 'Total loss: 1.3864', 'for batch', 35)
('GAN loss 0.7423 ', 'GAN acc 0.7422', 'Discriminator loss 0.6472', 'Discriminator accuracy 0.5645', 'Total loss: 1.3895', 'for batch', 36)
('GAN loss 0.7502 ', 'GAN acc 0.7852', 'Discriminator loss 0.6573', 'Discriminator accuracy 0.5449', 'Total loss: 1.4075', 'for batch', 37)
('GAN loss 0.7131 ', 'GAN acc 0.7578', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5254', 'Total loss: 1.3765', 'for batch', 38)
('GAN loss 0.7253 ', 'GAN acc 0.7422', 'Discriminator loss 0.6479', 'Discriminator accuracy 0.5488', 'Total loss: 1.3733', 'for batch', 39)
('GAN loss 0.7802 ', 'GAN acc 0.7461', 'Discriminator loss 0.6538', 'Discriminator accuracy 0.5449', 'Total loss: 1.4340', 'for batch', 40)
('GAN loss 0.7605 ', 'GAN acc 0.7070', 'Discriminator loss 0.6404', 'Discriminator accuracy 0.6016', 'Total loss: 1.4009', 'for batch', 41)
('GAN loss 0.9362 ', 'GAN acc 0.5000', 'Discriminator loss 0.6156', 'Discriminator accuracy 0.6484', 'Total loss: 1.5518', 'for batch', 42)
('GAN loss 1.0256 ', 'GAN acc 0.5234', 'Discriminator loss 0.5974', 'Discriminator accuracy 0.6426', 'Total loss: 1.6230', 'for batch', 43)
('GAN loss 0.8192 ', 'GAN acc 0.4180', 'Discriminator loss 0.6331', 'Discriminator accuracy 0.5664', 'Total loss: 1.4522', 'for batch', 44)
('GAN loss 0.7100 ', 'GAN acc 0.7148', 'Discriminator loss 0.6468', 'Discriminator accuracy 0.6074', 'Total loss: 1.3568', 'for batch', 45)
('GAN loss 0.8964 ', 'GAN acc 0.3906', 'Discriminator loss 0.6562', 'Discriminator accuracy 0.5586', 'Total loss: 1.5526', 'for batch', 46)
('GAN loss 0.7715 ', 'GAN acc 0.7109', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.5820', 'Total loss: 1.4250', 'for batch', 47)
('GAN loss 0.7783 ', 'GAN acc 0.6445', 'Discriminator loss 0.6353', 'Discriminator accuracy 0.5684', 'Total loss: 1.4135', 'for batch', 48)
('GAN loss 0.8870 ', 'GAN acc 0.2617', 'Discriminator loss 0.6531', 'Discriminator accuracy 0.5488', 'Total loss: 1.5401', 'for batch', 49)
('GAN loss 0.7393 ', 'GAN acc 0.7539', 'Discriminator loss 0.6441', 'Discriminator accuracy 0.6367', 'Total loss: 1.3834', 'for batch', 50)
('GAN loss 0.8643 ', 'GAN acc 0.3672', 'Discriminator loss 0.6400', 'Discriminator accuracy 0.5723', 'Total loss: 1.5043', 'for batch', 51)
('GAN loss 0.8654 ', 'GAN acc 0.4805', 'Discriminator loss 0.6189', 'Discriminator accuracy 0.6660', 'Total loss: 1.4843', 'for batch', 52)
('GAN loss 1.0003 ', 'GAN acc 0.4688', 'Discriminator loss 0.5933', 'Discriminator accuracy 0.6875', 'Total loss: 1.5935', 'for batch', 53)
('GAN loss 0.9778 ', 'GAN acc 0.3984', 'Discriminator loss 0.6389', 'Discriminator accuracy 0.6035', 'Total loss: 1.6168', 'for batch', 54)
('GAN loss 0.9456 ', 'GAN acc 0.0781', 'Discriminator loss 0.6555', 'Discriminator accuracy 0.5625', 'Total loss: 1.6011', 'for batch', 55)
('GAN loss 0.8474 ', 'GAN acc 0.5742', 'Discriminator loss 0.6196', 'Discriminator accuracy 0.6367', 'Total loss: 1.4671', 'for batch', 56)
('GAN loss 1.0920 ', 'GAN acc 0.0117', 'Discriminator loss 0.6704', 'Discriminator accuracy 0.5527', 'Total loss: 1.7625', 'for batch', 57)
('GAN loss 0.8395 ', 'GAN acc 0.5977', 'Discriminator loss 0.6611', 'Discriminator accuracy 0.5430', 'Total loss: 1.5007', 'for batch', 58)
('GAN loss 0.7578 ', 'GAN acc 0.6992', 'Discriminator loss 0.6759', 'Discriminator accuracy 0.5508', 'Total loss: 1.4337', 'for batch', 59)
('GAN loss 1.0442 ', 'GAN acc 0.0078', 'Discriminator loss 0.6501', 'Discriminator accuracy 0.5684', 'Total loss: 1.6943', 'for batch', 60)
('GAN loss 0.6997 ', 'GAN acc 0.7734', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5430', 'Total loss: 1.3733', 'for batch', 61)
('GAN loss 0.7704 ', 'GAN acc 0.7344', 'Discriminator loss 0.6765', 'Discriminator accuracy 0.5586', 'Total loss: 1.4469', 'for batch', 62)
('GAN loss 1.0076 ', 'GAN acc 0.1680', 'Discriminator loss 0.6386', 'Discriminator accuracy 0.5645', 'Total loss: 1.6463', 'for batch', 63)
('GAN loss 0.7784 ', 'GAN acc 0.4688', 'Discriminator loss 0.6445', 'Discriminator accuracy 0.6641', 'Total loss: 1.4229', 'for batch', 64)
('GAN loss 0.8223 ', 'GAN acc 0.0859', 'Discriminator loss 0.6402', 'Discriminator accuracy 0.5801', 'Total loss: 1.4625', 'for batch', 65)
('GAN loss 0.8118 ', 'GAN acc 0.0977', 'Discriminator loss 0.6276', 'Discriminator accuracy 0.7285', 'Total loss: 1.4394', 'for batch', 66)
('GAN loss 0.9117 ', 'GAN acc 0.0898', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.5664', 'Total loss: 1.5835', 'for batch', 67)
('GAN loss 0.8789 ', 'GAN acc 0.2383', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.6289', 'Total loss: 1.5346', 'for batch', 68)
('GAN loss 0.7047 ', 'GAN acc 0.8594', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.4980', 'Total loss: 1.3903', 'for batch', 69)
('GAN loss 0.8266 ', 'GAN acc 0.7461', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.5098', 'Total loss: 1.5061', 'for batch', 70)
('GAN loss 0.8786 ', 'GAN acc 0.6836', 'Discriminator loss 0.6715', 'Discriminator accuracy 0.5234', 'Total loss: 1.5501', 'for batch', 71)
('GAN loss 0.8827 ', 'GAN acc 0.3164', 'Discriminator loss 0.6496', 'Discriminator accuracy 0.5664', 'Total loss: 1.5324', 'for batch', 72)
('GAN loss 0.7605 ', 'GAN acc 0.5000', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5332', 'Total loss: 1.4314', 'for batch', 73)
('GAN loss 0.8584 ', 'GAN acc 0.0625', 'Discriminator loss 0.6572', 'Discriminator accuracy 0.5508', 'Total loss: 1.5156', 'for batch', 74)
('GAN loss 0.7129 ', 'GAN acc 0.6875', 'Discriminator loss 0.6616', 'Discriminator accuracy 0.5898', 'Total loss: 1.3745', 'for batch', 75)
('GAN loss 0.8451 ', 'GAN acc 0.2617', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5312', 'Total loss: 1.5265', 'for batch', 76)
('GAN loss 0.8434 ', 'GAN acc 0.4570', 'Discriminator loss 0.6411', 'Discriminator accuracy 0.6406', 'Total loss: 1.4845', 'for batch', 77)
('GAN loss 0.8343 ', 'GAN acc 0.4141', 'Discriminator loss 0.6444', 'Discriminator accuracy 0.6309', 'Total loss: 1.4787', 'for batch', 78)
('GAN loss 0.9267 ', 'GAN acc 0.3125', 'Discriminator loss 0.6304', 'Discriminator accuracy 0.6289', 'Total loss: 1.5571', 'for batch', 79)
('GAN loss 0.9151 ', 'GAN acc 0.5078', 'Discriminator loss 0.6234', 'Discriminator accuracy 0.6367', 'Total loss: 1.5385', 'for batch', 80)
('GAN loss 0.8987 ', 'GAN acc 0.6406', 'Discriminator loss 0.6281', 'Discriminator accuracy 0.6191', 'Total loss: 1.5267', 'for batch', 81)
('GAN loss 0.8343 ', 'GAN acc 0.5000', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.5488', 'Total loss: 1.4993', 'for batch', 82)
('GAN loss 0.9632 ', 'GAN acc 0.0078', 'Discriminator loss 0.6255', 'Discriminator accuracy 0.7676', 'Total loss: 1.5887', 'for batch', 83)
('GAN loss 0.7647 ', 'GAN acc 0.6406', 'Discriminator loss 0.6447', 'Discriminator accuracy 0.5879', 'Total loss: 1.4093', 'for batch', 84)
('GAN loss 0.8878 ', 'GAN acc 0.1367', 'Discriminator loss 0.6757', 'Discriminator accuracy 0.5117', 'Total loss: 1.5635', 'for batch', 85)
('GAN loss 0.8666 ', 'GAN acc 0.1328', 'Discriminator loss 0.6266', 'Discriminator accuracy 0.7012', 'Total loss: 1.4932', 'for batch', 86)
('GAN loss 0.8634 ', 'GAN acc 0.1445', 'Discriminator loss 0.6490', 'Discriminator accuracy 0.5938', 'Total loss: 1.5124', 'for batch', 87)
('GAN loss 1.0863 ', 'GAN acc 0.0117', 'Discriminator loss 0.6493', 'Discriminator accuracy 0.6016', 'Total loss: 1.7356', 'for batch', 88)
('GAN loss 0.7337 ', 'GAN acc 0.7148', 'Discriminator loss 0.6965', 'Discriminator accuracy 0.5352', 'Total loss: 1.4302', 'for batch', 89)
('GAN loss 0.8235 ', 'GAN acc 0.5312', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5137', 'Total loss: 1.5070', 'for batch', 90)
('GAN loss 0.8439 ', 'GAN acc 0.5977', 'Discriminator loss 0.6841', 'Discriminator accuracy 0.5117', 'Total loss: 1.5280', 'for batch', 91)
('GAN loss 0.7460 ', 'GAN acc 0.7188', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.5586', 'Total loss: 1.4078', 'for batch', 92)
('GAN loss 0.9289 ', 'GAN acc 0.0312', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.6309', 'Total loss: 1.5930', 'for batch', 93)
('GAN loss 0.7310 ', 'GAN acc 0.4023', 'Discriminator loss 0.6602', 'Discriminator accuracy 0.6211', 'Total loss: 1.3912', 'for batch', 94)
('GAN loss 0.7935 ', 'GAN acc 0.2344', 'Discriminator loss 0.6770', 'Discriminator accuracy 0.5469', 'Total loss: 1.4705', 'for batch', 95)
('GAN loss 0.8845 ', 'GAN acc 0.0977', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5898', 'Total loss: 1.5597', 'for batch', 96)
('GAN loss 0.9655 ', 'GAN acc 0.0703', 'Discriminator loss 0.6481', 'Discriminator accuracy 0.6934', 'Total loss: 1.6137', 'for batch', 97)
('GAN loss 0.7596 ', 'GAN acc 0.8125', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.4824', 'Total loss: 1.4524', 'for batch', 98)
('GAN loss 0.7228 ', 'GAN acc 0.8164', 'Discriminator loss 0.7070', 'Discriminator accuracy 0.4824', 'Total loss: 1.4298', 'for batch', 99)
('GAN loss 0.7996 ', 'GAN acc 0.3867', 'Discriminator loss 0.6991', 'Discriminator accuracy 0.4902', 'Total loss: 1.4987', 'for batch', 100)
('GAN loss 0.9843 ', 'GAN acc 0.1133', 'Discriminator loss 0.6296', 'Discriminator accuracy 0.6113', 'Total loss: 1.6139', 'for batch', 101)
('GAN loss 1.0567 ', 'GAN acc 0.0352', 'Discriminator loss 0.6472', 'Discriminator accuracy 0.5859', 'Total loss: 1.7039', 'for batch', 102)
('GAN loss 0.7881 ', 'GAN acc 0.4023', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5391', 'Total loss: 1.4631', 'for batch', 103)
('GAN loss 0.7740 ', 'GAN acc 0.6523', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5234', 'Total loss: 1.4518', 'for batch', 104)
('GAN loss 0.9301 ', 'GAN acc 0.0352', 'Discriminator loss 0.6520', 'Discriminator accuracy 0.5586', 'Total loss: 1.5821', 'for batch', 105)
('GAN loss 0.9215 ', 'GAN acc 0.1836', 'Discriminator loss 0.6517', 'Discriminator accuracy 0.6230', 'Total loss: 1.5732', 'for batch', 106)
('GAN loss 0.9188 ', 'GAN acc 0.1367', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.5957', 'Total loss: 1.5711', 'for batch', 107)
('GAN loss 0.9492 ', 'GAN acc 0.1289', 'Discriminator loss 0.6539', 'Discriminator accuracy 0.5605', 'Total loss: 1.6031', 'for batch', 108)
('GAN loss 0.7798 ', 'GAN acc 0.6172', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.4961', 'Total loss: 1.4675', 'for batch', 109)
('GAN loss 0.9939 ', 'GAN acc 0.1367', 'Discriminator loss 0.6299', 'Discriminator accuracy 0.6797', 'Total loss: 1.6238', 'for batch', 110)
('GAN loss 0.7873 ', 'GAN acc 0.6875', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5195', 'Total loss: 1.4646', 'for batch', 111)
('GAN loss 0.8101 ', 'GAN acc 0.3398', 'Discriminator loss 0.6938', 'Discriminator accuracy 0.4883', 'Total loss: 1.5039', 'for batch', 112)
('GAN loss 0.9397 ', 'GAN acc 0.0195', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5605', 'Total loss: 1.6104', 'for batch', 113)
('GAN loss 0.7646 ', 'GAN acc 0.4766', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.5371', 'Total loss: 1.4400', 'for batch', 114)
('GAN loss 0.7760 ', 'GAN acc 0.6406', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5156', 'Total loss: 1.4601', 'for batch', 115)
('GAN loss 0.9397 ', 'GAN acc 0.1211', 'Discriminator loss 0.6564', 'Discriminator accuracy 0.5723', 'Total loss: 1.5961', 'for batch', 116)
('GAN loss 0.8039 ', 'GAN acc 0.5977', 'Discriminator loss 0.6586', 'Discriminator accuracy 0.5586', 'Total loss: 1.4624', 'for batch', 117)
('GAN loss 0.8658 ', 'GAN acc 0.4062', 'Discriminator loss 0.6914', 'Discriminator accuracy 0.4863', 'Total loss: 1.5572', 'for batch', 118)
('GAN loss 0.9743 ', 'GAN acc 0.0312', 'Discriminator loss 0.6468', 'Discriminator accuracy 0.6133', 'Total loss: 1.6211', 'for batch', 119)
('GAN loss 0.8219 ', 'GAN acc 0.1289', 'Discriminator loss 0.6540', 'Discriminator accuracy 0.6191', 'Total loss: 1.4758', 'for batch', 120)
('GAN loss 0.7706 ', 'GAN acc 0.3203', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5469', 'Total loss: 1.4503', 'for batch', 121)
('GAN loss 1.3333 ', 'GAN acc 0.0000', 'Discriminator loss 0.5907', 'Discriminator accuracy 0.8047', 'Total loss: 1.9240', 'for batch', 122)
('GAN loss 1.4091 ', 'GAN acc 0.5977', 'Discriminator loss 0.6612', 'Discriminator accuracy 0.4941', 'Total loss: 2.0703', 'for batch', 123)
('GAN loss 0.8263 ', 'GAN acc 0.6602', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5449', 'Total loss: 1.5123', 'for batch', 124)
('GAN loss 1.0455 ', 'GAN acc 0.0703', 'Discriminator loss 0.6366', 'Discriminator accuracy 0.5898', 'Total loss: 1.6821', 'for batch', 125)
('GAN loss 1.0315 ', 'GAN acc 0.0039', 'Discriminator loss 0.6289', 'Discriminator accuracy 0.6602', 'Total loss: 1.6603', 'for batch', 126)
('GAN loss 0.7702 ', 'GAN acc 0.3008', 'Discriminator loss 0.6337', 'Discriminator accuracy 0.6816', 'Total loss: 1.4039', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.63528204)
('DISCRIMINATOR_Imagem FAKE=', 0.55620676)
('Discriminator trained', 104, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:50.255010')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 128)
('GAN loss 0.8326 ', 'GAN acc 0.4961', 'Discriminator loss 0.6477', 'Discriminator accuracy 0.5977', 'Total loss: 1.4803', 'for batch', 0)
('GAN loss 1.0093 ', 'GAN acc 0.0586', 'Discriminator loss 0.6558', 'Discriminator accuracy 0.5449', 'Total loss: 1.6652', 'for batch', 1)
('GAN loss 1.0066 ', 'GAN acc 0.0898', 'Discriminator loss 0.6656', 'Discriminator accuracy 0.5332', 'Total loss: 1.6721', 'for batch', 2)
('GAN loss 0.8301 ', 'GAN acc 0.4727', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.5312', 'Total loss: 1.4897', 'for batch', 3)
('GAN loss 0.9105 ', 'GAN acc 0.4766', 'Discriminator loss 0.6586', 'Discriminator accuracy 0.5664', 'Total loss: 1.5692', 'for batch', 4)
('GAN loss 0.9543 ', 'GAN acc 0.0039', 'Discriminator loss 0.6720', 'Discriminator accuracy 0.5234', 'Total loss: 1.6263', 'for batch', 5)
('GAN loss 0.8670 ', 'GAN acc 0.1211', 'Discriminator loss 0.6587', 'Discriminator accuracy 0.5898', 'Total loss: 1.5257', 'for batch', 6)
('GAN loss 0.9314 ', 'GAN acc 0.0938', 'Discriminator loss 0.6414', 'Discriminator accuracy 0.6328', 'Total loss: 1.5728', 'for batch', 7)
('GAN loss 1.0609 ', 'GAN acc 0.0391', 'Discriminator loss 0.6227', 'Discriminator accuracy 0.6680', 'Total loss: 1.6835', 'for batch', 8)
('GAN loss 0.7511 ', 'GAN acc 0.7969', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.4961', 'Total loss: 1.4196', 'for batch', 9)
('GAN loss 0.7839 ', 'GAN acc 0.6133', 'Discriminator loss 0.6941', 'Discriminator accuracy 0.5117', 'Total loss: 1.4779', 'for batch', 10)
('GAN loss 0.7914 ', 'GAN acc 0.6016', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5371', 'Total loss: 1.4659', 'for batch', 11)
('GAN loss 0.9415 ', 'GAN acc 0.0000', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5430', 'Total loss: 1.6042', 'for batch', 12)
('GAN loss 0.9175 ', 'GAN acc 0.0273', 'Discriminator loss 0.6417', 'Discriminator accuracy 0.6816', 'Total loss: 1.5592', 'for batch', 13)
('GAN loss 0.8550 ', 'GAN acc 0.1133', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.6016', 'Total loss: 1.5196', 'for batch', 14)
('GAN loss 0.9165 ', 'GAN acc 0.0586', 'Discriminator loss 0.6431', 'Discriminator accuracy 0.6621', 'Total loss: 1.5596', 'for batch', 15)
('GAN loss 0.8716 ', 'GAN acc 0.3008', 'Discriminator loss 0.6539', 'Discriminator accuracy 0.6328', 'Total loss: 1.5255', 'for batch', 16)
('GAN loss 0.8023 ', 'GAN acc 0.6914', 'Discriminator loss 0.6755', 'Discriminator accuracy 0.5137', 'Total loss: 1.4778', 'for batch', 17)
('GAN loss 0.9815 ', 'GAN acc 0.0000', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5625', 'Total loss: 1.6409', 'for batch', 18)
('GAN loss 0.8304 ', 'GAN acc 0.0938', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5410', 'Total loss: 1.5066', 'for batch', 19)
('GAN loss 0.7589 ', 'GAN acc 0.3359', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5527', 'Total loss: 1.4424', 'for batch', 20)
('GAN loss 0.7914 ', 'GAN acc 0.5117', 'Discriminator loss 0.6888', 'Discriminator accuracy 0.5449', 'Total loss: 1.4802', 'for batch', 21)
('GAN loss 0.8786 ', 'GAN acc 0.2266', 'Discriminator loss 0.6605', 'Discriminator accuracy 0.5977', 'Total loss: 1.5391', 'for batch', 22)
('GAN loss 1.0027 ', 'GAN acc 0.0508', 'Discriminator loss 0.6710', 'Discriminator accuracy 0.5566', 'Total loss: 1.6736', 'for batch', 23)
('GAN loss 0.8532 ', 'GAN acc 0.3672', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.4922', 'Total loss: 1.5431', 'for batch', 24)
('GAN loss 0.8132 ', 'GAN acc 0.1953', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.4844', 'Total loss: 1.5060', 'for batch', 25)
('GAN loss 0.8200 ', 'GAN acc 0.1016', 'Discriminator loss 0.6943', 'Discriminator accuracy 0.4805', 'Total loss: 1.5143', 'for batch', 26)
('GAN loss 0.7923 ', 'GAN acc 0.2031', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5312', 'Total loss: 1.4762', 'for batch', 27)
('GAN loss 0.8312 ', 'GAN acc 0.1289', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5098', 'Total loss: 1.5129', 'for batch', 28)
('GAN loss 1.0036 ', 'GAN acc 0.0664', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5215', 'Total loss: 1.6792', 'for batch', 29)
('GAN loss 0.9201 ', 'GAN acc 0.0430', 'Discriminator loss 0.6366', 'Discriminator accuracy 0.6680', 'Total loss: 1.5567', 'for batch', 30)
('GAN loss 0.8355 ', 'GAN acc 0.4688', 'Discriminator loss 0.6617', 'Discriminator accuracy 0.5977', 'Total loss: 1.4972', 'for batch', 31)
('GAN loss 0.8569 ', 'GAN acc 0.3125', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.5625', 'Total loss: 1.5093', 'for batch', 32)
('GAN loss 0.9024 ', 'GAN acc 0.0156', 'Discriminator loss 0.6574', 'Discriminator accuracy 0.5938', 'Total loss: 1.5598', 'for batch', 33)
('GAN loss 0.8011 ', 'GAN acc 0.2617', 'Discriminator loss 0.6770', 'Discriminator accuracy 0.5391', 'Total loss: 1.4781', 'for batch', 34)
('GAN loss 0.7358 ', 'GAN acc 0.5156', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5371', 'Total loss: 1.4159', 'for batch', 35)
('GAN loss 0.9617 ', 'GAN acc 0.0156', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5293', 'Total loss: 1.6417', 'for batch', 36)
('GAN loss 0.8937 ', 'GAN acc 0.3398', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5059', 'Total loss: 1.5681', 'for batch', 37)
('GAN loss 1.0579 ', 'GAN acc 0.0039', 'Discriminator loss 0.6330', 'Discriminator accuracy 0.6270', 'Total loss: 1.6909', 'for batch', 38)
('GAN loss 0.9661 ', 'GAN acc 0.0039', 'Discriminator loss 0.6387', 'Discriminator accuracy 0.7012', 'Total loss: 1.6048', 'for batch', 39)
('GAN loss 0.8137 ', 'GAN acc 0.1797', 'Discriminator loss 0.6827', 'Discriminator accuracy 0.5273', 'Total loss: 1.4965', 'for batch', 40)
('GAN loss 0.8207 ', 'GAN acc 0.2344', 'Discriminator loss 0.6871', 'Discriminator accuracy 0.5488', 'Total loss: 1.5078', 'for batch', 41)
('GAN loss 1.1818 ', 'GAN acc 0.0039', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5488', 'Total loss: 1.8541', 'for batch', 42)
('GAN loss 0.6595 ', 'GAN acc 0.8594', 'Discriminator loss 0.6852', 'Discriminator accuracy 0.5059', 'Total loss: 1.3447', 'for batch', 43)
('GAN loss 0.5661 ', 'GAN acc 0.9297', 'Discriminator loss 0.6910', 'Discriminator accuracy 0.5898', 'Total loss: 1.2571', 'for batch', 44)
('GAN loss 0.6836 ', 'GAN acc 0.8398', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.5137', 'Total loss: 1.3780', 'for batch', 45)
('GAN loss 0.7757 ', 'GAN acc 0.2500', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5508', 'Total loss: 1.4539', 'for batch', 46)
('GAN loss 0.8986 ', 'GAN acc 0.0156', 'Discriminator loss 0.6619', 'Discriminator accuracy 0.6055', 'Total loss: 1.5604', 'for batch', 47)
('GAN loss 0.8469 ', 'GAN acc 0.0547', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.6270', 'Total loss: 1.5079', 'for batch', 48)
('GAN loss 0.8734 ', 'GAN acc 0.0508', 'Discriminator loss 0.6725', 'Discriminator accuracy 0.5645', 'Total loss: 1.5459', 'for batch', 49)
('GAN loss 0.8142 ', 'GAN acc 0.4375', 'Discriminator loss 0.6597', 'Discriminator accuracy 0.5938', 'Total loss: 1.4739', 'for batch', 50)
('GAN loss 0.8541 ', 'GAN acc 0.2461', 'Discriminator loss 0.6570', 'Discriminator accuracy 0.6426', 'Total loss: 1.5111', 'for batch', 51)
('GAN loss 0.7060 ', 'GAN acc 0.8594', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5352', 'Total loss: 1.3766', 'for batch', 52)
('GAN loss 0.8098 ', 'GAN acc 0.2695', 'Discriminator loss 0.6767', 'Discriminator accuracy 0.5254', 'Total loss: 1.4865', 'for batch', 53)
('GAN loss 1.0872 ', 'GAN acc 0.0000', 'Discriminator loss 0.6628', 'Discriminator accuracy 0.5625', 'Total loss: 1.7500', 'for batch', 54)
('GAN loss 0.8616 ', 'GAN acc 0.0273', 'Discriminator loss 0.6587', 'Discriminator accuracy 0.5469', 'Total loss: 1.5203', 'for batch', 55)
('GAN loss 0.6722 ', 'GAN acc 0.6992', 'Discriminator loss 0.6987', 'Discriminator accuracy 0.5430', 'Total loss: 1.3709', 'for batch', 56)
('GAN loss 0.7125 ', 'GAN acc 0.6680', 'Discriminator loss 0.7012', 'Discriminator accuracy 0.5098', 'Total loss: 1.4137', 'for batch', 57)
('GAN loss 1.0316 ', 'GAN acc 0.0117', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5840', 'Total loss: 1.7043', 'for batch', 58)
('GAN loss 0.7816 ', 'GAN acc 0.5977', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5059', 'Total loss: 1.4564', 'for batch', 59)
('GAN loss 0.5997 ', 'GAN acc 0.9023', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.5078', 'Total loss: 1.2892', 'for batch', 60)
('GAN loss 0.5486 ', 'GAN acc 0.9258', 'Discriminator loss 0.7391', 'Discriminator accuracy 0.4922', 'Total loss: 1.2877', 'for batch', 61)
('GAN loss 0.6459 ', 'GAN acc 0.9180', 'Discriminator loss 0.7024', 'Discriminator accuracy 0.5332', 'Total loss: 1.3483', 'for batch', 62)
('GAN loss 0.7193 ', 'GAN acc 0.7109', 'Discriminator loss 0.6834', 'Discriminator accuracy 0.5391', 'Total loss: 1.4027', 'for batch', 63)
('GAN loss 0.9510 ', 'GAN acc 0.0000', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5273', 'Total loss: 1.6270', 'for batch', 64)
('GAN loss 0.9363 ', 'GAN acc 0.0039', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5723', 'Total loss: 1.6042', 'for batch', 65)
('GAN loss 0.6838 ', 'GAN acc 0.6016', 'Discriminator loss 0.6761', 'Discriminator accuracy 0.5430', 'Total loss: 1.3599', 'for batch', 66)
('GAN loss 0.6789 ', 'GAN acc 0.7539', 'Discriminator loss 0.6946', 'Discriminator accuracy 0.5137', 'Total loss: 1.3734', 'for batch', 67)
('GAN loss 1.1233 ', 'GAN acc 0.0000', 'Discriminator loss 0.6310', 'Discriminator accuracy 0.7188', 'Total loss: 1.7543', 'for batch', 68)
('GAN loss 0.6501 ', 'GAN acc 0.8867', 'Discriminator loss 0.6874', 'Discriminator accuracy 0.5195', 'Total loss: 1.3376', 'for batch', 69)
('GAN loss 0.7196 ', 'GAN acc 0.5859', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.5156', 'Total loss: 1.4073', 'for batch', 70)
('GAN loss 0.7822 ', 'GAN acc 0.2109', 'Discriminator loss 0.6759', 'Discriminator accuracy 0.5547', 'Total loss: 1.4581', 'for batch', 71)
('GAN loss 0.7918 ', 'GAN acc 0.1406', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.5195', 'Total loss: 1.4725', 'for batch', 72)
('GAN loss 0.7458 ', 'GAN acc 0.3125', 'Discriminator loss 0.6933', 'Discriminator accuracy 0.4824', 'Total loss: 1.4391', 'for batch', 73)
('GAN loss 0.7652 ', 'GAN acc 0.3594', 'Discriminator loss 0.6798', 'Discriminator accuracy 0.5547', 'Total loss: 1.4450', 'for batch', 74)
('GAN loss 0.7256 ', 'GAN acc 0.6484', 'Discriminator loss 0.6906', 'Discriminator accuracy 0.4805', 'Total loss: 1.4162', 'for batch', 75)
('GAN loss 0.7568 ', 'GAN acc 0.5742', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5312', 'Total loss: 1.4429', 'for batch', 76)
('GAN loss 0.7092 ', 'GAN acc 0.7422', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5312', 'Total loss: 1.3875', 'for batch', 77)
('GAN loss 0.7107 ', 'GAN acc 0.5977', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.4824', 'Total loss: 1.4043', 'for batch', 78)
('GAN loss 0.7384 ', 'GAN acc 0.3711', 'Discriminator loss 0.6869', 'Discriminator accuracy 0.5176', 'Total loss: 1.4253', 'for batch', 79)
('GAN loss 0.7152 ', 'GAN acc 0.5586', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.4941', 'Total loss: 1.4033', 'for batch', 80)
('GAN loss 0.8161 ', 'GAN acc 0.1445', 'Discriminator loss 0.6655', 'Discriminator accuracy 0.5508', 'Total loss: 1.4815', 'for batch', 81)
('GAN loss 0.8280 ', 'GAN acc 0.1875', 'Discriminator loss 0.6688', 'Discriminator accuracy 0.5723', 'Total loss: 1.4968', 'for batch', 82)
('GAN loss 0.6278 ', 'GAN acc 0.9102', 'Discriminator loss 0.6945', 'Discriminator accuracy 0.5137', 'Total loss: 1.3222', 'for batch', 83)
('GAN loss 0.6716 ', 'GAN acc 0.8008', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5195', 'Total loss: 1.3598', 'for batch', 84)
('GAN loss 0.7227 ', 'GAN acc 0.4883', 'Discriminator loss 0.6813', 'Discriminator accuracy 0.5371', 'Total loss: 1.4040', 'for batch', 85)
('GAN loss 0.8395 ', 'GAN acc 0.0234', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.5586', 'Total loss: 1.5192', 'for batch', 86)
('GAN loss 0.7312 ', 'GAN acc 0.4219', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5273', 'Total loss: 1.4184', 'for batch', 87)
('GAN loss 0.8734 ', 'GAN acc 0.0078', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.6094', 'Total loss: 1.5384', 'for batch', 88)
('GAN loss 0.7488 ', 'GAN acc 0.5547', 'Discriminator loss 0.6631', 'Discriminator accuracy 0.5996', 'Total loss: 1.4119', 'for batch', 89)
('GAN loss 0.7702 ', 'GAN acc 0.8672', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5430', 'Total loss: 1.4346', 'for batch', 90)
('GAN loss 0.8382 ', 'GAN acc 0.1719', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5234', 'Total loss: 1.5126', 'for batch', 91)
('GAN loss 0.8542 ', 'GAN acc 0.0430', 'Discriminator loss 0.6587', 'Discriminator accuracy 0.6582', 'Total loss: 1.5129', 'for batch', 92)
('GAN loss 0.7531 ', 'GAN acc 0.3516', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.4980', 'Total loss: 1.4388', 'for batch', 93)
('GAN loss 0.9920 ', 'GAN acc 0.0078', 'Discriminator loss 0.6548', 'Discriminator accuracy 0.6270', 'Total loss: 1.6469', 'for batch', 94)
('GAN loss 0.8506 ', 'GAN acc 0.1367', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5273', 'Total loss: 1.5288', 'for batch', 95)
('GAN loss 0.6712 ', 'GAN acc 0.8164', 'Discriminator loss 0.6962', 'Discriminator accuracy 0.4941', 'Total loss: 1.3674', 'for batch', 96)
('GAN loss 0.8003 ', 'GAN acc 0.1484', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.5215', 'Total loss: 1.4799', 'for batch', 97)
('GAN loss 0.9079 ', 'GAN acc 0.0039', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5703', 'Total loss: 1.5853', 'for batch', 98)
('GAN loss 0.7198 ', 'GAN acc 0.5547', 'Discriminator loss 0.6869', 'Discriminator accuracy 0.5430', 'Total loss: 1.4067', 'for batch', 99)
('GAN loss 0.7353 ', 'GAN acc 0.5820', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5215', 'Total loss: 1.4171', 'for batch', 100)
('GAN loss 1.0938 ', 'GAN acc 0.0156', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.6250', 'Total loss: 1.7586', 'for batch', 101)
('GAN loss 0.8977 ', 'GAN acc 0.2812', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5078', 'Total loss: 1.5778', 'for batch', 102)
('GAN loss 0.6551 ', 'GAN acc 0.8984', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.5059', 'Total loss: 1.3487', 'for batch', 103)
('GAN loss 0.7309 ', 'GAN acc 0.3789', 'Discriminator loss 0.6984', 'Discriminator accuracy 0.5254', 'Total loss: 1.4293', 'for batch', 104)
('GAN loss 0.8921 ', 'GAN acc 0.0039', 'Discriminator loss 0.6847', 'Discriminator accuracy 0.5508', 'Total loss: 1.5767', 'for batch', 105)
('GAN loss 0.8383 ', 'GAN acc 0.0234', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.5254', 'Total loss: 1.5263', 'for batch', 106)
('GAN loss 1.1441 ', 'GAN acc 0.0000', 'Discriminator loss 0.6068', 'Discriminator accuracy 0.8359', 'Total loss: 1.7509', 'for batch', 107)
('GAN loss 0.8881 ', 'GAN acc 0.4570', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5684', 'Total loss: 1.5525', 'for batch', 108)
('GAN loss 0.5951 ', 'GAN acc 0.9141', 'Discriminator loss 0.7129', 'Discriminator accuracy 0.5000', 'Total loss: 1.3080', 'for batch', 109)
('GAN loss 0.6681 ', 'GAN acc 0.8750', 'Discriminator loss 0.6905', 'Discriminator accuracy 0.5371', 'Total loss: 1.3586', 'for batch', 110)
('GAN loss 0.7887 ', 'GAN acc 0.2383', 'Discriminator loss 0.6628', 'Discriminator accuracy 0.5508', 'Total loss: 1.4515', 'for batch', 111)
('GAN loss 0.8017 ', 'GAN acc 0.0703', 'Discriminator loss 0.6679', 'Discriminator accuracy 0.5879', 'Total loss: 1.4696', 'for batch', 112)
('GAN loss 0.8197 ', 'GAN acc 0.1211', 'Discriminator loss 0.6676', 'Discriminator accuracy 0.5840', 'Total loss: 1.4873', 'for batch', 113)
('GAN loss 0.7581 ', 'GAN acc 0.3086', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5195', 'Total loss: 1.4395', 'for batch', 114)
('GAN loss 0.7600 ', 'GAN acc 0.4102', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5625', 'Total loss: 1.4347', 'for batch', 115)
('GAN loss 0.7667 ', 'GAN acc 0.4180', 'Discriminator loss 0.6693', 'Discriminator accuracy 0.5566', 'Total loss: 1.4361', 'for batch', 116)
('GAN loss 0.7940 ', 'GAN acc 0.3828', 'Discriminator loss 0.6689', 'Discriminator accuracy 0.5723', 'Total loss: 1.4629', 'for batch', 117)
('GAN loss 0.8323 ', 'GAN acc 0.1875', 'Discriminator loss 0.6668', 'Discriminator accuracy 0.5859', 'Total loss: 1.4990', 'for batch', 118)
('GAN loss 0.7142 ', 'GAN acc 0.7812', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5547', 'Total loss: 1.3910', 'for batch', 119)
('GAN loss 0.6924 ', 'GAN acc 0.8359', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5098', 'Total loss: 1.3803', 'for batch', 120)
('GAN loss 0.7234 ', 'GAN acc 0.6523', 'Discriminator loss 0.6708', 'Discriminator accuracy 0.5293', 'Total loss: 1.3942', 'for batch', 121)
('GAN loss 0.7383 ', 'GAN acc 0.4883', 'Discriminator loss 0.6830', 'Discriminator accuracy 0.5059', 'Total loss: 1.4213', 'for batch', 122)
('GAN loss 0.7798 ', 'GAN acc 0.1836', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5352', 'Total loss: 1.4542', 'for batch', 123)
('GAN loss 0.7521 ', 'GAN acc 0.2969', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5000', 'Total loss: 1.4400', 'for batch', 124)
('GAN loss 0.7760 ', 'GAN acc 0.2383', 'Discriminator loss 0.6939', 'Discriminator accuracy 0.4805', 'Total loss: 1.4699', 'for batch', 125)
('GAN loss 0.7886 ', 'GAN acc 0.2539', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.5156', 'Total loss: 1.4754', 'for batch', 126)
('GAN loss 0.7212 ', 'GAN acc 0.7070', 'Discriminator loss 0.6761', 'Discriminator accuracy 0.5234', 'Total loss: 1.3973', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.53939986)
('DISCRIMINATOR_Imagem FAKE=', 0.51554209)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.039074')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7689 ', 'GAN acc 0.5508', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5391', 'Total loss: 1.4501', 'for batch', 0)
('GAN loss 0.6592 ', 'GAN acc 0.8984', 'Discriminator loss 0.6941', 'Discriminator accuracy 0.5020', 'Total loss: 1.3533', 'for batch', 1)
('GAN loss 0.7215 ', 'GAN acc 0.5273', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5371', 'Total loss: 1.4002', 'for batch', 2)
('GAN loss 0.8364 ', 'GAN acc 0.0234', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5840', 'Total loss: 1.5088', 'for batch', 3)
('GAN loss 0.8136 ', 'GAN acc 0.0469', 'Discriminator loss 0.6694', 'Discriminator accuracy 0.6250', 'Total loss: 1.4830', 'for batch', 4)
('GAN loss 0.7614 ', 'GAN acc 0.1641', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5469', 'Total loss: 1.4438', 'for batch', 5)
('GAN loss 0.7327 ', 'GAN acc 0.4805', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5469', 'Total loss: 1.4144', 'for batch', 6)
('GAN loss 0.7547 ', 'GAN acc 0.3750', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5137', 'Total loss: 1.4368', 'for batch', 7)
('GAN loss 0.8388 ', 'GAN acc 0.1250', 'Discriminator loss 0.6708', 'Discriminator accuracy 0.5352', 'Total loss: 1.5096', 'for batch', 8)
('GAN loss 0.7662 ', 'GAN acc 0.6602', 'Discriminator loss 0.6623', 'Discriminator accuracy 0.5215', 'Total loss: 1.4285', 'for batch', 9)
('GAN loss 0.6627 ', 'GAN acc 0.9023', 'Discriminator loss 0.6935', 'Discriminator accuracy 0.4902', 'Total loss: 1.3562', 'for batch', 10)
('GAN loss 0.6426 ', 'GAN acc 0.8984', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5410', 'Total loss: 1.3317', 'for batch', 11)
('GAN loss 0.7245 ', 'GAN acc 0.6289', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5352', 'Total loss: 1.4036', 'for batch', 12)
('GAN loss 0.8243 ', 'GAN acc 0.0273', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.5586', 'Total loss: 1.4976', 'for batch', 13)
('GAN loss 0.7937 ', 'GAN acc 0.1484', 'Discriminator loss 0.6871', 'Discriminator accuracy 0.5098', 'Total loss: 1.4808', 'for batch', 14)
('GAN loss 0.7595 ', 'GAN acc 0.2578', 'Discriminator loss 0.6954', 'Discriminator accuracy 0.4941', 'Total loss: 1.4549', 'for batch', 15)
('GAN loss 0.9801 ', 'GAN acc 0.0039', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.6289', 'Total loss: 1.6400', 'for batch', 16)
('GAN loss 0.8636 ', 'GAN acc 0.1992', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.4922', 'Total loss: 1.5372', 'for batch', 17)
('GAN loss 0.7186 ', 'GAN acc 0.7148', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5469', 'Total loss: 1.3900', 'for batch', 18)
('GAN loss 0.7302 ', 'GAN acc 0.6133', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5293', 'Total loss: 1.4100', 'for batch', 19)
('GAN loss 0.7575 ', 'GAN acc 0.2031', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.5176', 'Total loss: 1.4474', 'for batch', 20)
('GAN loss 0.7707 ', 'GAN acc 0.2031', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5430', 'Total loss: 1.4526', 'for batch', 21)
('GAN loss 0.7283 ', 'GAN acc 0.3281', 'Discriminator loss 0.6909', 'Discriminator accuracy 0.5156', 'Total loss: 1.4193', 'for batch', 22)
('GAN loss 0.7344 ', 'GAN acc 0.5000', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.5391', 'Total loss: 1.4187', 'for batch', 23)
('GAN loss 0.8034 ', 'GAN acc 0.2891', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.5195', 'Total loss: 1.4890', 'for batch', 24)
('GAN loss 0.8165 ', 'GAN acc 0.1719', 'Discriminator loss 0.6785', 'Discriminator accuracy 0.5898', 'Total loss: 1.4950', 'for batch', 25)
('GAN loss 0.7243 ', 'GAN acc 0.6328', 'Discriminator loss 0.6907', 'Discriminator accuracy 0.5039', 'Total loss: 1.4150', 'for batch', 26)
('GAN loss 0.6580 ', 'GAN acc 0.8711', 'Discriminator loss 0.6820', 'Discriminator accuracy 0.5566', 'Total loss: 1.3399', 'for batch', 27)
('GAN loss 0.7051 ', 'GAN acc 0.5898', 'Discriminator loss 0.6951', 'Discriminator accuracy 0.4824', 'Total loss: 1.4002', 'for batch', 28)
('GAN loss 0.7196 ', 'GAN acc 0.4844', 'Discriminator loss 0.6781', 'Discriminator accuracy 0.5312', 'Total loss: 1.3977', 'for batch', 29)
('GAN loss 0.8284 ', 'GAN acc 0.0391', 'Discriminator loss 0.6636', 'Discriminator accuracy 0.6191', 'Total loss: 1.4920', 'for batch', 30)
('GAN loss 0.7106 ', 'GAN acc 0.4453', 'Discriminator loss 0.6954', 'Discriminator accuracy 0.4863', 'Total loss: 1.4060', 'for batch', 31)
('GAN loss 0.8606 ', 'GAN acc 0.0273', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5312', 'Total loss: 1.5439', 'for batch', 32)
('GAN loss 0.9866 ', 'GAN acc 0.0039', 'Discriminator loss 0.6561', 'Discriminator accuracy 0.5605', 'Total loss: 1.6427', 'for batch', 33)
('GAN loss 0.9564 ', 'GAN acc 0.0703', 'Discriminator loss 0.6581', 'Discriminator accuracy 0.5117', 'Total loss: 1.6146', 'for batch', 34)
('GAN loss 0.8130 ', 'GAN acc 0.5352', 'Discriminator loss 0.6412', 'Discriminator accuracy 0.6504', 'Total loss: 1.4542', 'for batch', 35)
('GAN loss 0.6289 ', 'GAN acc 0.9297', 'Discriminator loss 0.6875', 'Discriminator accuracy 0.5469', 'Total loss: 1.3164', 'for batch', 36)
('GAN loss 1.0559 ', 'GAN acc 0.0000', 'Discriminator loss 0.6396', 'Discriminator accuracy 0.5840', 'Total loss: 1.6954', 'for batch', 37)
('GAN loss 1.2104 ', 'GAN acc 0.0000', 'Discriminator loss 0.6242', 'Discriminator accuracy 0.7852', 'Total loss: 1.8346', 'for batch', 38)
('GAN loss 0.7629 ', 'GAN acc 0.2656', 'Discriminator loss 0.6910', 'Discriminator accuracy 0.5332', 'Total loss: 1.4539', 'for batch', 39)
('GAN loss 0.7778 ', 'GAN acc 0.3711', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5762', 'Total loss: 1.4589', 'for batch', 40)
('GAN loss 0.9846 ', 'GAN acc 0.0000', 'Discriminator loss 0.6408', 'Discriminator accuracy 0.5859', 'Total loss: 1.6254', 'for batch', 41)
('GAN loss 0.8828 ', 'GAN acc 0.0664', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5254', 'Total loss: 1.5596', 'for batch', 42)
('GAN loss 1.4021 ', 'GAN acc 0.0000', 'Discriminator loss 0.6230', 'Discriminator accuracy 0.7168', 'Total loss: 2.0251', 'for batch', 43)
('GAN loss 1.2168 ', 'GAN acc 0.0000', 'Discriminator loss 0.6041', 'Discriminator accuracy 0.7832', 'Total loss: 1.8209', 'for batch', 44)
('GAN loss 0.8674 ', 'GAN acc 0.1133', 'Discriminator loss 0.6059', 'Discriminator accuracy 0.6738', 'Total loss: 1.4733', 'for batch', 45)
('GAN loss 0.8589 ', 'GAN acc 0.0469', 'Discriminator loss 0.6549', 'Discriminator accuracy 0.5469', 'Total loss: 1.5138', 'for batch', 46)
('GAN loss 1.1525 ', 'GAN acc 0.0000', 'Discriminator loss 0.6503', 'Discriminator accuracy 0.6270', 'Total loss: 1.8027', 'for batch', 47)
('GAN loss 1.1327 ', 'GAN acc 0.0000', 'Discriminator loss 0.6242', 'Discriminator accuracy 0.6348', 'Total loss: 1.7569', 'for batch', 48)
('GAN loss 1.0133 ', 'GAN acc 0.0195', 'Discriminator loss 0.6930', 'Discriminator accuracy 0.4961', 'Total loss: 1.7063', 'for batch', 49)
('GAN loss 1.4081 ', 'GAN acc 0.0000', 'Discriminator loss 0.6172', 'Discriminator accuracy 0.7285', 'Total loss: 2.0254', 'for batch', 50)
('GAN loss 1.0802 ', 'GAN acc 0.0625', 'Discriminator loss 0.6541', 'Discriminator accuracy 0.5957', 'Total loss: 1.7342', 'for batch', 51)
('GAN loss 1.0500 ', 'GAN acc 0.3164', 'Discriminator loss 0.5526', 'Discriminator accuracy 0.7148', 'Total loss: 1.6027', 'for batch', 52)
('GAN loss 0.6777 ', 'GAN acc 0.8828', 'Discriminator loss 0.7104', 'Discriminator accuracy 0.5254', 'Total loss: 1.3880', 'for batch', 53)
('GAN loss 0.9318 ', 'GAN acc 0.0039', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5430', 'Total loss: 1.6024', 'for batch', 54)
('GAN loss 0.9943 ', 'GAN acc 0.0000', 'Discriminator loss 0.6275', 'Discriminator accuracy 0.8164', 'Total loss: 1.6218', 'for batch', 55)
('GAN loss 0.9578 ', 'GAN acc 0.0039', 'Discriminator loss 0.6445', 'Discriminator accuracy 0.6270', 'Total loss: 1.6022', 'for batch', 56)
('GAN loss 1.0049 ', 'GAN acc 0.0078', 'Discriminator loss 0.6411', 'Discriminator accuracy 0.7324', 'Total loss: 1.6460', 'for batch', 57)
('GAN loss 1.3625 ', 'GAN acc 0.0000', 'Discriminator loss 0.6888', 'Discriminator accuracy 0.5781', 'Total loss: 2.0513', 'for batch', 58)
('GAN loss 1.2042 ', 'GAN acc 0.0000', 'Discriminator loss 0.5854', 'Discriminator accuracy 0.8340', 'Total loss: 1.7897', 'for batch', 59)
('GAN loss 1.0206 ', 'GAN acc 0.1406', 'Discriminator loss 0.6056', 'Discriminator accuracy 0.7871', 'Total loss: 1.6262', 'for batch', 60)
('GAN loss 0.5766 ', 'GAN acc 0.9219', 'Discriminator loss 0.7451', 'Discriminator accuracy 0.4902', 'Total loss: 1.3217', 'for batch', 61)
('GAN loss 0.8092 ', 'GAN acc 0.1523', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.5645', 'Total loss: 1.4802', 'for batch', 62)
('GAN loss 1.1451 ', 'GAN acc 0.0000', 'Discriminator loss 0.6172', 'Discriminator accuracy 0.7246', 'Total loss: 1.7623', 'for batch', 63)
('GAN loss 0.8081 ', 'GAN acc 0.0586', 'Discriminator loss 0.6507', 'Discriminator accuracy 0.5566', 'Total loss: 1.4589', 'for batch', 64)
('GAN loss 0.7177 ', 'GAN acc 0.4766', 'Discriminator loss 0.6735', 'Discriminator accuracy 0.5820', 'Total loss: 1.3912', 'for batch', 65)
('GAN loss 0.8691 ', 'GAN acc 0.1055', 'Discriminator loss 0.6719', 'Discriminator accuracy 0.5605', 'Total loss: 1.5410', 'for batch', 66)
('GAN loss 1.2673 ', 'GAN acc 0.0000', 'Discriminator loss 0.6647', 'Discriminator accuracy 0.6074', 'Total loss: 1.9320', 'for batch', 67)
('GAN loss 0.9703 ', 'GAN acc 0.0195', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5117', 'Total loss: 1.6465', 'for batch', 68)
('GAN loss 0.8116 ', 'GAN acc 0.5859', 'Discriminator loss 0.6532', 'Discriminator accuracy 0.5664', 'Total loss: 1.4648', 'for batch', 69)
('GAN loss 0.9674 ', 'GAN acc 0.0156', 'Discriminator loss 0.6339', 'Discriminator accuracy 0.6309', 'Total loss: 1.6013', 'for batch', 70)
('GAN loss 0.8755 ', 'GAN acc 0.0273', 'Discriminator loss 0.6539', 'Discriminator accuracy 0.6465', 'Total loss: 1.5294', 'for batch', 71)
('GAN loss 0.7433 ', 'GAN acc 0.5859', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.6055', 'Total loss: 1.4039', 'for batch', 72)
('GAN loss 0.7886 ', 'GAN acc 0.3906', 'Discriminator loss 0.6628', 'Discriminator accuracy 0.5625', 'Total loss: 1.4514', 'for batch', 73)
('GAN loss 0.8154 ', 'GAN acc 0.2344', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5547', 'Total loss: 1.4862', 'for batch', 74)
('GAN loss 0.8514 ', 'GAN acc 0.1016', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.5039', 'Total loss: 1.5431', 'for batch', 75)
('GAN loss 1.1896 ', 'GAN acc 0.0039', 'Discriminator loss 0.7073', 'Discriminator accuracy 0.4883', 'Total loss: 1.8970', 'for batch', 76)
('GAN loss 0.9006 ', 'GAN acc 0.2734', 'Discriminator loss 0.6364', 'Discriminator accuracy 0.5547', 'Total loss: 1.5370', 'for batch', 77)
('GAN loss 0.6922 ', 'GAN acc 0.8438', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5273', 'Total loss: 1.3695', 'for batch', 78)
('GAN loss 0.6663 ', 'GAN acc 0.8672', 'Discriminator loss 0.6921', 'Discriminator accuracy 0.5195', 'Total loss: 1.3585', 'for batch', 79)
('GAN loss 0.7742 ', 'GAN acc 0.4453', 'Discriminator loss 0.6699', 'Discriminator accuracy 0.5469', 'Total loss: 1.4441', 'for batch', 80)
('GAN loss 0.8891 ', 'GAN acc 0.0156', 'Discriminator loss 0.6425', 'Discriminator accuracy 0.6445', 'Total loss: 1.5316', 'for batch', 81)
('GAN loss 0.8439 ', 'GAN acc 0.0898', 'Discriminator loss 0.6735', 'Discriminator accuracy 0.5449', 'Total loss: 1.5174', 'for batch', 82)
('GAN loss 0.7802 ', 'GAN acc 0.2461', 'Discriminator loss 0.6651', 'Discriminator accuracy 0.5879', 'Total loss: 1.4453', 'for batch', 83)
('GAN loss 0.8427 ', 'GAN acc 0.0352', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.5879', 'Total loss: 1.5073', 'for batch', 84)
('GAN loss 0.9210 ', 'GAN acc 0.0195', 'Discriminator loss 0.6589', 'Discriminator accuracy 0.6523', 'Total loss: 1.5799', 'for batch', 85)
('GAN loss 0.8712 ', 'GAN acc 0.0430', 'Discriminator loss 0.6484', 'Discriminator accuracy 0.6465', 'Total loss: 1.5196', 'for batch', 86)
('GAN loss 0.7184 ', 'GAN acc 0.5273', 'Discriminator loss 0.6771', 'Discriminator accuracy 0.5273', 'Total loss: 1.3955', 'for batch', 87)
('GAN loss 0.7564 ', 'GAN acc 0.4102', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.5352', 'Total loss: 1.4353', 'for batch', 88)
('GAN loss 0.7579 ', 'GAN acc 0.6133', 'Discriminator loss 0.6686', 'Discriminator accuracy 0.5469', 'Total loss: 1.4264', 'for batch', 89)
('GAN loss 0.8074 ', 'GAN acc 0.3164', 'Discriminator loss 0.6653', 'Discriminator accuracy 0.5566', 'Total loss: 1.4727', 'for batch', 90)
('GAN loss 0.8393 ', 'GAN acc 0.2266', 'Discriminator loss 0.6577', 'Discriminator accuracy 0.5566', 'Total loss: 1.4971', 'for batch', 91)
('GAN loss 0.7747 ', 'GAN acc 0.3320', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.4863', 'Total loss: 1.4579', 'for batch', 92)
('GAN loss 0.8580 ', 'GAN acc 0.0703', 'Discriminator loss 0.6775', 'Discriminator accuracy 0.5059', 'Total loss: 1.5355', 'for batch', 93)
('GAN loss 0.8083 ', 'GAN acc 0.2148', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.5098', 'Total loss: 1.4901', 'for batch', 94)
('GAN loss 0.8299 ', 'GAN acc 0.1406', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.6328', 'Total loss: 1.4939', 'for batch', 95)
('GAN loss 0.8696 ', 'GAN acc 0.1953', 'Discriminator loss 0.6643', 'Discriminator accuracy 0.5605', 'Total loss: 1.5339', 'for batch', 96)
('GAN loss 0.8342 ', 'GAN acc 0.0469', 'Discriminator loss 0.6656', 'Discriminator accuracy 0.6074', 'Total loss: 1.4999', 'for batch', 97)
('GAN loss 0.8252 ', 'GAN acc 0.1016', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.6113', 'Total loss: 1.4820', 'for batch', 98)
('GAN loss 0.8917 ', 'GAN acc 0.0586', 'Discriminator loss 0.6700', 'Discriminator accuracy 0.5742', 'Total loss: 1.5617', 'for batch', 99)
('GAN loss 0.9494 ', 'GAN acc 0.0078', 'Discriminator loss 0.6608', 'Discriminator accuracy 0.5723', 'Total loss: 1.6102', 'for batch', 100)
('GAN loss 1.4225 ', 'GAN acc 0.0000', 'Discriminator loss 0.6593', 'Discriminator accuracy 0.5059', 'Total loss: 2.0818', 'for batch', 101)
('GAN loss 1.0696 ', 'GAN acc 0.0742', 'Discriminator loss 0.6155', 'Discriminator accuracy 0.6738', 'Total loss: 1.6851', 'for batch', 102)
('GAN loss 0.6750 ', 'GAN acc 0.8867', 'Discriminator loss 0.6714', 'Discriminator accuracy 0.5605', 'Total loss: 1.3464', 'for batch', 103)
('GAN loss 0.6820 ', 'GAN acc 0.8555', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5352', 'Total loss: 1.3716', 'for batch', 104)
('GAN loss 0.8464 ', 'GAN acc 0.0664', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.5586', 'Total loss: 1.5084', 'for batch', 105)
('GAN loss 0.8591 ', 'GAN acc 0.0625', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5977', 'Total loss: 1.5304', 'for batch', 106)
('GAN loss 0.8144 ', 'GAN acc 0.1797', 'Discriminator loss 0.6628', 'Discriminator accuracy 0.5645', 'Total loss: 1.4771', 'for batch', 107)
('GAN loss 0.9522 ', 'GAN acc 0.0469', 'Discriminator loss 0.6449', 'Discriminator accuracy 0.6152', 'Total loss: 1.5971', 'for batch', 108)
('GAN loss 0.9045 ', 'GAN acc 0.0977', 'Discriminator loss 0.6492', 'Discriminator accuracy 0.5332', 'Total loss: 1.5537', 'for batch', 109)
('GAN loss 0.7345 ', 'GAN acc 0.7422', 'Discriminator loss 0.6633', 'Discriminator accuracy 0.5469', 'Total loss: 1.3978', 'for batch', 110)
('GAN loss 0.6485 ', 'GAN acc 0.8828', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.5234', 'Total loss: 1.3274', 'for batch', 111)
('GAN loss 0.7062 ', 'GAN acc 0.6875', 'Discriminator loss 0.6630', 'Discriminator accuracy 0.5664', 'Total loss: 1.3692', 'for batch', 112)
('GAN loss 0.7478 ', 'GAN acc 0.3164', 'Discriminator loss 0.6759', 'Discriminator accuracy 0.5430', 'Total loss: 1.4237', 'for batch', 113)
('GAN loss 0.7775 ', 'GAN acc 0.2227', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5742', 'Total loss: 1.4529', 'for batch', 114)
('GAN loss 0.7710 ', 'GAN acc 0.2305', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5508', 'Total loss: 1.4416', 'for batch', 115)
('GAN loss 0.8025 ', 'GAN acc 0.2109', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5195', 'Total loss: 1.4865', 'for batch', 116)
('GAN loss 0.9702 ', 'GAN acc 0.0234', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.6113', 'Total loss: 1.6248', 'for batch', 117)
('GAN loss 0.7016 ', 'GAN acc 0.7539', 'Discriminator loss 0.6802', 'Discriminator accuracy 0.5293', 'Total loss: 1.3818', 'for batch', 118)
('GAN loss 0.7273 ', 'GAN acc 0.5547', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5449', 'Total loss: 1.4084', 'for batch', 119)
('GAN loss 0.7149 ', 'GAN acc 0.6250', 'Discriminator loss 0.6721', 'Discriminator accuracy 0.5469', 'Total loss: 1.3870', 'for batch', 120)
('GAN loss 0.7520 ', 'GAN acc 0.3125', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5410', 'Total loss: 1.4313', 'for batch', 121)
('GAN loss 0.7747 ', 'GAN acc 0.3164', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5312', 'Total loss: 1.4519', 'for batch', 122)
('GAN loss 0.7984 ', 'GAN acc 0.2773', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5762', 'Total loss: 1.4743', 'for batch', 123)
('GAN loss 0.7856 ', 'GAN acc 0.3281', 'Discriminator loss 0.6901', 'Discriminator accuracy 0.5156', 'Total loss: 1.4757', 'for batch', 124)
('GAN loss 0.7879 ', 'GAN acc 0.3203', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.4980', 'Total loss: 1.4689', 'for batch', 125)
('GAN loss 0.7039 ', 'GAN acc 0.6836', 'Discriminator loss 0.6871', 'Discriminator accuracy 0.4883', 'Total loss: 1.3911', 'for batch', 126)
('GAN loss 0.6935 ', 'GAN acc 0.6875', 'Discriminator loss 0.6795', 'Discriminator accuracy 0.5117', 'Total loss: 1.3730', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.55398947)
('DISCRIMINATOR_Imagem FAKE=', 0.53398794)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.104170')
----------------------------------
('Epoch', 5, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7186 ', 'GAN acc 0.4883', 'Discriminator loss 0.6844', 'Discriminator accuracy 0.5254', 'Total loss: 1.4030', 'for batch', 0)
('GAN loss 0.7404 ', 'GAN acc 0.3750', 'Discriminator loss 0.6681', 'Discriminator accuracy 0.6328', 'Total loss: 1.4085', 'for batch', 1)
('GAN loss 0.7585 ', 'GAN acc 0.2891', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.5312', 'Total loss: 1.4440', 'for batch', 2)
('GAN loss 0.7899 ', 'GAN acc 0.2070', 'Discriminator loss 0.6903', 'Discriminator accuracy 0.5176', 'Total loss: 1.4801', 'for batch', 3)
('GAN loss 0.7303 ', 'GAN acc 0.6445', 'Discriminator loss 0.6757', 'Discriminator accuracy 0.5078', 'Total loss: 1.4060', 'for batch', 4)
('GAN loss 0.7142 ', 'GAN acc 0.7461', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5605', 'Total loss: 1.3851', 'for batch', 5)
('GAN loss 0.6918 ', 'GAN acc 0.7656', 'Discriminator loss 0.6592', 'Discriminator accuracy 0.6406', 'Total loss: 1.3510', 'for batch', 6)
('GAN loss 0.7011 ', 'GAN acc 0.7148', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5762', 'Total loss: 1.3738', 'for batch', 7)
('GAN loss 0.7528 ', 'GAN acc 0.3672', 'Discriminator loss 0.6458', 'Discriminator accuracy 0.6191', 'Total loss: 1.3986', 'for batch', 8)
('GAN loss 0.7360 ', 'GAN acc 0.3047', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5391', 'Total loss: 1.4151', 'for batch', 9)
('GAN loss 0.7122 ', 'GAN acc 0.5430', 'Discriminator loss 0.6712', 'Discriminator accuracy 0.5859', 'Total loss: 1.3833', 'for batch', 10)
('GAN loss 0.7398 ', 'GAN acc 0.3945', 'Discriminator loss 0.6694', 'Discriminator accuracy 0.5840', 'Total loss: 1.4092', 'for batch', 11)
('GAN loss 0.7489 ', 'GAN acc 0.4336', 'Discriminator loss 0.6763', 'Discriminator accuracy 0.5430', 'Total loss: 1.4251', 'for batch', 12)
('GAN loss 0.7329 ', 'GAN acc 0.5508', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5645', 'Total loss: 1.4085', 'for batch', 13)
('GAN loss 0.7809 ', 'GAN acc 0.6680', 'Discriminator loss 0.6581', 'Discriminator accuracy 0.6211', 'Total loss: 1.4391', 'for batch', 14)
('GAN loss 0.7329 ', 'GAN acc 0.7109', 'Discriminator loss 0.6729', 'Discriminator accuracy 0.5566', 'Total loss: 1.4058', 'for batch', 15)
('GAN loss 0.7695 ', 'GAN acc 0.5195', 'Discriminator loss 0.6683', 'Discriminator accuracy 0.5469', 'Total loss: 1.4378', 'for batch', 16)
('GAN loss 0.7713 ', 'GAN acc 0.3477', 'Discriminator loss 0.6410', 'Discriminator accuracy 0.6289', 'Total loss: 1.4123', 'for batch', 17)
('GAN loss 0.7196 ', 'GAN acc 0.7188', 'Discriminator loss 0.6496', 'Discriminator accuracy 0.5137', 'Total loss: 1.3691', 'for batch', 18)
('GAN loss 0.6677 ', 'GAN acc 0.8477', 'Discriminator loss 0.6608', 'Discriminator accuracy 0.6035', 'Total loss: 1.3285', 'for batch', 19)
('GAN loss 1.5790 ', 'GAN acc 0.0039', 'Discriminator loss 0.5595', 'Discriminator accuracy 0.7949', 'Total loss: 2.1385', 'for batch', 20)
('GAN loss 0.8442 ', 'GAN acc 0.1328', 'Discriminator loss 0.6682', 'Discriminator accuracy 0.5469', 'Total loss: 1.5123', 'for batch', 21)
('GAN loss 0.9245 ', 'GAN acc 0.0156', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5840', 'Total loss: 1.5968', 'for batch', 22)
('GAN loss 0.8012 ', 'GAN acc 0.1172', 'Discriminator loss 0.6871', 'Discriminator accuracy 0.4941', 'Total loss: 1.4883', 'for batch', 23)
('GAN loss 0.8993 ', 'GAN acc 0.0742', 'Discriminator loss 0.6705', 'Discriminator accuracy 0.5898', 'Total loss: 1.5698', 'for batch', 24)
('GAN loss 1.0421 ', 'GAN acc 0.0352', 'Discriminator loss 0.6602', 'Discriminator accuracy 0.5938', 'Total loss: 1.7023', 'for batch', 25)
('GAN loss 0.7417 ', 'GAN acc 0.7578', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5273', 'Total loss: 1.4194', 'for batch', 26)
('GAN loss 0.7897 ', 'GAN acc 0.3398', 'Discriminator loss 0.6504', 'Discriminator accuracy 0.5762', 'Total loss: 1.4402', 'for batch', 27)
('GAN loss 0.8904 ', 'GAN acc 0.0156', 'Discriminator loss 0.6450', 'Discriminator accuracy 0.6895', 'Total loss: 1.5355', 'for batch', 28)
('GAN loss 0.9137 ', 'GAN acc 0.0039', 'Discriminator loss 0.6380', 'Discriminator accuracy 0.6953', 'Total loss: 1.5517', 'for batch', 29)
('GAN loss 0.7571 ', 'GAN acc 0.2773', 'Discriminator loss 0.6867', 'Discriminator accuracy 0.5312', 'Total loss: 1.4438', 'for batch', 30)
('GAN loss 0.6814 ', 'GAN acc 0.7188', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5137', 'Total loss: 1.3734', 'for batch', 31)
('GAN loss 0.6602 ', 'GAN acc 0.8398', 'Discriminator loss 0.7137', 'Discriminator accuracy 0.4883', 'Total loss: 1.3739', 'for batch', 32)
('GAN loss 0.8750 ', 'GAN acc 0.1406', 'Discriminator loss 0.6871', 'Discriminator accuracy 0.5078', 'Total loss: 1.5621', 'for batch', 33)
('GAN loss 1.4268 ', 'GAN acc 0.0039', 'Discriminator loss 0.6268', 'Discriminator accuracy 0.7012', 'Total loss: 2.0536', 'for batch', 34)
('GAN loss 0.7818 ', 'GAN acc 0.7891', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5137', 'Total loss: 1.4716', 'for batch', 35)
('GAN loss 0.6346 ', 'GAN acc 0.8867', 'Discriminator loss 0.6742', 'Discriminator accuracy 0.5273', 'Total loss: 1.3087', 'for batch', 36)
('GAN loss 0.6677 ', 'GAN acc 0.8789', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.5391', 'Total loss: 1.3621', 'for batch', 37)
('GAN loss 0.7135 ', 'GAN acc 0.7305', 'Discriminator loss 0.6805', 'Discriminator accuracy 0.5430', 'Total loss: 1.3941', 'for batch', 38)
('GAN loss 0.7383 ', 'GAN acc 0.5742', 'Discriminator loss 0.6804', 'Discriminator accuracy 0.5508', 'Total loss: 1.4187', 'for batch', 39)
('GAN loss 0.7197 ', 'GAN acc 0.5273', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.5625', 'Total loss: 1.3865', 'for batch', 40)
('GAN loss 0.6887 ', 'GAN acc 0.6836', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.6621', 'Total loss: 1.3483', 'for batch', 41)
('GAN loss 0.6836 ', 'GAN acc 0.7109', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.6016', 'Total loss: 1.3564', 'for batch', 42)
('GAN loss 0.7238 ', 'GAN acc 0.6602', 'Discriminator loss 0.6560', 'Discriminator accuracy 0.6152', 'Total loss: 1.3798', 'for batch', 43)
('GAN loss 0.8826 ', 'GAN acc 0.5781', 'Discriminator loss 0.6518', 'Discriminator accuracy 0.6074', 'Total loss: 1.5344', 'for batch', 44)
('GAN loss 0.7309 ', 'GAN acc 0.7188', 'Discriminator loss 0.6665', 'Discriminator accuracy 0.5703', 'Total loss: 1.3975', 'for batch', 45)
('GAN loss 0.7388 ', 'GAN acc 0.6289', 'Discriminator loss 0.6822', 'Discriminator accuracy 0.5312', 'Total loss: 1.4210', 'for batch', 46)
('GAN loss 0.9720 ', 'GAN acc 0.0352', 'Discriminator loss 0.6561', 'Discriminator accuracy 0.5703', 'Total loss: 1.6282', 'for batch', 47)
('GAN loss 0.8591 ', 'GAN acc 0.1836', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.4844', 'Total loss: 1.5267', 'for batch', 48)
('GAN loss 0.7501 ', 'GAN acc 0.4766', 'Discriminator loss 0.6735', 'Discriminator accuracy 0.5449', 'Total loss: 1.4237', 'for batch', 49)
('GAN loss 0.7679 ', 'GAN acc 0.4648', 'Discriminator loss 0.6621', 'Discriminator accuracy 0.6094', 'Total loss: 1.4300', 'for batch', 50)
('GAN loss 0.9267 ', 'GAN acc 0.0938', 'Discriminator loss 0.6623', 'Discriminator accuracy 0.6602', 'Total loss: 1.5889', 'for batch', 51)
('GAN loss 0.7498 ', 'GAN acc 0.7656', 'Discriminator loss 0.6702', 'Discriminator accuracy 0.5488', 'Total loss: 1.4199', 'for batch', 52)
('GAN loss 0.8141 ', 'GAN acc 0.4219', 'Discriminator loss 0.6663', 'Discriminator accuracy 0.5430', 'Total loss: 1.4804', 'for batch', 53)
('GAN loss 0.8820 ', 'GAN acc 0.1953', 'Discriminator loss 0.6539', 'Discriminator accuracy 0.5801', 'Total loss: 1.5359', 'for batch', 54)
('GAN loss 0.9311 ', 'GAN acc 0.2812', 'Discriminator loss 0.6600', 'Discriminator accuracy 0.5488', 'Total loss: 1.5911', 'for batch', 55)
('GAN loss 0.8565 ', 'GAN acc 0.1406', 'Discriminator loss 0.6687', 'Discriminator accuracy 0.5449', 'Total loss: 1.5252', 'for batch', 56)
('GAN loss 0.8143 ', 'GAN acc 0.2656', 'Discriminator loss 0.6579', 'Discriminator accuracy 0.5898', 'Total loss: 1.4722', 'for batch', 57)
('GAN loss 0.8236 ', 'GAN acc 0.2383', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.6621', 'Total loss: 1.4832', 'for batch', 58)
('GAN loss 0.8095 ', 'GAN acc 0.4297', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5918', 'Total loss: 1.4798', 'for batch', 59)
('GAN loss 0.8281 ', 'GAN acc 0.4180', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5605', 'Total loss: 1.5098', 'for batch', 60)
('GAN loss 0.7193 ', 'GAN acc 0.7695', 'Discriminator loss 0.6984', 'Discriminator accuracy 0.4824', 'Total loss: 1.4177', 'for batch', 61)
('GAN loss 0.7488 ', 'GAN acc 0.5859', 'Discriminator loss 0.6751', 'Discriminator accuracy 0.5547', 'Total loss: 1.4240', 'for batch', 62)
('GAN loss 0.7010 ', 'GAN acc 0.7734', 'Discriminator loss 0.6815', 'Discriminator accuracy 0.5430', 'Total loss: 1.3826', 'for batch', 63)
('GAN loss 0.6921 ', 'GAN acc 0.8203', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.4902', 'Total loss: 1.3789', 'for batch', 64)
('GAN loss 0.7466 ', 'GAN acc 0.3477', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.5059', 'Total loss: 1.4334', 'for batch', 65)
('GAN loss 0.7767 ', 'GAN acc 0.1680', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5391', 'Total loss: 1.4539', 'for batch', 66)
('GAN loss 0.7749 ', 'GAN acc 0.2188', 'Discriminator loss 0.6640', 'Discriminator accuracy 0.6445', 'Total loss: 1.4388', 'for batch', 67)
('GAN loss 0.7567 ', 'GAN acc 0.3359', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5098', 'Total loss: 1.4384', 'for batch', 68)
('GAN loss 0.8319 ', 'GAN acc 0.1953', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5000', 'Total loss: 1.5105', 'for batch', 69)
('GAN loss 1.2191 ', 'GAN acc 0.0195', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.5273', 'Total loss: 1.8801', 'for batch', 70)
('GAN loss 0.9392 ', 'GAN acc 0.1641', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.4824', 'Total loss: 1.6243', 'for batch', 71)
('GAN loss 0.7523 ', 'GAN acc 0.5742', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5586', 'Total loss: 1.4196', 'for batch', 72)
('GAN loss 0.8127 ', 'GAN acc 0.1445', 'Discriminator loss 0.6522', 'Discriminator accuracy 0.6133', 'Total loss: 1.4648', 'for batch', 73)
('GAN loss 0.8440 ', 'GAN acc 0.0625', 'Discriminator loss 0.6528', 'Discriminator accuracy 0.6836', 'Total loss: 1.4968', 'for batch', 74)
('GAN loss 0.7927 ', 'GAN acc 0.2344', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.6133', 'Total loss: 1.4580', 'for batch', 75)
('GAN loss 0.7935 ', 'GAN acc 0.4961', 'Discriminator loss 0.6730', 'Discriminator accuracy 0.5371', 'Total loss: 1.4665', 'for batch', 76)
('GAN loss 0.9442 ', 'GAN acc 0.3281', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5215', 'Total loss: 1.6209', 'for batch', 77)
('GAN loss 0.9444 ', 'GAN acc 0.0273', 'Discriminator loss 0.6822', 'Discriminator accuracy 0.5273', 'Total loss: 1.6266', 'for batch', 78)
('GAN loss 0.8156 ', 'GAN acc 0.2852', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.5098', 'Total loss: 1.5053', 'for batch', 79)
('GAN loss 0.7788 ', 'GAN acc 0.5938', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.4902', 'Total loss: 1.4544', 'for batch', 80)
('GAN loss 0.7967 ', 'GAN acc 0.0820', 'Discriminator loss 0.6614', 'Discriminator accuracy 0.5840', 'Total loss: 1.4580', 'for batch', 81)
('GAN loss 0.8147 ', 'GAN acc 0.1016', 'Discriminator loss 0.6336', 'Discriminator accuracy 0.6719', 'Total loss: 1.4483', 'for batch', 82)
('GAN loss 0.7957 ', 'GAN acc 0.2344', 'Discriminator loss 0.6544', 'Discriminator accuracy 0.5625', 'Total loss: 1.4502', 'for batch', 83)
('GAN loss 0.9149 ', 'GAN acc 0.1328', 'Discriminator loss 0.7045', 'Discriminator accuracy 0.5273', 'Total loss: 1.6194', 'for batch', 84)
('GAN loss 1.3071 ', 'GAN acc 0.0000', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5410', 'Total loss: 1.9837', 'for batch', 85)
('GAN loss 0.9327 ', 'GAN acc 0.1289', 'Discriminator loss 0.7018', 'Discriminator accuracy 0.4844', 'Total loss: 1.6345', 'for batch', 86)
('GAN loss 1.4832 ', 'GAN acc 0.0000', 'Discriminator loss 0.6059', 'Discriminator accuracy 0.5879', 'Total loss: 2.0890', 'for batch', 87)
('GAN loss 0.6408 ', 'GAN acc 0.8789', 'Discriminator loss 0.7055', 'Discriminator accuracy 0.5273', 'Total loss: 1.3463', 'for batch', 88)
('GAN loss 0.7399 ', 'GAN acc 0.4648', 'Discriminator loss 0.6820', 'Discriminator accuracy 0.5527', 'Total loss: 1.4219', 'for batch', 89)
('GAN loss 0.9584 ', 'GAN acc 0.0000', 'Discriminator loss 0.6405', 'Discriminator accuracy 0.7031', 'Total loss: 1.5988', 'for batch', 90)
('GAN loss 1.0021 ', 'GAN acc 0.0000', 'Discriminator loss 0.6279', 'Discriminator accuracy 0.8262', 'Total loss: 1.6300', 'for batch', 91)
('GAN loss 0.7786 ', 'GAN acc 0.2031', 'Discriminator loss 0.6535', 'Discriminator accuracy 0.6797', 'Total loss: 1.4321', 'for batch', 92)
('GAN loss 0.6400 ', 'GAN acc 0.7305', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5508', 'Total loss: 1.3216', 'for batch', 93)
('GAN loss 0.6804 ', 'GAN acc 0.6289', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.5410', 'Total loss: 1.3734', 'for batch', 94)
('GAN loss 0.8163 ', 'GAN acc 0.3203', 'Discriminator loss 0.6714', 'Discriminator accuracy 0.5879', 'Total loss: 1.4877', 'for batch', 95)
('GAN loss 1.0041 ', 'GAN acc 0.0078', 'Discriminator loss 0.6408', 'Discriminator accuracy 0.6523', 'Total loss: 1.6449', 'for batch', 96)
('GAN loss 0.8724 ', 'GAN acc 0.0234', 'Discriminator loss 0.6593', 'Discriminator accuracy 0.6426', 'Total loss: 1.5317', 'for batch', 97)
('GAN loss 0.7027 ', 'GAN acc 0.6250', 'Discriminator loss 0.6969', 'Discriminator accuracy 0.5039', 'Total loss: 1.3996', 'for batch', 98)
('GAN loss 0.8533 ', 'GAN acc 0.1680', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.6055', 'Total loss: 1.5200', 'for batch', 99)
('GAN loss 0.9395 ', 'GAN acc 0.0039', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.6680', 'Total loss: 1.5940', 'for batch', 100)
('GAN loss 0.7898 ', 'GAN acc 0.1211', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5645', 'Total loss: 1.4715', 'for batch', 101)
('GAN loss 0.7615 ', 'GAN acc 0.4102', 'Discriminator loss 0.6719', 'Discriminator accuracy 0.5820', 'Total loss: 1.4334', 'for batch', 102)
('GAN loss 0.9330 ', 'GAN acc 0.0039', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.6816', 'Total loss: 1.5882', 'for batch', 103)
('GAN loss 0.9642 ', 'GAN acc 0.0039', 'Discriminator loss 0.6479', 'Discriminator accuracy 0.6660', 'Total loss: 1.6121', 'for batch', 104)
('GAN loss 0.7888 ', 'GAN acc 0.3789', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.4844', 'Total loss: 1.4734', 'for batch', 105)
('GAN loss 0.7719 ', 'GAN acc 0.3594', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.4922', 'Total loss: 1.4487', 'for batch', 106)
('GAN loss 0.7734 ', 'GAN acc 0.2656', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.4902', 'Total loss: 1.4585', 'for batch', 107)
('GAN loss 0.8198 ', 'GAN acc 0.0859', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5898', 'Total loss: 1.4924', 'for batch', 108)
('GAN loss 0.9233 ', 'GAN acc 0.0000', 'Discriminator loss 0.6509', 'Discriminator accuracy 0.6387', 'Total loss: 1.5743', 'for batch', 109)
('GAN loss 0.9937 ', 'GAN acc 0.0000', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.5723', 'Total loss: 1.6466', 'for batch', 110)
('GAN loss 0.7004 ', 'GAN acc 0.6758', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5352', 'Total loss: 1.3773', 'for batch', 111)
('GAN loss 0.6823 ', 'GAN acc 0.7812', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.5137', 'Total loss: 1.3688', 'for batch', 112)
('GAN loss 0.7241 ', 'GAN acc 0.4297', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5332', 'Total loss: 1.4008', 'for batch', 113)
('GAN loss 0.8211 ', 'GAN acc 0.0469', 'Discriminator loss 0.6533', 'Discriminator accuracy 0.6426', 'Total loss: 1.4744', 'for batch', 114)
('GAN loss 0.9475 ', 'GAN acc 0.0195', 'Discriminator loss 0.6394', 'Discriminator accuracy 0.7344', 'Total loss: 1.5868', 'for batch', 115)
('GAN loss 0.8729 ', 'GAN acc 0.1055', 'Discriminator loss 0.6584', 'Discriminator accuracy 0.6074', 'Total loss: 1.5314', 'for batch', 116)
('GAN loss 0.7179 ', 'GAN acc 0.4961', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.5820', 'Total loss: 1.3851', 'for batch', 117)
('GAN loss 0.6823 ', 'GAN acc 0.6758', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.5293', 'Total loss: 1.3753', 'for batch', 118)
('GAN loss 0.6668 ', 'GAN acc 0.7109', 'Discriminator loss 0.6931', 'Discriminator accuracy 0.5078', 'Total loss: 1.3599', 'for batch', 119)
('GAN loss 0.7055 ', 'GAN acc 0.5234', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5488', 'Total loss: 1.3904', 'for batch', 120)
('GAN loss 0.7437 ', 'GAN acc 0.3711', 'Discriminator loss 0.6704', 'Discriminator accuracy 0.5957', 'Total loss: 1.4141', 'for batch', 121)
('GAN loss 0.8163 ', 'GAN acc 0.1953', 'Discriminator loss 0.6693', 'Discriminator accuracy 0.5898', 'Total loss: 1.4856', 'for batch', 122)
('GAN loss 0.7726 ', 'GAN acc 0.3203', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.4941', 'Total loss: 1.4623', 'for batch', 123)
('GAN loss 0.7775 ', 'GAN acc 0.3203', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5391', 'Total loss: 1.4544', 'for batch', 124)
('GAN loss 0.7617 ', 'GAN acc 0.3281', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5195', 'Total loss: 1.4453', 'for batch', 125)
('GAN loss 0.8387 ', 'GAN acc 0.0508', 'Discriminator loss 0.6653', 'Discriminator accuracy 0.6270', 'Total loss: 1.5040', 'for batch', 126)
('GAN loss 0.8714 ', 'GAN acc 0.0391', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.6230', 'Total loss: 1.5356', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.50895393)
('DISCRIMINATOR_Imagem FAKE=', 0.46255419)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.194686')
----------------------------------
('Epoch', 6, 'of', 50)
('Number of batches', 128)
('GAN loss 0.9182 ', 'GAN acc 0.0039', 'Discriminator loss 0.6520', 'Discriminator accuracy 0.6621', 'Total loss: 1.5701', 'for batch', 0)
('GAN loss 0.8709 ', 'GAN acc 0.0352', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.6230', 'Total loss: 1.5244', 'for batch', 1)
('GAN loss 0.7815 ', 'GAN acc 0.3711', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5371', 'Total loss: 1.4538', 'for batch', 2)
('GAN loss 0.7431 ', 'GAN acc 0.5000', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.4863', 'Total loss: 1.4298', 'for batch', 3)
('GAN loss 0.7335 ', 'GAN acc 0.4609', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.4961', 'Total loss: 1.4173', 'for batch', 4)
('GAN loss 0.7410 ', 'GAN acc 0.3516', 'Discriminator loss 0.6852', 'Discriminator accuracy 0.5234', 'Total loss: 1.4262', 'for batch', 5)
('GAN loss 0.7465 ', 'GAN acc 0.3438', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.4922', 'Total loss: 1.4277', 'for batch', 6)
('GAN loss 0.7735 ', 'GAN acc 0.2812', 'Discriminator loss 0.6852', 'Discriminator accuracy 0.5195', 'Total loss: 1.4587', 'for batch', 7)
('GAN loss 0.7253 ', 'GAN acc 0.5234', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.5879', 'Total loss: 1.3971', 'for batch', 8)
('GAN loss 0.6539 ', 'GAN acc 0.8320', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.5352', 'Total loss: 1.3416', 'for batch', 9)
('GAN loss 0.6623 ', 'GAN acc 0.7891', 'Discriminator loss 0.6947', 'Discriminator accuracy 0.5078', 'Total loss: 1.3570', 'for batch', 10)
('GAN loss 0.6703 ', 'GAN acc 0.7930', 'Discriminator loss 0.6941', 'Discriminator accuracy 0.4922', 'Total loss: 1.3644', 'for batch', 11)
('GAN loss 0.6801 ', 'GAN acc 0.6914', 'Discriminator loss 0.6930', 'Discriminator accuracy 0.5020', 'Total loss: 1.3731', 'for batch', 12)
('GAN loss 0.7154 ', 'GAN acc 0.5273', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.5020', 'Total loss: 1.4043', 'for batch', 13)
('GAN loss 0.7496 ', 'GAN acc 0.3906', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.5527', 'Total loss: 1.4227', 'for batch', 14)
('GAN loss 0.7965 ', 'GAN acc 0.1445', 'Discriminator loss 0.6669', 'Discriminator accuracy 0.5996', 'Total loss: 1.4635', 'for batch', 15)
('GAN loss 0.8547 ', 'GAN acc 0.0195', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5684', 'Total loss: 1.5291', 'for batch', 16)
('GAN loss 0.7420 ', 'GAN acc 0.3789', 'Discriminator loss 0.6922', 'Discriminator accuracy 0.4805', 'Total loss: 1.4343', 'for batch', 17)
('GAN loss 0.7242 ', 'GAN acc 0.4297', 'Discriminator loss 0.6908', 'Discriminator accuracy 0.5195', 'Total loss: 1.4150', 'for batch', 18)
('GAN loss 0.7382 ', 'GAN acc 0.3633', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.5625', 'Total loss: 1.4192', 'for batch', 19)
('GAN loss 0.7358 ', 'GAN acc 0.3594', 'Discriminator loss 0.6935', 'Discriminator accuracy 0.4961', 'Total loss: 1.4293', 'for batch', 20)
('GAN loss 0.7598 ', 'GAN acc 0.3125', 'Discriminator loss 0.6838', 'Discriminator accuracy 0.5488', 'Total loss: 1.4436', 'for batch', 21)
('GAN loss 0.7594 ', 'GAN acc 0.2852', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.5371', 'Total loss: 1.4334', 'for batch', 22)
('GAN loss 0.7013 ', 'GAN acc 0.6445', 'Discriminator loss 0.6665', 'Discriminator accuracy 0.5371', 'Total loss: 1.3678', 'for batch', 23)
('GAN loss 0.7426 ', 'GAN acc 0.4844', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.5527', 'Total loss: 1.4190', 'for batch', 24)
('GAN loss 0.6796 ', 'GAN acc 0.7930', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.4941', 'Total loss: 1.3685', 'for batch', 25)
('GAN loss 0.7841 ', 'GAN acc 0.2227', 'Discriminator loss 0.6757', 'Discriminator accuracy 0.5410', 'Total loss: 1.4597', 'for batch', 26)
('GAN loss 0.8227 ', 'GAN acc 0.1328', 'Discriminator loss 0.6664', 'Discriminator accuracy 0.6113', 'Total loss: 1.4891', 'for batch', 27)
('GAN loss 0.7915 ', 'GAN acc 0.2461', 'Discriminator loss 0.6830', 'Discriminator accuracy 0.5391', 'Total loss: 1.4745', 'for batch', 28)
('GAN loss 0.7709 ', 'GAN acc 0.3125', 'Discriminator loss 0.6790', 'Discriminator accuracy 0.5566', 'Total loss: 1.4499', 'for batch', 29)
('GAN loss 0.6865 ', 'GAN acc 0.6602', 'Discriminator loss 0.6999', 'Discriminator accuracy 0.4922', 'Total loss: 1.3864', 'for batch', 30)
('GAN loss 0.7138 ', 'GAN acc 0.5391', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.5469', 'Total loss: 1.3981', 'for batch', 31)
('GAN loss 0.7303 ', 'GAN acc 0.4453', 'Discriminator loss 0.6893', 'Discriminator accuracy 0.5273', 'Total loss: 1.4196', 'for batch', 32)
('GAN loss 0.7362 ', 'GAN acc 0.3398', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5371', 'Total loss: 1.4155', 'for batch', 33)
('GAN loss 0.7579 ', 'GAN acc 0.2852', 'Discriminator loss 0.6721', 'Discriminator accuracy 0.6016', 'Total loss: 1.4300', 'for batch', 34)
('GAN loss 0.7404 ', 'GAN acc 0.3711', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5898', 'Total loss: 1.4113', 'for batch', 35)
('GAN loss 0.7305 ', 'GAN acc 0.4297', 'Discriminator loss 0.6741', 'Discriminator accuracy 0.5781', 'Total loss: 1.4046', 'for batch', 36)
('GAN loss 0.7118 ', 'GAN acc 0.5859', 'Discriminator loss 0.6669', 'Discriminator accuracy 0.5703', 'Total loss: 1.3787', 'for batch', 37)
('GAN loss 0.7194 ', 'GAN acc 0.6016', 'Discriminator loss 0.6746', 'Discriminator accuracy 0.4961', 'Total loss: 1.3940', 'for batch', 38)
('GAN loss 0.7445 ', 'GAN acc 0.3789', 'Discriminator loss 0.6741', 'Discriminator accuracy 0.5449', 'Total loss: 1.4185', 'for batch', 39)
('GAN loss 0.7079 ', 'GAN acc 0.6523', 'Discriminator loss 0.6779', 'Discriminator accuracy 0.5176', 'Total loss: 1.3857', 'for batch', 40)
('GAN loss 0.7142 ', 'GAN acc 0.5547', 'Discriminator loss 0.6779', 'Discriminator accuracy 0.5391', 'Total loss: 1.3921', 'for batch', 41)
('GAN loss 0.7122 ', 'GAN acc 0.5117', 'Discriminator loss 0.6691', 'Discriminator accuracy 0.5332', 'Total loss: 1.3813', 'for batch', 42)
('GAN loss 0.7304 ', 'GAN acc 0.4219', 'Discriminator loss 0.6816', 'Discriminator accuracy 0.5098', 'Total loss: 1.4120', 'for batch', 43)
('GAN loss 0.7534 ', 'GAN acc 0.2969', 'Discriminator loss 0.6932', 'Discriminator accuracy 0.4922', 'Total loss: 1.4467', 'for batch', 44)
('GAN loss 0.8004 ', 'GAN acc 0.1211', 'Discriminator loss 0.6822', 'Discriminator accuracy 0.5332', 'Total loss: 1.4827', 'for batch', 45)
('GAN loss 0.7459 ', 'GAN acc 0.3125', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5195', 'Total loss: 1.4239', 'for batch', 46)
('GAN loss 0.6824 ', 'GAN acc 0.6953', 'Discriminator loss 0.6955', 'Discriminator accuracy 0.4883', 'Total loss: 1.3778', 'for batch', 47)
('GAN loss 0.7040 ', 'GAN acc 0.5898', 'Discriminator loss 0.6830', 'Discriminator accuracy 0.5508', 'Total loss: 1.3870', 'for batch', 48)
('GAN loss 0.7350 ', 'GAN acc 0.4492', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5059', 'Total loss: 1.4170', 'for batch', 49)
('GAN loss 0.6777 ', 'GAN acc 0.7266', 'Discriminator loss 0.6829', 'Discriminator accuracy 0.5371', 'Total loss: 1.3605', 'for batch', 50)
('GAN loss 0.6644 ', 'GAN acc 0.8047', 'Discriminator loss 0.6961', 'Discriminator accuracy 0.5469', 'Total loss: 1.3604', 'for batch', 51)
('GAN loss 0.7016 ', 'GAN acc 0.6211', 'Discriminator loss 0.6951', 'Discriminator accuracy 0.5234', 'Total loss: 1.3967', 'for batch', 52)
('GAN loss 0.7323 ', 'GAN acc 0.4336', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5742', 'Total loss: 1.4098', 'for batch', 53)
('GAN loss 0.7583 ', 'GAN acc 0.2500', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.5371', 'Total loss: 1.4434', 'for batch', 54)
('GAN loss 0.7383 ', 'GAN acc 0.3945', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.5527', 'Total loss: 1.4193', 'for batch', 55)
('GAN loss 0.8251 ', 'GAN acc 0.0547', 'Discriminator loss 0.6735', 'Discriminator accuracy 0.5801', 'Total loss: 1.4985', 'for batch', 56)
('GAN loss 0.8450 ', 'GAN acc 0.2617', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.5332', 'Total loss: 1.5161', 'for batch', 57)
('GAN loss 0.9907 ', 'GAN acc 0.2617', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.5566', 'Total loss: 1.6549', 'for batch', 58)
('GAN loss 0.8256 ', 'GAN acc 0.5703', 'Discriminator loss 0.6932', 'Discriminator accuracy 0.4961', 'Total loss: 1.5188', 'for batch', 59)
('GAN loss 0.8082 ', 'GAN acc 0.2344', 'Discriminator loss 0.6913', 'Discriminator accuracy 0.5332', 'Total loss: 1.4995', 'for batch', 60)
('GAN loss 0.8045 ', 'GAN acc 0.2109', 'Discriminator loss 0.6527', 'Discriminator accuracy 0.5195', 'Total loss: 1.4572', 'for batch', 61)
('GAN loss 0.7207 ', 'GAN acc 0.6992', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5391', 'Total loss: 1.3951', 'for batch', 62)
('GAN loss 0.7267 ', 'GAN acc 0.7539', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.5352', 'Total loss: 1.3887', 'for batch', 63)
('GAN loss 0.7756 ', 'GAN acc 0.4805', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5586', 'Total loss: 1.4380', 'for batch', 64)
('GAN loss 0.7732 ', 'GAN acc 0.3516', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.5078', 'Total loss: 1.4466', 'for batch', 65)
('GAN loss 0.7594 ', 'GAN acc 0.4375', 'Discriminator loss 0.6591', 'Discriminator accuracy 0.5527', 'Total loss: 1.4186', 'for batch', 66)
('GAN loss 0.7760 ', 'GAN acc 0.3203', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.6406', 'Total loss: 1.4317', 'for batch', 67)
('GAN loss 0.7865 ', 'GAN acc 0.2148', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.5977', 'Total loss: 1.4511', 'for batch', 68)
('GAN loss 0.7276 ', 'GAN acc 0.4883', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.5840', 'Total loss: 1.3943', 'for batch', 69)
('GAN loss 0.6961 ', 'GAN acc 0.7891', 'Discriminator loss 0.6746', 'Discriminator accuracy 0.5469', 'Total loss: 1.3707', 'for batch', 70)
('GAN loss 0.6731 ', 'GAN acc 0.7383', 'Discriminator loss 0.6665', 'Discriminator accuracy 0.5781', 'Total loss: 1.3397', 'for batch', 71)
('GAN loss 0.6664 ', 'GAN acc 0.7852', 'Discriminator loss 0.6290', 'Discriminator accuracy 0.5859', 'Total loss: 1.2954', 'for batch', 72)
('GAN loss 0.6409 ', 'GAN acc 0.8906', 'Discriminator loss 0.6504', 'Discriminator accuracy 0.5508', 'Total loss: 1.2913', 'for batch', 73)
('GAN loss 0.6591 ', 'GAN acc 0.8711', 'Discriminator loss 0.6916', 'Discriminator accuracy 0.5078', 'Total loss: 1.3507', 'for batch', 74)
('GAN loss 0.6707 ', 'GAN acc 0.8359', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.5586', 'Total loss: 1.3550', 'for batch', 75)
('GAN loss 0.7111 ', 'GAN acc 0.7070', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5820', 'Total loss: 1.3837', 'for batch', 76)
('GAN loss 0.7280 ', 'GAN acc 0.5078', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.5020', 'Total loss: 1.4170', 'for batch', 77)
('GAN loss 0.7924 ', 'GAN acc 0.1367', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5430', 'Total loss: 1.4787', 'for batch', 78)
('GAN loss 0.7366 ', 'GAN acc 0.3906', 'Discriminator loss 0.6716', 'Discriminator accuracy 0.5918', 'Total loss: 1.4082', 'for batch', 79)
('GAN loss 0.7263 ', 'GAN acc 0.4219', 'Discriminator loss 0.6674', 'Discriminator accuracy 0.5898', 'Total loss: 1.3938', 'for batch', 80)
('GAN loss 0.7312 ', 'GAN acc 0.3867', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5938', 'Total loss: 1.3936', 'for batch', 81)
('GAN loss 0.7606 ', 'GAN acc 0.2812', 'Discriminator loss 0.6699', 'Discriminator accuracy 0.4863', 'Total loss: 1.4305', 'for batch', 82)
('GAN loss 0.7236 ', 'GAN acc 0.4922', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.4941', 'Total loss: 1.4075', 'for batch', 83)
('GAN loss 0.6824 ', 'GAN acc 0.8203', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5508', 'Total loss: 1.3562', 'for batch', 84)
('GAN loss 0.6989 ', 'GAN acc 0.7266', 'Discriminator loss 0.6755', 'Discriminator accuracy 0.5312', 'Total loss: 1.3744', 'for batch', 85)
('GAN loss 0.7584 ', 'GAN acc 0.2539', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.5625', 'Total loss: 1.4230', 'for batch', 86)
('GAN loss 0.7879 ', 'GAN acc 0.1328', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.5684', 'Total loss: 1.4590', 'for batch', 87)
('GAN loss 0.7605 ', 'GAN acc 0.2617', 'Discriminator loss 0.6799', 'Discriminator accuracy 0.5254', 'Total loss: 1.4403', 'for batch', 88)
('GAN loss 0.7605 ', 'GAN acc 0.3594', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5137', 'Total loss: 1.4388', 'for batch', 89)
('GAN loss 0.7710 ', 'GAN acc 0.3906', 'Discriminator loss 0.6664', 'Discriminator accuracy 0.5391', 'Total loss: 1.4373', 'for batch', 90)
('GAN loss 0.7734 ', 'GAN acc 0.4648', 'Discriminator loss 0.6378', 'Discriminator accuracy 0.5430', 'Total loss: 1.4112', 'for batch', 91)
('GAN loss 0.6137 ', 'GAN acc 0.9375', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5703', 'Total loss: 1.2910', 'for batch', 92)
('GAN loss 0.6668 ', 'GAN acc 0.8906', 'Discriminator loss 0.6576', 'Discriminator accuracy 0.5840', 'Total loss: 1.3244', 'for batch', 93)
('GAN loss 0.7734 ', 'GAN acc 0.2109', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5273', 'Total loss: 1.4516', 'for batch', 94)
('GAN loss 0.7793 ', 'GAN acc 0.1562', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5332', 'Total loss: 1.4593', 'for batch', 95)
('GAN loss 0.8539 ', 'GAN acc 0.0273', 'Discriminator loss 0.6585', 'Discriminator accuracy 0.6172', 'Total loss: 1.5124', 'for batch', 96)
('GAN loss 0.8007 ', 'GAN acc 0.1016', 'Discriminator loss 0.6636', 'Discriminator accuracy 0.5703', 'Total loss: 1.4643', 'for batch', 97)
('GAN loss 0.6408 ', 'GAN acc 0.9219', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.5488', 'Total loss: 1.3264', 'for batch', 98)
('GAN loss 0.7231 ', 'GAN acc 0.5352', 'Discriminator loss 0.6247', 'Discriminator accuracy 0.6895', 'Total loss: 1.3478', 'for batch', 99)
('GAN loss 0.6393 ', 'GAN acc 0.8750', 'Discriminator loss 0.5857', 'Discriminator accuracy 0.6270', 'Total loss: 1.2249', 'for batch', 100)
('GAN loss 0.6539 ', 'GAN acc 0.8320', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5664', 'Total loss: 1.3262', 'for batch', 101)
('GAN loss 0.6941 ', 'GAN acc 0.7539', 'Discriminator loss 0.7018', 'Discriminator accuracy 0.4980', 'Total loss: 1.3959', 'for batch', 102)
('GAN loss 0.7787 ', 'GAN acc 0.3125', 'Discriminator loss 0.6914', 'Discriminator accuracy 0.4844', 'Total loss: 1.4701', 'for batch', 103)
('GAN loss 0.8284 ', 'GAN acc 0.1367', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5605', 'Total loss: 1.5023', 'for batch', 104)
('GAN loss 0.8452 ', 'GAN acc 0.1484', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5586', 'Total loss: 1.5174', 'for batch', 105)
('GAN loss 0.7238 ', 'GAN acc 0.6875', 'Discriminator loss 0.6601', 'Discriminator accuracy 0.4941', 'Total loss: 1.3839', 'for batch', 106)
('GAN loss 0.7334 ', 'GAN acc 0.4141', 'Discriminator loss 0.6327', 'Discriminator accuracy 0.6543', 'Total loss: 1.3661', 'for batch', 107)
('GAN loss 0.6178 ', 'GAN acc 0.9609', 'Discriminator loss 0.6208', 'Discriminator accuracy 0.4883', 'Total loss: 1.2386', 'for batch', 108)
('GAN loss 0.5742 ', 'GAN acc 0.9609', 'Discriminator loss 0.5806', 'Discriminator accuracy 0.6133', 'Total loss: 1.1547', 'for batch', 109)
('GAN loss 0.6824 ', 'GAN acc 0.7500', 'Discriminator loss 0.5818', 'Discriminator accuracy 0.7109', 'Total loss: 1.2642', 'for batch', 110)
('GAN loss 0.6850 ', 'GAN acc 0.8789', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.5156', 'Total loss: 1.3779', 'for batch', 111)
('GAN loss 0.9041 ', 'GAN acc 0.0078', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.5469', 'Total loss: 1.5661', 'for batch', 112)
('GAN loss 0.8970 ', 'GAN acc 0.0312', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5762', 'Total loss: 1.5707', 'for batch', 113)
('GAN loss 0.7461 ', 'GAN acc 0.5508', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.4922', 'Total loss: 1.4314', 'for batch', 114)
('GAN loss 0.7433 ', 'GAN acc 0.3906', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5254', 'Total loss: 1.4296', 'for batch', 115)
('GAN loss 0.7487 ', 'GAN acc 0.4688', 'Discriminator loss 0.6983', 'Discriminator accuracy 0.4824', 'Total loss: 1.4470', 'for batch', 116)
('GAN loss 1.1012 ', 'GAN acc 0.0039', 'Discriminator loss 0.6400', 'Discriminator accuracy 0.6191', 'Total loss: 1.7412', 'for batch', 117)
('GAN loss 0.7230 ', 'GAN acc 0.5664', 'Discriminator loss 0.7025', 'Discriminator accuracy 0.5137', 'Total loss: 1.4255', 'for batch', 118)
('GAN loss 0.6198 ', 'GAN acc 0.9414', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.4941', 'Total loss: 1.3088', 'for batch', 119)
('GAN loss 0.6235 ', 'GAN acc 0.9180', 'Discriminator loss 0.7063', 'Discriminator accuracy 0.4980', 'Total loss: 1.3298', 'for batch', 120)
('GAN loss 0.6596 ', 'GAN acc 0.8516', 'Discriminator loss 0.7028', 'Discriminator accuracy 0.5059', 'Total loss: 1.3624', 'for batch', 121)
('GAN loss 0.6968 ', 'GAN acc 0.7422', 'Discriminator loss 0.6816', 'Discriminator accuracy 0.5293', 'Total loss: 1.3784', 'for batch', 122)
('GAN loss 0.7939 ', 'GAN acc 0.1250', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5664', 'Total loss: 1.4676', 'for batch', 123)
('GAN loss 0.8289 ', 'GAN acc 0.0508', 'Discriminator loss 0.6688', 'Discriminator accuracy 0.6504', 'Total loss: 1.4978', 'for batch', 124)
('GAN loss 0.8331 ', 'GAN acc 0.0625', 'Discriminator loss 0.6838', 'Discriminator accuracy 0.5020', 'Total loss: 1.5169', 'for batch', 125)
('GAN loss 0.7515 ', 'GAN acc 0.2812', 'Discriminator loss 0.6885', 'Discriminator accuracy 0.5176', 'Total loss: 1.4400', 'for batch', 126)
('GAN loss 0.7618 ', 'GAN acc 0.2539', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.5059', 'Total loss: 1.4472', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.51925951)
('DISCRIMINATOR_Imagem FAKE=', 0.49401835)
('Discriminator trained', 123, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.178226')
----------------------------------
('Epoch', 7, 'of', 50)
('Number of batches', 128)
('GAN loss 0.8700 ', 'GAN acc 0.0234', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.6211', 'Total loss: 1.5418', 'for batch', 0)
('GAN loss 0.7656 ', 'GAN acc 0.2656', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5410', 'Total loss: 1.4475', 'for batch', 1)
('GAN loss 0.8014 ', 'GAN acc 0.3555', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5469', 'Total loss: 1.4750', 'for batch', 2)
('GAN loss 0.7917 ', 'GAN acc 0.4062', 'Discriminator loss 0.6615', 'Discriminator accuracy 0.6348', 'Total loss: 1.4532', 'for batch', 3)
('GAN loss 0.7065 ', 'GAN acc 0.7578', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5234', 'Total loss: 1.3847', 'for batch', 4)
('GAN loss 0.7062 ', 'GAN acc 0.6875', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.5859', 'Total loss: 1.3640', 'for batch', 5)
('GAN loss 0.7394 ', 'GAN acc 0.5977', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5625', 'Total loss: 1.4138', 'for batch', 6)
('GAN loss 0.7547 ', 'GAN acc 0.5273', 'Discriminator loss 0.6725', 'Discriminator accuracy 0.5508', 'Total loss: 1.4272', 'for batch', 7)
('GAN loss 0.7454 ', 'GAN acc 0.5117', 'Discriminator loss 0.6436', 'Discriminator accuracy 0.5996', 'Total loss: 1.3890', 'for batch', 8)
('GAN loss 0.7412 ', 'GAN acc 0.4141', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.5488', 'Total loss: 1.4201', 'for batch', 9)
('GAN loss 0.6945 ', 'GAN acc 0.6953', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5312', 'Total loss: 1.3785', 'for batch', 10)
('GAN loss 0.6894 ', 'GAN acc 0.7812', 'Discriminator loss 0.6869', 'Discriminator accuracy 0.4922', 'Total loss: 1.3762', 'for batch', 11)
('GAN loss 0.7346 ', 'GAN acc 0.4375', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.6152', 'Total loss: 1.3945', 'for batch', 12)
('GAN loss 0.6518 ', 'GAN acc 0.9258', 'Discriminator loss 0.6443', 'Discriminator accuracy 0.5020', 'Total loss: 1.2961', 'for batch', 13)
('GAN loss 0.6258 ', 'GAN acc 0.9453', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5273', 'Total loss: 1.3072', 'for batch', 14)
('GAN loss 0.5938 ', 'GAN acc 0.9648', 'Discriminator loss 0.6379', 'Discriminator accuracy 0.6328', 'Total loss: 1.2317', 'for batch', 15)
('GAN loss 0.5800 ', 'GAN acc 0.9805', 'Discriminator loss 0.5784', 'Discriminator accuracy 0.7559', 'Total loss: 1.1584', 'for batch', 16)
('GAN loss 0.5743 ', 'GAN acc 0.9883', 'Discriminator loss 0.5943', 'Discriminator accuracy 0.5918', 'Total loss: 1.1686', 'for batch', 17)
('GAN loss 0.5576 ', 'GAN acc 0.9688', 'Discriminator loss 0.6323', 'Discriminator accuracy 0.6230', 'Total loss: 1.1899', 'for batch', 18)
('GAN loss 0.6027 ', 'GAN acc 0.9766', 'Discriminator loss 0.6282', 'Discriminator accuracy 0.6426', 'Total loss: 1.2309', 'for batch', 19)
('GAN loss 0.5480 ', 'GAN acc 0.9805', 'Discriminator loss 0.4761', 'Discriminator accuracy 0.7617', 'Total loss: 1.0241', 'for batch', 20)
('GAN loss 0.5344 ', 'GAN acc 0.9805', 'Discriminator loss 0.5641', 'Discriminator accuracy 0.6758', 'Total loss: 1.0985', 'for batch', 21)
('GAN loss 0.5382 ', 'GAN acc 0.9805', 'Discriminator loss 0.4356', 'Discriminator accuracy 0.8711', 'Total loss: 0.9738', 'for batch', 22)
('GAN loss 0.4919 ', 'GAN acc 0.9844', 'Discriminator loss 0.5229', 'Discriminator accuracy 0.7070', 'Total loss: 1.0148', 'for batch', 23)
('GAN loss 0.8224 ', 'GAN acc 0.1719', 'Discriminator loss 0.5780', 'Discriminator accuracy 0.6484', 'Total loss: 1.4004', 'for batch', 24)
('GAN loss 0.9151 ', 'GAN acc 0.0234', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.5234', 'Total loss: 1.5769', 'for batch', 25)
('GAN loss 1.2436 ', 'GAN acc 0.0000', 'Discriminator loss 0.6289', 'Discriminator accuracy 0.7617', 'Total loss: 1.8725', 'for batch', 26)
('GAN loss 0.8346 ', 'GAN acc 0.4219', 'Discriminator loss 0.6888', 'Discriminator accuracy 0.4922', 'Total loss: 1.5234', 'for batch', 27)
('GAN loss 0.6885 ', 'GAN acc 0.8320', 'Discriminator loss 0.6886', 'Discriminator accuracy 0.5215', 'Total loss: 1.3771', 'for batch', 28)
('GAN loss 0.7437 ', 'GAN acc 0.6016', 'Discriminator loss 0.6980', 'Discriminator accuracy 0.5449', 'Total loss: 1.4417', 'for batch', 29)
('GAN loss 0.7953 ', 'GAN acc 0.5195', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5547', 'Total loss: 1.4656', 'for batch', 30)
('GAN loss 0.7705 ', 'GAN acc 0.5664', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.4824', 'Total loss: 1.4573', 'for batch', 31)
('GAN loss 0.8013 ', 'GAN acc 0.3203', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5273', 'Total loss: 1.4825', 'for batch', 32)
('GAN loss 0.8175 ', 'GAN acc 0.1133', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5566', 'Total loss: 1.4912', 'for batch', 33)
('GAN loss 0.8889 ', 'GAN acc 0.0117', 'Discriminator loss 0.6564', 'Discriminator accuracy 0.5977', 'Total loss: 1.5453', 'for batch', 34)
('GAN loss 0.8594 ', 'GAN acc 0.0156', 'Discriminator loss 0.6627', 'Discriminator accuracy 0.5312', 'Total loss: 1.5221', 'for batch', 35)
('GAN loss 0.8066 ', 'GAN acc 0.1016', 'Discriminator loss 0.6806', 'Discriminator accuracy 0.5098', 'Total loss: 1.4872', 'for batch', 36)
('GAN loss 0.7548 ', 'GAN acc 0.3945', 'Discriminator loss 0.6770', 'Discriminator accuracy 0.5352', 'Total loss: 1.4318', 'for batch', 37)
('GAN loss 0.6887 ', 'GAN acc 0.6797', 'Discriminator loss 0.6802', 'Discriminator accuracy 0.5098', 'Total loss: 1.3689', 'for batch', 38)
('GAN loss 0.7069 ', 'GAN acc 0.6367', 'Discriminator loss 0.6906', 'Discriminator accuracy 0.4961', 'Total loss: 1.3976', 'for batch', 39)
('GAN loss 0.6820 ', 'GAN acc 0.8203', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5137', 'Total loss: 1.3648', 'for batch', 40)
('GAN loss 0.6799 ', 'GAN acc 0.7539', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5215', 'Total loss: 1.3581', 'for batch', 41)
('GAN loss 0.7211 ', 'GAN acc 0.5078', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.5312', 'Total loss: 1.3975', 'for batch', 42)
('GAN loss 0.7208 ', 'GAN acc 0.4961', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5352', 'Total loss: 1.3915', 'for batch', 43)
('GAN loss 0.7208 ', 'GAN acc 0.5234', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.4902', 'Total loss: 1.4008', 'for batch', 44)
('GAN loss 0.6893 ', 'GAN acc 0.7266', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.4883', 'Total loss: 1.3749', 'for batch', 45)
('GAN loss 0.6813 ', 'GAN acc 0.7656', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5273', 'Total loss: 1.3652', 'for batch', 46)
('GAN loss 0.6924 ', 'GAN acc 0.8086', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.5156', 'Total loss: 1.3718', 'for batch', 47)
('GAN loss 0.7216 ', 'GAN acc 0.6914', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5195', 'Total loss: 1.3981', 'for batch', 48)
('GAN loss 0.7875 ', 'GAN acc 0.7148', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.4961', 'Total loss: 1.4628', 'for batch', 49)
('GAN loss 0.7777 ', 'GAN acc 0.5664', 'Discriminator loss 0.6725', 'Discriminator accuracy 0.5430', 'Total loss: 1.4502', 'for batch', 50)
('GAN loss 0.7600 ', 'GAN acc 0.5156', 'Discriminator loss 0.6658', 'Discriminator accuracy 0.5547', 'Total loss: 1.4258', 'for batch', 51)
('GAN loss 0.7732 ', 'GAN acc 0.3750', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.5527', 'Total loss: 1.4380', 'for batch', 52)
('GAN loss 0.7556 ', 'GAN acc 0.4258', 'Discriminator loss 0.6675', 'Discriminator accuracy 0.5352', 'Total loss: 1.4231', 'for batch', 53)
('GAN loss 0.7890 ', 'GAN acc 0.3203', 'Discriminator loss 0.6676', 'Discriminator accuracy 0.5742', 'Total loss: 1.4566', 'for batch', 54)
('GAN loss 0.8154 ', 'GAN acc 0.1953', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5391', 'Total loss: 1.4899', 'for batch', 55)
('GAN loss 0.7146 ', 'GAN acc 0.5391', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5176', 'Total loss: 1.3873', 'for batch', 56)
('GAN loss 0.7300 ', 'GAN acc 0.6445', 'Discriminator loss 0.6577', 'Discriminator accuracy 0.4980', 'Total loss: 1.3877', 'for batch', 57)
('GAN loss 0.7136 ', 'GAN acc 0.6016', 'Discriminator loss 0.6587', 'Discriminator accuracy 0.6113', 'Total loss: 1.3722', 'for batch', 58)
('GAN loss 0.7107 ', 'GAN acc 0.6562', 'Discriminator loss 0.5957', 'Discriminator accuracy 0.6797', 'Total loss: 1.3065', 'for batch', 59)
('GAN loss 0.6775 ', 'GAN acc 0.8125', 'Discriminator loss 0.6884', 'Discriminator accuracy 0.5176', 'Total loss: 1.3659', 'for batch', 60)
('GAN loss 0.6555 ', 'GAN acc 0.8633', 'Discriminator loss 0.6367', 'Discriminator accuracy 0.6367', 'Total loss: 1.2921', 'for batch', 61)
('GAN loss 0.6986 ', 'GAN acc 0.7383', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5898', 'Total loss: 1.3714', 'for batch', 62)
('GAN loss 0.6878 ', 'GAN acc 0.8125', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.5176', 'Total loss: 1.3596', 'for batch', 63)
('GAN loss 0.6505 ', 'GAN acc 0.9336', 'Discriminator loss 0.6011', 'Discriminator accuracy 0.6270', 'Total loss: 1.2516', 'for batch', 64)
('GAN loss 0.6032 ', 'GAN acc 0.9688', 'Discriminator loss 0.6054', 'Discriminator accuracy 0.6016', 'Total loss: 1.2086', 'for batch', 65)
('GAN loss 0.5730 ', 'GAN acc 0.9844', 'Discriminator loss 0.5666', 'Discriminator accuracy 0.7207', 'Total loss: 1.1396', 'for batch', 66)
('GAN loss 0.5530 ', 'GAN acc 0.9492', 'Discriminator loss 0.4651', 'Discriminator accuracy 0.7949', 'Total loss: 1.0181', 'for batch', 67)
('GAN loss 0.5671 ', 'GAN acc 0.9570', 'Discriminator loss 0.7112', 'Discriminator accuracy 0.5137', 'Total loss: 1.2782', 'for batch', 68)
('GAN loss 0.5887 ', 'GAN acc 0.9805', 'Discriminator loss 0.6743', 'Discriminator accuracy 0.5605', 'Total loss: 1.2631', 'for batch', 69)
('GAN loss 0.6309 ', 'GAN acc 0.9570', 'Discriminator loss 0.6495', 'Discriminator accuracy 0.5898', 'Total loss: 1.2804', 'for batch', 70)
('GAN loss 0.6628 ', 'GAN acc 0.9492', 'Discriminator loss 0.6377', 'Discriminator accuracy 0.5977', 'Total loss: 1.3005', 'for batch', 71)
('GAN loss 0.6188 ', 'GAN acc 0.9727', 'Discriminator loss 0.6251', 'Discriminator accuracy 0.6074', 'Total loss: 1.2438', 'for batch', 72)
('GAN loss 0.6125 ', 'GAN acc 0.9805', 'Discriminator loss 0.6012', 'Discriminator accuracy 0.6426', 'Total loss: 1.2137', 'for batch', 73)
('GAN loss 0.6248 ', 'GAN acc 0.9648', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5566', 'Total loss: 1.3022', 'for batch', 74)
('GAN loss 0.6386 ', 'GAN acc 0.9414', 'Discriminator loss 0.6636', 'Discriminator accuracy 0.5352', 'Total loss: 1.3023', 'for batch', 75)
('GAN loss 0.6728 ', 'GAN acc 0.8711', 'Discriminator loss 0.5808', 'Discriminator accuracy 0.7832', 'Total loss: 1.2535', 'for batch', 76)
('GAN loss 0.6508 ', 'GAN acc 0.9492', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5234', 'Total loss: 1.3299', 'for batch', 77)
('GAN loss 0.7946 ', 'GAN acc 0.0586', 'Discriminator loss 0.6696', 'Discriminator accuracy 0.5176', 'Total loss: 1.4642', 'for batch', 78)
('GAN loss 0.7826 ', 'GAN acc 0.1523', 'Discriminator loss 0.6785', 'Discriminator accuracy 0.5410', 'Total loss: 1.4611', 'for batch', 79)
('GAN loss 0.7245 ', 'GAN acc 0.4844', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5195', 'Total loss: 1.3984', 'for batch', 80)
('GAN loss 0.7261 ', 'GAN acc 0.4883', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.5449', 'Total loss: 1.3979', 'for batch', 81)
('GAN loss 0.6499 ', 'GAN acc 0.9102', 'Discriminator loss 0.6133', 'Discriminator accuracy 0.6152', 'Total loss: 1.2632', 'for batch', 82)
('GAN loss 0.6328 ', 'GAN acc 0.9570', 'Discriminator loss 0.6534', 'Discriminator accuracy 0.5898', 'Total loss: 1.2862', 'for batch', 83)
('GAN loss 0.6082 ', 'GAN acc 0.9688', 'Discriminator loss 0.6614', 'Discriminator accuracy 0.5703', 'Total loss: 1.2696', 'for batch', 84)
('GAN loss 0.6113 ', 'GAN acc 0.9688', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5508', 'Total loss: 1.2885', 'for batch', 85)
('GAN loss 0.6291 ', 'GAN acc 0.9648', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.5273', 'Total loss: 1.3157', 'for batch', 86)
('GAN loss 0.6269 ', 'GAN acc 0.9727', 'Discriminator loss 0.5846', 'Discriminator accuracy 0.6445', 'Total loss: 1.2115', 'for batch', 87)
('GAN loss 0.6076 ', 'GAN acc 0.9766', 'Discriminator loss 0.5573', 'Discriminator accuracy 0.6777', 'Total loss: 1.1649', 'for batch', 88)
('GAN loss 0.6052 ', 'GAN acc 0.9727', 'Discriminator loss 0.6445', 'Discriminator accuracy 0.5684', 'Total loss: 1.2497', 'for batch', 89)
('GAN loss 0.6373 ', 'GAN acc 0.9258', 'Discriminator loss 0.5204', 'Discriminator accuracy 0.8086', 'Total loss: 1.1578', 'for batch', 90)
('GAN loss 0.5501 ', 'GAN acc 0.9688', 'Discriminator loss 0.5954', 'Discriminator accuracy 0.6387', 'Total loss: 1.1455', 'for batch', 91)
('GAN loss 0.5719 ', 'GAN acc 0.9766', 'Discriminator loss 0.5940', 'Discriminator accuracy 0.6348', 'Total loss: 1.1659', 'for batch', 92)
('GAN loss 0.6335 ', 'GAN acc 0.9180', 'Discriminator loss 0.5968', 'Discriminator accuracy 0.6660', 'Total loss: 1.2303', 'for batch', 93)
('GAN loss 0.6215 ', 'GAN acc 0.9531', 'Discriminator loss 0.6197', 'Discriminator accuracy 0.6309', 'Total loss: 1.2412', 'for batch', 94)
('GAN loss 0.5616 ', 'GAN acc 0.9805', 'Discriminator loss 0.5764', 'Discriminator accuracy 0.6895', 'Total loss: 1.1379', 'for batch', 95)
('GAN loss 0.5696 ', 'GAN acc 0.9805', 'Discriminator loss 0.6378', 'Discriminator accuracy 0.6270', 'Total loss: 1.2074', 'for batch', 96)
('GAN loss 0.6038 ', 'GAN acc 0.9648', 'Discriminator loss 0.5796', 'Discriminator accuracy 0.6973', 'Total loss: 1.1834', 'for batch', 97)
('GAN loss 0.6674 ', 'GAN acc 0.8438', 'Discriminator loss 0.6505', 'Discriminator accuracy 0.5586', 'Total loss: 1.3178', 'for batch', 98)
('GAN loss 0.5769 ', 'GAN acc 0.9844', 'Discriminator loss 0.4706', 'Discriminator accuracy 0.6699', 'Total loss: 1.0475', 'for batch', 99)
('GAN loss 0.5595 ', 'GAN acc 0.9922', 'Discriminator loss 0.4009', 'Discriminator accuracy 0.8730', 'Total loss: 0.9605', 'for batch', 100)
('GAN loss 0.4763 ', 'GAN acc 0.9844', 'Discriminator loss 0.5001', 'Discriminator accuracy 0.7559', 'Total loss: 0.9764', 'for batch', 101)
('GAN loss 1.0661 ', 'GAN acc 0.0234', 'Discriminator loss 0.5073', 'Discriminator accuracy 0.7559', 'Total loss: 1.5734', 'for batch', 102)
('GAN loss 0.8192 ', 'GAN acc 0.7773', 'Discriminator loss 0.6676', 'Discriminator accuracy 0.5391', 'Total loss: 1.4868', 'for batch', 103)
('GAN loss 1.0678 ', 'GAN acc 0.0000', 'Discriminator loss 0.6380', 'Discriminator accuracy 0.5879', 'Total loss: 1.7058', 'for batch', 104)
('GAN loss 1.1908 ', 'GAN acc 0.2070', 'Discriminator loss 0.6361', 'Discriminator accuracy 0.5938', 'Total loss: 1.8269', 'for batch', 105)
('GAN loss 0.9272 ', 'GAN acc 0.5234', 'Discriminator loss 0.6387', 'Discriminator accuracy 0.5918', 'Total loss: 1.5658', 'for batch', 106)
('GAN loss 0.9257 ', 'GAN acc 0.5859', 'Discriminator loss 0.6513', 'Discriminator accuracy 0.6016', 'Total loss: 1.5770', 'for batch', 107)
('GAN loss 0.9482 ', 'GAN acc 0.4961', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5566', 'Total loss: 1.6109', 'for batch', 108)
('GAN loss 1.1138 ', 'GAN acc 0.0391', 'Discriminator loss 0.6387', 'Discriminator accuracy 0.5781', 'Total loss: 1.7526', 'for batch', 109)
('GAN loss 1.0220 ', 'GAN acc 0.0664', 'Discriminator loss 0.6512', 'Discriminator accuracy 0.5410', 'Total loss: 1.6731', 'for batch', 110)
('GAN loss 1.0456 ', 'GAN acc 0.0117', 'Discriminator loss 0.6542', 'Discriminator accuracy 0.5898', 'Total loss: 1.6998', 'for batch', 111)
('GAN loss 0.7411 ', 'GAN acc 0.8789', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5059', 'Total loss: 1.4114', 'for batch', 112)
('GAN loss 0.6663 ', 'GAN acc 0.8984', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5449', 'Total loss: 1.3555', 'for batch', 113)
('GAN loss 0.6952 ', 'GAN acc 0.8906', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5566', 'Total loss: 1.3655', 'for batch', 114)
('GAN loss 0.7500 ', 'GAN acc 0.8281', 'Discriminator loss 0.6600', 'Discriminator accuracy 0.5566', 'Total loss: 1.4100', 'for batch', 115)
('GAN loss 0.8361 ', 'GAN acc 0.5078', 'Discriminator loss 0.6581', 'Discriminator accuracy 0.5508', 'Total loss: 1.4942', 'for batch', 116)
('GAN loss 0.9035 ', 'GAN acc 0.0703', 'Discriminator loss 0.6527', 'Discriminator accuracy 0.5762', 'Total loss: 1.5562', 'for batch', 117)
('GAN loss 0.8163 ', 'GAN acc 0.4102', 'Discriminator loss 0.6574', 'Discriminator accuracy 0.6230', 'Total loss: 1.4737', 'for batch', 118)
('GAN loss 0.8316 ', 'GAN acc 0.3125', 'Discriminator loss 0.6522', 'Discriminator accuracy 0.5742', 'Total loss: 1.4838', 'for batch', 119)
('GAN loss 0.7695 ', 'GAN acc 0.7891', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.5527', 'Total loss: 1.4344', 'for batch', 120)
('GAN loss 0.7211 ', 'GAN acc 0.8945', 'Discriminator loss 0.6827', 'Discriminator accuracy 0.5195', 'Total loss: 1.4038', 'for batch', 121)
('GAN loss 0.6720 ', 'GAN acc 0.8984', 'Discriminator loss 0.6890', 'Discriminator accuracy 0.5430', 'Total loss: 1.3611', 'for batch', 122)
('GAN loss 0.7323 ', 'GAN acc 0.8789', 'Discriminator loss 0.6761', 'Discriminator accuracy 0.5391', 'Total loss: 1.4084', 'for batch', 123)
('GAN loss 0.7760 ', 'GAN acc 0.8047', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5215', 'Total loss: 1.4599', 'for batch', 124)
('GAN loss 0.8844 ', 'GAN acc 0.3086', 'Discriminator loss 0.6592', 'Discriminator accuracy 0.5273', 'Total loss: 1.5435', 'for batch', 125)
('GAN loss 0.8076 ', 'GAN acc 0.3633', 'Discriminator loss 0.6716', 'Discriminator accuracy 0.5000', 'Total loss: 1.4792', 'for batch', 126)
('GAN loss 0.8618 ', 'GAN acc 0.1797', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5156', 'Total loss: 1.5356', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.51943898)
('DISCRIMINATOR_Imagem FAKE=', 0.4761517)
('Discriminator trained', 109, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.379092')
----------------------------------
('Epoch', 8, 'of', 50)
('Number of batches', 128)
('GAN loss 0.8194 ', 'GAN acc 0.1836', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.6133', 'Total loss: 1.4800', 'for batch', 0)
('GAN loss 0.8341 ', 'GAN acc 0.2148', 'Discriminator loss 0.6595', 'Discriminator accuracy 0.6094', 'Total loss: 1.4936', 'for batch', 1)
('GAN loss 0.8172 ', 'GAN acc 0.2188', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.5645', 'Total loss: 1.4790', 'for batch', 2)
('GAN loss 0.7765 ', 'GAN acc 0.3828', 'Discriminator loss 0.6574', 'Discriminator accuracy 0.5098', 'Total loss: 1.4339', 'for batch', 3)
('GAN loss 0.7304 ', 'GAN acc 0.7422', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5723', 'Total loss: 1.4057', 'for batch', 4)
('GAN loss 0.7336 ', 'GAN acc 0.6172', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5742', 'Total loss: 1.4076', 'for batch', 5)
('GAN loss 0.7540 ', 'GAN acc 0.5430', 'Discriminator loss 0.6687', 'Discriminator accuracy 0.5684', 'Total loss: 1.4227', 'for batch', 6)
('GAN loss 0.8359 ', 'GAN acc 0.6445', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5547', 'Total loss: 1.5032', 'for batch', 7)
('GAN loss 0.8752 ', 'GAN acc 0.6094', 'Discriminator loss 0.6579', 'Discriminator accuracy 0.5879', 'Total loss: 1.5332', 'for batch', 8)
('GAN loss 0.8074 ', 'GAN acc 0.4609', 'Discriminator loss 0.6607', 'Discriminator accuracy 0.6016', 'Total loss: 1.4680', 'for batch', 9)
('GAN loss 0.8014 ', 'GAN acc 0.4805', 'Discriminator loss 0.6670', 'Discriminator accuracy 0.5703', 'Total loss: 1.4684', 'for batch', 10)
('GAN loss 0.8091 ', 'GAN acc 0.3672', 'Discriminator loss 0.6566', 'Discriminator accuracy 0.5918', 'Total loss: 1.4657', 'for batch', 11)
('GAN loss 0.7894 ', 'GAN acc 0.5000', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.5488', 'Total loss: 1.4579', 'for batch', 12)
('GAN loss 0.7588 ', 'GAN acc 0.5586', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5430', 'Total loss: 1.4381', 'for batch', 13)
('GAN loss 0.7552 ', 'GAN acc 0.6250', 'Discriminator loss 0.6655', 'Discriminator accuracy 0.5410', 'Total loss: 1.4208', 'for batch', 14)
('GAN loss 0.7464 ', 'GAN acc 0.5703', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5234', 'Total loss: 1.4236', 'for batch', 15)
('GAN loss 0.7059 ', 'GAN acc 0.7617', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.4941', 'Total loss: 1.3854', 'for batch', 16)
('GAN loss 0.6974 ', 'GAN acc 0.7695', 'Discriminator loss 0.6795', 'Discriminator accuracy 0.5371', 'Total loss: 1.3768', 'for batch', 17)
('GAN loss 0.7281 ', 'GAN acc 0.6094', 'Discriminator loss 0.6785', 'Discriminator accuracy 0.5000', 'Total loss: 1.4066', 'for batch', 18)
('GAN loss 0.7237 ', 'GAN acc 0.6562', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.4883', 'Total loss: 1.4031', 'for batch', 19)
('GAN loss 0.7489 ', 'GAN acc 0.5195', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5254', 'Total loss: 1.4263', 'for batch', 20)
('GAN loss 0.7564 ', 'GAN acc 0.4062', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.5488', 'Total loss: 1.4328', 'for batch', 21)
('GAN loss 0.7721 ', 'GAN acc 0.3555', 'Discriminator loss 0.6697', 'Discriminator accuracy 0.5684', 'Total loss: 1.4418', 'for batch', 22)
('GAN loss 0.8294 ', 'GAN acc 0.4062', 'Discriminator loss 0.6633', 'Discriminator accuracy 0.5801', 'Total loss: 1.4927', 'for batch', 23)
('GAN loss 0.7484 ', 'GAN acc 0.6523', 'Discriminator loss 0.6617', 'Discriminator accuracy 0.4902', 'Total loss: 1.4101', 'for batch', 24)
('GAN loss 0.7123 ', 'GAN acc 0.8906', 'Discriminator loss 0.6670', 'Discriminator accuracy 0.5527', 'Total loss: 1.3793', 'for batch', 25)
('GAN loss 0.7033 ', 'GAN acc 0.7031', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5488', 'Total loss: 1.3685', 'for batch', 26)
('GAN loss 0.7226 ', 'GAN acc 0.7500', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5176', 'Total loss: 1.4003', 'for batch', 27)
('GAN loss 0.7208 ', 'GAN acc 0.8281', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.4922', 'Total loss: 1.4052', 'for batch', 28)
('GAN loss 0.7461 ', 'GAN acc 0.4297', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5293', 'Total loss: 1.4187', 'for batch', 29)
('GAN loss 0.7883 ', 'GAN acc 0.1836', 'Discriminator loss 0.6741', 'Discriminator accuracy 0.5430', 'Total loss: 1.4624', 'for batch', 30)
('GAN loss 0.7971 ', 'GAN acc 0.0859', 'Discriminator loss 0.6692', 'Discriminator accuracy 0.5898', 'Total loss: 1.4663', 'for batch', 31)
('GAN loss 0.7340 ', 'GAN acc 0.4141', 'Discriminator loss 0.6803', 'Discriminator accuracy 0.4941', 'Total loss: 1.4143', 'for batch', 32)
('GAN loss 0.7106 ', 'GAN acc 0.5352', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5312', 'Total loss: 1.3879', 'for batch', 33)
('GAN loss 0.9490 ', 'GAN acc 0.0352', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.5547', 'Total loss: 1.6162', 'for batch', 34)
('GAN loss 0.8159 ', 'GAN acc 0.8555', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5781', 'Total loss: 1.4752', 'for batch', 35)
('GAN loss 0.7138 ', 'GAN acc 0.8242', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5332', 'Total loss: 1.3874', 'for batch', 36)
('GAN loss 0.7644 ', 'GAN acc 0.6328', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5410', 'Total loss: 1.4278', 'for batch', 37)
('GAN loss 0.7709 ', 'GAN acc 0.4375', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5723', 'Total loss: 1.4353', 'for batch', 38)
('GAN loss 0.7860 ', 'GAN acc 0.4453', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5605', 'Total loss: 1.4604', 'for batch', 39)
('GAN loss 0.8725 ', 'GAN acc 0.2031', 'Discriminator loss 0.6603', 'Discriminator accuracy 0.5898', 'Total loss: 1.5328', 'for batch', 40)
('GAN loss 0.7773 ', 'GAN acc 0.3203', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.5156', 'Total loss: 1.4580', 'for batch', 41)
('GAN loss 0.7764 ', 'GAN acc 0.4219', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.4980', 'Total loss: 1.4599', 'for batch', 42)
('GAN loss 0.8498 ', 'GAN acc 0.1484', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5684', 'Total loss: 1.5248', 'for batch', 43)
('GAN loss 0.9149 ', 'GAN acc 0.0547', 'Discriminator loss 0.6449', 'Discriminator accuracy 0.5352', 'Total loss: 1.5599', 'for batch', 44)
('GAN loss 0.7027 ', 'GAN acc 0.7969', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5273', 'Total loss: 1.3780', 'for batch', 45)
('GAN loss 0.7187 ', 'GAN acc 0.7070', 'Discriminator loss 0.6755', 'Discriminator accuracy 0.5254', 'Total loss: 1.3941', 'for batch', 46)
('GAN loss 0.7415 ', 'GAN acc 0.4453', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.5352', 'Total loss: 1.4172', 'for batch', 47)
('GAN loss 0.7460 ', 'GAN acc 0.3398', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5273', 'Total loss: 1.4229', 'for batch', 48)
('GAN loss 0.7626 ', 'GAN acc 0.2305', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5352', 'Total loss: 1.4388', 'for batch', 49)
('GAN loss 0.7631 ', 'GAN acc 0.2305', 'Discriminator loss 0.6589', 'Discriminator accuracy 0.6523', 'Total loss: 1.4221', 'for batch', 50)
('GAN loss 0.7867 ', 'GAN acc 0.1055', 'Discriminator loss 0.6256', 'Discriminator accuracy 0.6523', 'Total loss: 1.4123', 'for batch', 51)
('GAN loss 0.7837 ', 'GAN acc 0.1367', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5176', 'Total loss: 1.4600', 'for batch', 52)
('GAN loss 0.6577 ', 'GAN acc 0.8828', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5430', 'Total loss: 1.3339', 'for batch', 53)
('GAN loss 0.7000 ', 'GAN acc 0.8555', 'Discriminator loss 0.6558', 'Discriminator accuracy 0.5957', 'Total loss: 1.3558', 'for batch', 54)
('GAN loss 0.7225 ', 'GAN acc 0.6445', 'Discriminator loss 0.6900', 'Discriminator accuracy 0.5117', 'Total loss: 1.4125', 'for batch', 55)
('GAN loss 0.7529 ', 'GAN acc 0.5781', 'Discriminator loss 0.6716', 'Discriminator accuracy 0.5625', 'Total loss: 1.4245', 'for batch', 56)
('GAN loss 0.7898 ', 'GAN acc 0.5352', 'Discriminator loss 0.6460', 'Discriminator accuracy 0.6172', 'Total loss: 1.4358', 'for batch', 57)
('GAN loss 0.9612 ', 'GAN acc 0.0586', 'Discriminator loss 0.6159', 'Discriminator accuracy 0.6660', 'Total loss: 1.5771', 'for batch', 58)
('GAN loss 0.7817 ', 'GAN acc 0.9141', 'Discriminator loss 0.6324', 'Discriminator accuracy 0.5469', 'Total loss: 1.4141', 'for batch', 59)
('GAN loss 1.1277 ', 'GAN acc 0.0000', 'Discriminator loss 0.6453', 'Discriminator accuracy 0.5723', 'Total loss: 1.7730', 'for batch', 60)
('GAN loss 0.8580 ', 'GAN acc 0.0938', 'Discriminator loss 0.6588', 'Discriminator accuracy 0.6172', 'Total loss: 1.5168', 'for batch', 61)
('GAN loss 0.8335 ', 'GAN acc 0.7109', 'Discriminator loss 0.6305', 'Discriminator accuracy 0.6387', 'Total loss: 1.4640', 'for batch', 62)
('GAN loss 0.7716 ', 'GAN acc 0.7109', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.5781', 'Total loss: 1.4417', 'for batch', 63)
('GAN loss 0.7454 ', 'GAN acc 0.7578', 'Discriminator loss 0.6375', 'Discriminator accuracy 0.5918', 'Total loss: 1.3829', 'for batch', 64)
('GAN loss 0.7742 ', 'GAN acc 0.8086', 'Discriminator loss 0.6600', 'Discriminator accuracy 0.5098', 'Total loss: 1.4341', 'for batch', 65)
('GAN loss 0.7287 ', 'GAN acc 0.7891', 'Discriminator loss 0.5966', 'Discriminator accuracy 0.7012', 'Total loss: 1.3253', 'for batch', 66)
('GAN loss 0.7100 ', 'GAN acc 0.9336', 'Discriminator loss 0.5629', 'Discriminator accuracy 0.7344', 'Total loss: 1.2729', 'for batch', 67)
('GAN loss 0.8575 ', 'GAN acc 0.1094', 'Discriminator loss 0.6531', 'Discriminator accuracy 0.5430', 'Total loss: 1.5107', 'for batch', 68)
('GAN loss 0.7105 ', 'GAN acc 0.9180', 'Discriminator loss 0.6676', 'Discriminator accuracy 0.5684', 'Total loss: 1.3782', 'for batch', 69)
('GAN loss 0.7833 ', 'GAN acc 0.4375', 'Discriminator loss 0.6211', 'Discriminator accuracy 0.5332', 'Total loss: 1.4044', 'for batch', 70)
('GAN loss 0.6996 ', 'GAN acc 0.8398', 'Discriminator loss 0.5693', 'Discriminator accuracy 0.7070', 'Total loss: 1.2688', 'for batch', 71)
('GAN loss 0.7408 ', 'GAN acc 0.7344', 'Discriminator loss 0.6411', 'Discriminator accuracy 0.5996', 'Total loss: 1.3819', 'for batch', 72)
('GAN loss 0.7575 ', 'GAN acc 0.4023', 'Discriminator loss 0.5328', 'Discriminator accuracy 0.7422', 'Total loss: 1.2903', 'for batch', 73)
('GAN loss 0.6460 ', 'GAN acc 0.9531', 'Discriminator loss 0.6206', 'Discriminator accuracy 0.6465', 'Total loss: 1.2666', 'for batch', 74)
('GAN loss 0.7564 ', 'GAN acc 0.6641', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5488', 'Total loss: 1.4342', 'for batch', 75)
('GAN loss 0.9053 ', 'GAN acc 0.0547', 'Discriminator loss 0.5548', 'Discriminator accuracy 0.7852', 'Total loss: 1.4600', 'for batch', 76)
('GAN loss 1.1487 ', 'GAN acc 0.0000', 'Discriminator loss 0.6363', 'Discriminator accuracy 0.6191', 'Total loss: 1.7850', 'for batch', 77)
('GAN loss 1.9025 ', 'GAN acc 0.0000', 'Discriminator loss 0.6268', 'Discriminator accuracy 0.7910', 'Total loss: 2.5294', 'for batch', 78)
('GAN loss 1.6576 ', 'GAN acc 0.0000', 'Discriminator loss 0.6069', 'Discriminator accuracy 0.6621', 'Total loss: 2.2645', 'for batch', 79)
('GAN loss 0.6773 ', 'GAN acc 0.9414', 'Discriminator loss 0.6247', 'Discriminator accuracy 0.6133', 'Total loss: 1.3020', 'for batch', 80)
('GAN loss 0.9151 ', 'GAN acc 0.3516', 'Discriminator loss 0.6091', 'Discriminator accuracy 0.6875', 'Total loss: 1.5242', 'for batch', 81)
('GAN loss 0.7637 ', 'GAN acc 0.5820', 'Discriminator loss 0.6495', 'Discriminator accuracy 0.6113', 'Total loss: 1.4132', 'for batch', 82)
('GAN loss 0.7419 ', 'GAN acc 0.7227', 'Discriminator loss 0.6475', 'Discriminator accuracy 0.5625', 'Total loss: 1.3893', 'for batch', 83)
('GAN loss 0.8514 ', 'GAN acc 0.0742', 'Discriminator loss 0.6332', 'Discriminator accuracy 0.5840', 'Total loss: 1.4847', 'for batch', 84)
('GAN loss 0.9568 ', 'GAN acc 0.0039', 'Discriminator loss 0.6462', 'Discriminator accuracy 0.5703', 'Total loss: 1.6029', 'for batch', 85)
('GAN loss 1.0883 ', 'GAN acc 0.0000', 'Discriminator loss 0.6494', 'Discriminator accuracy 0.6758', 'Total loss: 1.7378', 'for batch', 86)
('GAN loss 0.8951 ', 'GAN acc 0.0742', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.4824', 'Total loss: 1.5744', 'for batch', 87)
('GAN loss 0.6807 ', 'GAN acc 0.8984', 'Discriminator loss 0.6573', 'Discriminator accuracy 0.5508', 'Total loss: 1.3380', 'for batch', 88)
('GAN loss 1.4544 ', 'GAN acc 0.0078', 'Discriminator loss 0.6443', 'Discriminator accuracy 0.6250', 'Total loss: 2.0986', 'for batch', 89)
('GAN loss 2.2926 ', 'GAN acc 0.0000', 'Discriminator loss 0.5767', 'Discriminator accuracy 0.8164', 'Total loss: 2.8693', 'for batch', 90)
('GAN loss 0.6871 ', 'GAN acc 0.7734', 'Discriminator loss 0.7596', 'Discriminator accuracy 0.4961', 'Total loss: 1.4466', 'for batch', 91)
('GAN loss 0.6655 ', 'GAN acc 0.9219', 'Discriminator loss 0.6710', 'Discriminator accuracy 0.5449', 'Total loss: 1.3364', 'for batch', 92)
('GAN loss 0.8050 ', 'GAN acc 0.3945', 'Discriminator loss 0.6573', 'Discriminator accuracy 0.5430', 'Total loss: 1.4623', 'for batch', 93)
('GAN loss 1.1452 ', 'GAN acc 0.0000', 'Discriminator loss 0.6206', 'Discriminator accuracy 0.6172', 'Total loss: 1.7658', 'for batch', 94)
('GAN loss 1.2041 ', 'GAN acc 0.0000', 'Discriminator loss 0.6320', 'Discriminator accuracy 0.7695', 'Total loss: 1.8362', 'for batch', 95)
('GAN loss 0.7804 ', 'GAN acc 0.6250', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5000', 'Total loss: 1.4582', 'for batch', 96)
('GAN loss 1.0102 ', 'GAN acc 0.0078', 'Discriminator loss 0.6447', 'Discriminator accuracy 0.5840', 'Total loss: 1.6550', 'for batch', 97)
('GAN loss 1.1800 ', 'GAN acc 0.0000', 'Discriminator loss 0.6243', 'Discriminator accuracy 0.7480', 'Total loss: 1.8043', 'for batch', 98)
('GAN loss 0.8741 ', 'GAN acc 0.1328', 'Discriminator loss 0.6630', 'Discriminator accuracy 0.4883', 'Total loss: 1.5372', 'for batch', 99)
('GAN loss 0.6609 ', 'GAN acc 0.9492', 'Discriminator loss 0.6655', 'Discriminator accuracy 0.5781', 'Total loss: 1.3264', 'for batch', 100)
('GAN loss 0.6635 ', 'GAN acc 0.9492', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5312', 'Total loss: 1.3480', 'for batch', 101)
('GAN loss 0.7259 ', 'GAN acc 0.8438', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5293', 'Total loss: 1.3995', 'for batch', 102)
('GAN loss 0.7639 ', 'GAN acc 0.5312', 'Discriminator loss 0.6518', 'Discriminator accuracy 0.5840', 'Total loss: 1.4157', 'for batch', 103)
('GAN loss 0.8069 ', 'GAN acc 0.1758', 'Discriminator loss 0.6490', 'Discriminator accuracy 0.6309', 'Total loss: 1.4559', 'for batch', 104)
('GAN loss 0.8297 ', 'GAN acc 0.1641', 'Discriminator loss 0.6665', 'Discriminator accuracy 0.5801', 'Total loss: 1.4962', 'for batch', 105)
('GAN loss 0.7569 ', 'GAN acc 0.3672', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5215', 'Total loss: 1.4292', 'for batch', 106)
('GAN loss 0.7382 ', 'GAN acc 0.5625', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5137', 'Total loss: 1.4203', 'for batch', 107)
('GAN loss 0.7337 ', 'GAN acc 0.4805', 'Discriminator loss 0.6312', 'Discriminator accuracy 0.6133', 'Total loss: 1.3649', 'for batch', 108)
('GAN loss 0.7806 ', 'GAN acc 0.2305', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.6738', 'Total loss: 1.4342', 'for batch', 109)
('GAN loss 0.6884 ', 'GAN acc 0.8906', 'Discriminator loss 0.5793', 'Discriminator accuracy 0.5879', 'Total loss: 1.2677', 'for batch', 110)
('GAN loss 0.6548 ', 'GAN acc 0.9414', 'Discriminator loss 0.6876', 'Discriminator accuracy 0.4902', 'Total loss: 1.3424', 'for batch', 111)
('GAN loss 0.6646 ', 'GAN acc 0.8906', 'Discriminator loss 0.6270', 'Discriminator accuracy 0.6328', 'Total loss: 1.2916', 'for batch', 112)
('GAN loss 0.6729 ', 'GAN acc 0.7969', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5664', 'Total loss: 1.3442', 'for batch', 113)
('GAN loss 0.6663 ', 'GAN acc 0.8320', 'Discriminator loss 0.5910', 'Discriminator accuracy 0.6953', 'Total loss: 1.2573', 'for batch', 114)
('GAN loss 0.6368 ', 'GAN acc 0.9414', 'Discriminator loss 0.6300', 'Discriminator accuracy 0.6055', 'Total loss: 1.2668', 'for batch', 115)
('GAN loss 0.6424 ', 'GAN acc 0.8906', 'Discriminator loss 0.5918', 'Discriminator accuracy 0.7383', 'Total loss: 1.2343', 'for batch', 116)
('GAN loss 0.5836 ', 'GAN acc 0.9727', 'Discriminator loss 0.6016', 'Discriminator accuracy 0.5723', 'Total loss: 1.1852', 'for batch', 117)
('GAN loss 0.5763 ', 'GAN acc 0.9766', 'Discriminator loss 0.6431', 'Discriminator accuracy 0.5977', 'Total loss: 1.2194', 'for batch', 118)
('GAN loss 0.5733 ', 'GAN acc 0.9766', 'Discriminator loss 0.6158', 'Discriminator accuracy 0.6328', 'Total loss: 1.1891', 'for batch', 119)
('GAN loss 0.6308 ', 'GAN acc 0.9609', 'Discriminator loss 0.6625', 'Discriminator accuracy 0.6113', 'Total loss: 1.2934', 'for batch', 120)
('GAN loss 0.6416 ', 'GAN acc 0.9336', 'Discriminator loss 0.6466', 'Discriminator accuracy 0.5547', 'Total loss: 1.2882', 'for batch', 121)
('GAN loss 0.8376 ', 'GAN acc 0.1250', 'Discriminator loss 0.5287', 'Discriminator accuracy 0.8418', 'Total loss: 1.3664', 'for batch', 122)
('GAN loss 0.7492 ', 'GAN acc 0.6836', 'Discriminator loss 0.6729', 'Discriminator accuracy 0.5195', 'Total loss: 1.4221', 'for batch', 123)
('GAN loss 0.8190 ', 'GAN acc 0.0742', 'Discriminator loss 0.6563', 'Discriminator accuracy 0.5547', 'Total loss: 1.4753', 'for batch', 124)
('GAN loss 0.8456 ', 'GAN acc 0.0117', 'Discriminator loss 0.6668', 'Discriminator accuracy 0.5801', 'Total loss: 1.5124', 'for batch', 125)
('GAN loss 0.8822 ', 'GAN acc 0.0234', 'Discriminator loss 0.6611', 'Discriminator accuracy 0.6289', 'Total loss: 1.5433', 'for batch', 126)
('GAN loss 0.8378 ', 'GAN acc 0.2031', 'Discriminator loss 0.6702', 'Discriminator accuracy 0.5723', 'Total loss: 1.5081', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.52134353)
('DISCRIMINATOR_Imagem FAKE=', 0.51091671)
('Discriminator trained', 109, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.676129')
----------------------------------
('Epoch', 9, 'of', 50)
('Number of batches', 128)
('GAN loss 0.8111 ', 'GAN acc 0.1211', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5332', 'Total loss: 1.4867', 'for batch', 0)
('GAN loss 0.7725 ', 'GAN acc 0.2031', 'Discriminator loss 0.6767', 'Discriminator accuracy 0.5273', 'Total loss: 1.4492', 'for batch', 1)
('GAN loss 0.8137 ', 'GAN acc 0.0898', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5449', 'Total loss: 1.4887', 'for batch', 2)
('GAN loss 0.8276 ', 'GAN acc 0.1016', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.4902', 'Total loss: 1.5077', 'for batch', 3)
('GAN loss 0.8194 ', 'GAN acc 0.1055', 'Discriminator loss 0.6658', 'Discriminator accuracy 0.5117', 'Total loss: 1.4852', 'for batch', 4)
('GAN loss 0.7045 ', 'GAN acc 0.6055', 'Discriminator loss 0.6307', 'Discriminator accuracy 0.5195', 'Total loss: 1.3352', 'for batch', 5)
('GAN loss 0.7074 ', 'GAN acc 0.5859', 'Discriminator loss 0.6605', 'Discriminator accuracy 0.5312', 'Total loss: 1.3679', 'for batch', 6)
('GAN loss 0.6499 ', 'GAN acc 0.9414', 'Discriminator loss 0.6694', 'Discriminator accuracy 0.5898', 'Total loss: 1.3194', 'for batch', 7)
('GAN loss 0.6322 ', 'GAN acc 0.9570', 'Discriminator loss 0.6328', 'Discriminator accuracy 0.6211', 'Total loss: 1.2650', 'for batch', 8)
('GAN loss 0.6297 ', 'GAN acc 0.9727', 'Discriminator loss 0.6569', 'Discriminator accuracy 0.5898', 'Total loss: 1.2866', 'for batch', 9)
('GAN loss 0.6146 ', 'GAN acc 0.9609', 'Discriminator loss 0.6146', 'Discriminator accuracy 0.6250', 'Total loss: 1.2292', 'for batch', 10)
('GAN loss 0.6316 ', 'GAN acc 0.9492', 'Discriminator loss 0.6990', 'Discriminator accuracy 0.5000', 'Total loss: 1.3306', 'for batch', 11)
('GAN loss 0.6619 ', 'GAN acc 0.9180', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.5078', 'Total loss: 1.3547', 'for batch', 12)
('GAN loss 0.6616 ', 'GAN acc 0.8867', 'Discriminator loss 0.6656', 'Discriminator accuracy 0.5586', 'Total loss: 1.3273', 'for batch', 13)
('GAN loss 0.6893 ', 'GAN acc 0.7617', 'Discriminator loss 0.6830', 'Discriminator accuracy 0.5176', 'Total loss: 1.3723', 'for batch', 14)
('GAN loss 0.7260 ', 'GAN acc 0.6250', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5273', 'Total loss: 1.4079', 'for batch', 15)
('GAN loss 0.6943 ', 'GAN acc 0.7656', 'Discriminator loss 0.5612', 'Discriminator accuracy 0.6816', 'Total loss: 1.2555', 'for batch', 16)
('GAN loss 0.6322 ', 'GAN acc 0.9414', 'Discriminator loss 0.5596', 'Discriminator accuracy 0.5879', 'Total loss: 1.1918', 'for batch', 17)
('GAN loss 0.6010 ', 'GAN acc 0.9766', 'Discriminator loss 0.5703', 'Discriminator accuracy 0.6543', 'Total loss: 1.1713', 'for batch', 18)
('GAN loss 0.5992 ', 'GAN acc 0.9609', 'Discriminator loss 0.5792', 'Discriminator accuracy 0.7305', 'Total loss: 1.1785', 'for batch', 19)
('GAN loss 0.5035 ', 'GAN acc 0.9883', 'Discriminator loss 0.4439', 'Discriminator accuracy 0.7637', 'Total loss: 0.9474', 'for batch', 20)
('GAN loss 0.4995 ', 'GAN acc 0.9805', 'Discriminator loss 0.5386', 'Discriminator accuracy 0.6992', 'Total loss: 1.0380', 'for batch', 21)
('GAN loss 0.4748 ', 'GAN acc 0.9805', 'Discriminator loss 0.3985', 'Discriminator accuracy 0.8262', 'Total loss: 0.8733', 'for batch', 22)
('GAN loss 0.5861 ', 'GAN acc 0.9609', 'Discriminator loss 0.4244', 'Discriminator accuracy 0.8105', 'Total loss: 1.0104', 'for batch', 23)
('GAN loss 0.4939 ', 'GAN acc 0.9727', 'Discriminator loss 0.6059', 'Discriminator accuracy 0.6133', 'Total loss: 1.0998', 'for batch', 24)
('GAN loss 0.4977 ', 'GAN acc 0.9688', 'Discriminator loss 0.7428', 'Discriminator accuracy 0.5234', 'Total loss: 1.2404', 'for batch', 25)
('GAN loss 0.5428 ', 'GAN acc 0.9844', 'Discriminator loss 0.7109', 'Discriminator accuracy 0.5254', 'Total loss: 1.2537', 'for batch', 26)
('GAN loss 0.6401 ', 'GAN acc 0.9727', 'Discriminator loss 0.6510', 'Discriminator accuracy 0.6152', 'Total loss: 1.2912', 'for batch', 27)
('GAN loss 0.6982 ', 'GAN acc 0.8906', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5566', 'Total loss: 1.3720', 'for batch', 28)
('GAN loss 0.7104 ', 'GAN acc 0.8242', 'Discriminator loss 0.6655', 'Discriminator accuracy 0.5625', 'Total loss: 1.3759', 'for batch', 29)
('GAN loss 0.7216 ', 'GAN acc 0.4375', 'Discriminator loss 0.6464', 'Discriminator accuracy 0.5605', 'Total loss: 1.3680', 'for batch', 30)
('GAN loss 0.6620 ', 'GAN acc 0.9258', 'Discriminator loss 0.6017', 'Discriminator accuracy 0.6191', 'Total loss: 1.2637', 'for batch', 31)
('GAN loss 0.6548 ', 'GAN acc 0.9492', 'Discriminator loss 0.6544', 'Discriminator accuracy 0.5723', 'Total loss: 1.3092', 'for batch', 32)
('GAN loss 0.6896 ', 'GAN acc 0.6797', 'Discriminator loss 0.5843', 'Discriminator accuracy 0.7012', 'Total loss: 1.2739', 'for batch', 33)
('GAN loss 0.5960 ', 'GAN acc 0.9727', 'Discriminator loss 0.5876', 'Discriminator accuracy 0.6387', 'Total loss: 1.1836', 'for batch', 34)
('GAN loss 0.6011 ', 'GAN acc 0.9844', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.5234', 'Total loss: 1.2878', 'for batch', 35)
('GAN loss 0.6101 ', 'GAN acc 0.9883', 'Discriminator loss 0.6515', 'Discriminator accuracy 0.5723', 'Total loss: 1.2616', 'for batch', 36)
('GAN loss 0.7504 ', 'GAN acc 0.2383', 'Discriminator loss 0.6284', 'Discriminator accuracy 0.6914', 'Total loss: 1.3788', 'for batch', 37)
('GAN loss 0.7258 ', 'GAN acc 0.5000', 'Discriminator loss 0.7591', 'Discriminator accuracy 0.4805', 'Total loss: 1.4849', 'for batch', 38)
('GAN loss 0.7377 ', 'GAN acc 0.3867', 'Discriminator loss 0.7455', 'Discriminator accuracy 0.5410', 'Total loss: 1.4832', 'for batch', 39)
('GAN loss 0.8014 ', 'GAN acc 0.5352', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.4922', 'Total loss: 1.4686', 'for batch', 40)
('GAN loss 0.7261 ', 'GAN acc 0.6484', 'Discriminator loss 0.6834', 'Discriminator accuracy 0.5273', 'Total loss: 1.4095', 'for batch', 41)
('GAN loss 0.7102 ', 'GAN acc 0.6602', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.4902', 'Total loss: 1.3993', 'for batch', 42)
('GAN loss 0.6998 ', 'GAN acc 0.6445', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5293', 'Total loss: 1.3810', 'for batch', 43)
('GAN loss 0.6923 ', 'GAN acc 0.6758', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.4844', 'Total loss: 1.3731', 'for batch', 44)
('GAN loss 0.6956 ', 'GAN acc 0.7227', 'Discriminator loss 0.6857', 'Discriminator accuracy 0.4941', 'Total loss: 1.3813', 'for batch', 45)
('GAN loss 0.6990 ', 'GAN acc 0.6367', 'Discriminator loss 0.6746', 'Discriminator accuracy 0.5547', 'Total loss: 1.3736', 'for batch', 46)
('GAN loss 0.6993 ', 'GAN acc 0.5586', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.4902', 'Total loss: 1.3801', 'for batch', 47)
('GAN loss 0.7010 ', 'GAN acc 0.5273', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5527', 'Total loss: 1.3793', 'for batch', 48)
('GAN loss 0.6812 ', 'GAN acc 0.7227', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5059', 'Total loss: 1.3652', 'for batch', 49)
('GAN loss 0.6732 ', 'GAN acc 0.7891', 'Discriminator loss 0.6833', 'Discriminator accuracy 0.5371', 'Total loss: 1.3565', 'for batch', 50)
('GAN loss 0.6737 ', 'GAN acc 0.8047', 'Discriminator loss 0.6827', 'Discriminator accuracy 0.5879', 'Total loss: 1.3563', 'for batch', 51)
('GAN loss 0.6882 ', 'GAN acc 0.6680', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.5449', 'Total loss: 1.3746', 'for batch', 52)
('GAN loss 0.6972 ', 'GAN acc 0.6172', 'Discriminator loss 0.6823', 'Discriminator accuracy 0.5410', 'Total loss: 1.3795', 'for batch', 53)
('GAN loss 0.7599 ', 'GAN acc 0.3594', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5664', 'Total loss: 1.4419', 'for batch', 54)
('GAN loss 0.7444 ', 'GAN acc 0.5039', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.5625', 'Total loss: 1.4240', 'for batch', 55)
('GAN loss 0.6944 ', 'GAN acc 0.6797', 'Discriminator loss 0.6921', 'Discriminator accuracy 0.4922', 'Total loss: 1.3865', 'for batch', 56)
('GAN loss 0.6802 ', 'GAN acc 0.7188', 'Discriminator loss 0.6844', 'Discriminator accuracy 0.5410', 'Total loss: 1.3646', 'for batch', 57)
('GAN loss 0.6774 ', 'GAN acc 0.6680', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.5508', 'Total loss: 1.3629', 'for batch', 58)
('GAN loss 0.6815 ', 'GAN acc 0.7383', 'Discriminator loss 0.6676', 'Discriminator accuracy 0.5840', 'Total loss: 1.3491', 'for batch', 59)
('GAN loss 0.6930 ', 'GAN acc 0.6523', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5391', 'Total loss: 1.3776', 'for batch', 60)
('GAN loss 0.6988 ', 'GAN acc 0.6992', 'Discriminator loss 0.6714', 'Discriminator accuracy 0.5762', 'Total loss: 1.3702', 'for batch', 61)
('GAN loss 0.7293 ', 'GAN acc 0.5352', 'Discriminator loss 0.6803', 'Discriminator accuracy 0.5703', 'Total loss: 1.4096', 'for batch', 62)
('GAN loss 0.7271 ', 'GAN acc 0.5312', 'Discriminator loss 0.6347', 'Discriminator accuracy 0.5859', 'Total loss: 1.3619', 'for batch', 63)
('GAN loss 0.6681 ', 'GAN acc 0.8594', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.4805', 'Total loss: 1.3499', 'for batch', 64)
('GAN loss 0.6428 ', 'GAN acc 0.9062', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5156', 'Total loss: 1.3249', 'for batch', 65)
('GAN loss 0.6396 ', 'GAN acc 0.9297', 'Discriminator loss 0.6262', 'Discriminator accuracy 0.6289', 'Total loss: 1.2658', 'for batch', 66)
('GAN loss 0.6432 ', 'GAN acc 0.8750', 'Discriminator loss 0.5399', 'Discriminator accuracy 0.7539', 'Total loss: 1.1831', 'for batch', 67)
('GAN loss 0.5868 ', 'GAN acc 0.9688', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.5684', 'Total loss: 1.2488', 'for batch', 68)
('GAN loss 0.6031 ', 'GAN acc 0.9766', 'Discriminator loss 0.6666', 'Discriminator accuracy 0.5957', 'Total loss: 1.2696', 'for batch', 69)
('GAN loss 0.6219 ', 'GAN acc 0.9648', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5605', 'Total loss: 1.2876', 'for batch', 70)
('GAN loss 0.6527 ', 'GAN acc 0.9453', 'Discriminator loss 0.6046', 'Discriminator accuracy 0.6875', 'Total loss: 1.2573', 'for batch', 71)
('GAN loss 0.6054 ', 'GAN acc 0.9727', 'Discriminator loss 0.6422', 'Discriminator accuracy 0.6445', 'Total loss: 1.2476', 'for batch', 72)
('GAN loss 0.6124 ', 'GAN acc 0.9844', 'Discriminator loss 0.5885', 'Discriminator accuracy 0.7090', 'Total loss: 1.2009', 'for batch', 73)
('GAN loss 0.6070 ', 'GAN acc 0.9805', 'Discriminator loss 0.6427', 'Discriminator accuracy 0.6250', 'Total loss: 1.2497', 'for batch', 74)
('GAN loss 0.6165 ', 'GAN acc 0.9648', 'Discriminator loss 0.6511', 'Discriminator accuracy 0.5977', 'Total loss: 1.2676', 'for batch', 75)
('GAN loss 0.5857 ', 'GAN acc 0.9766', 'Discriminator loss 0.6105', 'Discriminator accuracy 0.5898', 'Total loss: 1.1961', 'for batch', 76)
('GAN loss 0.5805 ', 'GAN acc 0.9609', 'Discriminator loss 0.6166', 'Discriminator accuracy 0.6289', 'Total loss: 1.1971', 'for batch', 77)
('GAN loss 0.5986 ', 'GAN acc 0.9727', 'Discriminator loss 0.6443', 'Discriminator accuracy 0.5820', 'Total loss: 1.2429', 'for batch', 78)
('GAN loss 0.5895 ', 'GAN acc 0.9766', 'Discriminator loss 0.5851', 'Discriminator accuracy 0.7090', 'Total loss: 1.1746', 'for batch', 79)
('GAN loss 0.5595 ', 'GAN acc 0.9766', 'Discriminator loss 0.6176', 'Discriminator accuracy 0.5703', 'Total loss: 1.1771', 'for batch', 80)
('GAN loss 0.5529 ', 'GAN acc 0.9883', 'Discriminator loss 0.5387', 'Discriminator accuracy 0.7109', 'Total loss: 1.0916', 'for batch', 81)
('GAN loss 0.5469 ', 'GAN acc 0.9766', 'Discriminator loss 0.6503', 'Discriminator accuracy 0.5781', 'Total loss: 1.1973', 'for batch', 82)
('GAN loss 0.6189 ', 'GAN acc 0.9258', 'Discriminator loss 0.5393', 'Discriminator accuracy 0.7383', 'Total loss: 1.1582', 'for batch', 83)
('GAN loss 0.5757 ', 'GAN acc 0.9805', 'Discriminator loss 0.6337', 'Discriminator accuracy 0.6465', 'Total loss: 1.2094', 'for batch', 84)
('GAN loss 0.6127 ', 'GAN acc 0.9414', 'Discriminator loss 0.6365', 'Discriminator accuracy 0.6348', 'Total loss: 1.2492', 'for batch', 85)
('GAN loss 0.5892 ', 'GAN acc 0.9609', 'Discriminator loss 0.6026', 'Discriminator accuracy 0.6094', 'Total loss: 1.1918', 'for batch', 86)
('GAN loss 0.5570 ', 'GAN acc 0.9727', 'Discriminator loss 0.5405', 'Discriminator accuracy 0.7188', 'Total loss: 1.0975', 'for batch', 87)
('GAN loss 0.5567 ', 'GAN acc 0.9648', 'Discriminator loss 0.5837', 'Discriminator accuracy 0.6836', 'Total loss: 1.1404', 'for batch', 88)
('GAN loss 0.5694 ', 'GAN acc 0.9531', 'Discriminator loss 0.6226', 'Discriminator accuracy 0.6230', 'Total loss: 1.1920', 'for batch', 89)
('GAN loss 0.5299 ', 'GAN acc 0.9961', 'Discriminator loss 0.4284', 'Discriminator accuracy 0.8047', 'Total loss: 0.9584', 'for batch', 90)
('GAN loss 0.5635 ', 'GAN acc 0.9727', 'Discriminator loss 0.5285', 'Discriminator accuracy 0.7715', 'Total loss: 1.0920', 'for batch', 91)
('GAN loss 0.5206 ', 'GAN acc 0.9727', 'Discriminator loss 0.6282', 'Discriminator accuracy 0.6270', 'Total loss: 1.1488', 'for batch', 92)
('GAN loss 0.5240 ', 'GAN acc 0.9805', 'Discriminator loss 0.5885', 'Discriminator accuracy 0.6328', 'Total loss: 1.1125', 'for batch', 93)
('GAN loss 0.5569 ', 'GAN acc 0.9805', 'Discriminator loss 0.5038', 'Discriminator accuracy 0.7617', 'Total loss: 1.0607', 'for batch', 94)
('GAN loss 0.4797 ', 'GAN acc 0.9922', 'Discriminator loss 0.5262', 'Discriminator accuracy 0.5879', 'Total loss: 1.0059', 'for batch', 95)
('GAN loss 0.4544 ', 'GAN acc 0.9922', 'Discriminator loss 0.4733', 'Discriminator accuracy 0.7910', 'Total loss: 0.9277', 'for batch', 96)
('GAN loss 0.6095 ', 'GAN acc 0.9102', 'Discriminator loss 0.4615', 'Discriminator accuracy 0.7637', 'Total loss: 1.0710', 'for batch', 97)
('GAN loss 0.6037 ', 'GAN acc 0.9727', 'Discriminator loss 0.6994', 'Discriminator accuracy 0.5137', 'Total loss: 1.3030', 'for batch', 98)
('GAN loss 0.7018 ', 'GAN acc 0.5039', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.5488', 'Total loss: 1.3666', 'for batch', 99)
('GAN loss 0.8564 ', 'GAN acc 0.0000', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5352', 'Total loss: 1.5290', 'for batch', 100)
('GAN loss 0.8112 ', 'GAN acc 0.0078', 'Discriminator loss 0.6566', 'Discriminator accuracy 0.6777', 'Total loss: 1.4678', 'for batch', 101)
('GAN loss 0.7470 ', 'GAN acc 0.1953', 'Discriminator loss 0.6833', 'Discriminator accuracy 0.5059', 'Total loss: 1.4302', 'for batch', 102)
('GAN loss 0.7242 ', 'GAN acc 0.3047', 'Discriminator loss 0.6854', 'Discriminator accuracy 0.5020', 'Total loss: 1.4096', 'for batch', 103)
('GAN loss 0.7419 ', 'GAN acc 0.2031', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.4883', 'Total loss: 1.4367', 'for batch', 104)
('GAN loss 0.7806 ', 'GAN acc 0.1133', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5078', 'Total loss: 1.4646', 'for batch', 105)
('GAN loss 0.7862 ', 'GAN acc 0.1055', 'Discriminator loss 0.6925', 'Discriminator accuracy 0.4824', 'Total loss: 1.4788', 'for batch', 106)
('GAN loss 0.9160 ', 'GAN acc 0.0234', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5176', 'Total loss: 1.5927', 'for batch', 107)
('GAN loss 0.9787 ', 'GAN acc 0.0000', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.5137', 'Total loss: 1.6464', 'for batch', 108)
('GAN loss 0.6765 ', 'GAN acc 0.8320', 'Discriminator loss 0.7396', 'Discriminator accuracy 0.4863', 'Total loss: 1.4161', 'for batch', 109)
('GAN loss 0.6559 ', 'GAN acc 0.9023', 'Discriminator loss 0.6813', 'Discriminator accuracy 0.5352', 'Total loss: 1.3373', 'for batch', 110)
('GAN loss 0.6636 ', 'GAN acc 0.8828', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5176', 'Total loss: 1.3468', 'for batch', 111)
('GAN loss 0.6698 ', 'GAN acc 0.7969', 'Discriminator loss 0.6822', 'Discriminator accuracy 0.5117', 'Total loss: 1.3520', 'for batch', 112)
('GAN loss 0.6763 ', 'GAN acc 0.7148', 'Discriminator loss 0.6833', 'Discriminator accuracy 0.5293', 'Total loss: 1.3597', 'for batch', 113)
('GAN loss 0.6806 ', 'GAN acc 0.6055', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.5391', 'Total loss: 1.3657', 'for batch', 114)
('GAN loss 0.6907 ', 'GAN acc 0.5898', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5293', 'Total loss: 1.3753', 'for batch', 115)
('GAN loss 0.7033 ', 'GAN acc 0.4336', 'Discriminator loss 0.6906', 'Discriminator accuracy 0.5254', 'Total loss: 1.3939', 'for batch', 116)
('GAN loss 0.7320 ', 'GAN acc 0.3125', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5469', 'Total loss: 1.4136', 'for batch', 117)
('GAN loss 0.7386 ', 'GAN acc 0.2891', 'Discriminator loss 0.6950', 'Discriminator accuracy 0.5273', 'Total loss: 1.4336', 'for batch', 118)
('GAN loss 0.7152 ', 'GAN acc 0.4570', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.5000', 'Total loss: 1.4052', 'for batch', 119)
('GAN loss 0.7848 ', 'GAN acc 0.3125', 'Discriminator loss 0.6501', 'Discriminator accuracy 0.5273', 'Total loss: 1.4349', 'for batch', 120)
('GAN loss 0.6619 ', 'GAN acc 0.7852', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5469', 'Total loss: 1.3388', 'for batch', 121)
('GAN loss 0.6951 ', 'GAN acc 0.7266', 'Discriminator loss 0.6680', 'Discriminator accuracy 0.5742', 'Total loss: 1.3631', 'for batch', 122)
('GAN loss 0.7201 ', 'GAN acc 0.4648', 'Discriminator loss 0.6668', 'Discriminator accuracy 0.5625', 'Total loss: 1.3870', 'for batch', 123)
('GAN loss 0.7398 ', 'GAN acc 0.4141', 'Discriminator loss 0.6675', 'Discriminator accuracy 0.5781', 'Total loss: 1.4073', 'for batch', 124)
('GAN loss 0.7405 ', 'GAN acc 0.3594', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.6797', 'Total loss: 1.3934', 'for batch', 125)
('GAN loss 0.7108 ', 'GAN acc 0.5742', 'Discriminator loss 0.6845', 'Discriminator accuracy 0.5703', 'Total loss: 1.3953', 'for batch', 126)
('GAN loss 0.6648 ', 'GAN acc 0.8398', 'Discriminator loss 0.6907', 'Discriminator accuracy 0.4922', 'Total loss: 1.3555', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54077053)
('DISCRIMINATOR_Imagem FAKE=', 0.51113808)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.413697')
----------------------------------
('Epoch', 10, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6587 ', 'GAN acc 0.8320', 'Discriminator loss 0.6617', 'Discriminator accuracy 0.5488', 'Total loss: 1.3204', 'for batch', 0)
('GAN loss 0.6609 ', 'GAN acc 0.8711', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.5762', 'Total loss: 1.3276', 'for batch', 1)
('GAN loss 0.7014 ', 'GAN acc 0.6602', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5410', 'Total loss: 1.3788', 'for batch', 2)
('GAN loss 0.6399 ', 'GAN acc 0.9570', 'Discriminator loss 0.6353', 'Discriminator accuracy 0.5000', 'Total loss: 1.2752', 'for batch', 3)
('GAN loss 0.6384 ', 'GAN acc 0.9414', 'Discriminator loss 0.6902', 'Discriminator accuracy 0.5195', 'Total loss: 1.3286', 'for batch', 4)
('GAN loss 0.6525 ', 'GAN acc 0.9023', 'Discriminator loss 0.6690', 'Discriminator accuracy 0.5645', 'Total loss: 1.3216', 'for batch', 5)
('GAN loss 0.6774 ', 'GAN acc 0.8008', 'Discriminator loss 0.6715', 'Discriminator accuracy 0.5547', 'Total loss: 1.3489', 'for batch', 6)
('GAN loss 0.6636 ', 'GAN acc 0.8789', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5078', 'Total loss: 1.3495', 'for batch', 7)
('GAN loss 0.6634 ', 'GAN acc 0.8711', 'Discriminator loss 0.6349', 'Discriminator accuracy 0.5723', 'Total loss: 1.2983', 'for batch', 8)
('GAN loss 0.6693 ', 'GAN acc 0.8047', 'Discriminator loss 0.6513', 'Discriminator accuracy 0.5645', 'Total loss: 1.3205', 'for batch', 9)
('GAN loss 0.6873 ', 'GAN acc 0.6992', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5352', 'Total loss: 1.3624', 'for batch', 10)
('GAN loss 0.6984 ', 'GAN acc 0.5469', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5293', 'Total loss: 1.3777', 'for batch', 11)
('GAN loss 0.6724 ', 'GAN acc 0.7578', 'Discriminator loss 0.6923', 'Discriminator accuracy 0.4980', 'Total loss: 1.3647', 'for batch', 12)
('GAN loss 0.6573 ', 'GAN acc 0.8281', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.4883', 'Total loss: 1.3521', 'for batch', 13)
('GAN loss 0.6658 ', 'GAN acc 0.8008', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.5117', 'Total loss: 1.3538', 'for batch', 14)
('GAN loss 0.7049 ', 'GAN acc 0.4414', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5469', 'Total loss: 1.3940', 'for batch', 15)
('GAN loss 0.6275 ', 'GAN acc 0.9727', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.5391', 'Total loss: 1.2773', 'for batch', 16)
('GAN loss 0.6391 ', 'GAN acc 0.9023', 'Discriminator loss 0.6806', 'Discriminator accuracy 0.5996', 'Total loss: 1.3197', 'for batch', 17)
('GAN loss 0.6653 ', 'GAN acc 0.7344', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.5332', 'Total loss: 1.3449', 'for batch', 18)
('GAN loss 0.6924 ', 'GAN acc 0.6680', 'Discriminator loss 0.6731', 'Discriminator accuracy 0.5879', 'Total loss: 1.3656', 'for batch', 19)
('GAN loss 0.7613 ', 'GAN acc 0.4805', 'Discriminator loss 0.6190', 'Discriminator accuracy 0.7129', 'Total loss: 1.3803', 'for batch', 20)
('GAN loss 0.6706 ', 'GAN acc 0.6797', 'Discriminator loss 0.6288', 'Discriminator accuracy 0.6426', 'Total loss: 1.2994', 'for batch', 21)
('GAN loss 0.6972 ', 'GAN acc 0.6211', 'Discriminator loss 0.6132', 'Discriminator accuracy 0.6738', 'Total loss: 1.3104', 'for batch', 22)
('GAN loss 0.6677 ', 'GAN acc 0.7734', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.6152', 'Total loss: 1.3323', 'for batch', 23)
('GAN loss 0.6870 ', 'GAN acc 0.8047', 'Discriminator loss 0.6910', 'Discriminator accuracy 0.5391', 'Total loss: 1.3780', 'for batch', 24)
('GAN loss 0.6620 ', 'GAN acc 0.8281', 'Discriminator loss 0.6869', 'Discriminator accuracy 0.4805', 'Total loss: 1.3489', 'for batch', 25)
('GAN loss 0.6357 ', 'GAN acc 0.8867', 'Discriminator loss 0.6489', 'Discriminator accuracy 0.5605', 'Total loss: 1.2846', 'for batch', 26)
('GAN loss 0.6369 ', 'GAN acc 0.9062', 'Discriminator loss 0.6200', 'Discriminator accuracy 0.6270', 'Total loss: 1.2569', 'for batch', 27)
('GAN loss 0.7271 ', 'GAN acc 0.6016', 'Discriminator loss 0.6463', 'Discriminator accuracy 0.5957', 'Total loss: 1.3734', 'for batch', 28)
('GAN loss 0.6651 ', 'GAN acc 0.8633', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5234', 'Total loss: 1.3452', 'for batch', 29)
('GAN loss 0.7633 ', 'GAN acc 0.0703', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5273', 'Total loss: 1.4416', 'for batch', 30)
('GAN loss 0.7718 ', 'GAN acc 0.0664', 'Discriminator loss 0.6699', 'Discriminator accuracy 0.5938', 'Total loss: 1.4417', 'for batch', 31)
('GAN loss 0.7643 ', 'GAN acc 0.0625', 'Discriminator loss 0.6731', 'Discriminator accuracy 0.6543', 'Total loss: 1.4375', 'for batch', 32)
('GAN loss 0.7759 ', 'GAN acc 0.0586', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.5430', 'Total loss: 1.4655', 'for batch', 33)
('GAN loss 0.7118 ', 'GAN acc 0.4883', 'Discriminator loss 0.6519', 'Discriminator accuracy 0.5195', 'Total loss: 1.3637', 'for batch', 34)
('GAN loss 0.8273 ', 'GAN acc 0.1094', 'Discriminator loss 0.6389', 'Discriminator accuracy 0.5820', 'Total loss: 1.4662', 'for batch', 35)
('GAN loss 0.6788 ', 'GAN acc 0.6328', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.5176', 'Total loss: 1.3641', 'for batch', 36)
('GAN loss 0.7158 ', 'GAN acc 0.4453', 'Discriminator loss 0.6481', 'Discriminator accuracy 0.5918', 'Total loss: 1.3639', 'for batch', 37)
('GAN loss 0.7152 ', 'GAN acc 0.3516', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.5918', 'Total loss: 1.3863', 'for batch', 38)
('GAN loss 0.7160 ', 'GAN acc 0.3750', 'Discriminator loss 0.6875', 'Discriminator accuracy 0.5645', 'Total loss: 1.4035', 'for batch', 39)
('GAN loss 0.7202 ', 'GAN acc 0.3047', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.5488', 'Total loss: 1.4039', 'for batch', 40)
('GAN loss 0.6924 ', 'GAN acc 0.5781', 'Discriminator loss 0.6494', 'Discriminator accuracy 0.5605', 'Total loss: 1.3418', 'for batch', 41)
('GAN loss 0.7020 ', 'GAN acc 0.6211', 'Discriminator loss 0.6902', 'Discriminator accuracy 0.4941', 'Total loss: 1.3922', 'for batch', 42)
('GAN loss 0.7116 ', 'GAN acc 0.5273', 'Discriminator loss 0.6378', 'Discriminator accuracy 0.6699', 'Total loss: 1.3493', 'for batch', 43)
('GAN loss 0.6795 ', 'GAN acc 0.7305', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5156', 'Total loss: 1.3677', 'for batch', 44)
('GAN loss 0.6923 ', 'GAN acc 0.5859', 'Discriminator loss 0.6507', 'Discriminator accuracy 0.5605', 'Total loss: 1.3430', 'for batch', 45)
('GAN loss 0.6786 ', 'GAN acc 0.6914', 'Discriminator loss 0.6527', 'Discriminator accuracy 0.5645', 'Total loss: 1.3312', 'for batch', 46)
('GAN loss 0.6729 ', 'GAN acc 0.7344', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.5195', 'Total loss: 1.3646', 'for batch', 47)
('GAN loss 0.6695 ', 'GAN acc 0.7539', 'Discriminator loss 0.6404', 'Discriminator accuracy 0.6094', 'Total loss: 1.3099', 'for batch', 48)
('GAN loss 0.6969 ', 'GAN acc 0.6016', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5820', 'Total loss: 1.3752', 'for batch', 49)
('GAN loss 0.6939 ', 'GAN acc 0.6172', 'Discriminator loss 0.6353', 'Discriminator accuracy 0.5293', 'Total loss: 1.3293', 'for batch', 50)
('GAN loss 0.5945 ', 'GAN acc 0.9727', 'Discriminator loss 0.6081', 'Discriminator accuracy 0.5176', 'Total loss: 1.2026', 'for batch', 51)
('GAN loss 0.5950 ', 'GAN acc 0.9531', 'Discriminator loss 0.6653', 'Discriminator accuracy 0.5586', 'Total loss: 1.2603', 'for batch', 52)
('GAN loss 0.5867 ', 'GAN acc 0.9688', 'Discriminator loss 0.6041', 'Discriminator accuracy 0.6914', 'Total loss: 1.1908', 'for batch', 53)
('GAN loss 1.3068 ', 'GAN acc 0.0078', 'Discriminator loss 0.6401', 'Discriminator accuracy 0.6777', 'Total loss: 1.9469', 'for batch', 54)
('GAN loss 1.4478 ', 'GAN acc 0.0000', 'Discriminator loss 0.6318', 'Discriminator accuracy 0.8203', 'Total loss: 2.0796', 'for batch', 55)
('GAN loss 1.1146 ', 'GAN acc 0.0000', 'Discriminator loss 0.6483', 'Discriminator accuracy 0.5000', 'Total loss: 1.7629', 'for batch', 56)
('GAN loss 0.9092 ', 'GAN acc 0.0117', 'Discriminator loss 0.6046', 'Discriminator accuracy 0.7285', 'Total loss: 1.5138', 'for batch', 57)
('GAN loss 1.0770 ', 'GAN acc 0.0078', 'Discriminator loss 0.6049', 'Discriminator accuracy 0.8809', 'Total loss: 1.6819', 'for batch', 58)
('GAN loss 0.9919 ', 'GAN acc 0.0273', 'Discriminator loss 0.6294', 'Discriminator accuracy 0.7871', 'Total loss: 1.6213', 'for batch', 59)
('GAN loss 0.6777 ', 'GAN acc 0.5820', 'Discriminator loss 0.6712', 'Discriminator accuracy 0.6426', 'Total loss: 1.3490', 'for batch', 60)
('GAN loss 0.7081 ', 'GAN acc 0.5625', 'Discriminator loss 0.7123', 'Discriminator accuracy 0.5098', 'Total loss: 1.4204', 'for batch', 61)
('GAN loss 0.7141 ', 'GAN acc 0.5273', 'Discriminator loss 0.7193', 'Discriminator accuracy 0.5137', 'Total loss: 1.4334', 'for batch', 62)
('GAN loss 0.8680 ', 'GAN acc 0.0352', 'Discriminator loss 0.6615', 'Discriminator accuracy 0.6484', 'Total loss: 1.5295', 'for batch', 63)
('GAN loss 0.8337 ', 'GAN acc 0.0430', 'Discriminator loss 0.6887', 'Discriminator accuracy 0.5488', 'Total loss: 1.5224', 'for batch', 64)
('GAN loss 0.8373 ', 'GAN acc 0.0469', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5781', 'Total loss: 1.5211', 'for batch', 65)
('GAN loss 0.7785 ', 'GAN acc 0.1406', 'Discriminator loss 0.6892', 'Discriminator accuracy 0.5801', 'Total loss: 1.4677', 'for batch', 66)
('GAN loss 0.7515 ', 'GAN acc 0.1797', 'Discriminator loss 0.6892', 'Discriminator accuracy 0.5586', 'Total loss: 1.4408', 'for batch', 67)
('GAN loss 0.7629 ', 'GAN acc 0.1406', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.6094', 'Total loss: 1.4490', 'for batch', 68)
('GAN loss 0.7684 ', 'GAN acc 0.1250', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.6211', 'Total loss: 1.4422', 'for batch', 69)
('GAN loss 0.7963 ', 'GAN acc 0.0312', 'Discriminator loss 0.6767', 'Discriminator accuracy 0.6328', 'Total loss: 1.4730', 'for batch', 70)
('GAN loss 0.7928 ', 'GAN acc 0.0508', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.6094', 'Total loss: 1.4682', 'for batch', 71)
('GAN loss 0.7484 ', 'GAN acc 0.1445', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.5605', 'Total loss: 1.4272', 'for batch', 72)
('GAN loss 0.6982 ', 'GAN acc 0.4453', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5156', 'Total loss: 1.3881', 'for batch', 73)
('GAN loss 0.6739 ', 'GAN acc 0.7422', 'Discriminator loss 0.6941', 'Discriminator accuracy 0.4805', 'Total loss: 1.3680', 'for batch', 74)
('GAN loss 0.7053 ', 'GAN acc 0.4688', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5156', 'Total loss: 1.3874', 'for batch', 75)
('GAN loss 0.7007 ', 'GAN acc 0.4805', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5156', 'Total loss: 1.3847', 'for batch', 76)
('GAN loss 0.6936 ', 'GAN acc 0.5703', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.4941', 'Total loss: 1.3708', 'for batch', 77)
('GAN loss 0.6797 ', 'GAN acc 0.5586', 'Discriminator loss 0.6946', 'Discriminator accuracy 0.4824', 'Total loss: 1.3743', 'for batch', 78)
('GAN loss 0.7421 ', 'GAN acc 0.2656', 'Discriminator loss 0.6867', 'Discriminator accuracy 0.5156', 'Total loss: 1.4288', 'for batch', 79)
('GAN loss 0.7229 ', 'GAN acc 0.3164', 'Discriminator loss 0.6972', 'Discriminator accuracy 0.5156', 'Total loss: 1.4201', 'for batch', 80)
('GAN loss 0.7155 ', 'GAN acc 0.2891', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.5195', 'Total loss: 1.3962', 'for batch', 81)
('GAN loss 0.7185 ', 'GAN acc 0.3750', 'Discriminator loss 0.6804', 'Discriminator accuracy 0.5391', 'Total loss: 1.3988', 'for batch', 82)
('GAN loss 0.6944 ', 'GAN acc 0.5664', 'Discriminator loss 0.6857', 'Discriminator accuracy 0.5293', 'Total loss: 1.3801', 'for batch', 83)
('GAN loss 0.6761 ', 'GAN acc 0.6797', 'Discriminator loss 0.6831', 'Discriminator accuracy 0.5566', 'Total loss: 1.3591', 'for batch', 84)
('GAN loss 0.6735 ', 'GAN acc 0.7031', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5312', 'Total loss: 1.3595', 'for batch', 85)
('GAN loss 0.6951 ', 'GAN acc 0.6016', 'Discriminator loss 0.6759', 'Discriminator accuracy 0.5391', 'Total loss: 1.3710', 'for batch', 86)
('GAN loss 0.7257 ', 'GAN acc 0.4883', 'Discriminator loss 0.6759', 'Discriminator accuracy 0.5410', 'Total loss: 1.4016', 'for batch', 87)
('GAN loss 0.7383 ', 'GAN acc 0.4141', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5898', 'Total loss: 1.4090', 'for batch', 88)
('GAN loss 0.7293 ', 'GAN acc 0.4844', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5723', 'Total loss: 1.4070', 'for batch', 89)
('GAN loss 0.6904 ', 'GAN acc 0.5781', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5605', 'Total loss: 1.3704', 'for batch', 90)
('GAN loss 0.6761 ', 'GAN acc 0.6680', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5059', 'Total loss: 1.3659', 'for batch', 91)
('GAN loss 0.6953 ', 'GAN acc 0.5586', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.5195', 'Total loss: 1.3834', 'for batch', 92)
('GAN loss 0.6996 ', 'GAN acc 0.5273', 'Discriminator loss 0.6831', 'Discriminator accuracy 0.5195', 'Total loss: 1.3828', 'for batch', 93)
('GAN loss 0.6921 ', 'GAN acc 0.5664', 'Discriminator loss 0.6909', 'Discriminator accuracy 0.5000', 'Total loss: 1.3830', 'for batch', 94)
('GAN loss 0.6926 ', 'GAN acc 0.5547', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5215', 'Total loss: 1.3745', 'for batch', 95)
('GAN loss 0.7314 ', 'GAN acc 0.2422', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5156', 'Total loss: 1.4133', 'for batch', 96)
('GAN loss 0.7390 ', 'GAN acc 0.2383', 'Discriminator loss 0.6838', 'Discriminator accuracy 0.5488', 'Total loss: 1.4228', 'for batch', 97)
('GAN loss 0.7619 ', 'GAN acc 0.2305', 'Discriminator loss 0.6804', 'Discriminator accuracy 0.5781', 'Total loss: 1.4423', 'for batch', 98)
('GAN loss 0.7754 ', 'GAN acc 0.1758', 'Discriminator loss 0.7100', 'Discriminator accuracy 0.4844', 'Total loss: 1.4854', 'for batch', 99)
('GAN loss 0.7970 ', 'GAN acc 0.1133', 'Discriminator loss 0.6984', 'Discriminator accuracy 0.4863', 'Total loss: 1.4954', 'for batch', 100)
('GAN loss 0.8403 ', 'GAN acc 0.0977', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5020', 'Total loss: 1.5284', 'for batch', 101)
('GAN loss 0.8490 ', 'GAN acc 0.1055', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5449', 'Total loss: 1.5307', 'for batch', 102)
('GAN loss 0.6847 ', 'GAN acc 0.6914', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5254', 'Total loss: 1.3705', 'for batch', 103)
('GAN loss 0.7291 ', 'GAN acc 0.3047', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5566', 'Total loss: 1.4119', 'for batch', 104)
('GAN loss 0.7537 ', 'GAN acc 0.1523', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.6074', 'Total loss: 1.4325', 'for batch', 105)
('GAN loss 0.7586 ', 'GAN acc 0.1445', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.5762', 'Total loss: 1.4248', 'for batch', 106)
('GAN loss 0.7641 ', 'GAN acc 0.1641', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5723', 'Total loss: 1.4421', 'for batch', 107)
('GAN loss 0.7156 ', 'GAN acc 0.5273', 'Discriminator loss 0.6538', 'Discriminator accuracy 0.5254', 'Total loss: 1.3694', 'for batch', 108)
('GAN loss 0.6803 ', 'GAN acc 0.8203', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.4980', 'Total loss: 1.3697', 'for batch', 109)
('GAN loss 0.6996 ', 'GAN acc 0.7188', 'Discriminator loss 0.6516', 'Discriminator accuracy 0.5410', 'Total loss: 1.3512', 'for batch', 110)
('GAN loss 0.6816 ', 'GAN acc 0.8711', 'Discriminator loss 0.6844', 'Discriminator accuracy 0.5117', 'Total loss: 1.3660', 'for batch', 111)
('GAN loss 0.6825 ', 'GAN acc 0.7773', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.5352', 'Total loss: 1.3613', 'for batch', 112)
('GAN loss 0.6983 ', 'GAN acc 0.6641', 'Discriminator loss 0.6854', 'Discriminator accuracy 0.5234', 'Total loss: 1.3837', 'for batch', 113)
('GAN loss 0.7051 ', 'GAN acc 0.8242', 'Discriminator loss 0.6001', 'Discriminator accuracy 0.6875', 'Total loss: 1.3052', 'for batch', 114)
('GAN loss 0.6979 ', 'GAN acc 0.8008', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5332', 'Total loss: 1.3776', 'for batch', 115)
('GAN loss 0.6425 ', 'GAN acc 0.9648', 'Discriminator loss 0.5990', 'Discriminator accuracy 0.5586', 'Total loss: 1.2416', 'for batch', 116)
('GAN loss 0.6973 ', 'GAN acc 0.7891', 'Discriminator loss 0.6384', 'Discriminator accuracy 0.6504', 'Total loss: 1.3357', 'for batch', 117)
('GAN loss 0.6517 ', 'GAN acc 0.9062', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.5684', 'Total loss: 1.3127', 'for batch', 118)
('GAN loss 0.6697 ', 'GAN acc 0.8359', 'Discriminator loss 0.6450', 'Discriminator accuracy 0.6270', 'Total loss: 1.3147', 'for batch', 119)
('GAN loss 0.6834 ', 'GAN acc 0.7891', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.5469', 'Total loss: 1.3588', 'for batch', 120)
('GAN loss 0.6781 ', 'GAN acc 0.7422', 'Discriminator loss 0.6857', 'Discriminator accuracy 0.5215', 'Total loss: 1.3637', 'for batch', 121)
('GAN loss 0.6659 ', 'GAN acc 0.8750', 'Discriminator loss 0.6426', 'Discriminator accuracy 0.5859', 'Total loss: 1.3084', 'for batch', 122)
('GAN loss 0.6626 ', 'GAN acc 0.8750', 'Discriminator loss 0.6912', 'Discriminator accuracy 0.4883', 'Total loss: 1.3538', 'for batch', 123)
('GAN loss 0.7735 ', 'GAN acc 0.1719', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.5488', 'Total loss: 1.4377', 'for batch', 124)
('GAN loss 0.6252 ', 'GAN acc 0.9727', 'Discriminator loss 0.5788', 'Discriminator accuracy 0.6836', 'Total loss: 1.2039', 'for batch', 125)
('GAN loss 0.6308 ', 'GAN acc 0.9766', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.5840', 'Total loss: 1.2954', 'for batch', 126)
('GAN loss 0.6548 ', 'GAN acc 0.8984', 'Discriminator loss 0.6162', 'Discriminator accuracy 0.6348', 'Total loss: 1.2710', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.55497164)
('DISCRIMINATOR_Imagem FAKE=', 0.35162637)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.699041')
----------------------------------
('Epoch', 11, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6304 ', 'GAN acc 0.9297', 'Discriminator loss 0.5947', 'Discriminator accuracy 0.6406', 'Total loss: 1.2251', 'for batch', 0)
('GAN loss 0.5996 ', 'GAN acc 0.9570', 'Discriminator loss 0.5333', 'Discriminator accuracy 0.6992', 'Total loss: 1.1329', 'for batch', 1)
('GAN loss 0.5688 ', 'GAN acc 0.9805', 'Discriminator loss 0.4833', 'Discriminator accuracy 0.7852', 'Total loss: 1.0521', 'for batch', 2)
('GAN loss 0.5693 ', 'GAN acc 0.9688', 'Discriminator loss 0.4875', 'Discriminator accuracy 0.8223', 'Total loss: 1.0568', 'for batch', 3)
('GAN loss 0.5990 ', 'GAN acc 0.9648', 'Discriminator loss 0.7026', 'Discriminator accuracy 0.5156', 'Total loss: 1.3016', 'for batch', 4)
('GAN loss 0.6321 ', 'GAN acc 0.9297', 'Discriminator loss 0.6426', 'Discriminator accuracy 0.6309', 'Total loss: 1.2747', 'for batch', 5)
('GAN loss 0.6392 ', 'GAN acc 0.9258', 'Discriminator loss 0.6775', 'Discriminator accuracy 0.5332', 'Total loss: 1.3167', 'for batch', 6)
('GAN loss 0.6609 ', 'GAN acc 0.8711', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.5195', 'Total loss: 1.3464', 'for batch', 7)
('GAN loss 0.6709 ', 'GAN acc 0.8828', 'Discriminator loss 0.6340', 'Discriminator accuracy 0.6367', 'Total loss: 1.3048', 'for batch', 8)
('GAN loss 0.6724 ', 'GAN acc 0.7812', 'Discriminator loss 0.6326', 'Discriminator accuracy 0.6250', 'Total loss: 1.3050', 'for batch', 9)
('GAN loss 0.6846 ', 'GAN acc 0.7773', 'Discriminator loss 0.6542', 'Discriminator accuracy 0.6660', 'Total loss: 1.3389', 'for batch', 10)
('GAN loss 0.6958 ', 'GAN acc 0.6211', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5312', 'Total loss: 1.3666', 'for batch', 11)
('GAN loss 0.7295 ', 'GAN acc 0.3203', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5352', 'Total loss: 1.4082', 'for batch', 12)
('GAN loss 0.7273 ', 'GAN acc 0.2812', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.5762', 'Total loss: 1.4121', 'for batch', 13)
('GAN loss 0.7309 ', 'GAN acc 0.1875', 'Discriminator loss 0.6867', 'Discriminator accuracy 0.5156', 'Total loss: 1.4176', 'for batch', 14)
('GAN loss 0.7204 ', 'GAN acc 0.2773', 'Discriminator loss 0.6914', 'Discriminator accuracy 0.5234', 'Total loss: 1.4118', 'for batch', 15)
('GAN loss 0.7060 ', 'GAN acc 0.4023', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.5723', 'Total loss: 1.3596', 'for batch', 16)
('GAN loss 0.7088 ', 'GAN acc 0.3984', 'Discriminator loss 0.6870', 'Discriminator accuracy 0.5547', 'Total loss: 1.3958', 'for batch', 17)
('GAN loss 0.7499 ', 'GAN acc 0.2500', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.6074', 'Total loss: 1.4290', 'for batch', 18)
('GAN loss 0.7888 ', 'GAN acc 0.1055', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.5840', 'Total loss: 1.4538', 'for batch', 19)
('GAN loss 0.7012 ', 'GAN acc 0.6562', 'Discriminator loss 0.6102', 'Discriminator accuracy 0.5059', 'Total loss: 1.3114', 'for batch', 20)
('GAN loss 0.7244 ', 'GAN acc 0.6602', 'Discriminator loss 0.6013', 'Discriminator accuracy 0.6875', 'Total loss: 1.3257', 'for batch', 21)
('GAN loss 0.6641 ', 'GAN acc 0.8867', 'Discriminator loss 0.6201', 'Discriminator accuracy 0.6094', 'Total loss: 1.2842', 'for batch', 22)
('GAN loss 0.6415 ', 'GAN acc 0.9688', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5039', 'Total loss: 1.3168', 'for batch', 23)
('GAN loss 0.6038 ', 'GAN acc 0.9727', 'Discriminator loss 0.6625', 'Discriminator accuracy 0.5371', 'Total loss: 1.2663', 'for batch', 24)
('GAN loss 0.6001 ', 'GAN acc 0.9727', 'Discriminator loss 0.6404', 'Discriminator accuracy 0.5723', 'Total loss: 1.2405', 'for batch', 25)
('GAN loss 0.6072 ', 'GAN acc 0.9844', 'Discriminator loss 0.6395', 'Discriminator accuracy 0.6113', 'Total loss: 1.2468', 'for batch', 26)
('GAN loss 0.6143 ', 'GAN acc 0.9766', 'Discriminator loss 0.6032', 'Discriminator accuracy 0.6328', 'Total loss: 1.2175', 'for batch', 27)
('GAN loss 0.6813 ', 'GAN acc 0.9023', 'Discriminator loss 0.5812', 'Discriminator accuracy 0.7148', 'Total loss: 1.2625', 'for batch', 28)
('GAN loss 0.6340 ', 'GAN acc 0.9609', 'Discriminator loss 0.6364', 'Discriminator accuracy 0.5762', 'Total loss: 1.2704', 'for batch', 29)
('GAN loss 0.6984 ', 'GAN acc 0.5312', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.5781', 'Total loss: 1.3529', 'for batch', 30)
('GAN loss 0.6997 ', 'GAN acc 0.5625', 'Discriminator loss 0.6302', 'Discriminator accuracy 0.6367', 'Total loss: 1.3299', 'for batch', 31)
('GAN loss 0.7029 ', 'GAN acc 0.5195', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.5645', 'Total loss: 1.3730', 'for batch', 32)
('GAN loss 0.6664 ', 'GAN acc 0.8516', 'Discriminator loss 0.6376', 'Discriminator accuracy 0.6211', 'Total loss: 1.3040', 'for batch', 33)
('GAN loss 0.6484 ', 'GAN acc 0.9609', 'Discriminator loss 0.6304', 'Discriminator accuracy 0.5801', 'Total loss: 1.2789', 'for batch', 34)
('GAN loss 0.6313 ', 'GAN acc 0.9805', 'Discriminator loss 0.6000', 'Discriminator accuracy 0.6895', 'Total loss: 1.2312', 'for batch', 35)
('GAN loss 0.6173 ', 'GAN acc 0.9688', 'Discriminator loss 0.6154', 'Discriminator accuracy 0.6152', 'Total loss: 1.2327', 'for batch', 36)
('GAN loss 0.5914 ', 'GAN acc 0.9727', 'Discriminator loss 0.5849', 'Discriminator accuracy 0.6914', 'Total loss: 1.1763', 'for batch', 37)
('GAN loss 0.5095 ', 'GAN acc 0.9805', 'Discriminator loss 0.5965', 'Discriminator accuracy 0.5215', 'Total loss: 1.1061', 'for batch', 38)
('GAN loss 0.6210 ', 'GAN acc 0.9375', 'Discriminator loss 0.5328', 'Discriminator accuracy 0.7773', 'Total loss: 1.1539', 'for batch', 39)
('GAN loss 0.5206 ', 'GAN acc 0.9883', 'Discriminator loss 0.6124', 'Discriminator accuracy 0.5469', 'Total loss: 1.1329', 'for batch', 40)
('GAN loss 0.5358 ', 'GAN acc 0.9883', 'Discriminator loss 0.5517', 'Discriminator accuracy 0.7695', 'Total loss: 1.0875', 'for batch', 41)
('GAN loss 0.5259 ', 'GAN acc 0.9844', 'Discriminator loss 0.5980', 'Discriminator accuracy 0.6543', 'Total loss: 1.1239', 'for batch', 42)
('GAN loss 0.5156 ', 'GAN acc 0.9883', 'Discriminator loss 0.4598', 'Discriminator accuracy 0.8047', 'Total loss: 0.9754', 'for batch', 43)
('GAN loss 0.5488 ', 'GAN acc 0.9766', 'Discriminator loss 0.6863', 'Discriminator accuracy 0.5801', 'Total loss: 1.2352', 'for batch', 44)
('GAN loss 0.6117 ', 'GAN acc 0.9102', 'Discriminator loss 0.4982', 'Discriminator accuracy 0.7598', 'Total loss: 1.1099', 'for batch', 45)
('GAN loss 0.5774 ', 'GAN acc 0.9883', 'Discriminator loss 0.6018', 'Discriminator accuracy 0.5195', 'Total loss: 1.1791', 'for batch', 46)
('GAN loss 0.6248 ', 'GAN acc 0.9453', 'Discriminator loss 0.6300', 'Discriminator accuracy 0.6348', 'Total loss: 1.2547', 'for batch', 47)
('GAN loss 0.5802 ', 'GAN acc 0.9883', 'Discriminator loss 0.6572', 'Discriminator accuracy 0.6484', 'Total loss: 1.2374', 'for batch', 48)
('GAN loss 0.5629 ', 'GAN acc 0.9961', 'Discriminator loss 0.6159', 'Discriminator accuracy 0.6250', 'Total loss: 1.1787', 'for batch', 49)
('GAN loss 0.5687 ', 'GAN acc 0.9883', 'Discriminator loss 0.6020', 'Discriminator accuracy 0.6367', 'Total loss: 1.1707', 'for batch', 50)
('GAN loss 0.5528 ', 'GAN acc 0.9883', 'Discriminator loss 0.4476', 'Discriminator accuracy 0.8066', 'Total loss: 1.0004', 'for batch', 51)
('GAN loss 0.5594 ', 'GAN acc 0.9727', 'Discriminator loss 0.5444', 'Discriminator accuracy 0.6934', 'Total loss: 1.1038', 'for batch', 52)
('GAN loss 0.5156 ', 'GAN acc 0.9883', 'Discriminator loss 0.4340', 'Discriminator accuracy 0.8086', 'Total loss: 0.9496', 'for batch', 53)
('GAN loss 0.4723 ', 'GAN acc 0.9922', 'Discriminator loss 0.4100', 'Discriminator accuracy 0.8457', 'Total loss: 0.8822', 'for batch', 54)
('GAN loss 0.4697 ', 'GAN acc 0.9844', 'Discriminator loss 0.4427', 'Discriminator accuracy 0.8145', 'Total loss: 0.9123', 'for batch', 55)
('GAN loss 0.4656 ', 'GAN acc 0.9844', 'Discriminator loss 0.6743', 'Discriminator accuracy 0.5684', 'Total loss: 1.1399', 'for batch', 56)
('GAN loss 0.4972 ', 'GAN acc 0.9805', 'Discriminator loss 0.6097', 'Discriminator accuracy 0.6113', 'Total loss: 1.1069', 'for batch', 57)
('GAN loss 0.4763 ', 'GAN acc 0.9883', 'Discriminator loss 0.6329', 'Discriminator accuracy 0.6113', 'Total loss: 1.1092', 'for batch', 58)
('GAN loss 0.4795 ', 'GAN acc 0.9883', 'Discriminator loss 0.4736', 'Discriminator accuracy 0.8125', 'Total loss: 0.9531', 'for batch', 59)
('GAN loss 0.5085 ', 'GAN acc 0.9805', 'Discriminator loss 0.7256', 'Discriminator accuracy 0.5000', 'Total loss: 1.2341', 'for batch', 60)
('GAN loss 0.4929 ', 'GAN acc 0.9844', 'Discriminator loss 0.6021', 'Discriminator accuracy 0.6035', 'Total loss: 1.0949', 'for batch', 61)
('GAN loss 0.5007 ', 'GAN acc 0.9844', 'Discriminator loss 0.5666', 'Discriminator accuracy 0.6914', 'Total loss: 1.0673', 'for batch', 62)
('GAN loss 0.5016 ', 'GAN acc 0.9883', 'Discriminator loss 0.5388', 'Discriminator accuracy 0.6953', 'Total loss: 1.0404', 'for batch', 63)
('GAN loss 0.5400 ', 'GAN acc 0.9844', 'Discriminator loss 0.5036', 'Discriminator accuracy 0.7891', 'Total loss: 1.0436', 'for batch', 64)
('GAN loss 0.4761 ', 'GAN acc 0.9883', 'Discriminator loss 0.5193', 'Discriminator accuracy 0.6895', 'Total loss: 0.9954', 'for batch', 65)
('GAN loss 0.4599 ', 'GAN acc 0.9883', 'Discriminator loss 0.5144', 'Discriminator accuracy 0.7500', 'Total loss: 0.9743', 'for batch', 66)
('GAN loss 0.4277 ', 'GAN acc 0.9922', 'Discriminator loss 0.3581', 'Discriminator accuracy 0.8711', 'Total loss: 0.7858', 'for batch', 67)
('GAN loss 0.4587 ', 'GAN acc 0.9844', 'Discriminator loss 0.5528', 'Discriminator accuracy 0.6992', 'Total loss: 1.0115', 'for batch', 68)
('GAN loss 0.4211 ', 'GAN acc 0.9883', 'Discriminator loss 0.4637', 'Discriminator accuracy 0.7812', 'Total loss: 0.8849', 'for batch', 69)
('GAN loss 0.4135 ', 'GAN acc 0.9922', 'Discriminator loss 0.4489', 'Discriminator accuracy 0.7988', 'Total loss: 0.8624', 'for batch', 70)
('GAN loss 0.4488 ', 'GAN acc 0.9883', 'Discriminator loss 0.3884', 'Discriminator accuracy 0.8184', 'Total loss: 0.8372', 'for batch', 71)
('GAN loss 0.3815 ', 'GAN acc 0.9961', 'Discriminator loss 0.5318', 'Discriminator accuracy 0.7031', 'Total loss: 0.9134', 'for batch', 72)
('GAN loss 0.3979 ', 'GAN acc 0.9961', 'Discriminator loss 0.4296', 'Discriminator accuracy 0.8086', 'Total loss: 0.8275', 'for batch', 73)
('GAN loss 0.3982 ', 'GAN acc 1.0000', 'Discriminator loss 0.4803', 'Discriminator accuracy 0.7500', 'Total loss: 0.8785', 'for batch', 74)
('GAN loss 0.3945 ', 'GAN acc 0.9883', 'Discriminator loss 0.5460', 'Discriminator accuracy 0.6934', 'Total loss: 0.9405', 'for batch', 75)
('GAN loss 0.3746 ', 'GAN acc 0.9922', 'Discriminator loss 0.2302', 'Discriminator accuracy 0.9863', 'Total loss: 0.6048', 'for batch', 76)
('GAN loss 0.5315 ', 'GAN acc 0.9609', 'Discriminator loss 0.4151', 'Discriminator accuracy 0.8164', 'Total loss: 0.9466', 'for batch', 77)
('GAN loss 0.4949 ', 'GAN acc 0.9844', 'Discriminator loss 0.7484', 'Discriminator accuracy 0.5020', 'Total loss: 1.2433', 'for batch', 78)
('GAN loss 0.6601 ', 'GAN acc 0.8555', 'Discriminator loss 0.6963', 'Discriminator accuracy 0.5156', 'Total loss: 1.3564', 'for batch', 79)
('GAN loss 0.7730 ', 'GAN acc 0.0859', 'Discriminator loss 0.6798', 'Discriminator accuracy 0.5156', 'Total loss: 1.4528', 'for batch', 80)
('GAN loss 0.9671 ', 'GAN acc 0.0000', 'Discriminator loss 0.6631', 'Discriminator accuracy 0.6895', 'Total loss: 1.6301', 'for batch', 81)
('GAN loss 0.8222 ', 'GAN acc 0.0312', 'Discriminator loss 0.6965', 'Discriminator accuracy 0.4922', 'Total loss: 1.5187', 'for batch', 82)
('GAN loss 0.6809 ', 'GAN acc 0.6445', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.4883', 'Total loss: 1.3768', 'for batch', 83)
('GAN loss 0.7795 ', 'GAN acc 0.0898', 'Discriminator loss 0.6904', 'Discriminator accuracy 0.5176', 'Total loss: 1.4699', 'for batch', 84)
('GAN loss 0.7173 ', 'GAN acc 0.5234', 'Discriminator loss 0.6888', 'Discriminator accuracy 0.4883', 'Total loss: 1.4061', 'for batch', 85)
('GAN loss 0.7128 ', 'GAN acc 0.4219', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5215', 'Total loss: 1.4018', 'for batch', 86)
('GAN loss 0.7282 ', 'GAN acc 0.3867', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5625', 'Total loss: 1.4121', 'for batch', 87)
('GAN loss 0.7255 ', 'GAN acc 0.3984', 'Discriminator loss 0.6844', 'Discriminator accuracy 0.5488', 'Total loss: 1.4099', 'for batch', 88)
('GAN loss 0.7476 ', 'GAN acc 0.3086', 'Discriminator loss 0.6884', 'Discriminator accuracy 0.5234', 'Total loss: 1.4360', 'for batch', 89)
('GAN loss 0.7398 ', 'GAN acc 0.3867', 'Discriminator loss 0.6827', 'Discriminator accuracy 0.5352', 'Total loss: 1.4225', 'for batch', 90)
('GAN loss 0.7312 ', 'GAN acc 0.3750', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5254', 'Total loss: 1.4207', 'for batch', 91)
('GAN loss 0.7860 ', 'GAN acc 0.1758', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5625', 'Total loss: 1.4613', 'for batch', 92)
('GAN loss 0.7396 ', 'GAN acc 0.3555', 'Discriminator loss 0.6924', 'Discriminator accuracy 0.4902', 'Total loss: 1.4320', 'for batch', 93)
('GAN loss 0.7038 ', 'GAN acc 0.5977', 'Discriminator loss 0.6836', 'Discriminator accuracy 0.5469', 'Total loss: 1.3874', 'for batch', 94)
('GAN loss 0.7119 ', 'GAN acc 0.5547', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5312', 'Total loss: 1.3792', 'for batch', 95)
('GAN loss 0.7067 ', 'GAN acc 0.5195', 'Discriminator loss 0.6786', 'Discriminator accuracy 0.5273', 'Total loss: 1.3853', 'for batch', 96)
('GAN loss 0.6995 ', 'GAN acc 0.4727', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.4805', 'Total loss: 1.3876', 'for batch', 97)
('GAN loss 0.7143 ', 'GAN acc 0.4062', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.5430', 'Total loss: 1.3937', 'for batch', 98)
('GAN loss 0.7119 ', 'GAN acc 0.3555', 'Discriminator loss 0.7053', 'Discriminator accuracy 0.4863', 'Total loss: 1.4172', 'for batch', 99)
('GAN loss 0.7053 ', 'GAN acc 0.3555', 'Discriminator loss 0.6949', 'Discriminator accuracy 0.5098', 'Total loss: 1.4002', 'for batch', 100)
('GAN loss 0.7632 ', 'GAN acc 0.2031', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5723', 'Total loss: 1.4385', 'for batch', 101)
('GAN loss 0.7497 ', 'GAN acc 0.2852', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.5684', 'Total loss: 1.4394', 'for batch', 102)
('GAN loss 0.7315 ', 'GAN acc 0.3633', 'Discriminator loss 0.6893', 'Discriminator accuracy 0.5078', 'Total loss: 1.4208', 'for batch', 103)
('GAN loss 0.7206 ', 'GAN acc 0.4297', 'Discriminator loss 0.6923', 'Discriminator accuracy 0.4980', 'Total loss: 1.4129', 'for batch', 104)
('GAN loss 0.7207 ', 'GAN acc 0.5430', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.4941', 'Total loss: 1.4073', 'for batch', 105)
('GAN loss 0.7076 ', 'GAN acc 0.4609', 'Discriminator loss 0.6915', 'Discriminator accuracy 0.5078', 'Total loss: 1.3991', 'for batch', 106)
('GAN loss 0.7375 ', 'GAN acc 0.5195', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.5078', 'Total loss: 1.4264', 'for batch', 107)
('GAN loss 0.7306 ', 'GAN acc 0.4375', 'Discriminator loss 0.6864', 'Discriminator accuracy 0.5176', 'Total loss: 1.4171', 'for batch', 108)
('GAN loss 0.7194 ', 'GAN acc 0.4805', 'Discriminator loss 0.6907', 'Discriminator accuracy 0.5586', 'Total loss: 1.4101', 'for batch', 109)
('GAN loss 0.7178 ', 'GAN acc 0.4727', 'Discriminator loss 0.6829', 'Discriminator accuracy 0.5781', 'Total loss: 1.4007', 'for batch', 110)
('GAN loss 0.7117 ', 'GAN acc 0.5039', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5371', 'Total loss: 1.3999', 'for batch', 111)
('GAN loss 0.6964 ', 'GAN acc 0.6172', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.5000', 'Total loss: 1.3892', 'for batch', 112)
('GAN loss 0.6886 ', 'GAN acc 0.6992', 'Discriminator loss 0.6878', 'Discriminator accuracy 0.5059', 'Total loss: 1.3765', 'for batch', 113)
('GAN loss 0.6894 ', 'GAN acc 0.7422', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5117', 'Total loss: 1.3755', 'for batch', 114)
('GAN loss 0.6966 ', 'GAN acc 0.8086', 'Discriminator loss 0.6836', 'Discriminator accuracy 0.4902', 'Total loss: 1.3802', 'for batch', 115)
('GAN loss 0.6830 ', 'GAN acc 0.7969', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5723', 'Total loss: 1.3487', 'for batch', 116)
('GAN loss 0.6977 ', 'GAN acc 0.7188', 'Discriminator loss 0.6776', 'Discriminator accuracy 0.5215', 'Total loss: 1.3753', 'for batch', 117)
('GAN loss 0.7051 ', 'GAN acc 0.6484', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5059', 'Total loss: 1.3844', 'for batch', 118)
('GAN loss 0.7060 ', 'GAN acc 0.6680', 'Discriminator loss 0.6590', 'Discriminator accuracy 0.5723', 'Total loss: 1.3649', 'for batch', 119)
('GAN loss 0.6794 ', 'GAN acc 0.7500', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5371', 'Total loss: 1.3576', 'for batch', 120)
('GAN loss 0.6789 ', 'GAN acc 0.7188', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5195', 'Total loss: 1.3608', 'for batch', 121)
('GAN loss 0.6971 ', 'GAN acc 0.7461', 'Discriminator loss 0.6401', 'Discriminator accuracy 0.6230', 'Total loss: 1.3373', 'for batch', 122)
('GAN loss 0.6696 ', 'GAN acc 0.7383', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.5488', 'Total loss: 1.3507', 'for batch', 123)
('GAN loss 0.6720 ', 'GAN acc 0.7695', 'Discriminator loss 0.6986', 'Discriminator accuracy 0.5078', 'Total loss: 1.3706', 'for batch', 124)
('GAN loss 0.6608 ', 'GAN acc 0.7227', 'Discriminator loss 0.6288', 'Discriminator accuracy 0.6406', 'Total loss: 1.2896', 'for batch', 125)
('GAN loss 0.6597 ', 'GAN acc 0.7461', 'Discriminator loss 0.6721', 'Discriminator accuracy 0.5371', 'Total loss: 1.3318', 'for batch', 126)
('GAN loss 0.6890 ', 'GAN acc 0.6836', 'Discriminator loss 0.6918', 'Discriminator accuracy 0.5078', 'Total loss: 1.3808', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.52751809)
('DISCRIMINATOR_Imagem FAKE=', 0.49485821)
('Discriminator trained', 92, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.644315')
----------------------------------
('Epoch', 12, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6737 ', 'GAN acc 0.7539', 'Discriminator loss 0.6584', 'Discriminator accuracy 0.5703', 'Total loss: 1.3322', 'for batch', 0)
('GAN loss 0.6655 ', 'GAN acc 0.8047', 'Discriminator loss 0.6430', 'Discriminator accuracy 0.5781', 'Total loss: 1.3085', 'for batch', 1)
('GAN loss 0.6488 ', 'GAN acc 0.8789', 'Discriminator loss 0.6576', 'Discriminator accuracy 0.5215', 'Total loss: 1.3064', 'for batch', 2)
('GAN loss 0.6578 ', 'GAN acc 0.9023', 'Discriminator loss 0.6518', 'Discriminator accuracy 0.5918', 'Total loss: 1.3096', 'for batch', 3)
('GAN loss 0.6821 ', 'GAN acc 0.9219', 'Discriminator loss 0.6925', 'Discriminator accuracy 0.4883', 'Total loss: 1.3746', 'for batch', 4)
('GAN loss 0.6523 ', 'GAN acc 0.9219', 'Discriminator loss 0.6179', 'Discriminator accuracy 0.6406', 'Total loss: 1.2702', 'for batch', 5)
('GAN loss 0.6519 ', 'GAN acc 0.9180', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.5664', 'Total loss: 1.3076', 'for batch', 6)
('GAN loss 0.6773 ', 'GAN acc 0.8945', 'Discriminator loss 0.7034', 'Discriminator accuracy 0.5234', 'Total loss: 1.3807', 'for batch', 7)
('GAN loss 0.6523 ', 'GAN acc 0.9062', 'Discriminator loss 0.6294', 'Discriminator accuracy 0.5918', 'Total loss: 1.2817', 'for batch', 8)
('GAN loss 0.6569 ', 'GAN acc 0.8945', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.5371', 'Total loss: 1.3326', 'for batch', 9)
('GAN loss 0.6975 ', 'GAN acc 0.6992', 'Discriminator loss 0.6415', 'Discriminator accuracy 0.6309', 'Total loss: 1.3391', 'for batch', 10)
('GAN loss 0.6519 ', 'GAN acc 0.8984', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.5176', 'Total loss: 1.3369', 'for batch', 11)
('GAN loss 0.6639 ', 'GAN acc 0.8359', 'Discriminator loss 0.6461', 'Discriminator accuracy 0.5742', 'Total loss: 1.3100', 'for batch', 12)
('GAN loss 0.6553 ', 'GAN acc 0.8867', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.5703', 'Total loss: 1.3293', 'for batch', 13)
('GAN loss 0.6659 ', 'GAN acc 0.8359', 'Discriminator loss 0.6910', 'Discriminator accuracy 0.5098', 'Total loss: 1.3569', 'for batch', 14)
('GAN loss 0.6734 ', 'GAN acc 0.7891', 'Discriminator loss 0.6914', 'Discriminator accuracy 0.5117', 'Total loss: 1.3648', 'for batch', 15)
('GAN loss 0.6721 ', 'GAN acc 0.8203', 'Discriminator loss 0.6665', 'Discriminator accuracy 0.5586', 'Total loss: 1.3387', 'for batch', 16)
('GAN loss 0.6857 ', 'GAN acc 0.6875', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5410', 'Total loss: 1.3674', 'for batch', 17)
('GAN loss 0.7077 ', 'GAN acc 0.5938', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.5469', 'Total loss: 1.3914', 'for batch', 18)
('GAN loss 0.7218 ', 'GAN acc 0.4883', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.5625', 'Total loss: 1.4072', 'for batch', 19)
('GAN loss 0.6618 ', 'GAN acc 0.9336', 'Discriminator loss 0.6564', 'Discriminator accuracy 0.5391', 'Total loss: 1.3182', 'for batch', 20)
('GAN loss 0.6102 ', 'GAN acc 0.9766', 'Discriminator loss 0.6162', 'Discriminator accuracy 0.5586', 'Total loss: 1.2264', 'for batch', 21)
('GAN loss 0.5910 ', 'GAN acc 0.9805', 'Discriminator loss 0.5789', 'Discriminator accuracy 0.6953', 'Total loss: 1.1700', 'for batch', 22)
('GAN loss 0.6064 ', 'GAN acc 0.9766', 'Discriminator loss 0.6075', 'Discriminator accuracy 0.6387', 'Total loss: 1.2138', 'for batch', 23)
('GAN loss 0.5652 ', 'GAN acc 0.9727', 'Discriminator loss 0.6386', 'Discriminator accuracy 0.6133', 'Total loss: 1.2038', 'for batch', 24)
('GAN loss 0.5674 ', 'GAN acc 0.9766', 'Discriminator loss 0.7140', 'Discriminator accuracy 0.4941', 'Total loss: 1.2814', 'for batch', 25)
('GAN loss 0.5826 ', 'GAN acc 0.9805', 'Discriminator loss 0.6572', 'Discriminator accuracy 0.5625', 'Total loss: 1.2398', 'for batch', 26)
('GAN loss 0.6115 ', 'GAN acc 0.9766', 'Discriminator loss 0.6970', 'Discriminator accuracy 0.5176', 'Total loss: 1.3086', 'for batch', 27)
('GAN loss 0.6224 ', 'GAN acc 0.9766', 'Discriminator loss 0.6424', 'Discriminator accuracy 0.5742', 'Total loss: 1.2648', 'for batch', 28)
('GAN loss 0.6330 ', 'GAN acc 0.9609', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5703', 'Total loss: 1.2956', 'for batch', 29)
('GAN loss 0.6504 ', 'GAN acc 0.9336', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.5703', 'Total loss: 1.3136', 'for batch', 30)
('GAN loss 0.7046 ', 'GAN acc 0.5117', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5684', 'Total loss: 1.3822', 'for batch', 31)
('GAN loss 0.6653 ', 'GAN acc 0.9258', 'Discriminator loss 0.6692', 'Discriminator accuracy 0.4941', 'Total loss: 1.3344', 'for batch', 32)
('GAN loss 0.6576 ', 'GAN acc 0.9570', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.5156', 'Total loss: 1.3173', 'for batch', 33)
('GAN loss 0.6548 ', 'GAN acc 0.9453', 'Discriminator loss 0.5905', 'Discriminator accuracy 0.6387', 'Total loss: 1.2453', 'for batch', 34)
('GAN loss 0.6188 ', 'GAN acc 0.9844', 'Discriminator loss 0.5651', 'Discriminator accuracy 0.6641', 'Total loss: 1.1839', 'for batch', 35)
('GAN loss 0.6144 ', 'GAN acc 0.9688', 'Discriminator loss 0.6803', 'Discriminator accuracy 0.5586', 'Total loss: 1.2946', 'for batch', 36)
('GAN loss 0.5881 ', 'GAN acc 0.9766', 'Discriminator loss 0.6008', 'Discriminator accuracy 0.5234', 'Total loss: 1.1889', 'for batch', 37)
('GAN loss 0.5893 ', 'GAN acc 0.9844', 'Discriminator loss 0.6017', 'Discriminator accuracy 0.6328', 'Total loss: 1.1910', 'for batch', 38)
('GAN loss 0.5833 ', 'GAN acc 0.9766', 'Discriminator loss 0.6816', 'Discriminator accuracy 0.5742', 'Total loss: 1.2648', 'for batch', 39)
('GAN loss 0.6047 ', 'GAN acc 0.9688', 'Discriminator loss 0.5972', 'Discriminator accuracy 0.6289', 'Total loss: 1.2019', 'for batch', 40)
('GAN loss 0.5776 ', 'GAN acc 0.9883', 'Discriminator loss 0.5357', 'Discriminator accuracy 0.7227', 'Total loss: 1.1133', 'for batch', 41)
('GAN loss 0.5738 ', 'GAN acc 0.9844', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5234', 'Total loss: 1.2447', 'for batch', 42)
('GAN loss 0.5748 ', 'GAN acc 0.9727', 'Discriminator loss 0.5511', 'Discriminator accuracy 0.7285', 'Total loss: 1.1259', 'for batch', 43)
('GAN loss 0.5752 ', 'GAN acc 0.9766', 'Discriminator loss 0.6656', 'Discriminator accuracy 0.5293', 'Total loss: 1.2407', 'for batch', 44)
('GAN loss 0.5801 ', 'GAN acc 0.9922', 'Discriminator loss 0.6166', 'Discriminator accuracy 0.6230', 'Total loss: 1.1967', 'for batch', 45)
('GAN loss 0.6098 ', 'GAN acc 0.9531', 'Discriminator loss 0.6111', 'Discriminator accuracy 0.6445', 'Total loss: 1.2209', 'for batch', 46)
('GAN loss 0.5618 ', 'GAN acc 0.9883', 'Discriminator loss 0.6734', 'Discriminator accuracy 0.4922', 'Total loss: 1.2353', 'for batch', 47)
('GAN loss 0.5566 ', 'GAN acc 0.9883', 'Discriminator loss 0.5784', 'Discriminator accuracy 0.6797', 'Total loss: 1.1351', 'for batch', 48)
('GAN loss 0.5598 ', 'GAN acc 0.9883', 'Discriminator loss 0.6446', 'Discriminator accuracy 0.6328', 'Total loss: 1.2044', 'for batch', 49)
('GAN loss 0.5614 ', 'GAN acc 0.9883', 'Discriminator loss 0.6399', 'Discriminator accuracy 0.5957', 'Total loss: 1.2013', 'for batch', 50)
('GAN loss 0.6018 ', 'GAN acc 0.9766', 'Discriminator loss 0.5656', 'Discriminator accuracy 0.6719', 'Total loss: 1.1674', 'for batch', 51)
('GAN loss 0.5513 ', 'GAN acc 0.9805', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.5137', 'Total loss: 1.2224', 'for batch', 52)
('GAN loss 0.5438 ', 'GAN acc 0.9805', 'Discriminator loss 0.5460', 'Discriminator accuracy 0.7598', 'Total loss: 1.0899', 'for batch', 53)
('GAN loss 0.7008 ', 'GAN acc 0.5742', 'Discriminator loss 0.5804', 'Discriminator accuracy 0.7852', 'Total loss: 1.2812', 'for batch', 54)
('GAN loss 0.9313 ', 'GAN acc 0.0078', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.5332', 'Total loss: 1.6179', 'for batch', 55)
('GAN loss 1.1450 ', 'GAN acc 0.0000', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.6230', 'Total loss: 1.8123', 'for batch', 56)
('GAN loss 0.8086 ', 'GAN acc 0.0781', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.6719', 'Total loss: 1.4763', 'for batch', 57)
('GAN loss 0.7742 ', 'GAN acc 0.0859', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.5879', 'Total loss: 1.4607', 'for batch', 58)
('GAN loss 0.6999 ', 'GAN acc 0.5820', 'Discriminator loss 0.7134', 'Discriminator accuracy 0.4961', 'Total loss: 1.4133', 'for batch', 59)
('GAN loss 0.6962 ', 'GAN acc 0.5273', 'Discriminator loss 0.6924', 'Discriminator accuracy 0.5215', 'Total loss: 1.3886', 'for batch', 60)
('GAN loss 0.7265 ', 'GAN acc 0.2734', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.5273', 'Total loss: 1.4142', 'for batch', 61)
('GAN loss 0.6890 ', 'GAN acc 0.6484', 'Discriminator loss 0.6915', 'Discriminator accuracy 0.4863', 'Total loss: 1.3805', 'for batch', 62)
('GAN loss 0.6887 ', 'GAN acc 0.6250', 'Discriminator loss 0.6857', 'Discriminator accuracy 0.5352', 'Total loss: 1.3744', 'for batch', 63)
('GAN loss 0.7003 ', 'GAN acc 0.5234', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5801', 'Total loss: 1.3817', 'for batch', 64)
('GAN loss 0.7294 ', 'GAN acc 0.2422', 'Discriminator loss 0.6574', 'Discriminator accuracy 0.6367', 'Total loss: 1.3869', 'for batch', 65)
('GAN loss 0.7487 ', 'GAN acc 0.1562', 'Discriminator loss 0.6484', 'Discriminator accuracy 0.5801', 'Total loss: 1.3971', 'for batch', 66)
('GAN loss 0.7822 ', 'GAN acc 0.1484', 'Discriminator loss 0.6022', 'Discriminator accuracy 0.5430', 'Total loss: 1.3843', 'for batch', 67)
('GAN loss 0.5964 ', 'GAN acc 0.9688', 'Discriminator loss 0.6883', 'Discriminator accuracy 0.5137', 'Total loss: 1.2847', 'for batch', 68)
('GAN loss 0.5376 ', 'GAN acc 0.9922', 'Discriminator loss 0.6627', 'Discriminator accuracy 0.5879', 'Total loss: 1.2003', 'for batch', 69)
('GAN loss 0.5308 ', 'GAN acc 0.9922', 'Discriminator loss 0.6988', 'Discriminator accuracy 0.5273', 'Total loss: 1.2296', 'for batch', 70)
('GAN loss 0.5499 ', 'GAN acc 0.9922', 'Discriminator loss 0.7046', 'Discriminator accuracy 0.5566', 'Total loss: 1.2546', 'for batch', 71)
('GAN loss 0.6022 ', 'GAN acc 0.9766', 'Discriminator loss 0.6885', 'Discriminator accuracy 0.6016', 'Total loss: 1.2907', 'for batch', 72)
('GAN loss 0.6046 ', 'GAN acc 0.9727', 'Discriminator loss 0.7000', 'Discriminator accuracy 0.5078', 'Total loss: 1.3046', 'for batch', 73)
('GAN loss 0.5788 ', 'GAN acc 1.0000', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.4863', 'Total loss: 1.2438', 'for batch', 74)
('GAN loss 0.5983 ', 'GAN acc 0.9805', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.5996', 'Total loss: 1.2535', 'for batch', 75)
('GAN loss 0.6445 ', 'GAN acc 0.9258', 'Discriminator loss 0.6528', 'Discriminator accuracy 0.6133', 'Total loss: 1.2973', 'for batch', 76)
('GAN loss 0.6880 ', 'GAN acc 0.6328', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5176', 'Total loss: 1.3652', 'for batch', 77)
('GAN loss 0.6623 ', 'GAN acc 0.7266', 'Discriminator loss 0.6946', 'Discriminator accuracy 0.4863', 'Total loss: 1.3569', 'for batch', 78)
('GAN loss 0.6558 ', 'GAN acc 0.7305', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.5078', 'Total loss: 1.3494', 'for batch', 79)
('GAN loss 0.6620 ', 'GAN acc 0.7617', 'Discriminator loss 0.6967', 'Discriminator accuracy 0.5156', 'Total loss: 1.3588', 'for batch', 80)
('GAN loss 0.6814 ', 'GAN acc 0.6133', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.5547', 'Total loss: 1.3694', 'for batch', 81)
('GAN loss 0.6893 ', 'GAN acc 0.4766', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5410', 'Total loss: 1.3753', 'for batch', 82)
('GAN loss 0.7140 ', 'GAN acc 0.2734', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5566', 'Total loss: 1.3931', 'for batch', 83)
('GAN loss 0.7304 ', 'GAN acc 0.2422', 'Discriminator loss 0.6560', 'Discriminator accuracy 0.6387', 'Total loss: 1.3864', 'for batch', 84)
('GAN loss 0.7659 ', 'GAN acc 0.2305', 'Discriminator loss 0.6688', 'Discriminator accuracy 0.6172', 'Total loss: 1.4347', 'for batch', 85)
('GAN loss 0.7536 ', 'GAN acc 0.2852', 'Discriminator loss 0.6749', 'Discriminator accuracy 0.5742', 'Total loss: 1.4285', 'for batch', 86)
('GAN loss 0.6659 ', 'GAN acc 0.7695', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5215', 'Total loss: 1.3253', 'for batch', 87)
('GAN loss 0.6461 ', 'GAN acc 0.7891', 'Discriminator loss 0.6343', 'Discriminator accuracy 0.6367', 'Total loss: 1.2804', 'for batch', 88)
('GAN loss 0.6866 ', 'GAN acc 0.6992', 'Discriminator loss 0.6870', 'Discriminator accuracy 0.5586', 'Total loss: 1.3736', 'for batch', 89)
('GAN loss 0.7112 ', 'GAN acc 0.6367', 'Discriminator loss 0.5999', 'Discriminator accuracy 0.8047', 'Total loss: 1.3111', 'for batch', 90)
('GAN loss 0.6765 ', 'GAN acc 0.7500', 'Discriminator loss 0.6384', 'Discriminator accuracy 0.5801', 'Total loss: 1.3149', 'for batch', 91)
('GAN loss 0.6418 ', 'GAN acc 0.8984', 'Discriminator loss 0.6651', 'Discriminator accuracy 0.5625', 'Total loss: 1.3069', 'for batch', 92)
('GAN loss 0.6221 ', 'GAN acc 0.9414', 'Discriminator loss 0.5958', 'Discriminator accuracy 0.6133', 'Total loss: 1.2179', 'for batch', 93)
('GAN loss 0.5966 ', 'GAN acc 0.9648', 'Discriminator loss 0.5492', 'Discriminator accuracy 0.6777', 'Total loss: 1.1458', 'for batch', 94)
('GAN loss 0.6498 ', 'GAN acc 0.8867', 'Discriminator loss 0.6595', 'Discriminator accuracy 0.6035', 'Total loss: 1.3093', 'for batch', 95)
('GAN loss 0.5744 ', 'GAN acc 0.9766', 'Discriminator loss 0.5855', 'Discriminator accuracy 0.5703', 'Total loss: 1.1598', 'for batch', 96)
('GAN loss 0.5682 ', 'GAN acc 0.9844', 'Discriminator loss 0.6128', 'Discriminator accuracy 0.6328', 'Total loss: 1.1810', 'for batch', 97)
('GAN loss 0.6073 ', 'GAN acc 0.9844', 'Discriminator loss 0.7158', 'Discriminator accuracy 0.5078', 'Total loss: 1.3230', 'for batch', 98)
('GAN loss 0.5903 ', 'GAN acc 0.9844', 'Discriminator loss 0.4996', 'Discriminator accuracy 0.7617', 'Total loss: 1.0898', 'for batch', 99)
('GAN loss 0.5528 ', 'GAN acc 0.9922', 'Discriminator loss 0.5457', 'Discriminator accuracy 0.7070', 'Total loss: 1.0986', 'for batch', 100)
('GAN loss 0.5764 ', 'GAN acc 0.9805', 'Discriminator loss 0.6474', 'Discriminator accuracy 0.5742', 'Total loss: 1.2239', 'for batch', 101)
('GAN loss 0.6457 ', 'GAN acc 0.9062', 'Discriminator loss 0.6919', 'Discriminator accuracy 0.5176', 'Total loss: 1.3375', 'for batch', 102)
('GAN loss 0.6264 ', 'GAN acc 0.9648', 'Discriminator loss 0.6515', 'Discriminator accuracy 0.5469', 'Total loss: 1.2779', 'for batch', 103)
('GAN loss 0.6225 ', 'GAN acc 0.9531', 'Discriminator loss 0.5963', 'Discriminator accuracy 0.6641', 'Total loss: 1.2187', 'for batch', 104)
('GAN loss 0.6755 ', 'GAN acc 0.7734', 'Discriminator loss 0.6425', 'Discriminator accuracy 0.6543', 'Total loss: 1.3181', 'for batch', 105)
('GAN loss 0.6104 ', 'GAN acc 0.9844', 'Discriminator loss 0.6299', 'Discriminator accuracy 0.6133', 'Total loss: 1.2403', 'for batch', 106)
('GAN loss 0.5751 ', 'GAN acc 0.9844', 'Discriminator loss 0.4945', 'Discriminator accuracy 0.7559', 'Total loss: 1.0697', 'for batch', 107)
('GAN loss 0.5262 ', 'GAN acc 0.9883', 'Discriminator loss 0.5134', 'Discriminator accuracy 0.7676', 'Total loss: 1.0396', 'for batch', 108)
('GAN loss 0.4816 ', 'GAN acc 0.9922', 'Discriminator loss 0.4007', 'Discriminator accuracy 0.8516', 'Total loss: 0.8822', 'for batch', 109)
('GAN loss 0.4097 ', 'GAN acc 0.9805', 'Discriminator loss 0.4814', 'Discriminator accuracy 0.7695', 'Total loss: 0.8911', 'for batch', 110)
('GAN loss 1.0208 ', 'GAN acc 0.0078', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.5586', 'Total loss: 1.7097', 'for batch', 111)
('GAN loss 0.7496 ', 'GAN acc 0.1953', 'Discriminator loss 0.7020', 'Discriminator accuracy 0.5234', 'Total loss: 1.4516', 'for batch', 112)
('GAN loss 0.9395 ', 'GAN acc 0.0000', 'Discriminator loss 0.7178', 'Discriminator accuracy 0.5781', 'Total loss: 1.6573', 'for batch', 113)
('GAN loss 0.8402 ', 'GAN acc 0.0078', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.5781', 'Total loss: 1.5301', 'for batch', 114)
('GAN loss 0.8859 ', 'GAN acc 0.0039', 'Discriminator loss 0.6674', 'Discriminator accuracy 0.6328', 'Total loss: 1.5534', 'for batch', 115)
('GAN loss 0.8020 ', 'GAN acc 0.0469', 'Discriminator loss 0.6767', 'Discriminator accuracy 0.5645', 'Total loss: 1.4787', 'for batch', 116)
('GAN loss 0.7164 ', 'GAN acc 0.4570', 'Discriminator loss 0.6946', 'Discriminator accuracy 0.5410', 'Total loss: 1.4110', 'for batch', 117)
('GAN loss 0.7658 ', 'GAN acc 0.8516', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5078', 'Total loss: 1.4382', 'for batch', 118)
('GAN loss 0.6969 ', 'GAN acc 0.7461', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5078', 'Total loss: 1.3760', 'for batch', 119)
('GAN loss 0.7159 ', 'GAN acc 0.5859', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5352', 'Total loss: 1.3921', 'for batch', 120)
('GAN loss 0.7477 ', 'GAN acc 0.2148', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5488', 'Total loss: 1.4215', 'for batch', 121)
('GAN loss 0.7842 ', 'GAN acc 0.0586', 'Discriminator loss 0.6722', 'Discriminator accuracy 0.6270', 'Total loss: 1.4564', 'for batch', 122)
('GAN loss 0.8386 ', 'GAN acc 0.0195', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.6641', 'Total loss: 1.5038', 'for batch', 123)
('GAN loss 0.8229 ', 'GAN acc 0.0430', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.6172', 'Total loss: 1.4875', 'for batch', 124)
('GAN loss 0.7545 ', 'GAN acc 0.1953', 'Discriminator loss 0.6869', 'Discriminator accuracy 0.5098', 'Total loss: 1.4414', 'for batch', 125)
('GAN loss 0.6739 ', 'GAN acc 0.6953', 'Discriminator loss 0.6912', 'Discriminator accuracy 0.4805', 'Total loss: 1.3650', 'for batch', 126)
('GAN loss 0.7318 ', 'GAN acc 0.7227', 'Discriminator loss 0.6864', 'Discriminator accuracy 0.5234', 'Total loss: 1.4182', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.5340094)
('DISCRIMINATOR_Imagem FAKE=', 0.5324617)
('Discriminator trained', 108, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.371975')
----------------------------------
('Epoch', 13, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7350 ', 'GAN acc 0.3242', 'Discriminator loss 0.6967', 'Discriminator accuracy 0.4961', 'Total loss: 1.4317', 'for batch', 0)
('GAN loss 0.7687 ', 'GAN acc 0.1133', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5156', 'Total loss: 1.4460', 'for batch', 1)
('GAN loss 0.7615 ', 'GAN acc 0.1562', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5918', 'Total loss: 1.4293', 'for batch', 2)
('GAN loss 0.7063 ', 'GAN acc 0.7031', 'Discriminator loss 0.6779', 'Discriminator accuracy 0.5586', 'Total loss: 1.3842', 'for batch', 3)
('GAN loss 0.6705 ', 'GAN acc 0.8438', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5176', 'Total loss: 1.3517', 'for batch', 4)
('GAN loss 0.6608 ', 'GAN acc 0.8359', 'Discriminator loss 0.6516', 'Discriminator accuracy 0.6660', 'Total loss: 1.3124', 'for batch', 5)
('GAN loss 0.6794 ', 'GAN acc 0.7266', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5801', 'Total loss: 1.3446', 'for batch', 6)
('GAN loss 0.6903 ', 'GAN acc 0.6289', 'Discriminator loss 0.6838', 'Discriminator accuracy 0.5059', 'Total loss: 1.3741', 'for batch', 7)
('GAN loss 0.6826 ', 'GAN acc 0.5977', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5352', 'Total loss: 1.3573', 'for batch', 8)
('GAN loss 0.6742 ', 'GAN acc 0.6055', 'Discriminator loss 0.6984', 'Discriminator accuracy 0.4863', 'Total loss: 1.3727', 'for batch', 9)
('GAN loss 0.8398 ', 'GAN acc 0.2109', 'Discriminator loss 0.5919', 'Discriminator accuracy 0.6094', 'Total loss: 1.4317', 'for batch', 10)
('GAN loss 0.5847 ', 'GAN acc 0.9570', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5332', 'Total loss: 1.2707', 'for batch', 11)
('GAN loss 0.6083 ', 'GAN acc 0.9414', 'Discriminator loss 0.6836', 'Discriminator accuracy 0.5566', 'Total loss: 1.2919', 'for batch', 12)
('GAN loss 0.6631 ', 'GAN acc 0.8398', 'Discriminator loss 0.6413', 'Discriminator accuracy 0.6250', 'Total loss: 1.3044', 'for batch', 13)
('GAN loss 0.7046 ', 'GAN acc 0.7383', 'Discriminator loss 0.6613', 'Discriminator accuracy 0.5801', 'Total loss: 1.3659', 'for batch', 14)
('GAN loss 0.6803 ', 'GAN acc 0.7656', 'Discriminator loss 0.6134', 'Discriminator accuracy 0.6523', 'Total loss: 1.2937', 'for batch', 15)
('GAN loss 0.5702 ', 'GAN acc 0.9883', 'Discriminator loss 0.5292', 'Discriminator accuracy 0.6758', 'Total loss: 1.0994', 'for batch', 16)
('GAN loss 0.5318 ', 'GAN acc 0.9766', 'Discriminator loss 0.5824', 'Discriminator accuracy 0.6797', 'Total loss: 1.1142', 'for batch', 17)
('GAN loss 0.5531 ', 'GAN acc 0.9688', 'Discriminator loss 0.6239', 'Discriminator accuracy 0.6328', 'Total loss: 1.1770', 'for batch', 18)
('GAN loss 0.5382 ', 'GAN acc 0.9883', 'Discriminator loss 0.5913', 'Discriminator accuracy 0.6445', 'Total loss: 1.1295', 'for batch', 19)
('GAN loss 0.4700 ', 'GAN acc 0.9805', 'Discriminator loss 0.4391', 'Discriminator accuracy 0.8145', 'Total loss: 0.9092', 'for batch', 20)
('GAN loss 0.4487 ', 'GAN acc 0.9844', 'Discriminator loss 0.5595', 'Discriminator accuracy 0.6895', 'Total loss: 1.0082', 'for batch', 21)
('GAN loss 0.4008 ', 'GAN acc 0.9961', 'Discriminator loss 0.3529', 'Discriminator accuracy 0.8828', 'Total loss: 0.7538', 'for batch', 22)
('GAN loss 0.4638 ', 'GAN acc 0.9531', 'Discriminator loss 0.4139', 'Discriminator accuracy 0.8145', 'Total loss: 0.8778', 'for batch', 23)
('GAN loss 0.4899 ', 'GAN acc 0.9453', 'Discriminator loss 0.8086', 'Discriminator accuracy 0.5195', 'Total loss: 1.2985', 'for batch', 24)
('GAN loss 0.5790 ', 'GAN acc 0.9258', 'Discriminator loss 0.7527', 'Discriminator accuracy 0.5117', 'Total loss: 1.3317', 'for batch', 25)
('GAN loss 0.6594 ', 'GAN acc 0.9219', 'Discriminator loss 0.6902', 'Discriminator accuracy 0.5293', 'Total loss: 1.3496', 'for batch', 26)
('GAN loss 0.6988 ', 'GAN acc 0.7656', 'Discriminator loss 0.6826', 'Discriminator accuracy 0.5332', 'Total loss: 1.3814', 'for batch', 27)
('GAN loss 0.7173 ', 'GAN acc 0.5508', 'Discriminator loss 0.6809', 'Discriminator accuracy 0.5391', 'Total loss: 1.3982', 'for batch', 28)
('GAN loss 0.7360 ', 'GAN acc 0.3828', 'Discriminator loss 0.6813', 'Discriminator accuracy 0.5488', 'Total loss: 1.4173', 'for batch', 29)
('GAN loss 0.7128 ', 'GAN acc 0.4570', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.5020', 'Total loss: 1.4022', 'for batch', 30)
('GAN loss 0.6993 ', 'GAN acc 0.5938', 'Discriminator loss 0.6918', 'Discriminator accuracy 0.4941', 'Total loss: 1.3911', 'for batch', 31)
('GAN loss 0.7021 ', 'GAN acc 0.6250', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.5293', 'Total loss: 1.3877', 'for batch', 32)
('GAN loss 0.7039 ', 'GAN acc 0.6172', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5312', 'Total loss: 1.3868', 'for batch', 33)
('GAN loss 0.7605 ', 'GAN acc 0.2773', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.5547', 'Total loss: 1.4363', 'for batch', 34)
('GAN loss 0.7921 ', 'GAN acc 0.2266', 'Discriminator loss 0.6508', 'Discriminator accuracy 0.5957', 'Total loss: 1.4429', 'for batch', 35)
('GAN loss 0.6879 ', 'GAN acc 0.9375', 'Discriminator loss 0.6696', 'Discriminator accuracy 0.5371', 'Total loss: 1.3576', 'for batch', 36)
('GAN loss 0.6990 ', 'GAN acc 0.9141', 'Discriminator loss 0.6612', 'Discriminator accuracy 0.5527', 'Total loss: 1.3602', 'for batch', 37)
('GAN loss 0.7160 ', 'GAN acc 0.7617', 'Discriminator loss 0.6528', 'Discriminator accuracy 0.5527', 'Total loss: 1.3688', 'for batch', 38)
('GAN loss 0.7191 ', 'GAN acc 0.7773', 'Discriminator loss 0.6549', 'Discriminator accuracy 0.5645', 'Total loss: 1.3740', 'for batch', 39)
('GAN loss 0.7088 ', 'GAN acc 0.6328', 'Discriminator loss 0.6550', 'Discriminator accuracy 0.5801', 'Total loss: 1.3638', 'for batch', 40)
('GAN loss 0.7222 ', 'GAN acc 0.5625', 'Discriminator loss 0.6691', 'Discriminator accuracy 0.5781', 'Total loss: 1.3913', 'for batch', 41)
('GAN loss 0.7195 ', 'GAN acc 0.6445', 'Discriminator loss 0.6803', 'Discriminator accuracy 0.5098', 'Total loss: 1.3999', 'for batch', 42)
('GAN loss 0.7724 ', 'GAN acc 0.4961', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5449', 'Total loss: 1.4449', 'for batch', 43)
('GAN loss 0.8677 ', 'GAN acc 0.1758', 'Discriminator loss 0.6720', 'Discriminator accuracy 0.5488', 'Total loss: 1.5397', 'for batch', 44)
('GAN loss 0.7059 ', 'GAN acc 0.6602', 'Discriminator loss 0.6690', 'Discriminator accuracy 0.5293', 'Total loss: 1.3748', 'for batch', 45)
('GAN loss 0.7070 ', 'GAN acc 0.7578', 'Discriminator loss 0.6757', 'Discriminator accuracy 0.5098', 'Total loss: 1.3828', 'for batch', 46)
('GAN loss 0.6856 ', 'GAN acc 0.7578', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5371', 'Total loss: 1.3738', 'for batch', 47)
('GAN loss 0.6932 ', 'GAN acc 0.6797', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5684', 'Total loss: 1.3715', 'for batch', 48)
('GAN loss 0.7054 ', 'GAN acc 0.6602', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5352', 'Total loss: 1.3950', 'for batch', 49)
('GAN loss 0.7015 ', 'GAN acc 0.7109', 'Discriminator loss 0.6524', 'Discriminator accuracy 0.5488', 'Total loss: 1.3540', 'for batch', 50)
('GAN loss 0.7158 ', 'GAN acc 0.6133', 'Discriminator loss 0.6142', 'Discriminator accuracy 0.6035', 'Total loss: 1.3301', 'for batch', 51)
('GAN loss 0.6775 ', 'GAN acc 0.8359', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5410', 'Total loss: 1.3527', 'for batch', 52)
('GAN loss 0.6835 ', 'GAN acc 0.7695', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.5391', 'Total loss: 1.3683', 'for batch', 53)
('GAN loss 0.7000 ', 'GAN acc 0.6914', 'Discriminator loss 0.6916', 'Discriminator accuracy 0.5234', 'Total loss: 1.3916', 'for batch', 54)
('GAN loss 0.7977 ', 'GAN acc 0.2188', 'Discriminator loss 0.6719', 'Discriminator accuracy 0.5938', 'Total loss: 1.4696', 'for batch', 55)
('GAN loss 0.8573 ', 'GAN acc 0.6484', 'Discriminator loss 0.6742', 'Discriminator accuracy 0.5215', 'Total loss: 1.5315', 'for batch', 56)
('GAN loss 0.7228 ', 'GAN acc 0.7578', 'Discriminator loss 0.6850', 'Discriminator accuracy 0.5117', 'Total loss: 1.4078', 'for batch', 57)
('GAN loss 0.6888 ', 'GAN acc 0.8672', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5684', 'Total loss: 1.3523', 'for batch', 58)
('GAN loss 0.8137 ', 'GAN acc 0.2109', 'Discriminator loss 0.6019', 'Discriminator accuracy 0.6855', 'Total loss: 1.4156', 'for batch', 59)
('GAN loss 0.7865 ', 'GAN acc 0.3594', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.6133', 'Total loss: 1.4401', 'for batch', 60)
('GAN loss 0.8363 ', 'GAN acc 0.0195', 'Discriminator loss 0.6619', 'Discriminator accuracy 0.7188', 'Total loss: 1.4982', 'for batch', 61)
('GAN loss 0.8082 ', 'GAN acc 0.0547', 'Discriminator loss 0.6597', 'Discriminator accuracy 0.7500', 'Total loss: 1.4679', 'for batch', 62)
('GAN loss 0.8189 ', 'GAN acc 0.0508', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5898', 'Total loss: 1.4936', 'for batch', 63)
('GAN loss 0.7473 ', 'GAN acc 0.3672', 'Discriminator loss 0.6940', 'Discriminator accuracy 0.4824', 'Total loss: 1.4413', 'for batch', 64)
('GAN loss 0.7728 ', 'GAN acc 0.1758', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5527', 'Total loss: 1.4528', 'for batch', 65)
('GAN loss 0.7793 ', 'GAN acc 0.1289', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.5156', 'Total loss: 1.4658', 'for batch', 66)
('GAN loss 0.7947 ', 'GAN acc 0.1875', 'Discriminator loss 0.7032', 'Discriminator accuracy 0.4824', 'Total loss: 1.4979', 'for batch', 67)
('GAN loss 2.0775 ', 'GAN acc 0.0000', 'Discriminator loss 0.6178', 'Discriminator accuracy 0.6191', 'Total loss: 2.6953', 'for batch', 68)
('GAN loss 2.2649 ', 'GAN acc 0.0000', 'Discriminator loss 0.5252', 'Discriminator accuracy 0.8984', 'Total loss: 2.7901', 'for batch', 69)
('GAN loss 1.7860 ', 'GAN acc 0.0000', 'Discriminator loss 0.5664', 'Discriminator accuracy 0.9609', 'Total loss: 2.3524', 'for batch', 70)
('GAN loss 1.0615 ', 'GAN acc 0.0195', 'Discriminator loss 0.6381', 'Discriminator accuracy 0.5059', 'Total loss: 1.6996', 'for batch', 71)
('GAN loss 0.8351 ', 'GAN acc 0.2305', 'Discriminator loss 0.6247', 'Discriminator accuracy 0.6895', 'Total loss: 1.4598', 'for batch', 72)
('GAN loss 0.7513 ', 'GAN acc 0.6680', 'Discriminator loss 0.5835', 'Discriminator accuracy 0.7070', 'Total loss: 1.3348', 'for batch', 73)
('GAN loss 0.6786 ', 'GAN acc 0.9258', 'Discriminator loss 0.4879', 'Discriminator accuracy 0.7969', 'Total loss: 1.1665', 'for batch', 74)
('GAN loss 0.7273 ', 'GAN acc 0.7578', 'Discriminator loss 0.4973', 'Discriminator accuracy 0.7207', 'Total loss: 1.2247', 'for batch', 75)
('GAN loss 0.6864 ', 'GAN acc 0.9336', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.5352', 'Total loss: 1.3761', 'for batch', 76)
('GAN loss 0.8430 ', 'GAN acc 0.9141', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.5391', 'Total loss: 1.4928', 'for batch', 77)
('GAN loss 0.9089 ', 'GAN acc 0.8047', 'Discriminator loss 0.6317', 'Discriminator accuracy 0.5645', 'Total loss: 1.5405', 'for batch', 78)
('GAN loss 0.8242 ', 'GAN acc 0.7109', 'Discriminator loss 0.6271', 'Discriminator accuracy 0.5703', 'Total loss: 1.4513', 'for batch', 79)
('GAN loss 0.8129 ', 'GAN acc 0.3125', 'Discriminator loss 0.6221', 'Discriminator accuracy 0.6562', 'Total loss: 1.4349', 'for batch', 80)
('GAN loss 0.8498 ', 'GAN acc 0.2305', 'Discriminator loss 0.6115', 'Discriminator accuracy 0.7480', 'Total loss: 1.4613', 'for batch', 81)
('GAN loss 0.8197 ', 'GAN acc 0.4727', 'Discriminator loss 0.6086', 'Discriminator accuracy 0.7285', 'Total loss: 1.4283', 'for batch', 82)
('GAN loss 0.7978 ', 'GAN acc 0.5938', 'Discriminator loss 0.6086', 'Discriminator accuracy 0.6641', 'Total loss: 1.4064', 'for batch', 83)
('GAN loss 0.7968 ', 'GAN acc 0.6094', 'Discriminator loss 0.5773', 'Discriminator accuracy 0.6895', 'Total loss: 1.3741', 'for batch', 84)
('GAN loss 1.0590 ', 'GAN acc 0.0664', 'Discriminator loss 0.5857', 'Discriminator accuracy 0.6797', 'Total loss: 1.6448', 'for batch', 85)
('GAN loss 0.8436 ', 'GAN acc 0.5391', 'Discriminator loss 0.6232', 'Discriminator accuracy 0.6562', 'Total loss: 1.4669', 'for batch', 86)
('GAN loss 0.8655 ', 'GAN acc 0.2305', 'Discriminator loss 0.6282', 'Discriminator accuracy 0.6465', 'Total loss: 1.4937', 'for batch', 87)
('GAN loss 1.0072 ', 'GAN acc 0.0273', 'Discriminator loss 0.6042', 'Discriminator accuracy 0.6582', 'Total loss: 1.6115', 'for batch', 88)
('GAN loss 0.9568 ', 'GAN acc 0.0469', 'Discriminator loss 0.5970', 'Discriminator accuracy 0.7793', 'Total loss: 1.5537', 'for batch', 89)
('GAN loss 0.9882 ', 'GAN acc 0.0625', 'Discriminator loss 0.6147', 'Discriminator accuracy 0.7148', 'Total loss: 1.6029', 'for batch', 90)
('GAN loss 1.0205 ', 'GAN acc 0.0859', 'Discriminator loss 0.6548', 'Discriminator accuracy 0.5879', 'Total loss: 1.6753', 'for batch', 91)
('GAN loss 0.9304 ', 'GAN acc 0.5586', 'Discriminator loss 0.6484', 'Discriminator accuracy 0.5781', 'Total loss: 1.5788', 'for batch', 92)
('GAN loss 0.9109 ', 'GAN acc 0.4336', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5527', 'Total loss: 1.5764', 'for batch', 93)
('GAN loss 0.9079 ', 'GAN acc 0.3906', 'Discriminator loss 0.6627', 'Discriminator accuracy 0.5098', 'Total loss: 1.5706', 'for batch', 94)
('GAN loss 1.0685 ', 'GAN acc 0.0820', 'Discriminator loss 0.6305', 'Discriminator accuracy 0.5977', 'Total loss: 1.6990', 'for batch', 95)
('GAN loss 0.8028 ', 'GAN acc 0.6289', 'Discriminator loss 0.6466', 'Discriminator accuracy 0.5312', 'Total loss: 1.4494', 'for batch', 96)
('GAN loss 0.8071 ', 'GAN acc 0.6328', 'Discriminator loss 0.6245', 'Discriminator accuracy 0.5918', 'Total loss: 1.4316', 'for batch', 97)
('GAN loss 0.9612 ', 'GAN acc 0.0117', 'Discriminator loss 0.6037', 'Discriminator accuracy 0.6660', 'Total loss: 1.5649', 'for batch', 98)
('GAN loss 0.9725 ', 'GAN acc 0.0273', 'Discriminator loss 0.6225', 'Discriminator accuracy 0.7051', 'Total loss: 1.5950', 'for batch', 99)
('GAN loss 0.9298 ', 'GAN acc 0.1094', 'Discriminator loss 0.6341', 'Discriminator accuracy 0.6484', 'Total loss: 1.5638', 'for batch', 100)
('GAN loss 0.8874 ', 'GAN acc 0.1953', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.6562', 'Total loss: 1.5372', 'for batch', 101)
('GAN loss 0.8380 ', 'GAN acc 0.5430', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5469', 'Total loss: 1.5275', 'for batch', 102)
('GAN loss 0.9078 ', 'GAN acc 0.1836', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5488', 'Total loss: 1.5814', 'for batch', 103)
('GAN loss 0.9492 ', 'GAN acc 0.2969', 'Discriminator loss 0.6364', 'Discriminator accuracy 0.6426', 'Total loss: 1.5857', 'for batch', 104)
('GAN loss 1.5323 ', 'GAN acc 0.0117', 'Discriminator loss 0.6108', 'Discriminator accuracy 0.6992', 'Total loss: 2.1431', 'for batch', 105)
('GAN loss 0.9741 ', 'GAN acc 0.0703', 'Discriminator loss 0.6201', 'Discriminator accuracy 0.5547', 'Total loss: 1.5942', 'for batch', 106)
('GAN loss 1.1411 ', 'GAN acc 0.0000', 'Discriminator loss 0.5712', 'Discriminator accuracy 0.8145', 'Total loss: 1.7123', 'for batch', 107)
('GAN loss 1.1025 ', 'GAN acc 0.0000', 'Discriminator loss 0.5767', 'Discriminator accuracy 0.8262', 'Total loss: 1.6792', 'for batch', 108)
('GAN loss 1.0536 ', 'GAN acc 0.1094', 'Discriminator loss 0.5785', 'Discriminator accuracy 0.7305', 'Total loss: 1.6321', 'for batch', 109)
('GAN loss 1.0949 ', 'GAN acc 0.0820', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.5840', 'Total loss: 1.7448', 'for batch', 110)
('GAN loss 0.8350 ', 'GAN acc 0.3945', 'Discriminator loss 0.7082', 'Discriminator accuracy 0.4922', 'Total loss: 1.5432', 'for batch', 111)
('GAN loss 0.9423 ', 'GAN acc 0.0859', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.5098', 'Total loss: 1.6064', 'for batch', 112)
('GAN loss 1.1041 ', 'GAN acc 0.0117', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5859', 'Total loss: 1.7635', 'for batch', 113)
('GAN loss 1.0896 ', 'GAN acc 0.0000', 'Discriminator loss 0.6365', 'Discriminator accuracy 0.5781', 'Total loss: 1.7261', 'for batch', 114)
('GAN loss 0.8602 ', 'GAN acc 0.2812', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5098', 'Total loss: 1.5256', 'for batch', 115)
('GAN loss 0.6254 ', 'GAN acc 0.8555', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5742', 'Total loss: 1.2991', 'for batch', 116)
('GAN loss 0.6544 ', 'GAN acc 0.8906', 'Discriminator loss 0.6751', 'Discriminator accuracy 0.5352', 'Total loss: 1.3295', 'for batch', 117)
('GAN loss 0.6682 ', 'GAN acc 0.8984', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5117', 'Total loss: 1.3496', 'for batch', 118)
('GAN loss 0.7135 ', 'GAN acc 0.7148', 'Discriminator loss 0.6702', 'Discriminator accuracy 0.5332', 'Total loss: 1.3838', 'for batch', 119)
('GAN loss 0.7647 ', 'GAN acc 0.4922', 'Discriminator loss 0.6671', 'Discriminator accuracy 0.5293', 'Total loss: 1.4318', 'for batch', 120)
('GAN loss 0.7835 ', 'GAN acc 0.3555', 'Discriminator loss 0.6670', 'Discriminator accuracy 0.5547', 'Total loss: 1.4505', 'for batch', 121)
('GAN loss 0.8349 ', 'GAN acc 0.2656', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5234', 'Total loss: 1.5003', 'for batch', 122)
('GAN loss 0.9592 ', 'GAN acc 0.1055', 'Discriminator loss 0.6592', 'Discriminator accuracy 0.6055', 'Total loss: 1.6184', 'for batch', 123)
('GAN loss 1.0036 ', 'GAN acc 0.1016', 'Discriminator loss 0.6563', 'Discriminator accuracy 0.5938', 'Total loss: 1.6599', 'for batch', 124)
('GAN loss 0.8979 ', 'GAN acc 0.3320', 'Discriminator loss 0.6631', 'Discriminator accuracy 0.5117', 'Total loss: 1.5610', 'for batch', 125)
('GAN loss 0.8204 ', 'GAN acc 0.2812', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.5645', 'Total loss: 1.4814', 'for batch', 126)
('GAN loss 0.8160 ', 'GAN acc 0.5977', 'Discriminator loss 0.6693', 'Discriminator accuracy 0.5137', 'Total loss: 1.4854', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54805613)
('DISCRIMINATOR_Imagem FAKE=', 0.50636524)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.710778')
----------------------------------
('Epoch', 14, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7928 ', 'GAN acc 0.4766', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5234', 'Total loss: 1.4680', 'for batch', 0)
('GAN loss 0.7820 ', 'GAN acc 0.3242', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.6465', 'Total loss: 1.4318', 'for batch', 1)
('GAN loss 0.8142 ', 'GAN acc 0.2578', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.6074', 'Total loss: 1.4739', 'for batch', 2)
('GAN loss 0.7994 ', 'GAN acc 0.3086', 'Discriminator loss 0.6391', 'Discriminator accuracy 0.5938', 'Total loss: 1.4385', 'for batch', 3)
('GAN loss 0.7417 ', 'GAN acc 0.5469', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5156', 'Total loss: 1.4229', 'for batch', 4)
('GAN loss 0.6996 ', 'GAN acc 0.7969', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5176', 'Total loss: 1.3733', 'for batch', 5)
('GAN loss 0.6698 ', 'GAN acc 0.8438', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5586', 'Total loss: 1.3404', 'for batch', 6)
('GAN loss 0.6992 ', 'GAN acc 0.7969', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5352', 'Total loss: 1.3874', 'for batch', 7)
('GAN loss 0.7376 ', 'GAN acc 0.6602', 'Discriminator loss 0.6613', 'Discriminator accuracy 0.6016', 'Total loss: 1.3988', 'for batch', 8)
('GAN loss 0.7595 ', 'GAN acc 0.5508', 'Discriminator loss 0.6682', 'Discriminator accuracy 0.5723', 'Total loss: 1.4278', 'for batch', 9)
('GAN loss 0.7416 ', 'GAN acc 0.6406', 'Discriminator loss 0.6815', 'Discriminator accuracy 0.5332', 'Total loss: 1.4231', 'for batch', 10)
('GAN loss 0.7480 ', 'GAN acc 0.7031', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5488', 'Total loss: 1.4253', 'for batch', 11)
('GAN loss 0.7124 ', 'GAN acc 0.7891', 'Discriminator loss 0.6622', 'Discriminator accuracy 0.5898', 'Total loss: 1.3746', 'for batch', 12)
('GAN loss 0.6735 ', 'GAN acc 0.8906', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5293', 'Total loss: 1.3596', 'for batch', 13)
('GAN loss 0.7027 ', 'GAN acc 0.7461', 'Discriminator loss 0.6482', 'Discriminator accuracy 0.6348', 'Total loss: 1.3509', 'for batch', 14)
('GAN loss 0.7694 ', 'GAN acc 0.3086', 'Discriminator loss 0.6392', 'Discriminator accuracy 0.6641', 'Total loss: 1.4086', 'for batch', 15)
('GAN loss 0.6677 ', 'GAN acc 0.8945', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5332', 'Total loss: 1.3443', 'for batch', 16)
('GAN loss 0.6891 ', 'GAN acc 0.8008', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5293', 'Total loss: 1.3631', 'for batch', 17)
('GAN loss 0.7278 ', 'GAN acc 0.5820', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5273', 'Total loss: 1.4056', 'for batch', 18)
('GAN loss 0.7744 ', 'GAN acc 0.4180', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.5762', 'Total loss: 1.4364', 'for batch', 19)
('GAN loss 0.7925 ', 'GAN acc 0.3203', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.6211', 'Total loss: 1.4524', 'for batch', 20)
('GAN loss 0.7834 ', 'GAN acc 0.3320', 'Discriminator loss 0.6497', 'Discriminator accuracy 0.6191', 'Total loss: 1.4331', 'for batch', 21)
('GAN loss 0.8009 ', 'GAN acc 0.4766', 'Discriminator loss 0.5896', 'Discriminator accuracy 0.6719', 'Total loss: 1.3905', 'for batch', 22)
('GAN loss 0.7156 ', 'GAN acc 0.8203', 'Discriminator loss 0.5508', 'Discriminator accuracy 0.6484', 'Total loss: 1.2664', 'for batch', 23)
('GAN loss 0.7139 ', 'GAN acc 0.8711', 'Discriminator loss 0.6211', 'Discriminator accuracy 0.6211', 'Total loss: 1.3350', 'for batch', 24)
('GAN loss 0.6181 ', 'GAN acc 0.9688', 'Discriminator loss 0.6454', 'Discriminator accuracy 0.5684', 'Total loss: 1.2635', 'for batch', 25)
('GAN loss 0.6688 ', 'GAN acc 0.9102', 'Discriminator loss 0.6692', 'Discriminator accuracy 0.5547', 'Total loss: 1.3380', 'for batch', 26)
('GAN loss 0.7266 ', 'GAN acc 0.7500', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5352', 'Total loss: 1.3990', 'for batch', 27)
('GAN loss 0.7177 ', 'GAN acc 0.8203', 'Discriminator loss 0.6416', 'Discriminator accuracy 0.5879', 'Total loss: 1.3593', 'for batch', 28)
('GAN loss 0.7130 ', 'GAN acc 0.7891', 'Discriminator loss 0.6515', 'Discriminator accuracy 0.5859', 'Total loss: 1.3645', 'for batch', 29)
('GAN loss 0.6642 ', 'GAN acc 0.9023', 'Discriminator loss 0.6237', 'Discriminator accuracy 0.6074', 'Total loss: 1.2880', 'for batch', 30)
('GAN loss 0.6770 ', 'GAN acc 0.7617', 'Discriminator loss 0.6144', 'Discriminator accuracy 0.6191', 'Total loss: 1.2914', 'for batch', 31)
('GAN loss 0.5960 ', 'GAN acc 0.9766', 'Discriminator loss 0.6805', 'Discriminator accuracy 0.5020', 'Total loss: 1.2765', 'for batch', 32)
('GAN loss 0.6016 ', 'GAN acc 0.9805', 'Discriminator loss 0.6434', 'Discriminator accuracy 0.5586', 'Total loss: 1.2450', 'for batch', 33)
('GAN loss 0.5960 ', 'GAN acc 0.9727', 'Discriminator loss 0.6185', 'Discriminator accuracy 0.6289', 'Total loss: 1.2145', 'for batch', 34)
('GAN loss 0.5921 ', 'GAN acc 0.9766', 'Discriminator loss 0.5671', 'Discriminator accuracy 0.7402', 'Total loss: 1.1591', 'for batch', 35)
('GAN loss 0.6034 ', 'GAN acc 0.9766', 'Discriminator loss 0.5849', 'Discriminator accuracy 0.7012', 'Total loss: 1.1883', 'for batch', 36)
('GAN loss 0.5662 ', 'GAN acc 0.9688', 'Discriminator loss 0.5434', 'Discriminator accuracy 0.5879', 'Total loss: 1.1095', 'for batch', 37)
('GAN loss 0.5172 ', 'GAN acc 0.9805', 'Discriminator loss 0.5398', 'Discriminator accuracy 0.6992', 'Total loss: 1.0570', 'for batch', 38)
('GAN loss 0.7095 ', 'GAN acc 0.5234', 'Discriminator loss 0.5099', 'Discriminator accuracy 0.8105', 'Total loss: 1.2195', 'for batch', 39)
('GAN loss 0.6428 ', 'GAN acc 0.9688', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5215', 'Total loss: 1.3249', 'for batch', 40)
('GAN loss 0.7522 ', 'GAN acc 0.3164', 'Discriminator loss 0.6629', 'Discriminator accuracy 0.5332', 'Total loss: 1.4151', 'for batch', 41)
('GAN loss 0.8437 ', 'GAN acc 0.1953', 'Discriminator loss 0.6406', 'Discriminator accuracy 0.5352', 'Total loss: 1.4843', 'for batch', 42)
('GAN loss 0.9213 ', 'GAN acc 0.0469', 'Discriminator loss 0.6424', 'Discriminator accuracy 0.5938', 'Total loss: 1.5637', 'for batch', 43)
('GAN loss 0.8814 ', 'GAN acc 0.3086', 'Discriminator loss 0.6545', 'Discriminator accuracy 0.6094', 'Total loss: 1.5359', 'for batch', 44)
('GAN loss 0.8488 ', 'GAN acc 0.1445', 'Discriminator loss 0.6690', 'Discriminator accuracy 0.5762', 'Total loss: 1.5178', 'for batch', 45)
('GAN loss 0.7940 ', 'GAN acc 0.5742', 'Discriminator loss 0.6784', 'Discriminator accuracy 0.5352', 'Total loss: 1.4725', 'for batch', 46)
('GAN loss 0.7564 ', 'GAN acc 0.5586', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.4863', 'Total loss: 1.4403', 'for batch', 47)
('GAN loss 0.7661 ', 'GAN acc 0.2734', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.4941', 'Total loss: 1.4379', 'for batch', 48)
('GAN loss 0.8048 ', 'GAN acc 0.2305', 'Discriminator loss 0.6679', 'Discriminator accuracy 0.5469', 'Total loss: 1.4727', 'for batch', 49)
('GAN loss 0.7839 ', 'GAN acc 0.3164', 'Discriminator loss 0.6490', 'Discriminator accuracy 0.5977', 'Total loss: 1.4329', 'for batch', 50)
('GAN loss 0.9965 ', 'GAN acc 0.0312', 'Discriminator loss 0.6307', 'Discriminator accuracy 0.6426', 'Total loss: 1.6272', 'for batch', 51)
('GAN loss 0.6765 ', 'GAN acc 0.9023', 'Discriminator loss 0.6717', 'Discriminator accuracy 0.5586', 'Total loss: 1.3482', 'for batch', 52)
('GAN loss 0.6931 ', 'GAN acc 0.8086', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5293', 'Total loss: 1.3679', 'for batch', 53)
('GAN loss 0.7091 ', 'GAN acc 0.7812', 'Discriminator loss 0.6741', 'Discriminator accuracy 0.5312', 'Total loss: 1.3833', 'for batch', 54)
('GAN loss 0.7478 ', 'GAN acc 0.7109', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.5371', 'Total loss: 1.4218', 'for batch', 55)
('GAN loss 0.7590 ', 'GAN acc 0.4062', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.5977', 'Total loss: 1.4268', 'for batch', 56)
('GAN loss 0.7687 ', 'GAN acc 0.3594', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.6016', 'Total loss: 1.4419', 'for batch', 57)
('GAN loss 0.7797 ', 'GAN acc 0.1953', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.6270', 'Total loss: 1.4585', 'for batch', 58)
('GAN loss 0.7748 ', 'GAN acc 0.2305', 'Discriminator loss 0.6876', 'Discriminator accuracy 0.5293', 'Total loss: 1.4624', 'for batch', 59)
('GAN loss 0.7562 ', 'GAN acc 0.3867', 'Discriminator loss 0.6918', 'Discriminator accuracy 0.5117', 'Total loss: 1.4480', 'for batch', 60)
('GAN loss 0.7699 ', 'GAN acc 0.4297', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.5586', 'Total loss: 1.4438', 'for batch', 61)
('GAN loss 0.9099 ', 'GAN acc 0.1055', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.6582', 'Total loss: 1.5645', 'for batch', 62)
('GAN loss 0.9972 ', 'GAN acc 0.0586', 'Discriminator loss 0.6576', 'Discriminator accuracy 0.5488', 'Total loss: 1.6547', 'for batch', 63)
('GAN loss 0.8757 ', 'GAN acc 0.8633', 'Discriminator loss 0.6502', 'Discriminator accuracy 0.5098', 'Total loss: 1.5259', 'for batch', 64)
('GAN loss 0.8140 ', 'GAN acc 0.8867', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.4883', 'Total loss: 1.4780', 'for batch', 65)
('GAN loss 0.7389 ', 'GAN acc 0.8945', 'Discriminator loss 0.6435', 'Discriminator accuracy 0.5859', 'Total loss: 1.3824', 'for batch', 66)
('GAN loss 0.7489 ', 'GAN acc 0.9531', 'Discriminator loss 0.5774', 'Discriminator accuracy 0.6426', 'Total loss: 1.3263', 'for batch', 67)
('GAN loss 0.7435 ', 'GAN acc 0.9336', 'Discriminator loss 0.6670', 'Discriminator accuracy 0.5566', 'Total loss: 1.4105', 'for batch', 68)
('GAN loss 0.6813 ', 'GAN acc 0.9688', 'Discriminator loss 0.5554', 'Discriminator accuracy 0.6855', 'Total loss: 1.2368', 'for batch', 69)
('GAN loss 0.6331 ', 'GAN acc 0.9844', 'Discriminator loss 0.5221', 'Discriminator accuracy 0.7051', 'Total loss: 1.1552', 'for batch', 70)
('GAN loss 0.5930 ', 'GAN acc 0.9766', 'Discriminator loss 0.4868', 'Discriminator accuracy 0.8125', 'Total loss: 1.0797', 'for batch', 71)
('GAN loss 0.5485 ', 'GAN acc 0.9766', 'Discriminator loss 0.4526', 'Discriminator accuracy 0.8066', 'Total loss: 1.0010', 'for batch', 72)
('GAN loss 0.4949 ', 'GAN acc 0.9883', 'Discriminator loss 0.3939', 'Discriminator accuracy 0.8262', 'Total loss: 0.8889', 'for batch', 73)
('GAN loss 0.4670 ', 'GAN acc 0.9922', 'Discriminator loss 0.4243', 'Discriminator accuracy 0.8242', 'Total loss: 0.8914', 'for batch', 74)
('GAN loss 0.4361 ', 'GAN acc 0.9883', 'Discriminator loss 0.3802', 'Discriminator accuracy 0.8809', 'Total loss: 0.8162', 'for batch', 75)
('GAN loss 0.3800 ', 'GAN acc 0.9844', 'Discriminator loss 0.2696', 'Discriminator accuracy 0.9688', 'Total loss: 0.6496', 'for batch', 76)
('GAN loss 0.3577 ', 'GAN acc 0.9844', 'Discriminator loss 0.3255', 'Discriminator accuracy 0.8828', 'Total loss: 0.6832', 'for batch', 77)
('GAN loss 1.1161 ', 'GAN acc 0.1055', 'Discriminator loss 0.2358', 'Discriminator accuracy 0.9746', 'Total loss: 1.3519', 'for batch', 78)
('GAN loss 0.5569 ', 'GAN acc 0.9492', 'Discriminator loss 0.8614', 'Discriminator accuracy 0.5098', 'Total loss: 1.4183', 'for batch', 79)
('GAN loss 0.7025 ', 'GAN acc 0.9414', 'Discriminator loss 0.7321', 'Discriminator accuracy 0.5332', 'Total loss: 1.4347', 'for batch', 80)
('GAN loss 0.8664 ', 'GAN acc 0.7734', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.5391', 'Total loss: 1.5309', 'for batch', 81)
('GAN loss 0.9640 ', 'GAN acc 0.5469', 'Discriminator loss 0.6380', 'Discriminator accuracy 0.5410', 'Total loss: 1.6020', 'for batch', 82)
('GAN loss 1.1420 ', 'GAN acc 0.1289', 'Discriminator loss 0.6284', 'Discriminator accuracy 0.5898', 'Total loss: 1.7704', 'for batch', 83)
('GAN loss 1.1424 ', 'GAN acc 0.0508', 'Discriminator loss 0.6274', 'Discriminator accuracy 0.7227', 'Total loss: 1.7698', 'for batch', 84)
('GAN loss 1.1716 ', 'GAN acc 0.4844', 'Discriminator loss 0.6371', 'Discriminator accuracy 0.6699', 'Total loss: 1.8087', 'for batch', 85)
('GAN loss 1.1083 ', 'GAN acc 0.4219', 'Discriminator loss 0.6534', 'Discriminator accuracy 0.6113', 'Total loss: 1.7617', 'for batch', 86)
('GAN loss 1.0512 ', 'GAN acc 0.5352', 'Discriminator loss 0.6416', 'Discriminator accuracy 0.6328', 'Total loss: 1.6928', 'for batch', 87)
('GAN loss 0.9624 ', 'GAN acc 0.5430', 'Discriminator loss 0.6598', 'Discriminator accuracy 0.5469', 'Total loss: 1.6222', 'for batch', 88)
('GAN loss 0.8911 ', 'GAN acc 0.5938', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.5625', 'Total loss: 1.5596', 'for batch', 89)
('GAN loss 0.9301 ', 'GAN acc 0.4961', 'Discriminator loss 0.6805', 'Discriminator accuracy 0.4941', 'Total loss: 1.6106', 'for batch', 90)
('GAN loss 0.9257 ', 'GAN acc 0.4766', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.4805', 'Total loss: 1.6037', 'for batch', 91)
('GAN loss 0.9415 ', 'GAN acc 0.3828', 'Discriminator loss 0.6589', 'Discriminator accuracy 0.5098', 'Total loss: 1.6004', 'for batch', 92)
('GAN loss 0.8918 ', 'GAN acc 0.4336', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.5742', 'Total loss: 1.5447', 'for batch', 93)
('GAN loss 0.8747 ', 'GAN acc 0.4023', 'Discriminator loss 0.6619', 'Discriminator accuracy 0.5391', 'Total loss: 1.5366', 'for batch', 94)
('GAN loss 0.8203 ', 'GAN acc 0.4766', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.5156', 'Total loss: 1.4845', 'for batch', 95)
('GAN loss 0.9065 ', 'GAN acc 0.2305', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5391', 'Total loss: 1.5689', 'for batch', 96)
('GAN loss 0.9263 ', 'GAN acc 0.2734', 'Discriminator loss 0.6575', 'Discriminator accuracy 0.5000', 'Total loss: 1.5838', 'for batch', 97)
('GAN loss 0.8108 ', 'GAN acc 0.6719', 'Discriminator loss 0.6660', 'Discriminator accuracy 0.5332', 'Total loss: 1.4768', 'for batch', 98)
('GAN loss 0.8019 ', 'GAN acc 0.6992', 'Discriminator loss 0.6836', 'Discriminator accuracy 0.5195', 'Total loss: 1.4855', 'for batch', 99)
('GAN loss 0.8124 ', 'GAN acc 0.4141', 'Discriminator loss 0.6548', 'Discriminator accuracy 0.5566', 'Total loss: 1.4673', 'for batch', 100)
('GAN loss 0.8001 ', 'GAN acc 0.4375', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5820', 'Total loss: 1.4655', 'for batch', 101)
('GAN loss 0.8057 ', 'GAN acc 0.5430', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.5449', 'Total loss: 1.4851', 'for batch', 102)
('GAN loss 0.7838 ', 'GAN acc 0.5586', 'Discriminator loss 0.6829', 'Discriminator accuracy 0.5215', 'Total loss: 1.4667', 'for batch', 103)
('GAN loss 0.8142 ', 'GAN acc 0.5352', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5332', 'Total loss: 1.4881', 'for batch', 104)
('GAN loss 0.8527 ', 'GAN acc 0.5781', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.5156', 'Total loss: 1.5335', 'for batch', 105)
('GAN loss 0.8055 ', 'GAN acc 0.5742', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.5273', 'Total loss: 1.4862', 'for batch', 106)
('GAN loss 0.8227 ', 'GAN acc 0.6445', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5391', 'Total loss: 1.4950', 'for batch', 107)
('GAN loss 0.7732 ', 'GAN acc 0.6602', 'Discriminator loss 0.6625', 'Discriminator accuracy 0.5410', 'Total loss: 1.4357', 'for batch', 108)
('GAN loss 0.8636 ', 'GAN acc 0.4219', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.5273', 'Total loss: 1.5246', 'for batch', 109)
('GAN loss 0.8460 ', 'GAN acc 0.6602', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.4941', 'Total loss: 1.5278', 'for batch', 110)
('GAN loss 0.7628 ', 'GAN acc 0.8906', 'Discriminator loss 0.6867', 'Discriminator accuracy 0.5020', 'Total loss: 1.4495', 'for batch', 111)
('GAN loss 0.7127 ', 'GAN acc 0.8906', 'Discriminator loss 0.6556', 'Discriminator accuracy 0.5645', 'Total loss: 1.3683', 'for batch', 112)
('GAN loss 0.7131 ', 'GAN acc 0.8086', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5195', 'Total loss: 1.3893', 'for batch', 113)
('GAN loss 0.7346 ', 'GAN acc 0.6602', 'Discriminator loss 0.6675', 'Discriminator accuracy 0.5078', 'Total loss: 1.4021', 'for batch', 114)
('GAN loss 0.7310 ', 'GAN acc 0.5430', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5352', 'Total loss: 1.3944', 'for batch', 115)
('GAN loss 0.7517 ', 'GAN acc 0.3398', 'Discriminator loss 0.6647', 'Discriminator accuracy 0.5410', 'Total loss: 1.4163', 'for batch', 116)
('GAN loss 0.7628 ', 'GAN acc 0.3047', 'Discriminator loss 0.6633', 'Discriminator accuracy 0.5488', 'Total loss: 1.4261', 'for batch', 117)
('GAN loss 0.7790 ', 'GAN acc 0.3281', 'Discriminator loss 0.6708', 'Discriminator accuracy 0.5449', 'Total loss: 1.4498', 'for batch', 118)
('GAN loss 0.7674 ', 'GAN acc 0.2852', 'Discriminator loss 0.6700', 'Discriminator accuracy 0.5742', 'Total loss: 1.4374', 'for batch', 119)
('GAN loss 0.7944 ', 'GAN acc 0.2578', 'Discriminator loss 0.6638', 'Discriminator accuracy 0.5859', 'Total loss: 1.4582', 'for batch', 120)
('GAN loss 0.7863 ', 'GAN acc 0.2578', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5586', 'Total loss: 1.4686', 'for batch', 121)
('GAN loss 0.8807 ', 'GAN acc 0.1172', 'Discriminator loss 0.6496', 'Discriminator accuracy 0.6074', 'Total loss: 1.5303', 'for batch', 122)
('GAN loss 0.7574 ', 'GAN acc 0.8086', 'Discriminator loss 0.6850', 'Discriminator accuracy 0.4863', 'Total loss: 1.4424', 'for batch', 123)
('GAN loss 0.8091 ', 'GAN acc 0.8672', 'Discriminator loss 0.6710', 'Discriminator accuracy 0.5312', 'Total loss: 1.4801', 'for batch', 124)
('GAN loss 0.7769 ', 'GAN acc 0.6562', 'Discriminator loss 0.6607', 'Discriminator accuracy 0.5488', 'Total loss: 1.4376', 'for batch', 125)
('GAN loss 0.7952 ', 'GAN acc 0.3789', 'Discriminator loss 0.6575', 'Discriminator accuracy 0.5625', 'Total loss: 1.4527', 'for batch', 126)
('GAN loss 0.8116 ', 'GAN acc 0.6250', 'Discriminator loss 0.6669', 'Discriminator accuracy 0.5547', 'Total loss: 1.4785', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54551655)
('DISCRIMINATOR_Imagem FAKE=', 0.50446594)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.460021')
----------------------------------
('Epoch', 15, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7833 ', 'GAN acc 0.6133', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.5430', 'Total loss: 1.4475', 'for batch', 0)
('GAN loss 0.7695 ', 'GAN acc 0.5156', 'Discriminator loss 0.6771', 'Discriminator accuracy 0.5312', 'Total loss: 1.4466', 'for batch', 1)
('GAN loss 0.7432 ', 'GAN acc 0.7812', 'Discriminator loss 0.6466', 'Discriminator accuracy 0.5762', 'Total loss: 1.3897', 'for batch', 2)
('GAN loss 0.7665 ', 'GAN acc 0.6406', 'Discriminator loss 0.6622', 'Discriminator accuracy 0.5781', 'Total loss: 1.4288', 'for batch', 3)
('GAN loss 0.9327 ', 'GAN acc 0.0781', 'Discriminator loss 0.6409', 'Discriminator accuracy 0.6660', 'Total loss: 1.5736', 'for batch', 4)
('GAN loss 0.6884 ', 'GAN acc 0.8047', 'Discriminator loss 0.6410', 'Discriminator accuracy 0.4883', 'Total loss: 1.3294', 'for batch', 5)
('GAN loss 0.6785 ', 'GAN acc 0.9258', 'Discriminator loss 0.6700', 'Discriminator accuracy 0.5410', 'Total loss: 1.3485', 'for batch', 6)
('GAN loss 0.7194 ', 'GAN acc 0.8594', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5176', 'Total loss: 1.3980', 'for batch', 7)
('GAN loss 0.7091 ', 'GAN acc 0.8438', 'Discriminator loss 0.6343', 'Discriminator accuracy 0.5938', 'Total loss: 1.3434', 'for batch', 8)
('GAN loss 0.7122 ', 'GAN acc 0.6797', 'Discriminator loss 0.6731', 'Discriminator accuracy 0.5371', 'Total loss: 1.3853', 'for batch', 9)
('GAN loss 0.6923 ', 'GAN acc 0.7930', 'Discriminator loss 0.6329', 'Discriminator accuracy 0.6035', 'Total loss: 1.3251', 'for batch', 10)
('GAN loss 0.7166 ', 'GAN acc 0.6562', 'Discriminator loss 0.6304', 'Discriminator accuracy 0.6309', 'Total loss: 1.3469', 'for batch', 11)
('GAN loss 0.8041 ', 'GAN acc 0.2578', 'Discriminator loss 0.6702', 'Discriminator accuracy 0.6367', 'Total loss: 1.4743', 'for batch', 12)
('GAN loss 0.7173 ', 'GAN acc 0.6484', 'Discriminator loss 0.6906', 'Discriminator accuracy 0.4902', 'Total loss: 1.4078', 'for batch', 13)
('GAN loss 0.7141 ', 'GAN acc 0.7109', 'Discriminator loss 0.6799', 'Discriminator accuracy 0.5391', 'Total loss: 1.3940', 'for batch', 14)
('GAN loss 0.7028 ', 'GAN acc 0.6992', 'Discriminator loss 0.6444', 'Discriminator accuracy 0.6152', 'Total loss: 1.3472', 'for batch', 15)
('GAN loss 0.6792 ', 'GAN acc 0.8359', 'Discriminator loss 0.5775', 'Discriminator accuracy 0.7109', 'Total loss: 1.2567', 'for batch', 16)
('GAN loss 0.6650 ', 'GAN acc 0.8359', 'Discriminator loss 0.6416', 'Discriminator accuracy 0.6230', 'Total loss: 1.3066', 'for batch', 17)
('GAN loss 0.6605 ', 'GAN acc 0.9062', 'Discriminator loss 0.6573', 'Discriminator accuracy 0.5898', 'Total loss: 1.3178', 'for batch', 18)
('GAN loss 0.6497 ', 'GAN acc 0.9180', 'Discriminator loss 0.6482', 'Discriminator accuracy 0.6035', 'Total loss: 1.2979', 'for batch', 19)
('GAN loss 0.6159 ', 'GAN acc 0.9648', 'Discriminator loss 0.6045', 'Discriminator accuracy 0.6230', 'Total loss: 1.2204', 'for batch', 20)
('GAN loss 0.6010 ', 'GAN acc 0.9766', 'Discriminator loss 0.5752', 'Discriminator accuracy 0.6875', 'Total loss: 1.1762', 'for batch', 21)
('GAN loss 0.5799 ', 'GAN acc 0.9844', 'Discriminator loss 0.5693', 'Discriminator accuracy 0.7051', 'Total loss: 1.1492', 'for batch', 22)
('GAN loss 0.5803 ', 'GAN acc 0.9805', 'Discriminator loss 0.5318', 'Discriminator accuracy 0.7285', 'Total loss: 1.1121', 'for batch', 23)
('GAN loss 0.7049 ', 'GAN acc 0.7578', 'Discriminator loss 0.5941', 'Discriminator accuracy 0.7207', 'Total loss: 1.2989', 'for batch', 24)
('GAN loss 0.6499 ', 'GAN acc 0.9727', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5332', 'Total loss: 1.3237', 'for batch', 25)
('GAN loss 0.7233 ', 'GAN acc 0.6875', 'Discriminator loss 0.6570', 'Discriminator accuracy 0.5352', 'Total loss: 1.3803', 'for batch', 26)
('GAN loss 0.7263 ', 'GAN acc 0.7383', 'Discriminator loss 0.6479', 'Discriminator accuracy 0.5645', 'Total loss: 1.3742', 'for batch', 27)
('GAN loss 0.7670 ', 'GAN acc 0.4180', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.5508', 'Total loss: 1.4237', 'for batch', 28)
('GAN loss 0.7537 ', 'GAN acc 0.6055', 'Discriminator loss 0.6402', 'Discriminator accuracy 0.5938', 'Total loss: 1.3940', 'for batch', 29)
('GAN loss 0.7302 ', 'GAN acc 0.4883', 'Discriminator loss 0.6493', 'Discriminator accuracy 0.5840', 'Total loss: 1.3795', 'for batch', 30)
('GAN loss 0.6902 ', 'GAN acc 0.8750', 'Discriminator loss 0.6159', 'Discriminator accuracy 0.6250', 'Total loss: 1.3061', 'for batch', 31)
('GAN loss 0.7076 ', 'GAN acc 0.8125', 'Discriminator loss 0.5965', 'Discriminator accuracy 0.6758', 'Total loss: 1.3041', 'for batch', 32)
('GAN loss 0.6079 ', 'GAN acc 0.9805', 'Discriminator loss 0.5360', 'Discriminator accuracy 0.6152', 'Total loss: 1.1440', 'for batch', 33)
('GAN loss 0.6713 ', 'GAN acc 0.8711', 'Discriminator loss 0.5216', 'Discriminator accuracy 0.8027', 'Total loss: 1.1929', 'for batch', 34)
('GAN loss 0.5416 ', 'GAN acc 0.9844', 'Discriminator loss 0.5527', 'Discriminator accuracy 0.6895', 'Total loss: 1.0943', 'for batch', 35)
('GAN loss 0.5934 ', 'GAN acc 0.9844', 'Discriminator loss 0.6369', 'Discriminator accuracy 0.5996', 'Total loss: 1.2303', 'for batch', 36)
('GAN loss 0.5851 ', 'GAN acc 0.9766', 'Discriminator loss 0.5485', 'Discriminator accuracy 0.7012', 'Total loss: 1.1336', 'for batch', 37)
('GAN loss 0.5576 ', 'GAN acc 0.9766', 'Discriminator loss 0.5125', 'Discriminator accuracy 0.7500', 'Total loss: 1.0701', 'for batch', 38)
('GAN loss 0.5885 ', 'GAN acc 0.9727', 'Discriminator loss 0.5608', 'Discriminator accuracy 0.6992', 'Total loss: 1.1493', 'for batch', 39)
('GAN loss 0.5434 ', 'GAN acc 0.9805', 'Discriminator loss 0.5525', 'Discriminator accuracy 0.6602', 'Total loss: 1.0959', 'for batch', 40)
('GAN loss 0.4964 ', 'GAN acc 0.9805', 'Discriminator loss 0.4289', 'Discriminator accuracy 0.8145', 'Total loss: 0.9253', 'for batch', 41)
('GAN loss 0.5067 ', 'GAN acc 0.9844', 'Discriminator loss 0.6318', 'Discriminator accuracy 0.6367', 'Total loss: 1.1385', 'for batch', 42)
('GAN loss 0.4839 ', 'GAN acc 0.9883', 'Discriminator loss 0.4700', 'Discriminator accuracy 0.7852', 'Total loss: 0.9539', 'for batch', 43)
('GAN loss 0.6444 ', 'GAN acc 0.8945', 'Discriminator loss 0.5748', 'Discriminator accuracy 0.6191', 'Total loss: 1.2193', 'for batch', 44)
('GAN loss 0.5476 ', 'GAN acc 0.9805', 'Discriminator loss 0.5347', 'Discriminator accuracy 0.6660', 'Total loss: 1.0823', 'for batch', 45)
('GAN loss 0.5329 ', 'GAN acc 0.9766', 'Discriminator loss 0.5356', 'Discriminator accuracy 0.7227', 'Total loss: 1.0685', 'for batch', 46)
('GAN loss 0.5092 ', 'GAN acc 0.9805', 'Discriminator loss 0.5386', 'Discriminator accuracy 0.6953', 'Total loss: 1.0478', 'for batch', 47)
('GAN loss 0.5812 ', 'GAN acc 0.9805', 'Discriminator loss 0.6228', 'Discriminator accuracy 0.5938', 'Total loss: 1.2040', 'for batch', 48)
('GAN loss 0.5231 ', 'GAN acc 0.9883', 'Discriminator loss 0.5822', 'Discriminator accuracy 0.6641', 'Total loss: 1.1053', 'for batch', 49)
('GAN loss 0.5331 ', 'GAN acc 0.9805', 'Discriminator loss 0.5679', 'Discriminator accuracy 0.6797', 'Total loss: 1.1009', 'for batch', 50)
('GAN loss 0.5195 ', 'GAN acc 0.9844', 'Discriminator loss 0.5054', 'Discriminator accuracy 0.7832', 'Total loss: 1.0249', 'for batch', 51)
('GAN loss 0.4856 ', 'GAN acc 0.9883', 'Discriminator loss 0.4655', 'Discriminator accuracy 0.8379', 'Total loss: 0.9511', 'for batch', 52)
('GAN loss 0.4588 ', 'GAN acc 0.9805', 'Discriminator loss 0.4278', 'Discriminator accuracy 0.8320', 'Total loss: 0.8866', 'for batch', 53)
('GAN loss 0.4920 ', 'GAN acc 0.9805', 'Discriminator loss 0.4545', 'Discriminator accuracy 0.8066', 'Total loss: 0.9465', 'for batch', 54)
('GAN loss 0.4870 ', 'GAN acc 0.9766', 'Discriminator loss 0.6601', 'Discriminator accuracy 0.5684', 'Total loss: 1.1471', 'for batch', 55)
('GAN loss 0.6692 ', 'GAN acc 0.8906', 'Discriminator loss 0.7069', 'Discriminator accuracy 0.5234', 'Total loss: 1.3760', 'for batch', 56)
('GAN loss 0.7966 ', 'GAN acc 0.2305', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5195', 'Total loss: 1.4620', 'for batch', 57)
('GAN loss 0.9342 ', 'GAN acc 0.0000', 'Discriminator loss 0.6728', 'Discriminator accuracy 0.5449', 'Total loss: 1.6070', 'for batch', 58)
('GAN loss 0.8537 ', 'GAN acc 0.1562', 'Discriminator loss 0.6749', 'Discriminator accuracy 0.5332', 'Total loss: 1.5285', 'for batch', 59)
('GAN loss 0.7830 ', 'GAN acc 0.5117', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5059', 'Total loss: 1.4672', 'for batch', 60)
('GAN loss 0.7468 ', 'GAN acc 0.7617', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.5508', 'Total loss: 1.4100', 'for batch', 61)
('GAN loss 0.7370 ', 'GAN acc 0.6914', 'Discriminator loss 0.6802', 'Discriminator accuracy 0.4883', 'Total loss: 1.4172', 'for batch', 62)
('GAN loss 0.7329 ', 'GAN acc 0.5859', 'Discriminator loss 0.6413', 'Discriminator accuracy 0.5273', 'Total loss: 1.3742', 'for batch', 63)
('GAN loss 0.7519 ', 'GAN acc 0.3164', 'Discriminator loss 0.6117', 'Discriminator accuracy 0.6191', 'Total loss: 1.3636', 'for batch', 64)
('GAN loss 0.6574 ', 'GAN acc 0.9570', 'Discriminator loss 0.6426', 'Discriminator accuracy 0.5234', 'Total loss: 1.3000', 'for batch', 65)
('GAN loss 0.5897 ', 'GAN acc 0.9844', 'Discriminator loss 0.6078', 'Discriminator accuracy 0.5859', 'Total loss: 1.1975', 'for batch', 66)
('GAN loss 0.5760 ', 'GAN acc 0.9805', 'Discriminator loss 0.5582', 'Discriminator accuracy 0.7129', 'Total loss: 1.1343', 'for batch', 67)
('GAN loss 0.6539 ', 'GAN acc 0.8672', 'Discriminator loss 0.5964', 'Discriminator accuracy 0.6699', 'Total loss: 1.2503', 'for batch', 68)
('GAN loss 0.5192 ', 'GAN acc 0.9883', 'Discriminator loss 0.5763', 'Discriminator accuracy 0.5508', 'Total loss: 1.0955', 'for batch', 69)
('GAN loss 0.5382 ', 'GAN acc 0.9883', 'Discriminator loss 0.5956', 'Discriminator accuracy 0.6328', 'Total loss: 1.1338', 'for batch', 70)
('GAN loss 0.5482 ', 'GAN acc 0.9805', 'Discriminator loss 0.5920', 'Discriminator accuracy 0.6465', 'Total loss: 1.1402', 'for batch', 71)
('GAN loss 0.5684 ', 'GAN acc 0.9805', 'Discriminator loss 0.6072', 'Discriminator accuracy 0.6465', 'Total loss: 1.1756', 'for batch', 72)
('GAN loss 0.5242 ', 'GAN acc 0.9883', 'Discriminator loss 0.5045', 'Discriminator accuracy 0.7305', 'Total loss: 1.0287', 'for batch', 73)
('GAN loss 0.5165 ', 'GAN acc 0.9922', 'Discriminator loss 0.6197', 'Discriminator accuracy 0.6426', 'Total loss: 1.1362', 'for batch', 74)
('GAN loss 0.5107 ', 'GAN acc 0.9805', 'Discriminator loss 0.5961', 'Discriminator accuracy 0.6504', 'Total loss: 1.1068', 'for batch', 75)
('GAN loss 0.5040 ', 'GAN acc 0.9922', 'Discriminator loss 0.4535', 'Discriminator accuracy 0.8066', 'Total loss: 0.9576', 'for batch', 76)
('GAN loss 0.4878 ', 'GAN acc 0.9844', 'Discriminator loss 0.4840', 'Discriminator accuracy 0.7344', 'Total loss: 0.9719', 'for batch', 77)
('GAN loss 0.4825 ', 'GAN acc 0.9922', 'Discriminator loss 0.4518', 'Discriminator accuracy 0.8672', 'Total loss: 0.9343', 'for batch', 78)
('GAN loss 0.4468 ', 'GAN acc 0.9844', 'Discriminator loss 0.5064', 'Discriminator accuracy 0.6641', 'Total loss: 0.9531', 'for batch', 79)
('GAN loss 0.4654 ', 'GAN acc 0.9844', 'Discriminator loss 0.4909', 'Discriminator accuracy 0.7383', 'Total loss: 0.9562', 'for batch', 80)
('GAN loss 0.4760 ', 'GAN acc 0.9844', 'Discriminator loss 0.4783', 'Discriminator accuracy 0.7578', 'Total loss: 0.9542', 'for batch', 81)
('GAN loss 0.5399 ', 'GAN acc 0.9766', 'Discriminator loss 0.5383', 'Discriminator accuracy 0.7285', 'Total loss: 1.0782', 'for batch', 82)
('GAN loss 0.4472 ', 'GAN acc 0.9883', 'Discriminator loss 0.6065', 'Discriminator accuracy 0.5195', 'Total loss: 1.0537', 'for batch', 83)
('GAN loss 0.4824 ', 'GAN acc 0.9922', 'Discriminator loss 0.6158', 'Discriminator accuracy 0.6543', 'Total loss: 1.0982', 'for batch', 84)
('GAN loss 0.5050 ', 'GAN acc 0.9805', 'Discriminator loss 0.5950', 'Discriminator accuracy 0.6465', 'Total loss: 1.1001', 'for batch', 85)
('GAN loss 0.5160 ', 'GAN acc 0.9805', 'Discriminator loss 0.5915', 'Discriminator accuracy 0.6797', 'Total loss: 1.1075', 'for batch', 86)
('GAN loss 0.5284 ', 'GAN acc 0.9844', 'Discriminator loss 0.5363', 'Discriminator accuracy 0.7031', 'Total loss: 1.0647', 'for batch', 87)
('GAN loss 0.5227 ', 'GAN acc 0.9844', 'Discriminator loss 0.5833', 'Discriminator accuracy 0.6465', 'Total loss: 1.1060', 'for batch', 88)
('GAN loss 0.5135 ', 'GAN acc 0.9883', 'Discriminator loss 0.5939', 'Discriminator accuracy 0.6094', 'Total loss: 1.1074', 'for batch', 89)
('GAN loss 0.4928 ', 'GAN acc 0.9922', 'Discriminator loss 0.3631', 'Discriminator accuracy 0.8711', 'Total loss: 0.8559', 'for batch', 90)
('GAN loss 0.4701 ', 'GAN acc 0.9922', 'Discriminator loss 0.5509', 'Discriminator accuracy 0.6523', 'Total loss: 1.0209', 'for batch', 91)
('GAN loss 0.4689 ', 'GAN acc 0.9805', 'Discriminator loss 0.5392', 'Discriminator accuracy 0.6992', 'Total loss: 1.0081', 'for batch', 92)
('GAN loss 0.4891 ', 'GAN acc 0.9805', 'Discriminator loss 0.5320', 'Discriminator accuracy 0.6953', 'Total loss: 1.0211', 'for batch', 93)
('GAN loss 0.4487 ', 'GAN acc 0.9922', 'Discriminator loss 0.4297', 'Discriminator accuracy 0.8086', 'Total loss: 0.8784', 'for batch', 94)
('GAN loss 0.4377 ', 'GAN acc 0.9883', 'Discriminator loss 0.4621', 'Discriminator accuracy 0.7578', 'Total loss: 0.8998', 'for batch', 95)
('GAN loss 0.4348 ', 'GAN acc 0.9922', 'Discriminator loss 0.5286', 'Discriminator accuracy 0.6953', 'Total loss: 0.9635', 'for batch', 96)
('GAN loss 0.4393 ', 'GAN acc 0.9883', 'Discriminator loss 0.4706', 'Discriminator accuracy 0.7520', 'Total loss: 0.9100', 'for batch', 97)
('GAN loss 0.5045 ', 'GAN acc 0.9844', 'Discriminator loss 0.5692', 'Discriminator accuracy 0.6836', 'Total loss: 1.0736', 'for batch', 98)
('GAN loss 0.4337 ', 'GAN acc 0.9883', 'Discriminator loss 0.4515', 'Discriminator accuracy 0.6484', 'Total loss: 0.8852', 'for batch', 99)
('GAN loss 0.5194 ', 'GAN acc 0.9922', 'Discriminator loss 0.5407', 'Discriminator accuracy 0.7168', 'Total loss: 1.0601', 'for batch', 100)
('GAN loss 0.5331 ', 'GAN acc 0.9844', 'Discriminator loss 0.5831', 'Discriminator accuracy 0.6738', 'Total loss: 1.1162', 'for batch', 101)
('GAN loss 0.5434 ', 'GAN acc 0.9766', 'Discriminator loss 0.7148', 'Discriminator accuracy 0.5547', 'Total loss: 1.2582', 'for batch', 102)
('GAN loss 0.5348 ', 'GAN acc 0.9883', 'Discriminator loss 0.6190', 'Discriminator accuracy 0.6367', 'Total loss: 1.1538', 'for batch', 103)
('GAN loss 0.5224 ', 'GAN acc 0.9883', 'Discriminator loss 0.4721', 'Discriminator accuracy 0.7695', 'Total loss: 0.9945', 'for batch', 104)
('GAN loss 0.4945 ', 'GAN acc 0.9883', 'Discriminator loss 0.3813', 'Discriminator accuracy 0.8730', 'Total loss: 0.8758', 'for batch', 105)
('GAN loss 0.4820 ', 'GAN acc 0.9805', 'Discriminator loss 0.4530', 'Discriminator accuracy 0.7793', 'Total loss: 0.9350', 'for batch', 106)
('GAN loss 0.5470 ', 'GAN acc 0.9688', 'Discriminator loss 0.4162', 'Discriminator accuracy 0.8516', 'Total loss: 0.9632', 'for batch', 107)
('GAN loss 0.4199 ', 'GAN acc 0.9922', 'Discriminator loss 0.4036', 'Discriminator accuracy 0.7500', 'Total loss: 0.8235', 'for batch', 108)
('GAN loss 0.3880 ', 'GAN acc 0.9961', 'Discriminator loss 0.2641', 'Discriminator accuracy 0.9395', 'Total loss: 0.6521', 'for batch', 109)
('GAN loss 0.9704 ', 'GAN acc 0.6875', 'Discriminator loss 0.3188', 'Discriminator accuracy 0.9043', 'Total loss: 1.2892', 'for batch', 110)
('GAN loss 0.5419 ', 'GAN acc 0.9570', 'Discriminator loss 0.7628', 'Discriminator accuracy 0.5293', 'Total loss: 1.3047', 'for batch', 111)
('GAN loss 0.5553 ', 'GAN acc 0.9492', 'Discriminator loss 0.7409', 'Discriminator accuracy 0.5312', 'Total loss: 1.2962', 'for batch', 112)
('GAN loss 0.6339 ', 'GAN acc 0.9414', 'Discriminator loss 0.7088', 'Discriminator accuracy 0.5273', 'Total loss: 1.3427', 'for batch', 113)
('GAN loss 0.7133 ', 'GAN acc 0.9180', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5332', 'Total loss: 1.3880', 'for batch', 114)
('GAN loss 0.8531 ', 'GAN acc 0.8477', 'Discriminator loss 0.6419', 'Discriminator accuracy 0.5469', 'Total loss: 1.4950', 'for batch', 115)
('GAN loss 0.9382 ', 'GAN acc 0.6680', 'Discriminator loss 0.6327', 'Discriminator accuracy 0.5586', 'Total loss: 1.5709', 'for batch', 116)
('GAN loss 0.8709 ', 'GAN acc 0.5352', 'Discriminator loss 0.6412', 'Discriminator accuracy 0.5430', 'Total loss: 1.5121', 'for batch', 117)
('GAN loss 0.8370 ', 'GAN acc 0.3867', 'Discriminator loss 0.6419', 'Discriminator accuracy 0.5371', 'Total loss: 1.4789', 'for batch', 118)
('GAN loss 0.7951 ', 'GAN acc 0.5117', 'Discriminator loss 0.6518', 'Discriminator accuracy 0.5293', 'Total loss: 1.4469', 'for batch', 119)
('GAN loss 0.7516 ', 'GAN acc 0.8281', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.5430', 'Total loss: 1.4165', 'for batch', 120)
('GAN loss 0.8633 ', 'GAN acc 0.2109', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.5195', 'Total loss: 1.5228', 'for batch', 121)
('GAN loss 0.9424 ', 'GAN acc 0.5312', 'Discriminator loss 0.6681', 'Discriminator accuracy 0.4980', 'Total loss: 1.6106', 'for batch', 122)
('GAN loss 0.9404 ', 'GAN acc 0.3398', 'Discriminator loss 0.6603', 'Discriminator accuracy 0.4883', 'Total loss: 1.6007', 'for batch', 123)
('GAN loss 1.9218 ', 'GAN acc 0.0000', 'Discriminator loss 0.6229', 'Discriminator accuracy 0.6582', 'Total loss: 2.5447', 'for batch', 124)
('GAN loss 0.8136 ', 'GAN acc 0.1289', 'Discriminator loss 0.7468', 'Discriminator accuracy 0.5176', 'Total loss: 1.5604', 'for batch', 125)
('GAN loss 0.8777 ', 'GAN acc 0.0352', 'Discriminator loss 0.6065', 'Discriminator accuracy 0.8906', 'Total loss: 1.4842', 'for batch', 126)
('GAN loss 0.9613 ', 'GAN acc 0.0430', 'Discriminator loss 0.5940', 'Discriminator accuracy 0.8555', 'Total loss: 1.5552', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.58785099)
('DISCRIMINATOR_Imagem FAKE=', 0.4716647)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.515917')
----------------------------------
('Epoch', 16, 'of', 50)
('Number of batches', 128)
('GAN loss 1.0396 ', 'GAN acc 0.0391', 'Discriminator loss 0.6000', 'Discriminator accuracy 0.8535', 'Total loss: 1.6396', 'for batch', 0)
('GAN loss 1.4378 ', 'GAN acc 0.0039', 'Discriminator loss 0.6193', 'Discriminator accuracy 0.7422', 'Total loss: 2.0571', 'for batch', 1)
('GAN loss 1.1214 ', 'GAN acc 0.0703', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.5801', 'Total loss: 1.7749', 'for batch', 2)
('GAN loss 1.4310 ', 'GAN acc 0.4531', 'Discriminator loss 0.6956', 'Discriminator accuracy 0.4941', 'Total loss: 2.1266', 'for batch', 3)
('GAN loss 1.3154 ', 'GAN acc 0.4336', 'Discriminator loss 0.6922', 'Discriminator accuracy 0.5430', 'Total loss: 2.0076', 'for batch', 4)
('GAN loss 0.7811 ', 'GAN acc 0.6758', 'Discriminator loss 0.6966', 'Discriminator accuracy 0.5039', 'Total loss: 1.4777', 'for batch', 5)
('GAN loss 0.7683 ', 'GAN acc 0.8711', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.5176', 'Total loss: 1.4479', 'for batch', 6)
('GAN loss 0.7427 ', 'GAN acc 0.9062', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5254', 'Total loss: 1.4177', 'for batch', 7)
('GAN loss 0.7923 ', 'GAN acc 0.8711', 'Discriminator loss 0.6376', 'Discriminator accuracy 0.6211', 'Total loss: 1.4299', 'for batch', 8)
('GAN loss 0.7029 ', 'GAN acc 0.8984', 'Discriminator loss 0.6721', 'Discriminator accuracy 0.5117', 'Total loss: 1.3750', 'for batch', 9)
('GAN loss 0.7005 ', 'GAN acc 0.8594', 'Discriminator loss 0.6456', 'Discriminator accuracy 0.5371', 'Total loss: 1.3460', 'for batch', 10)
('GAN loss 0.7145 ', 'GAN acc 0.7852', 'Discriminator loss 0.6368', 'Discriminator accuracy 0.5371', 'Total loss: 1.3514', 'for batch', 11)
('GAN loss 0.7369 ', 'GAN acc 0.5898', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.5215', 'Total loss: 1.3905', 'for batch', 12)
('GAN loss 0.7245 ', 'GAN acc 0.4062', 'Discriminator loss 0.6410', 'Discriminator accuracy 0.5723', 'Total loss: 1.3655', 'for batch', 13)
('GAN loss 0.8217 ', 'GAN acc 0.2578', 'Discriminator loss 0.6496', 'Discriminator accuracy 0.5801', 'Total loss: 1.4713', 'for batch', 14)
('GAN loss 0.9498 ', 'GAN acc 0.2109', 'Discriminator loss 0.6549', 'Discriminator accuracy 0.5625', 'Total loss: 1.6047', 'for batch', 15)
('GAN loss 0.9020 ', 'GAN acc 0.2656', 'Discriminator loss 0.6542', 'Discriminator accuracy 0.5898', 'Total loss: 1.5561', 'for batch', 16)
('GAN loss 0.7856 ', 'GAN acc 0.4844', 'Discriminator loss 0.6961', 'Discriminator accuracy 0.5117', 'Total loss: 1.4817', 'for batch', 17)
('GAN loss 0.7417 ', 'GAN acc 0.5391', 'Discriminator loss 0.6901', 'Discriminator accuracy 0.5137', 'Total loss: 1.4318', 'for batch', 18)
('GAN loss 0.8362 ', 'GAN acc 0.4258', 'Discriminator loss 0.6813', 'Discriminator accuracy 0.5371', 'Total loss: 1.5176', 'for batch', 19)
('GAN loss 0.9650 ', 'GAN acc 0.2734', 'Discriminator loss 0.6538', 'Discriminator accuracy 0.5762', 'Total loss: 1.6188', 'for batch', 20)
('GAN loss 0.8910 ', 'GAN acc 0.3242', 'Discriminator loss 0.6759', 'Discriminator accuracy 0.4863', 'Total loss: 1.5669', 'for batch', 21)
('GAN loss 0.7917 ', 'GAN acc 0.5664', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.4941', 'Total loss: 1.4556', 'for batch', 22)
('GAN loss 0.7575 ', 'GAN acc 0.6641', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5195', 'Total loss: 1.4323', 'for batch', 23)
('GAN loss 0.7206 ', 'GAN acc 0.8203', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.4902', 'Total loss: 1.4123', 'for batch', 24)
('GAN loss 0.7383 ', 'GAN acc 0.6602', 'Discriminator loss 0.6945', 'Discriminator accuracy 0.5078', 'Total loss: 1.4328', 'for batch', 25)
('GAN loss 0.7328 ', 'GAN acc 0.4766', 'Discriminator loss 0.6919', 'Discriminator accuracy 0.4941', 'Total loss: 1.4247', 'for batch', 26)
('GAN loss 0.7787 ', 'GAN acc 0.3672', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5879', 'Total loss: 1.4500', 'for batch', 27)
('GAN loss 0.7801 ', 'GAN acc 0.3867', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.5488', 'Total loss: 1.4654', 'for batch', 28)
('GAN loss 0.8062 ', 'GAN acc 0.2461', 'Discriminator loss 0.6658', 'Discriminator accuracy 0.5742', 'Total loss: 1.4720', 'for batch', 29)
('GAN loss 0.8049 ', 'GAN acc 0.2969', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.5430', 'Total loss: 1.4836', 'for batch', 30)
('GAN loss 0.7492 ', 'GAN acc 0.4609', 'Discriminator loss 0.6556', 'Discriminator accuracy 0.5898', 'Total loss: 1.4048', 'for batch', 31)
('GAN loss 0.7252 ', 'GAN acc 0.5664', 'Discriminator loss 0.6742', 'Discriminator accuracy 0.5391', 'Total loss: 1.3993', 'for batch', 32)
('GAN loss 0.6888 ', 'GAN acc 0.6133', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5762', 'Total loss: 1.3612', 'for batch', 33)
('GAN loss 0.9141 ', 'GAN acc 0.1680', 'Discriminator loss 0.6200', 'Discriminator accuracy 0.6875', 'Total loss: 1.5341', 'for batch', 34)
('GAN loss 0.8941 ', 'GAN acc 0.0078', 'Discriminator loss 0.6340', 'Discriminator accuracy 0.7305', 'Total loss: 1.5280', 'for batch', 35)
('GAN loss 0.9839 ', 'GAN acc 0.0000', 'Discriminator loss 0.6260', 'Discriminator accuracy 0.7559', 'Total loss: 1.6100', 'for batch', 36)
('GAN loss 0.9867 ', 'GAN acc 0.0000', 'Discriminator loss 0.6380', 'Discriminator accuracy 0.6230', 'Total loss: 1.6247', 'for batch', 37)
('GAN loss 0.8782 ', 'GAN acc 0.0391', 'Discriminator loss 0.6571', 'Discriminator accuracy 0.6328', 'Total loss: 1.5353', 'for batch', 38)
('GAN loss 0.7627 ', 'GAN acc 0.2266', 'Discriminator loss 0.6822', 'Discriminator accuracy 0.5332', 'Total loss: 1.4449', 'for batch', 39)
('GAN loss 0.7985 ', 'GAN acc 0.1289', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5664', 'Total loss: 1.4832', 'for batch', 40)
('GAN loss 0.9493 ', 'GAN acc 0.0430', 'Discriminator loss 0.6896', 'Discriminator accuracy 0.4961', 'Total loss: 1.6389', 'for batch', 41)
('GAN loss 1.4602 ', 'GAN acc 0.0156', 'Discriminator loss 0.6431', 'Discriminator accuracy 0.6680', 'Total loss: 2.1033', 'for batch', 42)
('GAN loss 1.0119 ', 'GAN acc 0.1797', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.4980', 'Total loss: 1.6981', 'for batch', 43)
('GAN loss 0.8314 ', 'GAN acc 0.2344', 'Discriminator loss 0.6480', 'Discriminator accuracy 0.6738', 'Total loss: 1.4794', 'for batch', 44)
('GAN loss 0.7514 ', 'GAN acc 0.7852', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.4980', 'Total loss: 1.4279', 'for batch', 45)
('GAN loss 0.6687 ', 'GAN acc 0.9102', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.5039', 'Total loss: 1.3530', 'for batch', 46)
('GAN loss 0.6523 ', 'GAN acc 0.9258', 'Discriminator loss 0.7007', 'Discriminator accuracy 0.4980', 'Total loss: 1.3530', 'for batch', 47)
('GAN loss 0.6817 ', 'GAN acc 0.9180', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5215', 'Total loss: 1.3675', 'for batch', 48)
('GAN loss 0.7293 ', 'GAN acc 0.7578', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.5176', 'Total loss: 1.4159', 'for batch', 49)
('GAN loss 0.7315 ', 'GAN acc 0.4492', 'Discriminator loss 0.6730', 'Discriminator accuracy 0.5352', 'Total loss: 1.4046', 'for batch', 50)
('GAN loss 0.8183 ', 'GAN acc 0.2148', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.6562', 'Total loss: 1.4846', 'for batch', 51)
('GAN loss 0.7696 ', 'GAN acc 0.3008', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5566', 'Total loss: 1.4469', 'for batch', 52)
('GAN loss 0.7273 ', 'GAN acc 0.6445', 'Discriminator loss 0.6749', 'Discriminator accuracy 0.5098', 'Total loss: 1.4022', 'for batch', 53)
('GAN loss 0.7410 ', 'GAN acc 0.6914', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5586', 'Total loss: 1.4158', 'for batch', 54)
('GAN loss 0.7419 ', 'GAN acc 0.6914', 'Discriminator loss 0.6805', 'Discriminator accuracy 0.5215', 'Total loss: 1.4224', 'for batch', 55)
('GAN loss 0.7126 ', 'GAN acc 0.5859', 'Discriminator loss 0.6820', 'Discriminator accuracy 0.5430', 'Total loss: 1.3946', 'for batch', 56)
('GAN loss 0.7524 ', 'GAN acc 0.5430', 'Discriminator loss 0.6806', 'Discriminator accuracy 0.5156', 'Total loss: 1.4330', 'for batch', 57)
('GAN loss 0.7705 ', 'GAN acc 0.4648', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.5547', 'Total loss: 1.4514', 'for batch', 58)
('GAN loss 0.8174 ', 'GAN acc 0.3477', 'Discriminator loss 0.6581', 'Discriminator accuracy 0.6074', 'Total loss: 1.4755', 'for batch', 59)
('GAN loss 0.7453 ', 'GAN acc 0.6055', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5527', 'Total loss: 1.4254', 'for batch', 60)
('GAN loss 0.6823 ', 'GAN acc 0.8906', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.4844', 'Total loss: 1.3703', 'for batch', 61)
('GAN loss 0.6811 ', 'GAN acc 0.9062', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5176', 'Total loss: 1.3582', 'for batch', 62)
('GAN loss 0.6749 ', 'GAN acc 0.8828', 'Discriminator loss 0.6668', 'Discriminator accuracy 0.5781', 'Total loss: 1.3417', 'for batch', 63)
('GAN loss 0.6856 ', 'GAN acc 0.8242', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5371', 'Total loss: 1.3583', 'for batch', 64)
('GAN loss 0.6856 ', 'GAN acc 0.7617', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5312', 'Total loss: 1.3649', 'for batch', 65)
('GAN loss 0.6787 ', 'GAN acc 0.7539', 'Discriminator loss 0.6771', 'Discriminator accuracy 0.5547', 'Total loss: 1.3559', 'for batch', 66)
('GAN loss 0.6985 ', 'GAN acc 0.6875', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5664', 'Total loss: 1.3782', 'for batch', 67)
('GAN loss 0.7181 ', 'GAN acc 0.5078', 'Discriminator loss 0.6525', 'Discriminator accuracy 0.6660', 'Total loss: 1.3706', 'for batch', 68)
('GAN loss 0.6774 ', 'GAN acc 0.7539', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.4980', 'Total loss: 1.3694', 'for batch', 69)
('GAN loss 0.6802 ', 'GAN acc 0.8320', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.5566', 'Total loss: 1.3609', 'for batch', 70)
('GAN loss 0.6852 ', 'GAN acc 0.7969', 'Discriminator loss 0.6486', 'Discriminator accuracy 0.6152', 'Total loss: 1.3338', 'for batch', 71)
('GAN loss 0.6905 ', 'GAN acc 0.7852', 'Discriminator loss 0.6728', 'Discriminator accuracy 0.5430', 'Total loss: 1.3633', 'for batch', 72)
('GAN loss 0.6665 ', 'GAN acc 0.8555', 'Discriminator loss 0.6426', 'Discriminator accuracy 0.6328', 'Total loss: 1.3091', 'for batch', 73)
('GAN loss 0.6204 ', 'GAN acc 0.9688', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5312', 'Total loss: 1.2913', 'for batch', 74)
('GAN loss 0.6302 ', 'GAN acc 0.9492', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5117', 'Total loss: 1.3160', 'for batch', 75)
('GAN loss 0.6626 ', 'GAN acc 0.8906', 'Discriminator loss 0.6806', 'Discriminator accuracy 0.5254', 'Total loss: 1.3432', 'for batch', 76)
('GAN loss 0.6822 ', 'GAN acc 0.7500', 'Discriminator loss 0.6746', 'Discriminator accuracy 0.5352', 'Total loss: 1.3568', 'for batch', 77)
('GAN loss 0.7185 ', 'GAN acc 0.4766', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5547', 'Total loss: 1.3983', 'for batch', 78)
('GAN loss 0.7303 ', 'GAN acc 0.4414', 'Discriminator loss 0.6795', 'Discriminator accuracy 0.5430', 'Total loss: 1.4098', 'for batch', 79)
('GAN loss 0.7335 ', 'GAN acc 0.4414', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.5059', 'Total loss: 1.4036', 'for batch', 80)
('GAN loss 0.6919 ', 'GAN acc 0.7266', 'Discriminator loss 0.6540', 'Discriminator accuracy 0.6094', 'Total loss: 1.3459', 'for batch', 81)
('GAN loss 0.6811 ', 'GAN acc 0.8320', 'Discriminator loss 0.6663', 'Discriminator accuracy 0.5312', 'Total loss: 1.3475', 'for batch', 82)
('GAN loss 0.6810 ', 'GAN acc 0.8828', 'Discriminator loss 0.6499', 'Discriminator accuracy 0.6172', 'Total loss: 1.3309', 'for batch', 83)
('GAN loss 0.6653 ', 'GAN acc 0.8672', 'Discriminator loss 0.6039', 'Discriminator accuracy 0.7070', 'Total loss: 1.2692', 'for batch', 84)
('GAN loss 0.5960 ', 'GAN acc 0.9570', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.4844', 'Total loss: 1.2738', 'for batch', 85)
('GAN loss 0.6051 ', 'GAN acc 0.9531', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.5254', 'Total loss: 1.2869', 'for batch', 86)
('GAN loss 0.6695 ', 'GAN acc 0.8398', 'Discriminator loss 0.6506', 'Discriminator accuracy 0.6230', 'Total loss: 1.3200', 'for batch', 87)
('GAN loss 0.6666 ', 'GAN acc 0.8633', 'Discriminator loss 0.6560', 'Discriminator accuracy 0.5898', 'Total loss: 1.3226', 'for batch', 88)
('GAN loss 0.6393 ', 'GAN acc 0.9570', 'Discriminator loss 0.6601', 'Discriminator accuracy 0.5879', 'Total loss: 1.2994', 'for batch', 89)
('GAN loss 0.6542 ', 'GAN acc 0.9609', 'Discriminator loss 0.6702', 'Discriminator accuracy 0.5723', 'Total loss: 1.3244', 'for batch', 90)
('GAN loss 0.6146 ', 'GAN acc 0.9766', 'Discriminator loss 0.6081', 'Discriminator accuracy 0.5566', 'Total loss: 1.2227', 'for batch', 91)
('GAN loss 0.6182 ', 'GAN acc 0.9688', 'Discriminator loss 0.6176', 'Discriminator accuracy 0.6543', 'Total loss: 1.2359', 'for batch', 92)
('GAN loss 0.6095 ', 'GAN acc 0.9688', 'Discriminator loss 0.6380', 'Discriminator accuracy 0.5488', 'Total loss: 1.2475', 'for batch', 93)
('GAN loss 0.6183 ', 'GAN acc 0.9727', 'Discriminator loss 0.6580', 'Discriminator accuracy 0.6016', 'Total loss: 1.2762', 'for batch', 94)
('GAN loss 0.6100 ', 'GAN acc 0.9727', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5215', 'Total loss: 1.2883', 'for batch', 95)
('GAN loss 0.6289 ', 'GAN acc 0.9648', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5664', 'Total loss: 1.2996', 'for batch', 96)
('GAN loss 0.6720 ', 'GAN acc 0.8984', 'Discriminator loss 0.6354', 'Discriminator accuracy 0.6230', 'Total loss: 1.3075', 'for batch', 97)
('GAN loss 0.6302 ', 'GAN acc 0.9531', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5117', 'Total loss: 1.3079', 'for batch', 98)
('GAN loss 0.6542 ', 'GAN acc 0.9297', 'Discriminator loss 0.6342', 'Discriminator accuracy 0.6465', 'Total loss: 1.2884', 'for batch', 99)
('GAN loss 0.6652 ', 'GAN acc 0.8516', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5273', 'Total loss: 1.3359', 'for batch', 100)
('GAN loss 0.6674 ', 'GAN acc 0.8906', 'Discriminator loss 0.6690', 'Discriminator accuracy 0.5781', 'Total loss: 1.3364', 'for batch', 101)
('GAN loss 0.6868 ', 'GAN acc 0.8008', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5469', 'Total loss: 1.3689', 'for batch', 102)
('GAN loss 0.7153 ', 'GAN acc 0.7969', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5488', 'Total loss: 1.3967', 'for batch', 103)
('GAN loss 0.7699 ', 'GAN acc 0.8008', 'Discriminator loss 0.6637', 'Discriminator accuracy 0.5664', 'Total loss: 1.4336', 'for batch', 104)
('GAN loss 0.7638 ', 'GAN acc 0.6406', 'Discriminator loss 0.6084', 'Discriminator accuracy 0.7344', 'Total loss: 1.3722', 'for batch', 105)
('GAN loss 0.6630 ', 'GAN acc 0.9258', 'Discriminator loss 0.6719', 'Discriminator accuracy 0.5371', 'Total loss: 1.3349', 'for batch', 106)
('GAN loss 0.6722 ', 'GAN acc 0.8984', 'Discriminator loss 0.6651', 'Discriminator accuracy 0.5625', 'Total loss: 1.3373', 'for batch', 107)
('GAN loss 0.6790 ', 'GAN acc 0.8125', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5195', 'Total loss: 1.3550', 'for batch', 108)
('GAN loss 0.7014 ', 'GAN acc 0.7500', 'Discriminator loss 0.6699', 'Discriminator accuracy 0.5586', 'Total loss: 1.3714', 'for batch', 109)
('GAN loss 0.7330 ', 'GAN acc 0.6562', 'Discriminator loss 0.6248', 'Discriminator accuracy 0.6660', 'Total loss: 1.3578', 'for batch', 110)
('GAN loss 0.7777 ', 'GAN acc 0.4648', 'Discriminator loss 0.6434', 'Discriminator accuracy 0.6133', 'Total loss: 1.4211', 'for batch', 111)
('GAN loss 0.6509 ', 'GAN acc 0.9258', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5723', 'Total loss: 1.3182', 'for batch', 112)
('GAN loss 0.6571 ', 'GAN acc 0.8242', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.5156', 'Total loss: 1.3452', 'for batch', 113)
('GAN loss 0.6991 ', 'GAN acc 0.6562', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5547', 'Total loss: 1.3763', 'for batch', 114)
('GAN loss 0.7005 ', 'GAN acc 0.6562', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5566', 'Total loss: 1.3760', 'for batch', 115)
('GAN loss 0.7254 ', 'GAN acc 0.6445', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5430', 'Total loss: 1.4047', 'for batch', 116)
('GAN loss 0.7707 ', 'GAN acc 0.5625', 'Discriminator loss 0.6322', 'Discriminator accuracy 0.6426', 'Total loss: 1.4030', 'for batch', 117)
('GAN loss 0.6993 ', 'GAN acc 0.6992', 'Discriminator loss 0.6876', 'Discriminator accuracy 0.5566', 'Total loss: 1.3869', 'for batch', 118)
('GAN loss 0.6700 ', 'GAN acc 0.8984', 'Discriminator loss 0.6730', 'Discriminator accuracy 0.5059', 'Total loss: 1.3431', 'for batch', 119)
('GAN loss 0.6463 ', 'GAN acc 0.9375', 'Discriminator loss 0.6554', 'Discriminator accuracy 0.5918', 'Total loss: 1.3017', 'for batch', 120)
('GAN loss 0.6332 ', 'GAN acc 0.9570', 'Discriminator loss 0.6569', 'Discriminator accuracy 0.5820', 'Total loss: 1.2902', 'for batch', 121)
('GAN loss 0.6430 ', 'GAN acc 0.9570', 'Discriminator loss 0.5347', 'Discriminator accuracy 0.7637', 'Total loss: 1.1777', 'for batch', 122)
('GAN loss 0.5998 ', 'GAN acc 0.9727', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5645', 'Total loss: 1.2772', 'for batch', 123)
('GAN loss 0.6389 ', 'GAN acc 0.9609', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.5625', 'Total loss: 1.3196', 'for batch', 124)
('GAN loss 0.6601 ', 'GAN acc 0.9570', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.5566', 'Total loss: 1.3243', 'for batch', 125)
('GAN loss 0.6496 ', 'GAN acc 0.9609', 'Discriminator loss 0.6336', 'Discriminator accuracy 0.5508', 'Total loss: 1.2832', 'for batch', 126)
('GAN loss 0.6507 ', 'GAN acc 0.9727', 'Discriminator loss 0.6562', 'Discriminator accuracy 0.5078', 'Total loss: 1.3069', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.51932764)
('DISCRIMINATOR_Imagem FAKE=', 0.36038446)
('Discriminator trained', 113, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.661011')
----------------------------------
('Epoch', 17, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6385 ', 'GAN acc 0.9766', 'Discriminator loss 0.6187', 'Discriminator accuracy 0.6348', 'Total loss: 1.2572', 'for batch', 0)
('GAN loss 0.5866 ', 'GAN acc 0.9844', 'Discriminator loss 0.5823', 'Discriminator accuracy 0.6484', 'Total loss: 1.1688', 'for batch', 1)
('GAN loss 0.5800 ', 'GAN acc 0.9805', 'Discriminator loss 0.6312', 'Discriminator accuracy 0.6270', 'Total loss: 1.2112', 'for batch', 2)
('GAN loss 0.5518 ', 'GAN acc 0.9805', 'Discriminator loss 0.5973', 'Discriminator accuracy 0.6035', 'Total loss: 1.1491', 'for batch', 3)
('GAN loss 0.5732 ', 'GAN acc 0.9805', 'Discriminator loss 0.6628', 'Discriminator accuracy 0.5566', 'Total loss: 1.2361', 'for batch', 4)
('GAN loss 0.5951 ', 'GAN acc 0.9922', 'Discriminator loss 0.6026', 'Discriminator accuracy 0.6992', 'Total loss: 1.1977', 'for batch', 5)
('GAN loss 0.5552 ', 'GAN acc 0.9805', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5684', 'Total loss: 1.2443', 'for batch', 6)
('GAN loss 0.5659 ', 'GAN acc 0.9805', 'Discriminator loss 0.5910', 'Discriminator accuracy 0.7188', 'Total loss: 1.1569', 'for batch', 7)
('GAN loss 0.7103 ', 'GAN acc 0.7031', 'Discriminator loss 0.4517', 'Discriminator accuracy 0.8906', 'Total loss: 1.1620', 'for batch', 8)
('GAN loss 0.7712 ', 'GAN acc 0.1133', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.5234', 'Total loss: 1.4374', 'for batch', 9)
('GAN loss 0.9506 ', 'GAN acc 0.0078', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.7188', 'Total loss: 1.6028', 'for batch', 10)
('GAN loss 1.0127 ', 'GAN acc 0.0078', 'Discriminator loss 0.6503', 'Discriminator accuracy 0.6152', 'Total loss: 1.6630', 'for batch', 11)
('GAN loss 0.9727 ', 'GAN acc 0.0195', 'Discriminator loss 0.6564', 'Discriminator accuracy 0.5586', 'Total loss: 1.6291', 'for batch', 12)
('GAN loss 0.8150 ', 'GAN acc 0.0820', 'Discriminator loss 0.6903', 'Discriminator accuracy 0.5039', 'Total loss: 1.5053', 'for batch', 13)
('GAN loss 0.7600 ', 'GAN acc 0.1328', 'Discriminator loss 0.6922', 'Discriminator accuracy 0.4941', 'Total loss: 1.4522', 'for batch', 14)
('GAN loss 0.8041 ', 'GAN acc 0.0664', 'Discriminator loss 0.6829', 'Discriminator accuracy 0.5840', 'Total loss: 1.4870', 'for batch', 15)
('GAN loss 0.7967 ', 'GAN acc 0.1211', 'Discriminator loss 0.7114', 'Discriminator accuracy 0.4824', 'Total loss: 1.5081', 'for batch', 16)
('GAN loss 0.8290 ', 'GAN acc 0.0547', 'Discriminator loss 0.6940', 'Discriminator accuracy 0.5410', 'Total loss: 1.5230', 'for batch', 17)
('GAN loss 0.9132 ', 'GAN acc 0.0352', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.5391', 'Total loss: 1.5921', 'for batch', 18)
('GAN loss 0.8199 ', 'GAN acc 0.0781', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5625', 'Total loss: 1.5034', 'for batch', 19)
('GAN loss 0.8100 ', 'GAN acc 0.1562', 'Discriminator loss 0.6911', 'Discriminator accuracy 0.5293', 'Total loss: 1.5011', 'for batch', 20)
('GAN loss 0.7712 ', 'GAN acc 0.2617', 'Discriminator loss 0.6902', 'Discriminator accuracy 0.5176', 'Total loss: 1.4615', 'for batch', 21)
('GAN loss 0.7099 ', 'GAN acc 0.5820', 'Discriminator loss 0.6924', 'Discriminator accuracy 0.5020', 'Total loss: 1.4024', 'for batch', 22)
('GAN loss 0.6748 ', 'GAN acc 0.6914', 'Discriminator loss 0.6985', 'Discriminator accuracy 0.5039', 'Total loss: 1.3732', 'for batch', 23)
('GAN loss 0.6910 ', 'GAN acc 0.7031', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5195', 'Total loss: 1.3768', 'for batch', 24)
('GAN loss 0.7100 ', 'GAN acc 0.6836', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5508', 'Total loss: 1.3897', 'for batch', 25)
('GAN loss 0.6791 ', 'GAN acc 0.8008', 'Discriminator loss 0.6749', 'Discriminator accuracy 0.5625', 'Total loss: 1.3540', 'for batch', 26)
('GAN loss 0.6537 ', 'GAN acc 0.8945', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5137', 'Total loss: 1.3285', 'for batch', 27)
('GAN loss 0.6450 ', 'GAN acc 0.8594', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.5332', 'Total loss: 1.3213', 'for batch', 28)
('GAN loss 0.6627 ', 'GAN acc 0.7266', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.5176', 'Total loss: 1.3423', 'for batch', 29)
('GAN loss 0.6532 ', 'GAN acc 0.7812', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.4902', 'Total loss: 1.3449', 'for batch', 30)
('GAN loss 0.6790 ', 'GAN acc 0.6602', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.4902', 'Total loss: 1.3657', 'for batch', 31)
('GAN loss 0.6710 ', 'GAN acc 0.7656', 'Discriminator loss 0.6659', 'Discriminator accuracy 0.5703', 'Total loss: 1.3368', 'for batch', 32)
('GAN loss 0.6555 ', 'GAN acc 0.7656', 'Discriminator loss 0.6635', 'Discriminator accuracy 0.5859', 'Total loss: 1.3189', 'for batch', 33)
('GAN loss 0.6797 ', 'GAN acc 0.6172', 'Discriminator loss 0.6562', 'Discriminator accuracy 0.5879', 'Total loss: 1.3359', 'for batch', 34)
('GAN loss 0.6736 ', 'GAN acc 0.5352', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5938', 'Total loss: 1.3393', 'for batch', 35)
('GAN loss 0.6969 ', 'GAN acc 0.4297', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5645', 'Total loss: 1.3706', 'for batch', 36)
('GAN loss 0.7052 ', 'GAN acc 0.3281', 'Discriminator loss 0.7006', 'Discriminator accuracy 0.5039', 'Total loss: 1.4058', 'for batch', 37)
('GAN loss 0.7421 ', 'GAN acc 0.3594', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.5156', 'Total loss: 1.4217', 'for batch', 38)
('GAN loss 0.7801 ', 'GAN acc 0.3906', 'Discriminator loss 0.6786', 'Discriminator accuracy 0.5293', 'Total loss: 1.4587', 'for batch', 39)
('GAN loss 0.7347 ', 'GAN acc 0.4883', 'Discriminator loss 0.6875', 'Discriminator accuracy 0.5234', 'Total loss: 1.4221', 'for batch', 40)
('GAN loss 0.7564 ', 'GAN acc 0.4258', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5352', 'Total loss: 1.4332', 'for batch', 41)
('GAN loss 0.6807 ', 'GAN acc 0.6562', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.5254', 'Total loss: 1.3662', 'for batch', 42)
('GAN loss 0.6793 ', 'GAN acc 0.6641', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5410', 'Total loss: 1.3621', 'for batch', 43)
('GAN loss 0.6972 ', 'GAN acc 0.6797', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5020', 'Total loss: 1.3851', 'for batch', 44)
('GAN loss 0.7220 ', 'GAN acc 0.4453', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5430', 'Total loss: 1.4017', 'for batch', 45)
('GAN loss 0.7827 ', 'GAN acc 0.2227', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.6094', 'Total loss: 1.4447', 'for batch', 46)
('GAN loss 0.7120 ', 'GAN acc 0.6406', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5996', 'Total loss: 1.3979', 'for batch', 47)
('GAN loss 0.6820 ', 'GAN acc 0.7539', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5488', 'Total loss: 1.3543', 'for batch', 48)
('GAN loss 0.6964 ', 'GAN acc 0.5898', 'Discriminator loss 0.6815', 'Discriminator accuracy 0.5137', 'Total loss: 1.3779', 'for batch', 49)
('GAN loss 0.6641 ', 'GAN acc 0.7383', 'Discriminator loss 0.6883', 'Discriminator accuracy 0.5176', 'Total loss: 1.3524', 'for batch', 50)
('GAN loss 0.6958 ', 'GAN acc 0.4688', 'Discriminator loss 0.6982', 'Discriminator accuracy 0.5020', 'Total loss: 1.3940', 'for batch', 51)
('GAN loss 0.7370 ', 'GAN acc 0.2148', 'Discriminator loss 0.6896', 'Discriminator accuracy 0.4961', 'Total loss: 1.4266', 'for batch', 52)
('GAN loss 0.7512 ', 'GAN acc 0.2539', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.4922', 'Total loss: 1.4393', 'for batch', 53)
('GAN loss 0.7544 ', 'GAN acc 0.1680', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.4961', 'Total loss: 1.4381', 'for batch', 54)
('GAN loss 0.7907 ', 'GAN acc 0.1250', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5000', 'Total loss: 1.4767', 'for batch', 55)
('GAN loss 0.7083 ', 'GAN acc 0.5820', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.4883', 'Total loss: 1.4013', 'for batch', 56)
('GAN loss 0.6747 ', 'GAN acc 0.7969', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5273', 'Total loss: 1.3540', 'for batch', 57)
('GAN loss 0.6697 ', 'GAN acc 0.8516', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.4961', 'Total loss: 1.3563', 'for batch', 58)
('GAN loss 0.6718 ', 'GAN acc 0.8203', 'Discriminator loss 0.6676', 'Discriminator accuracy 0.5840', 'Total loss: 1.3394', 'for batch', 59)
('GAN loss 0.6856 ', 'GAN acc 0.8320', 'Discriminator loss 0.6665', 'Discriminator accuracy 0.5742', 'Total loss: 1.3522', 'for batch', 60)
('GAN loss 0.6677 ', 'GAN acc 0.8711', 'Discriminator loss 0.6691', 'Discriminator accuracy 0.5742', 'Total loss: 1.3368', 'for batch', 61)
('GAN loss 0.6370 ', 'GAN acc 0.9492', 'Discriminator loss 0.6970', 'Discriminator accuracy 0.4805', 'Total loss: 1.3341', 'for batch', 62)
('GAN loss 0.6469 ', 'GAN acc 0.9023', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5488', 'Total loss: 1.3182', 'for batch', 63)
('GAN loss 0.6531 ', 'GAN acc 0.8906', 'Discriminator loss 0.6700', 'Discriminator accuracy 0.5547', 'Total loss: 1.3231', 'for batch', 64)
('GAN loss 0.6698 ', 'GAN acc 0.8008', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.4961', 'Total loss: 1.3475', 'for batch', 65)
('GAN loss 0.6728 ', 'GAN acc 0.7891', 'Discriminator loss 0.6773', 'Discriminator accuracy 0.5430', 'Total loss: 1.3501', 'for batch', 66)
('GAN loss 0.6784 ', 'GAN acc 0.7383', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5840', 'Total loss: 1.3418', 'for batch', 67)
('GAN loss 0.6877 ', 'GAN acc 0.7539', 'Discriminator loss 0.6247', 'Discriminator accuracy 0.5957', 'Total loss: 1.3124', 'for batch', 68)
('GAN loss 0.6115 ', 'GAN acc 0.9492', 'Discriminator loss 0.6664', 'Discriminator accuracy 0.5586', 'Total loss: 1.2780', 'for batch', 69)
('GAN loss 0.5801 ', 'GAN acc 0.9922', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.5000', 'Total loss: 1.2612', 'for batch', 70)
('GAN loss 0.5755 ', 'GAN acc 0.9844', 'Discriminator loss 0.6066', 'Discriminator accuracy 0.6504', 'Total loss: 1.1821', 'for batch', 71)
('GAN loss 0.5633 ', 'GAN acc 0.9883', 'Discriminator loss 0.6813', 'Discriminator accuracy 0.5059', 'Total loss: 1.2446', 'for batch', 72)
('GAN loss 0.5030 ', 'GAN acc 1.0000', 'Discriminator loss 0.5819', 'Discriminator accuracy 0.6191', 'Total loss: 1.0848', 'for batch', 73)
('GAN loss 0.5081 ', 'GAN acc 0.9961', 'Discriminator loss 0.5954', 'Discriminator accuracy 0.6836', 'Total loss: 1.1036', 'for batch', 74)
('GAN loss 0.5531 ', 'GAN acc 0.9766', 'Discriminator loss 0.6721', 'Discriminator accuracy 0.5625', 'Total loss: 1.2252', 'for batch', 75)
('GAN loss 0.4903 ', 'GAN acc 0.9727', 'Discriminator loss 0.6627', 'Discriminator accuracy 0.5000', 'Total loss: 1.1529', 'for batch', 76)
('GAN loss 0.5690 ', 'GAN acc 0.9844', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5723', 'Total loss: 1.2563', 'for batch', 77)
('GAN loss 0.6580 ', 'GAN acc 0.9414', 'Discriminator loss 0.6956', 'Discriminator accuracy 0.5176', 'Total loss: 1.3536', 'for batch', 78)
('GAN loss 0.7122 ', 'GAN acc 0.6680', 'Discriminator loss 0.6304', 'Discriminator accuracy 0.6641', 'Total loss: 1.3426', 'for batch', 79)
('GAN loss 0.6066 ', 'GAN acc 0.9883', 'Discriminator loss 0.6571', 'Discriminator accuracy 0.4902', 'Total loss: 1.2637', 'for batch', 80)
('GAN loss 0.6078 ', 'GAN acc 0.9883', 'Discriminator loss 0.6159', 'Discriminator accuracy 0.7051', 'Total loss: 1.2237', 'for batch', 81)
('GAN loss 0.6380 ', 'GAN acc 0.9648', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5547', 'Total loss: 1.3129', 'for batch', 82)
('GAN loss 0.6039 ', 'GAN acc 0.9766', 'Discriminator loss 0.6254', 'Discriminator accuracy 0.5488', 'Total loss: 1.2293', 'for batch', 83)
('GAN loss 0.6081 ', 'GAN acc 0.9766', 'Discriminator loss 0.5433', 'Discriminator accuracy 0.7695', 'Total loss: 1.1514', 'for batch', 84)
('GAN loss 0.5762 ', 'GAN acc 0.9844', 'Discriminator loss 0.7034', 'Discriminator accuracy 0.5215', 'Total loss: 1.2796', 'for batch', 85)
('GAN loss 0.6257 ', 'GAN acc 0.9609', 'Discriminator loss 0.7038', 'Discriminator accuracy 0.5156', 'Total loss: 1.3295', 'for batch', 86)
('GAN loss 0.6478 ', 'GAN acc 0.9023', 'Discriminator loss 0.6966', 'Discriminator accuracy 0.5137', 'Total loss: 1.3444', 'for batch', 87)
('GAN loss 0.6797 ', 'GAN acc 0.6289', 'Discriminator loss 0.6941', 'Discriminator accuracy 0.5020', 'Total loss: 1.3738', 'for batch', 88)
('GAN loss 0.6910 ', 'GAN acc 0.5820', 'Discriminator loss 0.6935', 'Discriminator accuracy 0.5234', 'Total loss: 1.3846', 'for batch', 89)
('GAN loss 0.7024 ', 'GAN acc 0.5039', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5352', 'Total loss: 1.3798', 'for batch', 90)
('GAN loss 0.6940 ', 'GAN acc 0.6562', 'Discriminator loss 0.6343', 'Discriminator accuracy 0.6055', 'Total loss: 1.3284', 'for batch', 91)
('GAN loss 0.6794 ', 'GAN acc 0.7148', 'Discriminator loss 0.6108', 'Discriminator accuracy 0.6641', 'Total loss: 1.2903', 'for batch', 92)
('GAN loss 0.7614 ', 'GAN acc 0.4609', 'Discriminator loss 0.5851', 'Discriminator accuracy 0.6895', 'Total loss: 1.3465', 'for batch', 93)
('GAN loss 0.6408 ', 'GAN acc 0.9570', 'Discriminator loss 0.6438', 'Discriminator accuracy 0.5156', 'Total loss: 1.2846', 'for batch', 94)
('GAN loss 0.6219 ', 'GAN acc 0.9844', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5332', 'Total loss: 1.2987', 'for batch', 95)
('GAN loss 0.5876 ', 'GAN acc 0.9961', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5059', 'Total loss: 1.2693', 'for batch', 96)
('GAN loss 0.6040 ', 'GAN acc 0.9844', 'Discriminator loss 0.6830', 'Discriminator accuracy 0.5234', 'Total loss: 1.2870', 'for batch', 97)
('GAN loss 0.6058 ', 'GAN acc 0.9844', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.5137', 'Total loss: 1.2909', 'for batch', 98)
('GAN loss 0.6208 ', 'GAN acc 0.9883', 'Discriminator loss 0.6847', 'Discriminator accuracy 0.5449', 'Total loss: 1.3055', 'for batch', 99)
('GAN loss 0.6428 ', 'GAN acc 0.9531', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5254', 'Total loss: 1.3135', 'for batch', 100)
('GAN loss 0.6689 ', 'GAN acc 0.8477', 'Discriminator loss 0.6820', 'Discriminator accuracy 0.5059', 'Total loss: 1.3509', 'for batch', 101)
('GAN loss 0.7046 ', 'GAN acc 0.7070', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.4961', 'Total loss: 1.3864', 'for batch', 102)
('GAN loss 0.7191 ', 'GAN acc 0.3203', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.5625', 'Total loss: 1.3837', 'for batch', 103)
('GAN loss 0.7420 ', 'GAN acc 0.2617', 'Discriminator loss 0.6558', 'Discriminator accuracy 0.6367', 'Total loss: 1.3978', 'for batch', 104)
('GAN loss 0.7631 ', 'GAN acc 0.3008', 'Discriminator loss 0.6506', 'Discriminator accuracy 0.6016', 'Total loss: 1.4137', 'for batch', 105)
('GAN loss 0.6712 ', 'GAN acc 0.7852', 'Discriminator loss 0.6534', 'Discriminator accuracy 0.5137', 'Total loss: 1.3247', 'for batch', 106)
('GAN loss 0.6772 ', 'GAN acc 0.6602', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5625', 'Total loss: 1.3481', 'for batch', 107)
('GAN loss 0.7004 ', 'GAN acc 0.4883', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5762', 'Total loss: 1.3743', 'for batch', 108)
('GAN loss 0.7185 ', 'GAN acc 0.3750', 'Discriminator loss 0.6247', 'Discriminator accuracy 0.6699', 'Total loss: 1.3432', 'for batch', 109)
('GAN loss 0.7302 ', 'GAN acc 0.5859', 'Discriminator loss 0.5962', 'Discriminator accuracy 0.6113', 'Total loss: 1.3264', 'for batch', 110)
('GAN loss 0.6963 ', 'GAN acc 0.7930', 'Discriminator loss 0.6479', 'Discriminator accuracy 0.5703', 'Total loss: 1.3442', 'for batch', 111)
('GAN loss 0.6849 ', 'GAN acc 0.8320', 'Discriminator loss 0.6279', 'Discriminator accuracy 0.6289', 'Total loss: 1.3128', 'for batch', 112)
('GAN loss 0.6507 ', 'GAN acc 0.8242', 'Discriminator loss 0.7152', 'Discriminator accuracy 0.4961', 'Total loss: 1.3660', 'for batch', 113)
('GAN loss 0.6628 ', 'GAN acc 0.8008', 'Discriminator loss 0.6242', 'Discriminator accuracy 0.6914', 'Total loss: 1.2870', 'for batch', 114)
('GAN loss 0.6099 ', 'GAN acc 0.9219', 'Discriminator loss 0.7388', 'Discriminator accuracy 0.5293', 'Total loss: 1.3487', 'for batch', 115)
('GAN loss 0.6264 ', 'GAN acc 0.8477', 'Discriminator loss 0.6961', 'Discriminator accuracy 0.5898', 'Total loss: 1.3225', 'for batch', 116)
('GAN loss 0.6793 ', 'GAN acc 0.7305', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.5742', 'Total loss: 1.3494', 'for batch', 117)
('GAN loss 0.7319 ', 'GAN acc 0.4609', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.6133', 'Total loss: 1.4108', 'for batch', 118)
('GAN loss 0.7818 ', 'GAN acc 0.3086', 'Discriminator loss 0.6312', 'Discriminator accuracy 0.6465', 'Total loss: 1.4130', 'for batch', 119)
('GAN loss 0.8018 ', 'GAN acc 0.2656', 'Discriminator loss 0.6276', 'Discriminator accuracy 0.6055', 'Total loss: 1.4295', 'for batch', 120)
('GAN loss 0.7313 ', 'GAN acc 0.4961', 'Discriminator loss 0.6695', 'Discriminator accuracy 0.4863', 'Total loss: 1.4008', 'for batch', 121)
('GAN loss 0.6741 ', 'GAN acc 0.8203', 'Discriminator loss 0.6534', 'Discriminator accuracy 0.5156', 'Total loss: 1.3275', 'for batch', 122)
('GAN loss 0.6258 ', 'GAN acc 0.9609', 'Discriminator loss 0.6607', 'Discriminator accuracy 0.5020', 'Total loss: 1.2865', 'for batch', 123)
('GAN loss 0.6189 ', 'GAN acc 0.9609', 'Discriminator loss 0.5446', 'Discriminator accuracy 0.7344', 'Total loss: 1.1635', 'for batch', 124)
('GAN loss 0.6150 ', 'GAN acc 0.9766', 'Discriminator loss 0.6507', 'Discriminator accuracy 0.6523', 'Total loss: 1.2657', 'for batch', 125)
('GAN loss 0.5915 ', 'GAN acc 0.9883', 'Discriminator loss 0.6418', 'Discriminator accuracy 0.5625', 'Total loss: 1.2333', 'for batch', 126)
('GAN loss 0.6142 ', 'GAN acc 0.9883', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5156', 'Total loss: 1.2886', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.57773715)
('DISCRIMINATOR_Imagem FAKE=', 0.5251072)
('Discriminator trained', 113, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.591471')
----------------------------------
('Epoch', 18, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6412 ', 'GAN acc 0.9688', 'Discriminator loss 0.6496', 'Discriminator accuracy 0.5742', 'Total loss: 1.2908', 'for batch', 0)
('GAN loss 0.6529 ', 'GAN acc 0.9414', 'Discriminator loss 0.6221', 'Discriminator accuracy 0.6094', 'Total loss: 1.2750', 'for batch', 1)
('GAN loss 0.6757 ', 'GAN acc 0.8203', 'Discriminator loss 0.6743', 'Discriminator accuracy 0.5586', 'Total loss: 1.3500', 'for batch', 2)
('GAN loss 0.6531 ', 'GAN acc 0.9648', 'Discriminator loss 0.5744', 'Discriminator accuracy 0.6387', 'Total loss: 1.2275', 'for batch', 3)
('GAN loss 0.6125 ', 'GAN acc 0.9805', 'Discriminator loss 0.6204', 'Discriminator accuracy 0.5938', 'Total loss: 1.2329', 'for batch', 4)
('GAN loss 0.5878 ', 'GAN acc 0.9961', 'Discriminator loss 0.5413', 'Discriminator accuracy 0.7207', 'Total loss: 1.1291', 'for batch', 5)
('GAN loss 0.6363 ', 'GAN acc 0.9688', 'Discriminator loss 0.6280', 'Discriminator accuracy 0.6094', 'Total loss: 1.2643', 'for batch', 6)
('GAN loss 0.5379 ', 'GAN acc 0.9883', 'Discriminator loss 0.5597', 'Discriminator accuracy 0.5762', 'Total loss: 1.0976', 'for batch', 7)
('GAN loss 0.5335 ', 'GAN acc 0.9922', 'Discriminator loss 0.5945', 'Discriminator accuracy 0.6445', 'Total loss: 1.1280', 'for batch', 8)
('GAN loss 0.5549 ', 'GAN acc 0.9883', 'Discriminator loss 0.6600', 'Discriminator accuracy 0.6191', 'Total loss: 1.2149', 'for batch', 9)
('GAN loss 0.6009 ', 'GAN acc 0.9844', 'Discriminator loss 0.5764', 'Discriminator accuracy 0.6719', 'Total loss: 1.1774', 'for batch', 10)
('GAN loss 0.5358 ', 'GAN acc 0.9883', 'Discriminator loss 0.6399', 'Discriminator accuracy 0.5215', 'Total loss: 1.1758', 'for batch', 11)
('GAN loss 0.5353 ', 'GAN acc 0.9883', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5703', 'Total loss: 1.1996', 'for batch', 12)
('GAN loss 0.5600 ', 'GAN acc 0.9805', 'Discriminator loss 0.6096', 'Discriminator accuracy 0.6875', 'Total loss: 1.1696', 'for batch', 13)
('GAN loss 0.6338 ', 'GAN acc 0.8789', 'Discriminator loss 0.5986', 'Discriminator accuracy 0.6914', 'Total loss: 1.2325', 'for batch', 14)
('GAN loss 0.5823 ', 'GAN acc 0.9844', 'Discriminator loss 0.5884', 'Discriminator accuracy 0.5586', 'Total loss: 1.1707', 'for batch', 15)
('GAN loss 0.5558 ', 'GAN acc 0.9922', 'Discriminator loss 0.6458', 'Discriminator accuracy 0.6035', 'Total loss: 1.2016', 'for batch', 16)
('GAN loss 0.5557 ', 'GAN acc 0.9922', 'Discriminator loss 0.6097', 'Discriminator accuracy 0.6465', 'Total loss: 1.1654', 'for batch', 17)
('GAN loss 0.5776 ', 'GAN acc 0.9844', 'Discriminator loss 0.6125', 'Discriminator accuracy 0.6699', 'Total loss: 1.1901', 'for batch', 18)
('GAN loss 0.5931 ', 'GAN acc 0.9688', 'Discriminator loss 0.6428', 'Discriminator accuracy 0.6367', 'Total loss: 1.2359', 'for batch', 19)
('GAN loss 0.5628 ', 'GAN acc 0.9883', 'Discriminator loss 0.6136', 'Discriminator accuracy 0.5781', 'Total loss: 1.1765', 'for batch', 20)
('GAN loss 0.5849 ', 'GAN acc 0.9727', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5625', 'Total loss: 1.2602', 'for batch', 21)
('GAN loss 0.5715 ', 'GAN acc 0.9688', 'Discriminator loss 0.6026', 'Discriminator accuracy 0.6387', 'Total loss: 1.1740', 'for batch', 22)
('GAN loss 0.5820 ', 'GAN acc 0.9688', 'Discriminator loss 0.6288', 'Discriminator accuracy 0.6914', 'Total loss: 1.2108', 'for batch', 23)
('GAN loss 0.5185 ', 'GAN acc 0.9883', 'Discriminator loss 0.6118', 'Discriminator accuracy 0.6465', 'Total loss: 1.1303', 'for batch', 24)
('GAN loss 0.5096 ', 'GAN acc 0.9805', 'Discriminator loss 0.5325', 'Discriminator accuracy 0.7422', 'Total loss: 1.0420', 'for batch', 25)
('GAN loss 0.5020 ', 'GAN acc 0.9922', 'Discriminator loss 0.5883', 'Discriminator accuracy 0.6816', 'Total loss: 1.0903', 'for batch', 26)
('GAN loss 0.4722 ', 'GAN acc 0.9922', 'Discriminator loss 0.4728', 'Discriminator accuracy 0.7930', 'Total loss: 0.9449', 'for batch', 27)
('GAN loss 0.5436 ', 'GAN acc 0.9766', 'Discriminator loss 0.5172', 'Discriminator accuracy 0.7832', 'Total loss: 1.0608', 'for batch', 28)
('GAN loss 0.5290 ', 'GAN acc 0.9766', 'Discriminator loss 0.7134', 'Discriminator accuracy 0.5176', 'Total loss: 1.2423', 'for batch', 29)
('GAN loss 0.5858 ', 'GAN acc 0.9766', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.5254', 'Total loss: 1.2794', 'for batch', 30)
('GAN loss 0.6223 ', 'GAN acc 0.9609', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5234', 'Total loss: 1.3055', 'for batch', 31)
('GAN loss 0.6521 ', 'GAN acc 0.8477', 'Discriminator loss 0.6790', 'Discriminator accuracy 0.5254', 'Total loss: 1.3311', 'for batch', 32)
('GAN loss 0.6829 ', 'GAN acc 0.7344', 'Discriminator loss 0.6757', 'Discriminator accuracy 0.5352', 'Total loss: 1.3586', 'for batch', 33)
('GAN loss 0.6771 ', 'GAN acc 0.8203', 'Discriminator loss 0.6715', 'Discriminator accuracy 0.5430', 'Total loss: 1.3486', 'for batch', 34)
('GAN loss 0.6883 ', 'GAN acc 0.5898', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5410', 'Total loss: 1.3607', 'for batch', 35)
('GAN loss 0.6916 ', 'GAN acc 0.5586', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5195', 'Total loss: 1.3696', 'for batch', 36)
('GAN loss 0.6996 ', 'GAN acc 0.5039', 'Discriminator loss 0.6830', 'Discriminator accuracy 0.5195', 'Total loss: 1.3826', 'for batch', 37)
('GAN loss 0.6986 ', 'GAN acc 0.5508', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5137', 'Total loss: 1.3906', 'for batch', 38)
('GAN loss 0.6925 ', 'GAN acc 0.7344', 'Discriminator loss 0.6988', 'Discriminator accuracy 0.5020', 'Total loss: 1.3913', 'for batch', 39)
('GAN loss 0.7292 ', 'GAN acc 0.2500', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.4902', 'Total loss: 1.4251', 'for batch', 40)
('GAN loss 0.7651 ', 'GAN acc 0.1836', 'Discriminator loss 0.6820', 'Discriminator accuracy 0.4941', 'Total loss: 1.4471', 'for batch', 41)
('GAN loss 0.8526 ', 'GAN acc 0.0430', 'Discriminator loss 0.6061', 'Discriminator accuracy 0.6016', 'Total loss: 1.4587', 'for batch', 42)
('GAN loss 0.6393 ', 'GAN acc 0.9766', 'Discriminator loss 0.7025', 'Discriminator accuracy 0.5059', 'Total loss: 1.3418', 'for batch', 43)
('GAN loss 0.6278 ', 'GAN acc 0.9766', 'Discriminator loss 0.6456', 'Discriminator accuracy 0.5801', 'Total loss: 1.2734', 'for batch', 44)
('GAN loss 0.6104 ', 'GAN acc 0.9883', 'Discriminator loss 0.6584', 'Discriminator accuracy 0.6250', 'Total loss: 1.2688', 'for batch', 45)
('GAN loss 0.5966 ', 'GAN acc 0.9805', 'Discriminator loss 0.6281', 'Discriminator accuracy 0.6074', 'Total loss: 1.2246', 'for batch', 46)
('GAN loss 0.5749 ', 'GAN acc 0.9883', 'Discriminator loss 0.6102', 'Discriminator accuracy 0.6953', 'Total loss: 1.1851', 'for batch', 47)
('GAN loss 0.5413 ', 'GAN acc 0.9922', 'Discriminator loss 0.5136', 'Discriminator accuracy 0.6934', 'Total loss: 1.0549', 'for batch', 48)
('GAN loss 0.5649 ', 'GAN acc 0.9883', 'Discriminator loss 0.6288', 'Discriminator accuracy 0.6602', 'Total loss: 1.1937', 'for batch', 49)
('GAN loss 0.5268 ', 'GAN acc 0.9922', 'Discriminator loss 0.6326', 'Discriminator accuracy 0.5801', 'Total loss: 1.1594', 'for batch', 50)
('GAN loss 0.5354 ', 'GAN acc 0.9883', 'Discriminator loss 0.6505', 'Discriminator accuracy 0.5898', 'Total loss: 1.1859', 'for batch', 51)
('GAN loss 0.7588 ', 'GAN acc 0.3164', 'Discriminator loss 0.6290', 'Discriminator accuracy 0.6738', 'Total loss: 1.3878', 'for batch', 52)
('GAN loss 0.6959 ', 'GAN acc 0.5430', 'Discriminator loss 0.6890', 'Discriminator accuracy 0.5098', 'Total loss: 1.3848', 'for batch', 53)
('GAN loss 0.8129 ', 'GAN acc 0.0430', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.6152', 'Total loss: 1.4873', 'for batch', 54)
('GAN loss 0.9489 ', 'GAN acc 0.0000', 'Discriminator loss 0.6681', 'Discriminator accuracy 0.6367', 'Total loss: 1.6169', 'for batch', 55)
('GAN loss 1.0629 ', 'GAN acc 0.0000', 'Discriminator loss 0.6577', 'Discriminator accuracy 0.5762', 'Total loss: 1.7206', 'for batch', 56)
('GAN loss 1.0110 ', 'GAN acc 0.0000', 'Discriminator loss 0.6666', 'Discriminator accuracy 0.5195', 'Total loss: 1.6776', 'for batch', 57)
('GAN loss 0.8595 ', 'GAN acc 0.0078', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5918', 'Total loss: 1.5343', 'for batch', 58)
('GAN loss 0.7427 ', 'GAN acc 0.2070', 'Discriminator loss 0.6916', 'Discriminator accuracy 0.5410', 'Total loss: 1.4344', 'for batch', 59)
('GAN loss 0.7055 ', 'GAN acc 0.4648', 'Discriminator loss 0.7124', 'Discriminator accuracy 0.4883', 'Total loss: 1.4179', 'for batch', 60)
('GAN loss 0.7514 ', 'GAN acc 0.1797', 'Discriminator loss 0.6919', 'Discriminator accuracy 0.5156', 'Total loss: 1.4433', 'for batch', 61)
('GAN loss 0.7451 ', 'GAN acc 0.1797', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.5703', 'Total loss: 1.4311', 'for batch', 62)
('GAN loss 0.7335 ', 'GAN acc 0.2461', 'Discriminator loss 0.6890', 'Discriminator accuracy 0.5254', 'Total loss: 1.4226', 'for batch', 63)
('GAN loss 0.7234 ', 'GAN acc 0.2969', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.4941', 'Total loss: 1.4170', 'for batch', 64)
('GAN loss 0.7190 ', 'GAN acc 0.3164', 'Discriminator loss 0.6896', 'Discriminator accuracy 0.5273', 'Total loss: 1.4087', 'for batch', 65)
('GAN loss 0.7136 ', 'GAN acc 0.3320', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.5039', 'Total loss: 1.4065', 'for batch', 66)
('GAN loss 0.7067 ', 'GAN acc 0.4180', 'Discriminator loss 0.6943', 'Discriminator accuracy 0.4844', 'Total loss: 1.4011', 'for batch', 67)
('GAN loss 0.7174 ', 'GAN acc 0.3281', 'Discriminator loss 0.6886', 'Discriminator accuracy 0.5215', 'Total loss: 1.4060', 'for batch', 68)
('GAN loss 0.7043 ', 'GAN acc 0.4297', 'Discriminator loss 0.6869', 'Discriminator accuracy 0.5371', 'Total loss: 1.3913', 'for batch', 69)
('GAN loss 0.7035 ', 'GAN acc 0.4844', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5703', 'Total loss: 1.3849', 'for batch', 70)
('GAN loss 0.6975 ', 'GAN acc 0.5234', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5918', 'Total loss: 1.3743', 'for batch', 71)
('GAN loss 0.6721 ', 'GAN acc 0.6953', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.5449', 'Total loss: 1.3587', 'for batch', 72)
('GAN loss 0.6703 ', 'GAN acc 0.6953', 'Discriminator loss 0.6911', 'Discriminator accuracy 0.4980', 'Total loss: 1.3614', 'for batch', 73)
('GAN loss 0.6611 ', 'GAN acc 0.8008', 'Discriminator loss 0.6867', 'Discriminator accuracy 0.5312', 'Total loss: 1.3478', 'for batch', 74)
('GAN loss 0.6613 ', 'GAN acc 0.8086', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.4902', 'Total loss: 1.3533', 'for batch', 75)
('GAN loss 0.6591 ', 'GAN acc 0.8164', 'Discriminator loss 0.6890', 'Discriminator accuracy 0.5117', 'Total loss: 1.3481', 'for batch', 76)
('GAN loss 0.6390 ', 'GAN acc 0.9141', 'Discriminator loss 0.6921', 'Discriminator accuracy 0.5039', 'Total loss: 1.3311', 'for batch', 77)
('GAN loss 0.6519 ', 'GAN acc 0.8359', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5254', 'Total loss: 1.3391', 'for batch', 78)
('GAN loss 0.6563 ', 'GAN acc 0.7930', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5039', 'Total loss: 1.3461', 'for batch', 79)
('GAN loss 0.6569 ', 'GAN acc 0.8008', 'Discriminator loss 0.6883', 'Discriminator accuracy 0.5000', 'Total loss: 1.3452', 'for batch', 80)
('GAN loss 0.6605 ', 'GAN acc 0.7812', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.4902', 'Total loss: 1.3478', 'for batch', 81)
('GAN loss 0.6754 ', 'GAN acc 0.6523', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.4863', 'Total loss: 1.3651', 'for batch', 82)
('GAN loss 0.6744 ', 'GAN acc 0.6250', 'Discriminator loss 0.6836', 'Discriminator accuracy 0.5293', 'Total loss: 1.3580', 'for batch', 83)
('GAN loss 0.6797 ', 'GAN acc 0.5430', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5312', 'Total loss: 1.3629', 'for batch', 84)
('GAN loss 0.6780 ', 'GAN acc 0.5703', 'Discriminator loss 0.6955', 'Discriminator accuracy 0.5098', 'Total loss: 1.3735', 'for batch', 85)
('GAN loss 0.7160 ', 'GAN acc 0.3594', 'Discriminator loss 0.6903', 'Discriminator accuracy 0.4922', 'Total loss: 1.4063', 'for batch', 86)
('GAN loss 0.7127 ', 'GAN acc 0.3711', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.4961', 'Total loss: 1.4072', 'for batch', 87)
('GAN loss 0.7012 ', 'GAN acc 0.4570', 'Discriminator loss 0.6955', 'Discriminator accuracy 0.4805', 'Total loss: 1.3966', 'for batch', 88)
('GAN loss 0.7135 ', 'GAN acc 0.3281', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5254', 'Total loss: 1.4008', 'for batch', 89)
('GAN loss 0.7129 ', 'GAN acc 0.3633', 'Discriminator loss 0.6903', 'Discriminator accuracy 0.5586', 'Total loss: 1.4033', 'for batch', 90)
('GAN loss 0.7174 ', 'GAN acc 0.3281', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5625', 'Total loss: 1.4013', 'for batch', 91)
('GAN loss 0.7095 ', 'GAN acc 0.4453', 'Discriminator loss 0.6937', 'Discriminator accuracy 0.4824', 'Total loss: 1.4032', 'for batch', 92)
('GAN loss 0.6987 ', 'GAN acc 0.4688', 'Discriminator loss 0.6945', 'Discriminator accuracy 0.4883', 'Total loss: 1.3932', 'for batch', 93)
('GAN loss 0.6979 ', 'GAN acc 0.5625', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.5254', 'Total loss: 1.3790', 'for batch', 94)
('GAN loss 0.7164 ', 'GAN acc 0.4805', 'Discriminator loss 0.6878', 'Discriminator accuracy 0.5059', 'Total loss: 1.4042', 'for batch', 95)
('GAN loss 0.7085 ', 'GAN acc 0.5586', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5254', 'Total loss: 1.3830', 'for batch', 96)
('GAN loss 0.6117 ', 'GAN acc 0.8008', 'Discriminator loss 0.6966', 'Discriminator accuracy 0.5156', 'Total loss: 1.3083', 'for batch', 97)
('GAN loss 0.6491 ', 'GAN acc 0.7969', 'Discriminator loss 0.7008', 'Discriminator accuracy 0.4980', 'Total loss: 1.3499', 'for batch', 98)
('GAN loss 0.6724 ', 'GAN acc 0.6484', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.6074', 'Total loss: 1.3463', 'for batch', 99)
('GAN loss 0.6622 ', 'GAN acc 0.7266', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5840', 'Total loss: 1.3435', 'for batch', 100)
('GAN loss 0.6537 ', 'GAN acc 0.7656', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5625', 'Total loss: 1.3339', 'for batch', 101)
('GAN loss 0.6695 ', 'GAN acc 0.7070', 'Discriminator loss 0.6982', 'Discriminator accuracy 0.5078', 'Total loss: 1.3677', 'for batch', 102)
('GAN loss 0.6672 ', 'GAN acc 0.6992', 'Discriminator loss 0.6910', 'Discriminator accuracy 0.5234', 'Total loss: 1.3583', 'for batch', 103)
('GAN loss 0.6874 ', 'GAN acc 0.6172', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.5371', 'Total loss: 1.3751', 'for batch', 104)
('GAN loss 0.7342 ', 'GAN acc 0.3945', 'Discriminator loss 0.6785', 'Discriminator accuracy 0.5586', 'Total loss: 1.4126', 'for batch', 105)
('GAN loss 0.7328 ', 'GAN acc 0.3906', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5664', 'Total loss: 1.4102', 'for batch', 106)
('GAN loss 0.7634 ', 'GAN acc 0.2773', 'Discriminator loss 0.6655', 'Discriminator accuracy 0.6035', 'Total loss: 1.4288', 'for batch', 107)
('GAN loss 0.8117 ', 'GAN acc 0.1523', 'Discriminator loss 0.6716', 'Discriminator accuracy 0.5918', 'Total loss: 1.4833', 'for batch', 108)
('GAN loss 0.7920 ', 'GAN acc 0.1641', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5996', 'Total loss: 1.4627', 'for batch', 109)
('GAN loss 0.7198 ', 'GAN acc 0.4453', 'Discriminator loss 0.6905', 'Discriminator accuracy 0.4941', 'Total loss: 1.4103', 'for batch', 110)
('GAN loss 0.6794 ', 'GAN acc 0.6680', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5254', 'Total loss: 1.3635', 'for batch', 111)
('GAN loss 0.7046 ', 'GAN acc 0.4727', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.5156', 'Total loss: 1.3911', 'for batch', 112)
('GAN loss 0.7095 ', 'GAN acc 0.3906', 'Discriminator loss 0.6823', 'Discriminator accuracy 0.5879', 'Total loss: 1.3918', 'for batch', 113)
('GAN loss 0.7070 ', 'GAN acc 0.4375', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5117', 'Total loss: 1.3990', 'for batch', 114)
('GAN loss 0.6999 ', 'GAN acc 0.4531', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.5273', 'Total loss: 1.3880', 'for batch', 115)
('GAN loss 0.7334 ', 'GAN acc 0.2070', 'Discriminator loss 0.6923', 'Discriminator accuracy 0.4961', 'Total loss: 1.4257', 'for batch', 116)
('GAN loss 0.7302 ', 'GAN acc 0.2539', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5137', 'Total loss: 1.4126', 'for batch', 117)
('GAN loss 0.7213 ', 'GAN acc 0.2695', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.5430', 'Total loss: 1.4093', 'for batch', 118)
('GAN loss 0.7034 ', 'GAN acc 0.4414', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.5762', 'Total loss: 1.3696', 'for batch', 119)
('GAN loss 0.7615 ', 'GAN acc 0.2188', 'Discriminator loss 0.6805', 'Discriminator accuracy 0.5273', 'Total loss: 1.4420', 'for batch', 120)
('GAN loss 0.6540 ', 'GAN acc 0.7188', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5020', 'Total loss: 1.3401', 'for batch', 121)
('GAN loss 0.6407 ', 'GAN acc 0.8477', 'Discriminator loss 0.6371', 'Discriminator accuracy 0.5938', 'Total loss: 1.2778', 'for batch', 122)
('GAN loss 0.7692 ', 'GAN acc 0.2969', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.5918', 'Total loss: 1.4220', 'for batch', 123)
('GAN loss 0.6186 ', 'GAN acc 0.9492', 'Discriminator loss 0.6776', 'Discriminator accuracy 0.5410', 'Total loss: 1.2962', 'for batch', 124)
('GAN loss 0.5877 ', 'GAN acc 0.9766', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5508', 'Total loss: 1.2705', 'for batch', 125)
('GAN loss 0.6214 ', 'GAN acc 0.9609', 'Discriminator loss 0.6967', 'Discriminator accuracy 0.5156', 'Total loss: 1.3181', 'for batch', 126)
('GAN loss 0.6525 ', 'GAN acc 0.8945', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.5176', 'Total loss: 1.3373', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.53928781)
('DISCRIMINATOR_Imagem FAKE=', 0.52540064)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.700716')
----------------------------------
('Epoch', 19, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6671 ', 'GAN acc 0.7617', 'Discriminator loss 0.6884', 'Discriminator accuracy 0.5215', 'Total loss: 1.3555', 'for batch', 0)
('GAN loss 0.6738 ', 'GAN acc 0.6680', 'Discriminator loss 0.6930', 'Discriminator accuracy 0.4980', 'Total loss: 1.3668', 'for batch', 1)
('GAN loss 0.6955 ', 'GAN acc 0.5195', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5371', 'Total loss: 1.3790', 'for batch', 2)
('GAN loss 0.6822 ', 'GAN acc 0.6328', 'Discriminator loss 0.6918', 'Discriminator accuracy 0.4941', 'Total loss: 1.3740', 'for batch', 3)
('GAN loss 0.6846 ', 'GAN acc 0.6211', 'Discriminator loss 0.6896', 'Discriminator accuracy 0.4980', 'Total loss: 1.3742', 'for batch', 4)
('GAN loss 0.6794 ', 'GAN acc 0.6484', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5020', 'Total loss: 1.3656', 'for batch', 5)
('GAN loss 0.7097 ', 'GAN acc 0.4570', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5039', 'Total loss: 1.3925', 'for batch', 6)
('GAN loss 0.7374 ', 'GAN acc 0.3086', 'Discriminator loss 0.6804', 'Discriminator accuracy 0.4902', 'Total loss: 1.4177', 'for batch', 7)
('GAN loss 0.8038 ', 'GAN acc 0.0742', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5410', 'Total loss: 1.4744', 'for batch', 8)
('GAN loss 0.8179 ', 'GAN acc 0.0586', 'Discriminator loss 0.6420', 'Discriminator accuracy 0.5254', 'Total loss: 1.4599', 'for batch', 9)
('GAN loss 0.6007 ', 'GAN acc 0.9844', 'Discriminator loss 0.6912', 'Discriminator accuracy 0.4980', 'Total loss: 1.2919', 'for batch', 10)
('GAN loss 0.6117 ', 'GAN acc 0.9844', 'Discriminator loss 0.7052', 'Discriminator accuracy 0.5059', 'Total loss: 1.3170', 'for batch', 11)
('GAN loss 0.6358 ', 'GAN acc 0.9570', 'Discriminator loss 0.7083', 'Discriminator accuracy 0.4980', 'Total loss: 1.3441', 'for batch', 12)
('GAN loss 0.6602 ', 'GAN acc 0.9102', 'Discriminator loss 0.7026', 'Discriminator accuracy 0.5000', 'Total loss: 1.3629', 'for batch', 13)
('GAN loss 0.7124 ', 'GAN acc 0.3867', 'Discriminator loss 0.6885', 'Discriminator accuracy 0.5039', 'Total loss: 1.4009', 'for batch', 14)
('GAN loss 0.7633 ', 'GAN acc 0.0859', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5879', 'Total loss: 1.4381', 'for batch', 15)
('GAN loss 0.7682 ', 'GAN acc 0.0664', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.5352', 'Total loss: 1.4476', 'for batch', 16)
('GAN loss 0.7276 ', 'GAN acc 0.2773', 'Discriminator loss 0.6833', 'Discriminator accuracy 0.5195', 'Total loss: 1.4109', 'for batch', 17)
('GAN loss 0.6775 ', 'GAN acc 0.7930', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.4922', 'Total loss: 1.3655', 'for batch', 18)
('GAN loss 0.6541 ', 'GAN acc 0.8789', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.5293', 'Total loss: 1.3348', 'for batch', 19)
('GAN loss 0.6451 ', 'GAN acc 0.9297', 'Discriminator loss 0.6149', 'Discriminator accuracy 0.6426', 'Total loss: 1.2600', 'for batch', 20)
('GAN loss 0.6462 ', 'GAN acc 0.8945', 'Discriminator loss 0.6790', 'Discriminator accuracy 0.5234', 'Total loss: 1.3251', 'for batch', 21)
('GAN loss 0.6475 ', 'GAN acc 0.8594', 'Discriminator loss 0.6704', 'Discriminator accuracy 0.5938', 'Total loss: 1.3178', 'for batch', 22)
('GAN loss 0.6421 ', 'GAN acc 0.8867', 'Discriminator loss 0.6314', 'Discriminator accuracy 0.6406', 'Total loss: 1.2735', 'for batch', 23)
('GAN loss 0.6374 ', 'GAN acc 0.9023', 'Discriminator loss 0.6957', 'Discriminator accuracy 0.4902', 'Total loss: 1.3331', 'for batch', 24)
('GAN loss 0.6685 ', 'GAN acc 0.8320', 'Discriminator loss 0.6547', 'Discriminator accuracy 0.6445', 'Total loss: 1.3232', 'for batch', 25)
('GAN loss 0.6144 ', 'GAN acc 0.9766', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5156', 'Total loss: 1.3002', 'for batch', 26)
('GAN loss 0.6260 ', 'GAN acc 0.9609', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5898', 'Total loss: 1.2973', 'for batch', 27)
('GAN loss 0.6047 ', 'GAN acc 0.9844', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.5430', 'Total loss: 1.2909', 'for batch', 28)
('GAN loss 0.6420 ', 'GAN acc 0.9297', 'Discriminator loss 0.6913', 'Discriminator accuracy 0.5234', 'Total loss: 1.3333', 'for batch', 29)
('GAN loss 0.6825 ', 'GAN acc 0.6406', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5762', 'Total loss: 1.3616', 'for batch', 30)
('GAN loss 0.7493 ', 'GAN acc 0.1914', 'Discriminator loss 0.6531', 'Discriminator accuracy 0.6562', 'Total loss: 1.4025', 'for batch', 31)
('GAN loss 0.6617 ', 'GAN acc 0.8125', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5195', 'Total loss: 1.3271', 'for batch', 32)
('GAN loss 0.6104 ', 'GAN acc 0.9922', 'Discriminator loss 0.6402', 'Discriminator accuracy 0.5215', 'Total loss: 1.2506', 'for batch', 33)
('GAN loss 0.6058 ', 'GAN acc 0.9805', 'Discriminator loss 0.6621', 'Discriminator accuracy 0.5938', 'Total loss: 1.2679', 'for batch', 34)
('GAN loss 0.6015 ', 'GAN acc 0.9922', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5332', 'Total loss: 1.2839', 'for batch', 35)
('GAN loss 0.6295 ', 'GAN acc 0.9883', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5488', 'Total loss: 1.3082', 'for batch', 36)
('GAN loss 0.6539 ', 'GAN acc 0.9258', 'Discriminator loss 0.6883', 'Discriminator accuracy 0.4961', 'Total loss: 1.3421', 'for batch', 37)
('GAN loss 0.6417 ', 'GAN acc 0.9453', 'Discriminator loss 0.5981', 'Discriminator accuracy 0.6465', 'Total loss: 1.2399', 'for batch', 38)
('GAN loss 0.6556 ', 'GAN acc 0.8867', 'Discriminator loss 0.6390', 'Discriminator accuracy 0.6426', 'Total loss: 1.2946', 'for batch', 39)
('GAN loss 0.6448 ', 'GAN acc 0.9453', 'Discriminator loss 0.6148', 'Discriminator accuracy 0.5938', 'Total loss: 1.2596', 'for batch', 40)
('GAN loss 0.5531 ', 'GAN acc 0.9922', 'Discriminator loss 0.6317', 'Discriminator accuracy 0.5449', 'Total loss: 1.1849', 'for batch', 41)
('GAN loss 0.5597 ', 'GAN acc 0.9883', 'Discriminator loss 0.6985', 'Discriminator accuracy 0.5371', 'Total loss: 1.2583', 'for batch', 42)
('GAN loss 0.5838 ', 'GAN acc 0.9922', 'Discriminator loss 0.6884', 'Discriminator accuracy 0.5254', 'Total loss: 1.2722', 'for batch', 43)
('GAN loss 0.6292 ', 'GAN acc 0.9844', 'Discriminator loss 0.6422', 'Discriminator accuracy 0.6035', 'Total loss: 1.2714', 'for batch', 44)
('GAN loss 0.6182 ', 'GAN acc 0.9961', 'Discriminator loss 0.6044', 'Discriminator accuracy 0.6406', 'Total loss: 1.2225', 'for batch', 45)
('GAN loss 0.6019 ', 'GAN acc 0.9922', 'Discriminator loss 0.5940', 'Discriminator accuracy 0.6426', 'Total loss: 1.1959', 'for batch', 46)
('GAN loss 0.5684 ', 'GAN acc 0.9922', 'Discriminator loss 0.5775', 'Discriminator accuracy 0.6543', 'Total loss: 1.1459', 'for batch', 47)
('GAN loss 0.5727 ', 'GAN acc 0.9883', 'Discriminator loss 0.5930', 'Discriminator accuracy 0.7168', 'Total loss: 1.1656', 'for batch', 48)
('GAN loss 0.5273 ', 'GAN acc 0.9922', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5234', 'Total loss: 1.2073', 'for batch', 49)
('GAN loss 0.5628 ', 'GAN acc 0.9961', 'Discriminator loss 0.7133', 'Discriminator accuracy 0.5078', 'Total loss: 1.2761', 'for batch', 50)
('GAN loss 0.5833 ', 'GAN acc 0.9961', 'Discriminator loss 0.6522', 'Discriminator accuracy 0.5703', 'Total loss: 1.2355', 'for batch', 51)
('GAN loss 0.6164 ', 'GAN acc 1.0000', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.5566', 'Total loss: 1.3101', 'for batch', 52)
('GAN loss 0.6733 ', 'GAN acc 0.7812', 'Discriminator loss 0.6482', 'Discriminator accuracy 0.6465', 'Total loss: 1.3215', 'for batch', 53)
('GAN loss 0.6792 ', 'GAN acc 0.7500', 'Discriminator loss 0.6815', 'Discriminator accuracy 0.5684', 'Total loss: 1.3607', 'for batch', 54)
('GAN loss 0.7131 ', 'GAN acc 0.4141', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5312', 'Total loss: 1.3770', 'for batch', 55)
('GAN loss 0.6489 ', 'GAN acc 0.9531', 'Discriminator loss 0.6761', 'Discriminator accuracy 0.4922', 'Total loss: 1.3251', 'for batch', 56)
('GAN loss 0.6475 ', 'GAN acc 0.9570', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5254', 'Total loss: 1.3370', 'for batch', 57)
('GAN loss 0.6525 ', 'GAN acc 0.9531', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5879', 'Total loss: 1.3296', 'for batch', 58)
('GAN loss 0.6560 ', 'GAN acc 0.9297', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.5527', 'Total loss: 1.3318', 'for batch', 59)
('GAN loss 0.6535 ', 'GAN acc 0.9375', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.4844', 'Total loss: 1.3431', 'for batch', 60)
('GAN loss 0.6574 ', 'GAN acc 0.9375', 'Discriminator loss 0.6794', 'Discriminator accuracy 0.5449', 'Total loss: 1.3368', 'for batch', 61)
('GAN loss 0.6623 ', 'GAN acc 0.9336', 'Discriminator loss 0.6834', 'Discriminator accuracy 0.5195', 'Total loss: 1.3457', 'for batch', 62)
('GAN loss 0.6468 ', 'GAN acc 0.9531', 'Discriminator loss 0.6212', 'Discriminator accuracy 0.5684', 'Total loss: 1.2680', 'for batch', 63)
('GAN loss 0.6449 ', 'GAN acc 0.9727', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5312', 'Total loss: 1.3277', 'for batch', 64)
('GAN loss 0.6567 ', 'GAN acc 0.9375', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.5391', 'Total loss: 1.3404', 'for batch', 65)
('GAN loss 0.6617 ', 'GAN acc 0.9609', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5625', 'Total loss: 1.3269', 'for batch', 66)
('GAN loss 0.6397 ', 'GAN acc 0.9844', 'Discriminator loss 0.6197', 'Discriminator accuracy 0.6016', 'Total loss: 1.2594', 'for batch', 67)
('GAN loss 0.6422 ', 'GAN acc 0.9844', 'Discriminator loss 0.6419', 'Discriminator accuracy 0.5664', 'Total loss: 1.2841', 'for batch', 68)
('GAN loss 0.6303 ', 'GAN acc 0.9883', 'Discriminator loss 0.6198', 'Discriminator accuracy 0.6309', 'Total loss: 1.2500', 'for batch', 69)
('GAN loss 0.6144 ', 'GAN acc 0.9922', 'Discriminator loss 0.6172', 'Discriminator accuracy 0.6387', 'Total loss: 1.2316', 'for batch', 70)
('GAN loss 0.5771 ', 'GAN acc 0.9883', 'Discriminator loss 0.4719', 'Discriminator accuracy 0.7793', 'Total loss: 1.0490', 'for batch', 71)
('GAN loss 0.5600 ', 'GAN acc 0.9844', 'Discriminator loss 0.6009', 'Discriminator accuracy 0.6484', 'Total loss: 1.1609', 'for batch', 72)
('GAN loss 0.5433 ', 'GAN acc 0.9922', 'Discriminator loss 0.5224', 'Discriminator accuracy 0.7324', 'Total loss: 1.0657', 'for batch', 73)
('GAN loss 0.4913 ', 'GAN acc 0.9922', 'Discriminator loss 0.4383', 'Discriminator accuracy 0.8066', 'Total loss: 0.9295', 'for batch', 74)
('GAN loss 0.7558 ', 'GAN acc 0.5586', 'Discriminator loss 0.5582', 'Discriminator accuracy 0.7070', 'Total loss: 1.3140', 'for batch', 75)
('GAN loss 0.6919 ', 'GAN acc 0.6758', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5195', 'Total loss: 1.3687', 'for batch', 76)
('GAN loss 0.8426 ', 'GAN acc 0.0078', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5742', 'Total loss: 1.5083', 'for batch', 77)
('GAN loss 1.0599 ', 'GAN acc 0.0000', 'Discriminator loss 0.6436', 'Discriminator accuracy 0.8105', 'Total loss: 1.7034', 'for batch', 78)
('GAN loss 0.9684 ', 'GAN acc 0.0078', 'Discriminator loss 0.6734', 'Discriminator accuracy 0.5117', 'Total loss: 1.6418', 'for batch', 79)
('GAN loss 0.7426 ', 'GAN acc 0.2148', 'Discriminator loss 0.6941', 'Discriminator accuracy 0.5059', 'Total loss: 1.4368', 'for batch', 80)
('GAN loss 0.7288 ', 'GAN acc 0.2695', 'Discriminator loss 0.7481', 'Discriminator accuracy 0.4844', 'Total loss: 1.4769', 'for batch', 81)
('GAN loss 0.7430 ', 'GAN acc 0.2070', 'Discriminator loss 0.6870', 'Discriminator accuracy 0.5410', 'Total loss: 1.4300', 'for batch', 82)
('GAN loss 0.7809 ', 'GAN acc 0.0664', 'Discriminator loss 0.7003', 'Discriminator accuracy 0.5254', 'Total loss: 1.4812', 'for batch', 83)
('GAN loss 0.8372 ', 'GAN acc 0.0156', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.5234', 'Total loss: 1.5252', 'for batch', 84)
('GAN loss 0.8045 ', 'GAN acc 0.0352', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5898', 'Total loss: 1.4877', 'for batch', 85)
('GAN loss 0.8007 ', 'GAN acc 0.0234', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.6074', 'Total loss: 1.4817', 'for batch', 86)
('GAN loss 0.7838 ', 'GAN acc 0.0508', 'Discriminator loss 0.6951', 'Discriminator accuracy 0.5547', 'Total loss: 1.4789', 'for batch', 87)
('GAN loss 0.7761 ', 'GAN acc 0.0742', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.5879', 'Total loss: 1.4610', 'for batch', 88)
('GAN loss 0.7432 ', 'GAN acc 0.1328', 'Discriminator loss 0.7061', 'Discriminator accuracy 0.5020', 'Total loss: 1.4493', 'for batch', 89)
('GAN loss 0.7391 ', 'GAN acc 0.1641', 'Discriminator loss 0.6956', 'Discriminator accuracy 0.4883', 'Total loss: 1.4348', 'for batch', 90)
('GAN loss 0.7060 ', 'GAN acc 0.3867', 'Discriminator loss 0.6565', 'Discriminator accuracy 0.5859', 'Total loss: 1.3625', 'for batch', 91)
('GAN loss 0.6562 ', 'GAN acc 0.8086', 'Discriminator loss 0.6524', 'Discriminator accuracy 0.5840', 'Total loss: 1.3087', 'for batch', 92)
('GAN loss 0.6191 ', 'GAN acc 0.9375', 'Discriminator loss 0.6313', 'Discriminator accuracy 0.6816', 'Total loss: 1.2504', 'for batch', 93)
('GAN loss 0.6154 ', 'GAN acc 0.9180', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.6973', 'Total loss: 1.2753', 'for batch', 94)
('GAN loss 0.6558 ', 'GAN acc 0.8320', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5410', 'Total loss: 1.3341', 'for batch', 95)
('GAN loss 0.6045 ', 'GAN acc 0.9336', 'Discriminator loss 0.6770', 'Discriminator accuracy 0.5273', 'Total loss: 1.2815', 'for batch', 96)
('GAN loss 0.5919 ', 'GAN acc 0.9414', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.5586', 'Total loss: 1.2591', 'for batch', 97)
('GAN loss 0.6620 ', 'GAN acc 0.6914', 'Discriminator loss 0.6614', 'Discriminator accuracy 0.5508', 'Total loss: 1.3233', 'for batch', 98)
('GAN loss 0.6886 ', 'GAN acc 0.4805', 'Discriminator loss 0.6290', 'Discriminator accuracy 0.6387', 'Total loss: 1.3177', 'for batch', 99)
('GAN loss 0.5950 ', 'GAN acc 0.9531', 'Discriminator loss 0.6708', 'Discriminator accuracy 0.4941', 'Total loss: 1.2657', 'for batch', 100)
('GAN loss 0.6875 ', 'GAN acc 0.6523', 'Discriminator loss 0.6728', 'Discriminator accuracy 0.5098', 'Total loss: 1.3603', 'for batch', 101)
('GAN loss 0.6952 ', 'GAN acc 0.6172', 'Discriminator loss 0.6904', 'Discriminator accuracy 0.4805', 'Total loss: 1.3856', 'for batch', 102)
('GAN loss 0.8136 ', 'GAN acc 0.0938', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.5469', 'Total loss: 1.4946', 'for batch', 103)
('GAN loss 0.8244 ', 'GAN acc 0.0781', 'Discriminator loss 0.6761', 'Discriminator accuracy 0.5684', 'Total loss: 1.5005', 'for batch', 104)
('GAN loss 0.7989 ', 'GAN acc 0.1328', 'Discriminator loss 0.6825', 'Discriminator accuracy 0.5215', 'Total loss: 1.4814', 'for batch', 105)
('GAN loss 0.7902 ', 'GAN acc 0.1875', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5859', 'Total loss: 1.4637', 'for batch', 106)
('GAN loss 0.7262 ', 'GAN acc 0.3906', 'Discriminator loss 0.6876', 'Discriminator accuracy 0.5176', 'Total loss: 1.4137', 'for batch', 107)
('GAN loss 0.6982 ', 'GAN acc 0.4414', 'Discriminator loss 0.6956', 'Discriminator accuracy 0.4902', 'Total loss: 1.3938', 'for batch', 108)
('GAN loss 0.6975 ', 'GAN acc 0.5039', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5117', 'Total loss: 1.3871', 'for batch', 109)
('GAN loss 0.7341 ', 'GAN acc 0.3086', 'Discriminator loss 0.6142', 'Discriminator accuracy 0.7168', 'Total loss: 1.3483', 'for batch', 110)
('GAN loss 0.7463 ', 'GAN acc 0.2891', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5293', 'Total loss: 1.4303', 'for batch', 111)
('GAN loss 0.6246 ', 'GAN acc 0.8438', 'Discriminator loss 0.6358', 'Discriminator accuracy 0.5039', 'Total loss: 1.2603', 'for batch', 112)
('GAN loss 0.6060 ', 'GAN acc 0.8984', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.5117', 'Total loss: 1.3008', 'for batch', 113)
('GAN loss 0.6051 ', 'GAN acc 0.9258', 'Discriminator loss 0.6482', 'Discriminator accuracy 0.5684', 'Total loss: 1.2533', 'for batch', 114)
('GAN loss 0.6406 ', 'GAN acc 0.8438', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5254', 'Total loss: 1.3115', 'for batch', 115)
('GAN loss 0.6115 ', 'GAN acc 0.9102', 'Discriminator loss 0.6093', 'Discriminator accuracy 0.6191', 'Total loss: 1.2207', 'for batch', 116)
('GAN loss 0.6427 ', 'GAN acc 0.8828', 'Discriminator loss 0.6356', 'Discriminator accuracy 0.6523', 'Total loss: 1.2783', 'for batch', 117)
('GAN loss 0.5856 ', 'GAN acc 0.9648', 'Discriminator loss 0.6475', 'Discriminator accuracy 0.5879', 'Total loss: 1.2331', 'for batch', 118)
('GAN loss 0.6270 ', 'GAN acc 0.8906', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.5332', 'Total loss: 1.3002', 'for batch', 119)
('GAN loss 0.6068 ', 'GAN acc 0.9336', 'Discriminator loss 0.6971', 'Discriminator accuracy 0.5547', 'Total loss: 1.3039', 'for batch', 120)
('GAN loss 0.5892 ', 'GAN acc 0.9805', 'Discriminator loss 0.6587', 'Discriminator accuracy 0.5195', 'Total loss: 1.2480', 'for batch', 121)
('GAN loss 0.6191 ', 'GAN acc 0.9336', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5469', 'Total loss: 1.3053', 'for batch', 122)
('GAN loss 0.6522 ', 'GAN acc 0.8008', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.5078', 'Total loss: 1.3390', 'for batch', 123)
('GAN loss 0.6591 ', 'GAN acc 0.7852', 'Discriminator loss 0.6513', 'Discriminator accuracy 0.5781', 'Total loss: 1.3104', 'for batch', 124)
('GAN loss 0.6087 ', 'GAN acc 0.9492', 'Discriminator loss 0.6376', 'Discriminator accuracy 0.5645', 'Total loss: 1.2463', 'for batch', 125)
('GAN loss 0.5705 ', 'GAN acc 0.9805', 'Discriminator loss 0.6771', 'Discriminator accuracy 0.5605', 'Total loss: 1.2476', 'for batch', 126)
('GAN loss 0.5838 ', 'GAN acc 0.9883', 'Discriminator loss 0.6467', 'Discriminator accuracy 0.5801', 'Total loss: 1.2305', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.56500119)
('DISCRIMINATOR_Imagem FAKE=', 0.4921549)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.024058')
----------------------------------
('Epoch', 20, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6116 ', 'GAN acc 0.9648', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5508', 'Total loss: 1.3014', 'for batch', 0)
('GAN loss 0.5612 ', 'GAN acc 0.9922', 'Discriminator loss 0.6060', 'Discriminator accuracy 0.5879', 'Total loss: 1.1672', 'for batch', 1)
('GAN loss 0.5927 ', 'GAN acc 0.9805', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5684', 'Total loss: 1.2760', 'for batch', 2)
('GAN loss 0.5456 ', 'GAN acc 0.9844', 'Discriminator loss 0.6182', 'Discriminator accuracy 0.5586', 'Total loss: 1.1638', 'for batch', 3)
('GAN loss 0.5380 ', 'GAN acc 0.9922', 'Discriminator loss 0.6063', 'Discriminator accuracy 0.6758', 'Total loss: 1.1443', 'for batch', 4)
('GAN loss 0.5499 ', 'GAN acc 0.9922', 'Discriminator loss 0.5682', 'Discriminator accuracy 0.7188', 'Total loss: 1.1180', 'for batch', 5)
('GAN loss 0.5518 ', 'GAN acc 0.9844', 'Discriminator loss 0.6126', 'Discriminator accuracy 0.6172', 'Total loss: 1.1644', 'for batch', 6)
('GAN loss 0.5200 ', 'GAN acc 0.9883', 'Discriminator loss 0.6171', 'Discriminator accuracy 0.5820', 'Total loss: 1.1371', 'for batch', 7)
('GAN loss 0.5605 ', 'GAN acc 0.9922', 'Discriminator loss 0.5904', 'Discriminator accuracy 0.7031', 'Total loss: 1.1509', 'for batch', 8)
('GAN loss 0.5492 ', 'GAN acc 0.9883', 'Discriminator loss 0.6127', 'Discriminator accuracy 0.6602', 'Total loss: 1.1619', 'for batch', 9)
('GAN loss 0.5159 ', 'GAN acc 0.9844', 'Discriminator loss 0.5841', 'Discriminator accuracy 0.6582', 'Total loss: 1.1000', 'for batch', 10)
('GAN loss 0.4958 ', 'GAN acc 0.9922', 'Discriminator loss 0.6194', 'Discriminator accuracy 0.6016', 'Total loss: 1.1152', 'for batch', 11)
('GAN loss 0.5481 ', 'GAN acc 0.9883', 'Discriminator loss 0.7153', 'Discriminator accuracy 0.5117', 'Total loss: 1.2634', 'for batch', 12)
('GAN loss 0.6188 ', 'GAN acc 0.9727', 'Discriminator loss 0.6200', 'Discriminator accuracy 0.6309', 'Total loss: 1.2387', 'for batch', 13)
('GAN loss 0.6458 ', 'GAN acc 0.8906', 'Discriminator loss 0.6294', 'Discriminator accuracy 0.6758', 'Total loss: 1.2752', 'for batch', 14)
('GAN loss 0.5243 ', 'GAN acc 0.9844', 'Discriminator loss 0.6267', 'Discriminator accuracy 0.5273', 'Total loss: 1.1510', 'for batch', 15)
('GAN loss 0.5241 ', 'GAN acc 0.9961', 'Discriminator loss 0.6160', 'Discriminator accuracy 0.6445', 'Total loss: 1.1401', 'for batch', 16)
('GAN loss 0.5375 ', 'GAN acc 0.9961', 'Discriminator loss 0.6036', 'Discriminator accuracy 0.6328', 'Total loss: 1.1411', 'for batch', 17)
('GAN loss 0.5673 ', 'GAN acc 0.9727', 'Discriminator loss 0.6633', 'Discriminator accuracy 0.5781', 'Total loss: 1.2306', 'for batch', 18)
('GAN loss 0.6001 ', 'GAN acc 0.9531', 'Discriminator loss 0.6253', 'Discriminator accuracy 0.6445', 'Total loss: 1.2255', 'for batch', 19)
('GAN loss 0.6170 ', 'GAN acc 0.9336', 'Discriminator loss 0.5157', 'Discriminator accuracy 0.8164', 'Total loss: 1.1328', 'for batch', 20)
('GAN loss 0.5478 ', 'GAN acc 0.9805', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5898', 'Total loss: 1.2072', 'for batch', 21)
('GAN loss 0.5530 ', 'GAN acc 0.9922', 'Discriminator loss 0.6113', 'Discriminator accuracy 0.6387', 'Total loss: 1.1643', 'for batch', 22)
('GAN loss 0.5642 ', 'GAN acc 0.9805', 'Discriminator loss 0.6298', 'Discriminator accuracy 0.6113', 'Total loss: 1.1940', 'for batch', 23)
('GAN loss 0.5612 ', 'GAN acc 0.9844', 'Discriminator loss 0.5546', 'Discriminator accuracy 0.7168', 'Total loss: 1.1158', 'for batch', 24)
('GAN loss 0.5025 ', 'GAN acc 0.9805', 'Discriminator loss 0.5176', 'Discriminator accuracy 0.6875', 'Total loss: 1.0200', 'for batch', 25)
('GAN loss 0.5123 ', 'GAN acc 0.9922', 'Discriminator loss 0.6633', 'Discriminator accuracy 0.5820', 'Total loss: 1.1756', 'for batch', 26)
('GAN loss 0.5876 ', 'GAN acc 0.9727', 'Discriminator loss 0.5578', 'Discriminator accuracy 0.7500', 'Total loss: 1.1454', 'for batch', 27)
('GAN loss 0.4803 ', 'GAN acc 0.9922', 'Discriminator loss 0.7866', 'Discriminator accuracy 0.4824', 'Total loss: 1.2669', 'for batch', 28)
('GAN loss 0.5255 ', 'GAN acc 0.9922', 'Discriminator loss 0.7089', 'Discriminator accuracy 0.5195', 'Total loss: 1.2343', 'for batch', 29)
('GAN loss 0.5831 ', 'GAN acc 0.9961', 'Discriminator loss 0.7152', 'Discriminator accuracy 0.5098', 'Total loss: 1.2983', 'for batch', 30)
('GAN loss 0.6009 ', 'GAN acc 0.9844', 'Discriminator loss 0.6548', 'Discriminator accuracy 0.5664', 'Total loss: 1.2557', 'for batch', 31)
('GAN loss 0.6252 ', 'GAN acc 0.9766', 'Discriminator loss 0.7112', 'Discriminator accuracy 0.5020', 'Total loss: 1.3364', 'for batch', 32)
('GAN loss 0.6339 ', 'GAN acc 0.9414', 'Discriminator loss 0.5867', 'Discriminator accuracy 0.6895', 'Total loss: 1.2206', 'for batch', 33)
('GAN loss 0.6197 ', 'GAN acc 0.9766', 'Discriminator loss 0.5561', 'Discriminator accuracy 0.6855', 'Total loss: 1.1757', 'for batch', 34)
('GAN loss 0.6030 ', 'GAN acc 0.9883', 'Discriminator loss 0.5696', 'Discriminator accuracy 0.6836', 'Total loss: 1.1726', 'for batch', 35)
('GAN loss 0.5968 ', 'GAN acc 0.9922', 'Discriminator loss 0.5608', 'Discriminator accuracy 0.7422', 'Total loss: 1.1575', 'for batch', 36)
('GAN loss 0.5721 ', 'GAN acc 0.9961', 'Discriminator loss 0.4914', 'Discriminator accuracy 0.8301', 'Total loss: 1.0634', 'for batch', 37)
('GAN loss 0.5656 ', 'GAN acc 0.9883', 'Discriminator loss 0.4379', 'Discriminator accuracy 0.8828', 'Total loss: 1.0036', 'for batch', 38)
('GAN loss 0.5301 ', 'GAN acc 0.9883', 'Discriminator loss 0.4356', 'Discriminator accuracy 0.8418', 'Total loss: 0.9658', 'for batch', 39)
('GAN loss 0.5029 ', 'GAN acc 0.9922', 'Discriminator loss 0.5197', 'Discriminator accuracy 0.8086', 'Total loss: 1.0226', 'for batch', 40)
('GAN loss 0.4509 ', 'GAN acc 0.9922', 'Discriminator loss 0.4183', 'Discriminator accuracy 0.8105', 'Total loss: 0.8692', 'for batch', 41)
('GAN loss 0.4390 ', 'GAN acc 0.9922', 'Discriminator loss 0.5770', 'Discriminator accuracy 0.6992', 'Total loss: 1.0160', 'for batch', 42)
('GAN loss 0.4278 ', 'GAN acc 0.9883', 'Discriminator loss 0.5173', 'Discriminator accuracy 0.7324', 'Total loss: 0.9450', 'for batch', 43)
('GAN loss 0.4440 ', 'GAN acc 0.9844', 'Discriminator loss 0.6267', 'Discriminator accuracy 0.6211', 'Total loss: 1.0708', 'for batch', 44)
('GAN loss 0.4545 ', 'GAN acc 0.9961', 'Discriminator loss 0.6503', 'Discriminator accuracy 0.5879', 'Total loss: 1.1048', 'for batch', 45)
('GAN loss 0.4513 ', 'GAN acc 0.9961', 'Discriminator loss 0.4236', 'Discriminator accuracy 0.8184', 'Total loss: 0.8749', 'for batch', 46)
('GAN loss 0.4630 ', 'GAN acc 0.9922', 'Discriminator loss 0.5724', 'Discriminator accuracy 0.6797', 'Total loss: 1.0353', 'for batch', 47)
('GAN loss 0.4441 ', 'GAN acc 0.9922', 'Discriminator loss 0.4279', 'Discriminator accuracy 0.8457', 'Total loss: 0.8720', 'for batch', 48)
('GAN loss 0.4442 ', 'GAN acc 0.9922', 'Discriminator loss 0.4865', 'Discriminator accuracy 0.8125', 'Total loss: 0.9307', 'for batch', 49)
('GAN loss 0.4229 ', 'GAN acc 0.9961', 'Discriminator loss 0.6874', 'Discriminator accuracy 0.5156', 'Total loss: 1.1104', 'for batch', 50)
('GAN loss 0.4317 ', 'GAN acc 0.9883', 'Discriminator loss 0.5759', 'Discriminator accuracy 0.6738', 'Total loss: 1.0076', 'for batch', 51)
('GAN loss 0.4333 ', 'GAN acc 0.9922', 'Discriminator loss 0.5706', 'Discriminator accuracy 0.6816', 'Total loss: 1.0039', 'for batch', 52)
('GAN loss 0.4509 ', 'GAN acc 0.9883', 'Discriminator loss 0.4495', 'Discriminator accuracy 0.8047', 'Total loss: 0.9004', 'for batch', 53)
('GAN loss 0.4557 ', 'GAN acc 0.9922', 'Discriminator loss 0.4308', 'Discriminator accuracy 0.8594', 'Total loss: 0.8864', 'for batch', 54)
('GAN loss 0.3998 ', 'GAN acc 0.9883', 'Discriminator loss 0.4941', 'Discriminator accuracy 0.6641', 'Total loss: 0.8939', 'for batch', 55)
('GAN loss 0.4034 ', 'GAN acc 0.9883', 'Discriminator loss 0.5861', 'Discriminator accuracy 0.6875', 'Total loss: 0.9896', 'for batch', 56)
('GAN loss 0.4314 ', 'GAN acc 0.9883', 'Discriminator loss 0.6414', 'Discriminator accuracy 0.6230', 'Total loss: 1.0728', 'for batch', 57)
('GAN loss 0.4576 ', 'GAN acc 0.9922', 'Discriminator loss 0.5966', 'Discriminator accuracy 0.6348', 'Total loss: 1.0542', 'for batch', 58)
('GAN loss 0.4666 ', 'GAN acc 0.9922', 'Discriminator loss 0.4349', 'Discriminator accuracy 0.8340', 'Total loss: 0.9015', 'for batch', 59)
('GAN loss 0.4468 ', 'GAN acc 0.9883', 'Discriminator loss 0.5148', 'Discriminator accuracy 0.7207', 'Total loss: 0.9617', 'for batch', 60)
('GAN loss 0.4410 ', 'GAN acc 0.9883', 'Discriminator loss 0.4682', 'Discriminator accuracy 0.7559', 'Total loss: 0.9091', 'for batch', 61)
('GAN loss 0.4257 ', 'GAN acc 0.9844', 'Discriminator loss 0.4150', 'Discriminator accuracy 0.8125', 'Total loss: 0.8408', 'for batch', 62)
('GAN loss 0.4317 ', 'GAN acc 0.9883', 'Discriminator loss 0.4776', 'Discriminator accuracy 0.7656', 'Total loss: 0.9093', 'for batch', 63)
('GAN loss 0.4396 ', 'GAN acc 0.9922', 'Discriminator loss 0.4948', 'Discriminator accuracy 0.7598', 'Total loss: 0.9344', 'for batch', 64)
('GAN loss 0.3959 ', 'GAN acc 1.0000', 'Discriminator loss 0.3968', 'Discriminator accuracy 0.8379', 'Total loss: 0.7927', 'for batch', 65)
('GAN loss 0.3845 ', 'GAN acc 0.9922', 'Discriminator loss 0.5313', 'Discriminator accuracy 0.7129', 'Total loss: 0.9158', 'for batch', 66)
('GAN loss 0.4080 ', 'GAN acc 0.9922', 'Discriminator loss 0.3716', 'Discriminator accuracy 0.8809', 'Total loss: 0.7796', 'for batch', 67)
('GAN loss 0.3857 ', 'GAN acc 0.9844', 'Discriminator loss 0.5800', 'Discriminator accuracy 0.6328', 'Total loss: 0.9657', 'for batch', 68)
('GAN loss 0.3572 ', 'GAN acc 0.9922', 'Discriminator loss 0.4715', 'Discriminator accuracy 0.7559', 'Total loss: 0.8288', 'for batch', 69)
('GAN loss 0.3931 ', 'GAN acc 0.9922', 'Discriminator loss 0.5496', 'Discriminator accuracy 0.6914', 'Total loss: 0.9427', 'for batch', 70)
('GAN loss 0.3947 ', 'GAN acc 0.9883', 'Discriminator loss 0.3288', 'Discriminator accuracy 0.8711', 'Total loss: 0.7235', 'for batch', 71)
('GAN loss 0.3835 ', 'GAN acc 0.9922', 'Discriminator loss 0.3900', 'Discriminator accuracy 0.8633', 'Total loss: 0.7735', 'for batch', 72)
('GAN loss 0.3409 ', 'GAN acc 0.9922', 'Discriminator loss 0.4690', 'Discriminator accuracy 0.7324', 'Total loss: 0.8099', 'for batch', 73)
('GAN loss 0.3345 ', 'GAN acc 0.9922', 'Discriminator loss 0.5268', 'Discriminator accuracy 0.6914', 'Total loss: 0.8614', 'for batch', 74)
('GAN loss 0.3583 ', 'GAN acc 0.9883', 'Discriminator loss 0.5180', 'Discriminator accuracy 0.7402', 'Total loss: 0.8763', 'for batch', 75)
('GAN loss 0.7742 ', 'GAN acc 0.5508', 'Discriminator loss 0.4346', 'Discriminator accuracy 0.7656', 'Total loss: 1.2088', 'for batch', 76)
('GAN loss 0.5372 ', 'GAN acc 0.9688', 'Discriminator loss 0.7174', 'Discriminator accuracy 0.5195', 'Total loss: 1.2546', 'for batch', 77)
('GAN loss 0.7619 ', 'GAN acc 0.4180', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5293', 'Total loss: 1.4396', 'for batch', 78)
('GAN loss 1.0695 ', 'GAN acc 0.0000', 'Discriminator loss 0.6443', 'Discriminator accuracy 0.5762', 'Total loss: 1.7138', 'for batch', 79)
('GAN loss 0.8308 ', 'GAN acc 0.0703', 'Discriminator loss 0.6548', 'Discriminator accuracy 0.5508', 'Total loss: 1.4855', 'for batch', 80)
('GAN loss 0.8203 ', 'GAN acc 0.0625', 'Discriminator loss 0.6451', 'Discriminator accuracy 0.7773', 'Total loss: 1.4654', 'for batch', 81)
('GAN loss 0.8275 ', 'GAN acc 0.0469', 'Discriminator loss 0.6491', 'Discriminator accuracy 0.7031', 'Total loss: 1.4766', 'for batch', 82)
('GAN loss 0.8911 ', 'GAN acc 0.0078', 'Discriminator loss 0.6437', 'Discriminator accuracy 0.7383', 'Total loss: 1.5349', 'for batch', 83)
('GAN loss 0.9384 ', 'GAN acc 0.0039', 'Discriminator loss 0.6506', 'Discriminator accuracy 0.7031', 'Total loss: 1.5890', 'for batch', 84)
('GAN loss 0.7956 ', 'GAN acc 0.1719', 'Discriminator loss 0.6722', 'Discriminator accuracy 0.6172', 'Total loss: 1.4678', 'for batch', 85)
('GAN loss 0.7899 ', 'GAN acc 0.2734', 'Discriminator loss 0.6922', 'Discriminator accuracy 0.4980', 'Total loss: 1.4820', 'for batch', 86)
('GAN loss 0.7385 ', 'GAN acc 0.6055', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5254', 'Total loss: 1.4213', 'for batch', 87)
('GAN loss 0.7268 ', 'GAN acc 0.7383', 'Discriminator loss 0.6902', 'Discriminator accuracy 0.5000', 'Total loss: 1.4171', 'for batch', 88)
('GAN loss 0.7602 ', 'GAN acc 0.7305', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.4844', 'Total loss: 1.4412', 'for batch', 89)
('GAN loss 0.8323 ', 'GAN acc 0.5742', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5117', 'Total loss: 1.5046', 'for batch', 90)
('GAN loss 0.8433 ', 'GAN acc 0.3711', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5312', 'Total loss: 1.5183', 'for batch', 91)
('GAN loss 0.8178 ', 'GAN acc 0.4727', 'Discriminator loss 0.6708', 'Discriminator accuracy 0.5195', 'Total loss: 1.4886', 'for batch', 92)
('GAN loss 0.7259 ', 'GAN acc 0.7109', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.5449', 'Total loss: 1.3992', 'for batch', 93)
('GAN loss 0.7317 ', 'GAN acc 0.6602', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5449', 'Total loss: 1.4062', 'for batch', 94)
('GAN loss 0.7046 ', 'GAN acc 0.7188', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.5215', 'Total loss: 1.3897', 'for batch', 95)
('GAN loss 0.6826 ', 'GAN acc 0.7422', 'Discriminator loss 0.6864', 'Discriminator accuracy 0.4902', 'Total loss: 1.3690', 'for batch', 96)
('GAN loss 0.7093 ', 'GAN acc 0.7344', 'Discriminator loss 0.6932', 'Discriminator accuracy 0.4824', 'Total loss: 1.4025', 'for batch', 97)
('GAN loss 0.7416 ', 'GAN acc 0.5703', 'Discriminator loss 0.6675', 'Discriminator accuracy 0.5781', 'Total loss: 1.4091', 'for batch', 98)
('GAN loss 0.7447 ', 'GAN acc 0.5391', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.5703', 'Total loss: 1.4205', 'for batch', 99)
('GAN loss 0.7009 ', 'GAN acc 0.5781', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.5469', 'Total loss: 1.3686', 'for batch', 100)
('GAN loss 0.7120 ', 'GAN acc 0.5820', 'Discriminator loss 0.6765', 'Discriminator accuracy 0.5684', 'Total loss: 1.3886', 'for batch', 101)
('GAN loss 0.7529 ', 'GAN acc 0.4492', 'Discriminator loss 0.6983', 'Discriminator accuracy 0.5254', 'Total loss: 1.4513', 'for batch', 102)
('GAN loss 0.7339 ', 'GAN acc 0.6562', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5527', 'Total loss: 1.4139', 'for batch', 103)
('GAN loss 0.7046 ', 'GAN acc 0.7422', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.5391', 'Total loss: 1.3864', 'for batch', 104)
('GAN loss 0.7451 ', 'GAN acc 0.5625', 'Discriminator loss 0.6930', 'Discriminator accuracy 0.5000', 'Total loss: 1.4381', 'for batch', 105)
('GAN loss 0.7830 ', 'GAN acc 0.4258', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.5293', 'Total loss: 1.4584', 'for batch', 106)
('GAN loss 0.7684 ', 'GAN acc 0.4492', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5332', 'Total loss: 1.4411', 'for batch', 107)
('GAN loss 0.7436 ', 'GAN acc 0.5195', 'Discriminator loss 0.6790', 'Discriminator accuracy 0.5254', 'Total loss: 1.4226', 'for batch', 108)
('GAN loss 0.7961 ', 'GAN acc 0.2891', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.5352', 'Total loss: 1.4749', 'for batch', 109)
('GAN loss 0.7925 ', 'GAN acc 0.3789', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5020', 'Total loss: 1.4739', 'for batch', 110)
('GAN loss 0.8473 ', 'GAN acc 0.3828', 'Discriminator loss 0.6822', 'Discriminator accuracy 0.5039', 'Total loss: 1.5294', 'for batch', 111)
('GAN loss 0.7490 ', 'GAN acc 0.3789', 'Discriminator loss 0.6669', 'Discriminator accuracy 0.6113', 'Total loss: 1.4159', 'for batch', 112)
('GAN loss 0.7507 ', 'GAN acc 0.4492', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5684', 'Total loss: 1.4267', 'for batch', 113)
('GAN loss 0.7249 ', 'GAN acc 0.5352', 'Discriminator loss 0.6694', 'Discriminator accuracy 0.5820', 'Total loss: 1.3943', 'for batch', 114)
('GAN loss 0.7198 ', 'GAN acc 0.5703', 'Discriminator loss 0.6809', 'Discriminator accuracy 0.5352', 'Total loss: 1.4006', 'for batch', 115)
('GAN loss 0.7075 ', 'GAN acc 0.6094', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.4941', 'Total loss: 1.3931', 'for batch', 116)
('GAN loss 0.7296 ', 'GAN acc 0.5664', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5312', 'Total loss: 1.4059', 'for batch', 117)
('GAN loss 0.7226 ', 'GAN acc 0.5664', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.5254', 'Total loss: 1.4063', 'for batch', 118)
('GAN loss 0.7238 ', 'GAN acc 0.5156', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.5742', 'Total loss: 1.4026', 'for batch', 119)
('GAN loss 0.7804 ', 'GAN acc 0.4297', 'Discriminator loss 0.6720', 'Discriminator accuracy 0.6113', 'Total loss: 1.4524', 'for batch', 120)
('GAN loss 0.7778 ', 'GAN acc 0.5234', 'Discriminator loss 0.6680', 'Discriminator accuracy 0.6074', 'Total loss: 1.4458', 'for batch', 121)
('GAN loss 0.8757 ', 'GAN acc 0.4492', 'Discriminator loss 0.6560', 'Discriminator accuracy 0.5996', 'Total loss: 1.5317', 'for batch', 122)
('GAN loss 0.6913 ', 'GAN acc 0.7383', 'Discriminator loss 0.6743', 'Discriminator accuracy 0.5625', 'Total loss: 1.3656', 'for batch', 123)
('GAN loss 0.7026 ', 'GAN acc 0.7148', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5586', 'Total loss: 1.3805', 'for batch', 124)
('GAN loss 0.7134 ', 'GAN acc 0.7031', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5449', 'Total loss: 1.3908', 'for batch', 125)
('GAN loss 0.7040 ', 'GAN acc 0.6680', 'Discriminator loss 0.6792', 'Discriminator accuracy 0.5781', 'Total loss: 1.3832', 'for batch', 126)
('GAN loss 0.7166 ', 'GAN acc 0.7539', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5234', 'Total loss: 1.4015', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54070252)
('DISCRIMINATOR_Imagem FAKE=', 0.52301174)
('Discriminator trained', 76, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.358330')
----------------------------------
('Epoch', 21, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7356 ', 'GAN acc 0.5312', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5020', 'Total loss: 1.4230', 'for batch', 0)
('GAN loss 0.7687 ', 'GAN acc 0.3555', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5098', 'Total loss: 1.4545', 'for batch', 1)
('GAN loss 0.7831 ', 'GAN acc 0.2734', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.4922', 'Total loss: 1.4693', 'for batch', 2)
('GAN loss 0.8422 ', 'GAN acc 0.1133', 'Discriminator loss 0.6781', 'Discriminator accuracy 0.5527', 'Total loss: 1.5203', 'for batch', 3)
('GAN loss 0.7975 ', 'GAN acc 0.1992', 'Discriminator loss 0.6926', 'Discriminator accuracy 0.5098', 'Total loss: 1.4901', 'for batch', 4)
('GAN loss 0.7401 ', 'GAN acc 0.3516', 'Discriminator loss 0.6761', 'Discriminator accuracy 0.5254', 'Total loss: 1.4162', 'for batch', 5)
('GAN loss 0.7161 ', 'GAN acc 0.6406', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.5352', 'Total loss: 1.3949', 'for batch', 6)
('GAN loss 0.7191 ', 'GAN acc 0.5469', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5117', 'Total loss: 1.4036', 'for batch', 7)
('GAN loss 0.8241 ', 'GAN acc 0.2852', 'Discriminator loss 0.6382', 'Discriminator accuracy 0.5938', 'Total loss: 1.4623', 'for batch', 8)
('GAN loss 0.7310 ', 'GAN acc 0.6406', 'Discriminator loss 0.6857', 'Discriminator accuracy 0.4961', 'Total loss: 1.4167', 'for batch', 9)
('GAN loss 0.7000 ', 'GAN acc 0.8047', 'Discriminator loss 0.6852', 'Discriminator accuracy 0.4961', 'Total loss: 1.3852', 'for batch', 10)
('GAN loss 0.6939 ', 'GAN acc 0.7930', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5195', 'Total loss: 1.3753', 'for batch', 11)
('GAN loss 0.7057 ', 'GAN acc 0.7773', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5664', 'Total loss: 1.3854', 'for batch', 12)
('GAN loss 0.6789 ', 'GAN acc 0.9141', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.5176', 'Total loss: 1.3654', 'for batch', 13)
('GAN loss 0.6734 ', 'GAN acc 0.9062', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5039', 'Total loss: 1.3535', 'for batch', 14)
('GAN loss 0.6995 ', 'GAN acc 0.8008', 'Discriminator loss 0.6715', 'Discriminator accuracy 0.5684', 'Total loss: 1.3709', 'for batch', 15)
('GAN loss 0.6851 ', 'GAN acc 0.7305', 'Discriminator loss 0.6765', 'Discriminator accuracy 0.5215', 'Total loss: 1.3616', 'for batch', 16)
('GAN loss 0.7082 ', 'GAN acc 0.6875', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5312', 'Total loss: 1.3879', 'for batch', 17)
('GAN loss 0.7480 ', 'GAN acc 0.4531', 'Discriminator loss 0.6693', 'Discriminator accuracy 0.5195', 'Total loss: 1.4173', 'for batch', 18)
('GAN loss 0.7642 ', 'GAN acc 0.4023', 'Discriminator loss 0.6460', 'Discriminator accuracy 0.5312', 'Total loss: 1.4101', 'for batch', 19)
('GAN loss 0.6760 ', 'GAN acc 0.9258', 'Discriminator loss 0.7011', 'Discriminator accuracy 0.5020', 'Total loss: 1.3771', 'for batch', 20)
('GAN loss 0.6447 ', 'GAN acc 0.9688', 'Discriminator loss 0.6911', 'Discriminator accuracy 0.4824', 'Total loss: 1.3357', 'for batch', 21)
('GAN loss 0.6575 ', 'GAN acc 0.9492', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.5898', 'Total loss: 1.3193', 'for batch', 22)
('GAN loss 0.6984 ', 'GAN acc 0.8789', 'Discriminator loss 0.6359', 'Discriminator accuracy 0.6523', 'Total loss: 1.3343', 'for batch', 23)
('GAN loss 0.7320 ', 'GAN acc 0.9102', 'Discriminator loss 0.5560', 'Discriminator accuracy 0.6406', 'Total loss: 1.2880', 'for batch', 24)
('GAN loss 0.6424 ', 'GAN acc 0.9766', 'Discriminator loss 0.6238', 'Discriminator accuracy 0.5645', 'Total loss: 1.2662', 'for batch', 25)
('GAN loss 0.6199 ', 'GAN acc 0.9805', 'Discriminator loss 0.6900', 'Discriminator accuracy 0.5059', 'Total loss: 1.3100', 'for batch', 26)
('GAN loss 0.6307 ', 'GAN acc 0.9766', 'Discriminator loss 0.6115', 'Discriminator accuracy 0.6289', 'Total loss: 1.2422', 'for batch', 27)
('GAN loss 0.6800 ', 'GAN acc 0.9648', 'Discriminator loss 0.6011', 'Discriminator accuracy 0.6348', 'Total loss: 1.2811', 'for batch', 28)
('GAN loss 0.6368 ', 'GAN acc 0.9805', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.5742', 'Total loss: 1.2978', 'for batch', 29)
('GAN loss 0.6165 ', 'GAN acc 0.9844', 'Discriminator loss 0.6900', 'Discriminator accuracy 0.5195', 'Total loss: 1.3065', 'for batch', 30)
('GAN loss 0.6355 ', 'GAN acc 0.9766', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5078', 'Total loss: 1.3201', 'for batch', 31)
('GAN loss 0.6478 ', 'GAN acc 0.9727', 'Discriminator loss 0.6864', 'Discriminator accuracy 0.5078', 'Total loss: 1.3343', 'for batch', 32)
('GAN loss 0.6610 ', 'GAN acc 0.9141', 'Discriminator loss 0.6838', 'Discriminator accuracy 0.5059', 'Total loss: 1.3447', 'for batch', 33)
('GAN loss 0.6862 ', 'GAN acc 0.8594', 'Discriminator loss 0.6429', 'Discriminator accuracy 0.5840', 'Total loss: 1.3291', 'for batch', 34)
('GAN loss 0.6789 ', 'GAN acc 0.8320', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5312', 'Total loss: 1.3558', 'for batch', 35)
('GAN loss 0.8774 ', 'GAN acc 0.1484', 'Discriminator loss 0.5830', 'Discriminator accuracy 0.7461', 'Total loss: 1.4604', 'for batch', 36)
('GAN loss 0.6388 ', 'GAN acc 0.9414', 'Discriminator loss 0.6921', 'Discriminator accuracy 0.5137', 'Total loss: 1.3310', 'for batch', 37)
('GAN loss 0.6457 ', 'GAN acc 0.9141', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.5078', 'Total loss: 1.3300', 'for batch', 38)
('GAN loss 0.6655 ', 'GAN acc 0.7930', 'Discriminator loss 0.6905', 'Discriminator accuracy 0.5156', 'Total loss: 1.3561', 'for batch', 39)
('GAN loss 0.6775 ', 'GAN acc 0.6797', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5332', 'Total loss: 1.3611', 'for batch', 40)
('GAN loss 0.6990 ', 'GAN acc 0.4648', 'Discriminator loss 0.6870', 'Discriminator accuracy 0.5527', 'Total loss: 1.3860', 'for batch', 41)
('GAN loss 0.7071 ', 'GAN acc 0.3711', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.5996', 'Total loss: 1.3923', 'for batch', 42)
('GAN loss 0.7283 ', 'GAN acc 0.2109', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.6133', 'Total loss: 1.4090', 'for batch', 43)
('GAN loss 0.7147 ', 'GAN acc 0.3125', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.6113', 'Total loss: 1.3964', 'for batch', 44)
('GAN loss 0.7257 ', 'GAN acc 0.2344', 'Discriminator loss 0.6903', 'Discriminator accuracy 0.5586', 'Total loss: 1.4160', 'for batch', 45)
('GAN loss 0.7140 ', 'GAN acc 0.3203', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5566', 'Total loss: 1.3989', 'for batch', 46)
('GAN loss 0.7271 ', 'GAN acc 0.2109', 'Discriminator loss 0.6841', 'Discriminator accuracy 0.5801', 'Total loss: 1.4111', 'for batch', 47)
('GAN loss 0.7108 ', 'GAN acc 0.3750', 'Discriminator loss 0.6436', 'Discriminator accuracy 0.6270', 'Total loss: 1.3544', 'for batch', 48)
('GAN loss 0.7153 ', 'GAN acc 0.3398', 'Discriminator loss 0.6915', 'Discriminator accuracy 0.5156', 'Total loss: 1.4068', 'for batch', 49)
('GAN loss 0.7243 ', 'GAN acc 0.2734', 'Discriminator loss 0.6876', 'Discriminator accuracy 0.5566', 'Total loss: 1.4119', 'for batch', 50)
('GAN loss 0.7327 ', 'GAN acc 0.1875', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.5312', 'Total loss: 1.4208', 'for batch', 51)
('GAN loss 0.7223 ', 'GAN acc 0.2617', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.4805', 'Total loss: 1.4122', 'for batch', 52)
('GAN loss 0.6983 ', 'GAN acc 0.4609', 'Discriminator loss 0.6554', 'Discriminator accuracy 0.5508', 'Total loss: 1.3537', 'for batch', 53)
('GAN loss 0.7163 ', 'GAN acc 0.3242', 'Discriminator loss 0.6867', 'Discriminator accuracy 0.5332', 'Total loss: 1.4029', 'for batch', 54)
('GAN loss 0.7625 ', 'GAN acc 0.1758', 'Discriminator loss 0.6105', 'Discriminator accuracy 0.6074', 'Total loss: 1.3730', 'for batch', 55)
('GAN loss 0.6374 ', 'GAN acc 0.8750', 'Discriminator loss 0.6775', 'Discriminator accuracy 0.5176', 'Total loss: 1.3149', 'for batch', 56)
('GAN loss 0.5956 ', 'GAN acc 0.9805', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.5176', 'Total loss: 1.2845', 'for batch', 57)
('GAN loss 0.6288 ', 'GAN acc 0.9453', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.4961', 'Total loss: 1.3233', 'for batch', 58)
('GAN loss 0.6564 ', 'GAN acc 0.8555', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.5566', 'Total loss: 1.3297', 'for batch', 59)
('GAN loss 0.6649 ', 'GAN acc 0.8398', 'Discriminator loss 0.6884', 'Discriminator accuracy 0.5098', 'Total loss: 1.3533', 'for batch', 60)
('GAN loss 0.6802 ', 'GAN acc 0.7969', 'Discriminator loss 0.6248', 'Discriminator accuracy 0.6348', 'Total loss: 1.3050', 'for batch', 61)
('GAN loss 0.6705 ', 'GAN acc 0.7969', 'Discriminator loss 0.6522', 'Discriminator accuracy 0.5840', 'Total loss: 1.3227', 'for batch', 62)
('GAN loss 0.6672 ', 'GAN acc 0.8555', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5352', 'Total loss: 1.3399', 'for batch', 63)
('GAN loss 0.6392 ', 'GAN acc 0.9336', 'Discriminator loss 0.5956', 'Discriminator accuracy 0.6406', 'Total loss: 1.2348', 'for batch', 64)
('GAN loss 0.6084 ', 'GAN acc 0.9805', 'Discriminator loss 0.5994', 'Discriminator accuracy 0.6152', 'Total loss: 1.2079', 'for batch', 65)
('GAN loss 0.5937 ', 'GAN acc 0.9844', 'Discriminator loss 0.6534', 'Discriminator accuracy 0.5586', 'Total loss: 1.2471', 'for batch', 66)
('GAN loss 0.5965 ', 'GAN acc 0.9766', 'Discriminator loss 0.6513', 'Discriminator accuracy 0.5898', 'Total loss: 1.2477', 'for batch', 67)
('GAN loss 0.5932 ', 'GAN acc 0.9688', 'Discriminator loss 0.5507', 'Discriminator accuracy 0.7383', 'Total loss: 1.1439', 'for batch', 68)
('GAN loss 0.5315 ', 'GAN acc 0.9844', 'Discriminator loss 0.5449', 'Discriminator accuracy 0.6914', 'Total loss: 1.0764', 'for batch', 69)
('GAN loss 0.5014 ', 'GAN acc 0.9844', 'Discriminator loss 0.5232', 'Discriminator accuracy 0.7695', 'Total loss: 1.0246', 'for batch', 70)
('GAN loss 0.5414 ', 'GAN acc 0.9844', 'Discriminator loss 0.5906', 'Discriminator accuracy 0.6484', 'Total loss: 1.1320', 'for batch', 71)
('GAN loss 0.5380 ', 'GAN acc 0.9766', 'Discriminator loss 0.7040', 'Discriminator accuracy 0.5234', 'Total loss: 1.2420', 'for batch', 72)
('GAN loss 0.6013 ', 'GAN acc 0.9844', 'Discriminator loss 0.6785', 'Discriminator accuracy 0.5703', 'Total loss: 1.2798', 'for batch', 73)
('GAN loss 0.6358 ', 'GAN acc 0.9727', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5566', 'Total loss: 1.3133', 'for batch', 74)
('GAN loss 0.6395 ', 'GAN acc 0.9609', 'Discriminator loss 0.6485', 'Discriminator accuracy 0.5527', 'Total loss: 1.2881', 'for batch', 75)
('GAN loss 0.6626 ', 'GAN acc 0.9180', 'Discriminator loss 0.6656', 'Discriminator accuracy 0.5488', 'Total loss: 1.3282', 'for batch', 76)
('GAN loss 0.6713 ', 'GAN acc 0.8828', 'Discriminator loss 0.6695', 'Discriminator accuracy 0.5234', 'Total loss: 1.3407', 'for batch', 77)
('GAN loss 0.6582 ', 'GAN acc 0.8711', 'Discriminator loss 0.6735', 'Discriminator accuracy 0.5410', 'Total loss: 1.3317', 'for batch', 78)
('GAN loss 0.6445 ', 'GAN acc 0.9219', 'Discriminator loss 0.6244', 'Discriminator accuracy 0.6211', 'Total loss: 1.2689', 'for batch', 79)
('GAN loss 0.6716 ', 'GAN acc 0.8672', 'Discriminator loss 0.6150', 'Discriminator accuracy 0.6641', 'Total loss: 1.2866', 'for batch', 80)
('GAN loss 0.6768 ', 'GAN acc 0.7930', 'Discriminator loss 0.6356', 'Discriminator accuracy 0.6445', 'Total loss: 1.3124', 'for batch', 81)
('GAN loss 0.5740 ', 'GAN acc 0.9844', 'Discriminator loss 0.6935', 'Discriminator accuracy 0.5371', 'Total loss: 1.2675', 'for batch', 82)
('GAN loss 0.6143 ', 'GAN acc 0.9609', 'Discriminator loss 0.7023', 'Discriminator accuracy 0.5156', 'Total loss: 1.3166', 'for batch', 83)
('GAN loss 0.6390 ', 'GAN acc 0.9375', 'Discriminator loss 0.5736', 'Discriminator accuracy 0.7305', 'Total loss: 1.2126', 'for batch', 84)
('GAN loss 0.7337 ', 'GAN acc 0.6445', 'Discriminator loss 0.5477', 'Discriminator accuracy 0.7383', 'Total loss: 1.2814', 'for batch', 85)
('GAN loss 0.6084 ', 'GAN acc 0.9805', 'Discriminator loss 0.6640', 'Discriminator accuracy 0.5000', 'Total loss: 1.2724', 'for batch', 86)
('GAN loss 0.6284 ', 'GAN acc 0.9375', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.5156', 'Total loss: 1.3145', 'for batch', 87)
('GAN loss 0.6761 ', 'GAN acc 0.7891', 'Discriminator loss 0.6775', 'Discriminator accuracy 0.5215', 'Total loss: 1.3536', 'for batch', 88)
('GAN loss 0.6842 ', 'GAN acc 0.7031', 'Discriminator loss 0.6749', 'Discriminator accuracy 0.5430', 'Total loss: 1.3591', 'for batch', 89)
('GAN loss 0.7084 ', 'GAN acc 0.5859', 'Discriminator loss 0.6088', 'Discriminator accuracy 0.6426', 'Total loss: 1.3172', 'for batch', 90)
('GAN loss 0.6871 ', 'GAN acc 0.8164', 'Discriminator loss 0.6265', 'Discriminator accuracy 0.6172', 'Total loss: 1.3136', 'for batch', 91)
('GAN loss 0.6475 ', 'GAN acc 0.9102', 'Discriminator loss 0.5396', 'Discriminator accuracy 0.7422', 'Total loss: 1.1871', 'for batch', 92)
('GAN loss 1.7905 ', 'GAN acc 0.0000', 'Discriminator loss 0.5027', 'Discriminator accuracy 0.8613', 'Total loss: 2.2933', 'for batch', 93)
('GAN loss 0.9114 ', 'GAN acc 0.0273', 'Discriminator loss 0.6211', 'Discriminator accuracy 0.6973', 'Total loss: 1.5326', 'for batch', 94)
('GAN loss 0.9633 ', 'GAN acc 0.0000', 'Discriminator loss 0.6173', 'Discriminator accuracy 0.8965', 'Total loss: 1.5806', 'for batch', 95)
('GAN loss 1.0037 ', 'GAN acc 0.0039', 'Discriminator loss 0.6125', 'Discriminator accuracy 0.8359', 'Total loss: 1.6163', 'for batch', 96)
('GAN loss 0.9860 ', 'GAN acc 0.0000', 'Discriminator loss 0.6128', 'Discriminator accuracy 0.8203', 'Total loss: 1.5988', 'for batch', 97)
('GAN loss 0.9115 ', 'GAN acc 0.0859', 'Discriminator loss 0.5994', 'Discriminator accuracy 0.8711', 'Total loss: 1.5108', 'for batch', 98)
('GAN loss 0.8178 ', 'GAN acc 0.3086', 'Discriminator loss 0.6290', 'Discriminator accuracy 0.7676', 'Total loss: 1.4468', 'for batch', 99)
('GAN loss 0.7732 ', 'GAN acc 0.3359', 'Discriminator loss 0.6630', 'Discriminator accuracy 0.6465', 'Total loss: 1.4363', 'for batch', 100)
('GAN loss 0.7116 ', 'GAN acc 0.4414', 'Discriminator loss 0.7117', 'Discriminator accuracy 0.5430', 'Total loss: 1.4233', 'for batch', 101)
('GAN loss 0.7643 ', 'GAN acc 0.4297', 'Discriminator loss 0.7411', 'Discriminator accuracy 0.4961', 'Total loss: 1.5054', 'for batch', 102)
('GAN loss 0.9859 ', 'GAN acc 0.0078', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.4805', 'Total loss: 1.6671', 'for batch', 103)
('GAN loss 0.9277 ', 'GAN acc 0.0039', 'Discriminator loss 0.6690', 'Discriminator accuracy 0.5449', 'Total loss: 1.5966', 'for batch', 104)
('GAN loss 0.9485 ', 'GAN acc 0.0039', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.5586', 'Total loss: 1.6117', 'for batch', 105)
('GAN loss 0.8753 ', 'GAN acc 0.0312', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5078', 'Total loss: 1.5500', 'for batch', 106)
('GAN loss 0.8039 ', 'GAN acc 0.2422', 'Discriminator loss 0.6710', 'Discriminator accuracy 0.5176', 'Total loss: 1.4749', 'for batch', 107)
('GAN loss 0.7696 ', 'GAN acc 0.5078', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5312', 'Total loss: 1.4340', 'for batch', 108)
('GAN loss 0.7753 ', 'GAN acc 0.5820', 'Discriminator loss 0.6627', 'Discriminator accuracy 0.5332', 'Total loss: 1.4380', 'for batch', 109)
('GAN loss 0.9154 ', 'GAN acc 0.0977', 'Discriminator loss 0.6488', 'Discriminator accuracy 0.6523', 'Total loss: 1.5642', 'for batch', 110)
('GAN loss 0.8171 ', 'GAN acc 0.5352', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5137', 'Total loss: 1.4923', 'for batch', 111)
('GAN loss 0.6783 ', 'GAN acc 0.8164', 'Discriminator loss 0.6491', 'Discriminator accuracy 0.5586', 'Total loss: 1.3274', 'for batch', 112)
('GAN loss 0.7098 ', 'GAN acc 0.7305', 'Discriminator loss 0.6436', 'Discriminator accuracy 0.5273', 'Total loss: 1.3533', 'for batch', 113)
('GAN loss 0.7833 ', 'GAN acc 0.3477', 'Discriminator loss 0.6397', 'Discriminator accuracy 0.5508', 'Total loss: 1.4231', 'for batch', 114)
('GAN loss 0.8264 ', 'GAN acc 0.2031', 'Discriminator loss 0.6404', 'Discriminator accuracy 0.6289', 'Total loss: 1.4668', 'for batch', 115)
('GAN loss 0.7720 ', 'GAN acc 0.3281', 'Discriminator loss 0.6697', 'Discriminator accuracy 0.5625', 'Total loss: 1.4417', 'for batch', 116)
('GAN loss 0.7840 ', 'GAN acc 0.1367', 'Discriminator loss 0.6608', 'Discriminator accuracy 0.5469', 'Total loss: 1.4448', 'for batch', 117)
('GAN loss 0.7865 ', 'GAN acc 0.2383', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5176', 'Total loss: 1.4632', 'for batch', 118)
('GAN loss 0.7375 ', 'GAN acc 0.3320', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.4922', 'Total loss: 1.4228', 'for batch', 119)
('GAN loss 0.7700 ', 'GAN acc 0.4258', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.4961', 'Total loss: 1.4490', 'for batch', 120)
('GAN loss 0.8130 ', 'GAN acc 0.3984', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5195', 'Total loss: 1.4881', 'for batch', 121)
('GAN loss 0.7887 ', 'GAN acc 0.4336', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.5820', 'Total loss: 1.4549', 'for batch', 122)
('GAN loss 0.7791 ', 'GAN acc 0.5820', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.4941', 'Total loss: 1.4569', 'for batch', 123)
('GAN loss 0.7683 ', 'GAN acc 0.6016', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.4980', 'Total loss: 1.4470', 'for batch', 124)
('GAN loss 0.7518 ', 'GAN acc 0.7227', 'Discriminator loss 0.6704', 'Discriminator accuracy 0.5684', 'Total loss: 1.4222', 'for batch', 125)
('GAN loss 0.7278 ', 'GAN acc 0.6758', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5371', 'Total loss: 1.4055', 'for batch', 126)
('GAN loss 0.7217 ', 'GAN acc 0.7070', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5195', 'Total loss: 1.3986', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.53146076)
('DISCRIMINATOR_Imagem FAKE=', 0.49905282)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.688168')
----------------------------------
('Epoch', 22, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7120 ', 'GAN acc 0.5938', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.5566', 'Total loss: 1.3909', 'for batch', 0)
('GAN loss 0.7214 ', 'GAN acc 0.6055', 'Discriminator loss 0.6781', 'Discriminator accuracy 0.5645', 'Total loss: 1.3995', 'for batch', 1)
('GAN loss 0.7492 ', 'GAN acc 0.4805', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.5859', 'Total loss: 1.4232', 'for batch', 2)
('GAN loss 0.7321 ', 'GAN acc 0.4219', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5703', 'Total loss: 1.4081', 'for batch', 3)
('GAN loss 0.7401 ', 'GAN acc 0.3672', 'Discriminator loss 0.6719', 'Discriminator accuracy 0.6133', 'Total loss: 1.4120', 'for batch', 4)
('GAN loss 0.7543 ', 'GAN acc 0.2695', 'Discriminator loss 0.6507', 'Discriminator accuracy 0.6328', 'Total loss: 1.4050', 'for batch', 5)
('GAN loss 0.7631 ', 'GAN acc 0.4023', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5918', 'Total loss: 1.4283', 'for batch', 6)
('GAN loss 0.7371 ', 'GAN acc 0.5039', 'Discriminator loss 0.6875', 'Discriminator accuracy 0.5371', 'Total loss: 1.4246', 'for batch', 7)
('GAN loss 0.7806 ', 'GAN acc 0.6172', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5586', 'Total loss: 1.4430', 'for batch', 8)
('GAN loss 0.7071 ', 'GAN acc 0.7227', 'Discriminator loss 0.6876', 'Discriminator accuracy 0.5059', 'Total loss: 1.3947', 'for batch', 9)
('GAN loss 0.6872 ', 'GAN acc 0.7695', 'Discriminator loss 0.6829', 'Discriminator accuracy 0.4922', 'Total loss: 1.3701', 'for batch', 10)
('GAN loss 0.6967 ', 'GAN acc 0.7734', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5312', 'Total loss: 1.3754', 'for batch', 11)
('GAN loss 0.7077 ', 'GAN acc 0.8086', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5078', 'Total loss: 1.3926', 'for batch', 12)
('GAN loss 0.6927 ', 'GAN acc 0.7930', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.4922', 'Total loss: 1.3792', 'for batch', 13)
('GAN loss 0.7034 ', 'GAN acc 0.7539', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5215', 'Total loss: 1.3872', 'for batch', 14)
('GAN loss 0.6621 ', 'GAN acc 0.8828', 'Discriminator loss 0.6436', 'Discriminator accuracy 0.5586', 'Total loss: 1.3057', 'for batch', 15)
('GAN loss 0.6637 ', 'GAN acc 0.8984', 'Discriminator loss 0.6586', 'Discriminator accuracy 0.5488', 'Total loss: 1.3223', 'for batch', 16)
('GAN loss 0.6833 ', 'GAN acc 0.8828', 'Discriminator loss 0.6661', 'Discriminator accuracy 0.5430', 'Total loss: 1.3494', 'for batch', 17)
('GAN loss 0.6886 ', 'GAN acc 0.8359', 'Discriminator loss 0.6765', 'Discriminator accuracy 0.5215', 'Total loss: 1.3650', 'for batch', 18)
('GAN loss 0.6853 ', 'GAN acc 0.8789', 'Discriminator loss 0.6823', 'Discriminator accuracy 0.5000', 'Total loss: 1.3677', 'for batch', 19)
('GAN loss 0.6811 ', 'GAN acc 0.9141', 'Discriminator loss 0.6746', 'Discriminator accuracy 0.5312', 'Total loss: 1.3557', 'for batch', 20)
('GAN loss 0.6963 ', 'GAN acc 0.9141', 'Discriminator loss 0.6555', 'Discriminator accuracy 0.5352', 'Total loss: 1.3518', 'for batch', 21)
('GAN loss 0.6501 ', 'GAN acc 0.9531', 'Discriminator loss 0.6148', 'Discriminator accuracy 0.6152', 'Total loss: 1.2649', 'for batch', 22)
('GAN loss 0.6796 ', 'GAN acc 0.9609', 'Discriminator loss 0.6501', 'Discriminator accuracy 0.5645', 'Total loss: 1.3297', 'for batch', 23)
('GAN loss 0.6655 ', 'GAN acc 0.9375', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5547', 'Total loss: 1.3476', 'for batch', 24)
('GAN loss 0.6535 ', 'GAN acc 0.9531', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.4922', 'Total loss: 1.3479', 'for batch', 25)
('GAN loss 0.6500 ', 'GAN acc 0.9141', 'Discriminator loss 0.6728', 'Discriminator accuracy 0.5293', 'Total loss: 1.3228', 'for batch', 26)
('GAN loss 0.6800 ', 'GAN acc 0.8672', 'Discriminator loss 0.6619', 'Discriminator accuracy 0.5762', 'Total loss: 1.3419', 'for batch', 27)
('GAN loss 0.6873 ', 'GAN acc 0.8281', 'Discriminator loss 0.6924', 'Discriminator accuracy 0.5293', 'Total loss: 1.3796', 'for batch', 28)
('GAN loss 0.7053 ', 'GAN acc 0.7109', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.5410', 'Total loss: 1.3871', 'for batch', 29)
('GAN loss 0.7132 ', 'GAN acc 0.5859', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5195', 'Total loss: 1.4011', 'for batch', 30)
('GAN loss 0.7105 ', 'GAN acc 0.5742', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.5195', 'Total loss: 1.3982', 'for batch', 31)
('GAN loss 0.7166 ', 'GAN acc 0.5039', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5215', 'Total loss: 1.4005', 'for batch', 32)
('GAN loss 0.7228 ', 'GAN acc 0.6250', 'Discriminator loss 0.6474', 'Discriminator accuracy 0.5312', 'Total loss: 1.3701', 'for batch', 33)
('GAN loss 0.7276 ', 'GAN acc 0.7695', 'Discriminator loss 0.5735', 'Discriminator accuracy 0.6504', 'Total loss: 1.3010', 'for batch', 34)
('GAN loss 0.7104 ', 'GAN acc 0.8711', 'Discriminator loss 0.6135', 'Discriminator accuracy 0.6484', 'Total loss: 1.3239', 'for batch', 35)
('GAN loss 0.6020 ', 'GAN acc 0.9648', 'Discriminator loss 0.6946', 'Discriminator accuracy 0.5254', 'Total loss: 1.2965', 'for batch', 36)
('GAN loss 0.6248 ', 'GAN acc 0.9648', 'Discriminator loss 0.6091', 'Discriminator accuracy 0.6914', 'Total loss: 1.2339', 'for batch', 37)
('GAN loss 0.5979 ', 'GAN acc 0.9805', 'Discriminator loss 0.5713', 'Discriminator accuracy 0.6270', 'Total loss: 1.1691', 'for batch', 38)
('GAN loss 0.6199 ', 'GAN acc 0.9727', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.5215', 'Total loss: 1.3077', 'for batch', 39)
('GAN loss 0.6352 ', 'GAN acc 0.9844', 'Discriminator loss 0.6847', 'Discriminator accuracy 0.5293', 'Total loss: 1.3198', 'for batch', 40)
('GAN loss 0.5988 ', 'GAN acc 0.9766', 'Discriminator loss 0.4969', 'Discriminator accuracy 0.7812', 'Total loss: 1.0956', 'for batch', 41)
('GAN loss 0.6033 ', 'GAN acc 0.9805', 'Discriminator loss 0.7039', 'Discriminator accuracy 0.5039', 'Total loss: 1.3072', 'for batch', 42)
('GAN loss 0.5445 ', 'GAN acc 0.9922', 'Discriminator loss 0.5345', 'Discriminator accuracy 0.6719', 'Total loss: 1.0789', 'for batch', 43)
('GAN loss 0.5680 ', 'GAN acc 0.9805', 'Discriminator loss 0.6875', 'Discriminator accuracy 0.5391', 'Total loss: 1.2555', 'for batch', 44)
('GAN loss 0.5650 ', 'GAN acc 0.9961', 'Discriminator loss 0.5935', 'Discriminator accuracy 0.6406', 'Total loss: 1.1585', 'for batch', 45)
('GAN loss 0.6147 ', 'GAN acc 0.9805', 'Discriminator loss 0.5352', 'Discriminator accuracy 0.7207', 'Total loss: 1.1499', 'for batch', 46)
('GAN loss 0.6660 ', 'GAN acc 0.8398', 'Discriminator loss 0.6160', 'Discriminator accuracy 0.6504', 'Total loss: 1.2819', 'for batch', 47)
('GAN loss 0.5909 ', 'GAN acc 0.9844', 'Discriminator loss 0.5905', 'Discriminator accuracy 0.6543', 'Total loss: 1.1814', 'for batch', 48)
('GAN loss 0.6476 ', 'GAN acc 0.8789', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.5430', 'Total loss: 1.3287', 'for batch', 49)
('GAN loss 0.6968 ', 'GAN acc 0.5430', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5137', 'Total loss: 1.3786', 'for batch', 50)
('GAN loss 0.7105 ', 'GAN acc 0.3945', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.5586', 'Total loss: 1.3960', 'for batch', 51)
('GAN loss 0.7267 ', 'GAN acc 0.2734', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.5371', 'Total loss: 1.4128', 'for batch', 52)
('GAN loss 0.6907 ', 'GAN acc 0.6016', 'Discriminator loss 0.6463', 'Discriminator accuracy 0.5723', 'Total loss: 1.3370', 'for batch', 53)
('GAN loss 0.6807 ', 'GAN acc 0.9531', 'Discriminator loss 0.6455', 'Discriminator accuracy 0.5508', 'Total loss: 1.3262', 'for batch', 54)
('GAN loss 0.6329 ', 'GAN acc 0.9805', 'Discriminator loss 0.6222', 'Discriminator accuracy 0.6836', 'Total loss: 1.2550', 'for batch', 55)
('GAN loss 0.6435 ', 'GAN acc 0.9805', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.5117', 'Total loss: 1.3079', 'for batch', 56)
('GAN loss 0.6241 ', 'GAN acc 0.9883', 'Discriminator loss 0.6402', 'Discriminator accuracy 0.6113', 'Total loss: 1.2643', 'for batch', 57)
('GAN loss 0.6166 ', 'GAN acc 0.9805', 'Discriminator loss 0.5800', 'Discriminator accuracy 0.6602', 'Total loss: 1.1966', 'for batch', 58)
('GAN loss 0.5858 ', 'GAN acc 0.9922', 'Discriminator loss 0.4935', 'Discriminator accuracy 0.8145', 'Total loss: 1.0793', 'for batch', 59)
('GAN loss 0.5902 ', 'GAN acc 0.9883', 'Discriminator loss 0.6281', 'Discriminator accuracy 0.6699', 'Total loss: 1.2183', 'for batch', 60)
('GAN loss 0.5522 ', 'GAN acc 0.9883', 'Discriminator loss 0.5359', 'Discriminator accuracy 0.6250', 'Total loss: 1.0881', 'for batch', 61)
('GAN loss 0.5445 ', 'GAN acc 0.9844', 'Discriminator loss 0.5158', 'Discriminator accuracy 0.7637', 'Total loss: 1.0603', 'for batch', 62)
('GAN loss 0.5268 ', 'GAN acc 0.9883', 'Discriminator loss 0.5373', 'Discriminator accuracy 0.7520', 'Total loss: 1.0641', 'for batch', 63)
('GAN loss 0.4900 ', 'GAN acc 0.9922', 'Discriminator loss 0.4814', 'Discriminator accuracy 0.8535', 'Total loss: 0.9715', 'for batch', 64)
('GAN loss 0.4847 ', 'GAN acc 0.9922', 'Discriminator loss 0.5603', 'Discriminator accuracy 0.7266', 'Total loss: 1.0450', 'for batch', 65)
('GAN loss 0.4689 ', 'GAN acc 0.9922', 'Discriminator loss 0.5742', 'Discriminator accuracy 0.6660', 'Total loss: 1.0431', 'for batch', 66)
('GAN loss 0.4749 ', 'GAN acc 0.9414', 'Discriminator loss 0.3463', 'Discriminator accuracy 0.9238', 'Total loss: 0.8211', 'for batch', 67)
('GAN loss 0.4617 ', 'GAN acc 0.9844', 'Discriminator loss 0.6613', 'Discriminator accuracy 0.5840', 'Total loss: 1.1230', 'for batch', 68)
('GAN loss 0.4609 ', 'GAN acc 0.9883', 'Discriminator loss 0.6436', 'Discriminator accuracy 0.5938', 'Total loss: 1.1045', 'for batch', 69)
('GAN loss 0.4821 ', 'GAN acc 0.9922', 'Discriminator loss 0.6456', 'Discriminator accuracy 0.6211', 'Total loss: 1.1277', 'for batch', 70)
('GAN loss 0.4922 ', 'GAN acc 0.9805', 'Discriminator loss 0.5803', 'Discriminator accuracy 0.6523', 'Total loss: 1.0725', 'for batch', 71)
('GAN loss 0.4996 ', 'GAN acc 0.9844', 'Discriminator loss 0.6821', 'Discriminator accuracy 0.5820', 'Total loss: 1.1816', 'for batch', 72)
('GAN loss 0.4857 ', 'GAN acc 0.9922', 'Discriminator loss 0.4935', 'Discriminator accuracy 0.7871', 'Total loss: 0.9793', 'for batch', 73)
('GAN loss 0.4885 ', 'GAN acc 0.9922', 'Discriminator loss 0.5961', 'Discriminator accuracy 0.6445', 'Total loss: 1.0846', 'for batch', 74)
('GAN loss 0.4971 ', 'GAN acc 0.9883', 'Discriminator loss 0.6378', 'Discriminator accuracy 0.5957', 'Total loss: 1.1349', 'for batch', 75)
('GAN loss 0.4998 ', 'GAN acc 0.9922', 'Discriminator loss 0.5324', 'Discriminator accuracy 0.6973', 'Total loss: 1.0322', 'for batch', 76)
('GAN loss 0.5246 ', 'GAN acc 0.9883', 'Discriminator loss 0.6099', 'Discriminator accuracy 0.6367', 'Total loss: 1.1345', 'for batch', 77)
('GAN loss 0.5278 ', 'GAN acc 0.9883', 'Discriminator loss 0.6190', 'Discriminator accuracy 0.6348', 'Total loss: 1.1468', 'for batch', 78)
('GAN loss 0.5588 ', 'GAN acc 0.9922', 'Discriminator loss 0.6116', 'Discriminator accuracy 0.6445', 'Total loss: 1.1705', 'for batch', 79)
('GAN loss 0.5222 ', 'GAN acc 0.9922', 'Discriminator loss 0.6220', 'Discriminator accuracy 0.5469', 'Total loss: 1.1442', 'for batch', 80)
('GAN loss 0.5174 ', 'GAN acc 0.9922', 'Discriminator loss 0.5551', 'Discriminator accuracy 0.7051', 'Total loss: 1.0724', 'for batch', 81)
('GAN loss 0.5214 ', 'GAN acc 0.9883', 'Discriminator loss 0.5951', 'Discriminator accuracy 0.6328', 'Total loss: 1.1166', 'for batch', 82)
('GAN loss 0.5265 ', 'GAN acc 0.9922', 'Discriminator loss 0.5520', 'Discriminator accuracy 0.7578', 'Total loss: 1.0786', 'for batch', 83)
('GAN loss 0.5267 ', 'GAN acc 0.9922', 'Discriminator loss 0.5300', 'Discriminator accuracy 0.7305', 'Total loss: 1.0567', 'for batch', 84)
('GAN loss 0.5043 ', 'GAN acc 0.9844', 'Discriminator loss 0.5517', 'Discriminator accuracy 0.7012', 'Total loss: 1.0560', 'for batch', 85)
('GAN loss 0.4821 ', 'GAN acc 0.9883', 'Discriminator loss 0.5423', 'Discriminator accuracy 0.6953', 'Total loss: 1.0244', 'for batch', 86)
('GAN loss 0.4822 ', 'GAN acc 0.9883', 'Discriminator loss 0.5306', 'Discriminator accuracy 0.7207', 'Total loss: 1.0129', 'for batch', 87)
('GAN loss 0.6600 ', 'GAN acc 0.8008', 'Discriminator loss 0.5048', 'Discriminator accuracy 0.7500', 'Total loss: 1.1648', 'for batch', 88)
('GAN loss 0.7357 ', 'GAN acc 0.4766', 'Discriminator loss 0.6725', 'Discriminator accuracy 0.5254', 'Total loss: 1.4082', 'for batch', 89)
('GAN loss 0.8387 ', 'GAN acc 0.0234', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.5742', 'Total loss: 1.4993', 'for batch', 90)
('GAN loss 0.9179 ', 'GAN acc 0.0078', 'Discriminator loss 0.6520', 'Discriminator accuracy 0.7285', 'Total loss: 1.5698', 'for batch', 91)
('GAN loss 0.9361 ', 'GAN acc 0.0117', 'Discriminator loss 0.6494', 'Discriminator accuracy 0.6113', 'Total loss: 1.5855', 'for batch', 92)
('GAN loss 0.8612 ', 'GAN acc 0.0195', 'Discriminator loss 0.6622', 'Discriminator accuracy 0.5215', 'Total loss: 1.5234', 'for batch', 93)
('GAN loss 0.8020 ', 'GAN acc 0.0898', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5859', 'Total loss: 1.4677', 'for batch', 94)
('GAN loss 0.7690 ', 'GAN acc 0.1602', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.6504', 'Total loss: 1.4339', 'for batch', 95)
('GAN loss 0.7607 ', 'GAN acc 0.1328', 'Discriminator loss 0.6712', 'Discriminator accuracy 0.5762', 'Total loss: 1.4319', 'for batch', 96)
('GAN loss 0.7619 ', 'GAN acc 0.2461', 'Discriminator loss 0.6763', 'Discriminator accuracy 0.5879', 'Total loss: 1.4382', 'for batch', 97)
('GAN loss 0.7696 ', 'GAN acc 0.1211', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.5957', 'Total loss: 1.4342', 'for batch', 98)
('GAN loss 0.7460 ', 'GAN acc 0.2344', 'Discriminator loss 0.6904', 'Discriminator accuracy 0.4922', 'Total loss: 1.4364', 'for batch', 99)
('GAN loss 0.7417 ', 'GAN acc 0.2930', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.5078', 'Total loss: 1.4226', 'for batch', 100)
('GAN loss 0.6913 ', 'GAN acc 0.6133', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5273', 'Total loss: 1.3675', 'for batch', 101)
('GAN loss 0.7474 ', 'GAN acc 0.6484', 'Discriminator loss 0.6742', 'Discriminator accuracy 0.5254', 'Total loss: 1.4216', 'for batch', 102)
('GAN loss 0.6901 ', 'GAN acc 0.5859', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5234', 'Total loss: 1.3692', 'for batch', 103)
('GAN loss 0.7075 ', 'GAN acc 0.4766', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.5410', 'Total loss: 1.3725', 'for batch', 104)
('GAN loss 0.7531 ', 'GAN acc 0.4375', 'Discriminator loss 0.6602', 'Discriminator accuracy 0.6113', 'Total loss: 1.4133', 'for batch', 105)
('GAN loss 0.7460 ', 'GAN acc 0.4141', 'Discriminator loss 0.6589', 'Discriminator accuracy 0.6543', 'Total loss: 1.4049', 'for batch', 106)
('GAN loss 0.7325 ', 'GAN acc 0.5000', 'Discriminator loss 0.6531', 'Discriminator accuracy 0.6641', 'Total loss: 1.3856', 'for batch', 107)
('GAN loss 0.6875 ', 'GAN acc 0.7422', 'Discriminator loss 0.6434', 'Discriminator accuracy 0.5898', 'Total loss: 1.3309', 'for batch', 108)
('GAN loss 0.6620 ', 'GAN acc 0.8281', 'Discriminator loss 0.6275', 'Discriminator accuracy 0.6621', 'Total loss: 1.2896', 'for batch', 109)
('GAN loss 0.6056 ', 'GAN acc 0.9844', 'Discriminator loss 0.5936', 'Discriminator accuracy 0.5488', 'Total loss: 1.1992', 'for batch', 110)
('GAN loss 0.5401 ', 'GAN acc 0.9805', 'Discriminator loss 0.7003', 'Discriminator accuracy 0.5078', 'Total loss: 1.2404', 'for batch', 111)
('GAN loss 0.5379 ', 'GAN acc 0.9922', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5508', 'Total loss: 1.2221', 'for batch', 112)
('GAN loss 0.5914 ', 'GAN acc 0.9844', 'Discriminator loss 0.6979', 'Discriminator accuracy 0.5137', 'Total loss: 1.2893', 'for batch', 113)
('GAN loss 0.6239 ', 'GAN acc 0.9102', 'Discriminator loss 0.6447', 'Discriminator accuracy 0.6309', 'Total loss: 1.2686', 'for batch', 114)
('GAN loss 0.7348 ', 'GAN acc 0.5742', 'Discriminator loss 0.6384', 'Discriminator accuracy 0.6152', 'Total loss: 1.3731', 'for batch', 115)
('GAN loss 0.5086 ', 'GAN acc 0.9922', 'Discriminator loss 0.6276', 'Discriminator accuracy 0.5098', 'Total loss: 1.1362', 'for batch', 116)
('GAN loss 0.4967 ', 'GAN acc 0.9844', 'Discriminator loss 0.6007', 'Discriminator accuracy 0.6465', 'Total loss: 1.0974', 'for batch', 117)
('GAN loss 0.4994 ', 'GAN acc 0.9961', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5508', 'Total loss: 1.1703', 'for batch', 118)
('GAN loss 0.5533 ', 'GAN acc 0.9883', 'Discriminator loss 0.5573', 'Discriminator accuracy 0.7441', 'Total loss: 1.1106', 'for batch', 119)
('GAN loss 0.5569 ', 'GAN acc 0.9844', 'Discriminator loss 0.5861', 'Discriminator accuracy 0.6738', 'Total loss: 1.1430', 'for batch', 120)
('GAN loss 0.4327 ', 'GAN acc 1.0000', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5625', 'Total loss: 1.1118', 'for batch', 121)
('GAN loss 0.4683 ', 'GAN acc 1.0000', 'Discriminator loss 0.6830', 'Discriminator accuracy 0.5605', 'Total loss: 1.1513', 'for batch', 122)
('GAN loss 0.5164 ', 'GAN acc 1.0000', 'Discriminator loss 0.7289', 'Discriminator accuracy 0.5000', 'Total loss: 1.2453', 'for batch', 123)
('GAN loss 0.5669 ', 'GAN acc 0.9961', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.5625', 'Total loss: 1.2605', 'for batch', 124)
('GAN loss 0.5935 ', 'GAN acc 1.0000', 'Discriminator loss 0.6271', 'Discriminator accuracy 0.6582', 'Total loss: 1.2205', 'for batch', 125)
('GAN loss 0.6194 ', 'GAN acc 0.9453', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.5645', 'Total loss: 1.3092', 'for batch', 126)
('GAN loss 0.6280 ', 'GAN acc 0.9141', 'Discriminator loss 0.6269', 'Discriminator accuracy 0.5957', 'Total loss: 1.2549', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.50915998)
('DISCRIMINATOR_Imagem FAKE=', 0.44607285)
('Discriminator trained', 93, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.510339')
----------------------------------
('Epoch', 23, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6689 ', 'GAN acc 0.7773', 'Discriminator loss 0.6763', 'Discriminator accuracy 0.5176', 'Total loss: 1.3451', 'for batch', 0)
('GAN loss 0.6279 ', 'GAN acc 0.8867', 'Discriminator loss 0.5516', 'Discriminator accuracy 0.5430', 'Total loss: 1.1796', 'for batch', 1)
('GAN loss 0.6274 ', 'GAN acc 0.9102', 'Discriminator loss 0.6429', 'Discriminator accuracy 0.6953', 'Total loss: 1.2703', 'for batch', 2)
('GAN loss 0.6122 ', 'GAN acc 0.9414', 'Discriminator loss 0.6105', 'Discriminator accuracy 0.6309', 'Total loss: 1.2227', 'for batch', 3)
('GAN loss 0.6012 ', 'GAN acc 0.9375', 'Discriminator loss 0.6392', 'Discriminator accuracy 0.5410', 'Total loss: 1.2404', 'for batch', 4)
('GAN loss 0.5623 ', 'GAN acc 0.9961', 'Discriminator loss 0.5090', 'Discriminator accuracy 0.7539', 'Total loss: 1.0713', 'for batch', 5)
('GAN loss 0.5516 ', 'GAN acc 0.9844', 'Discriminator loss 0.5549', 'Discriminator accuracy 0.7480', 'Total loss: 1.1065', 'for batch', 6)
('GAN loss 0.5250 ', 'GAN acc 0.9883', 'Discriminator loss 0.5646', 'Discriminator accuracy 0.6953', 'Total loss: 1.0897', 'for batch', 7)
('GAN loss 0.4925 ', 'GAN acc 0.9922', 'Discriminator loss 0.5238', 'Discriminator accuracy 0.7520', 'Total loss: 1.0163', 'for batch', 8)
('GAN loss 0.4761 ', 'GAN acc 0.9883', 'Discriminator loss 0.5449', 'Discriminator accuracy 0.7441', 'Total loss: 1.0210', 'for batch', 9)
('GAN loss 0.4443 ', 'GAN acc 0.9883', 'Discriminator loss 0.4101', 'Discriminator accuracy 0.8652', 'Total loss: 0.8544', 'for batch', 10)
('GAN loss 0.4502 ', 'GAN acc 0.9922', 'Discriminator loss 0.6020', 'Discriminator accuracy 0.7012', 'Total loss: 1.0522', 'for batch', 11)
('GAN loss 0.4648 ', 'GAN acc 0.9883', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.5566', 'Total loss: 1.1607', 'for batch', 12)
('GAN loss 0.4665 ', 'GAN acc 0.9922', 'Discriminator loss 0.6156', 'Discriminator accuracy 0.6328', 'Total loss: 1.0820', 'for batch', 13)
('GAN loss 0.4872 ', 'GAN acc 0.9922', 'Discriminator loss 0.5904', 'Discriminator accuracy 0.6660', 'Total loss: 1.0776', 'for batch', 14)
('GAN loss 0.4990 ', 'GAN acc 0.9844', 'Discriminator loss 0.5162', 'Discriminator accuracy 0.7422', 'Total loss: 1.0152', 'for batch', 15)
('GAN loss 0.4594 ', 'GAN acc 0.9922', 'Discriminator loss 0.3926', 'Discriminator accuracy 0.8691', 'Total loss: 0.8521', 'for batch', 16)
('GAN loss 0.4326 ', 'GAN acc 0.9961', 'Discriminator loss 0.4844', 'Discriminator accuracy 0.7793', 'Total loss: 0.9170', 'for batch', 17)
('GAN loss 0.4503 ', 'GAN acc 0.9844', 'Discriminator loss 0.5805', 'Discriminator accuracy 0.6953', 'Total loss: 1.0307', 'for batch', 18)
('GAN loss 0.4622 ', 'GAN acc 0.9883', 'Discriminator loss 0.6226', 'Discriminator accuracy 0.6484', 'Total loss: 1.0847', 'for batch', 19)
('GAN loss 0.4255 ', 'GAN acc 0.9883', 'Discriminator loss 0.4226', 'Discriminator accuracy 0.8184', 'Total loss: 0.8481', 'for batch', 20)
('GAN loss 0.4572 ', 'GAN acc 0.9883', 'Discriminator loss 0.7088', 'Discriminator accuracy 0.5449', 'Total loss: 1.1660', 'for batch', 21)
('GAN loss 0.4507 ', 'GAN acc 0.9961', 'Discriminator loss 0.4795', 'Discriminator accuracy 0.7734', 'Total loss: 0.9302', 'for batch', 22)
('GAN loss 0.4775 ', 'GAN acc 0.9922', 'Discriminator loss 0.5706', 'Discriminator accuracy 0.6582', 'Total loss: 1.0481', 'for batch', 23)
('GAN loss 0.4740 ', 'GAN acc 0.9883', 'Discriminator loss 0.4130', 'Discriminator accuracy 0.8516', 'Total loss: 0.8870', 'for batch', 24)
('GAN loss 0.8457 ', 'GAN acc 0.4375', 'Discriminator loss 0.4240', 'Discriminator accuracy 0.8457', 'Total loss: 1.2697', 'for batch', 25)
('GAN loss 0.5471 ', 'GAN acc 0.9805', 'Discriminator loss 0.7046', 'Discriminator accuracy 0.5156', 'Total loss: 1.2517', 'for batch', 26)
('GAN loss 0.6731 ', 'GAN acc 0.9648', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5254', 'Total loss: 1.3504', 'for batch', 27)
('GAN loss 0.8337 ', 'GAN acc 0.9453', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.5293', 'Total loss: 1.4957', 'for batch', 28)
('GAN loss 0.7119 ', 'GAN acc 0.9414', 'Discriminator loss 0.6576', 'Discriminator accuracy 0.5234', 'Total loss: 1.3695', 'for batch', 29)
('GAN loss 0.7608 ', 'GAN acc 0.8867', 'Discriminator loss 0.6486', 'Discriminator accuracy 0.5312', 'Total loss: 1.4094', 'for batch', 30)
('GAN loss 0.7103 ', 'GAN acc 0.9102', 'Discriminator loss 0.6430', 'Discriminator accuracy 0.5332', 'Total loss: 1.3533', 'for batch', 31)
('GAN loss 0.7025 ', 'GAN acc 0.8828', 'Discriminator loss 0.6463', 'Discriminator accuracy 0.5352', 'Total loss: 1.3488', 'for batch', 32)
('GAN loss 0.7130 ', 'GAN acc 0.7969', 'Discriminator loss 0.6388', 'Discriminator accuracy 0.5254', 'Total loss: 1.3518', 'for batch', 33)
('GAN loss 0.7148 ', 'GAN acc 0.9023', 'Discriminator loss 0.6582', 'Discriminator accuracy 0.5293', 'Total loss: 1.3730', 'for batch', 34)
('GAN loss 0.7421 ', 'GAN acc 0.6992', 'Discriminator loss 0.6563', 'Discriminator accuracy 0.5293', 'Total loss: 1.3985', 'for batch', 35)
('GAN loss 0.7314 ', 'GAN acc 0.7266', 'Discriminator loss 0.6799', 'Discriminator accuracy 0.5352', 'Total loss: 1.4113', 'for batch', 36)
('GAN loss 0.7560 ', 'GAN acc 0.7422', 'Discriminator loss 0.7048', 'Discriminator accuracy 0.5098', 'Total loss: 1.4608', 'for batch', 37)
('GAN loss 0.8666 ', 'GAN acc 0.0820', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.4844', 'Total loss: 1.5430', 'for batch', 38)
('GAN loss 0.9234 ', 'GAN acc 0.2539', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5469', 'Total loss: 1.5860', 'for batch', 39)
('GAN loss 0.8481 ', 'GAN acc 0.1562', 'Discriminator loss 0.6548', 'Discriminator accuracy 0.6699', 'Total loss: 1.5030', 'for batch', 40)
('GAN loss 0.8369 ', 'GAN acc 0.1797', 'Discriminator loss 0.6505', 'Discriminator accuracy 0.5996', 'Total loss: 1.4874', 'for batch', 41)
('GAN loss 0.8373 ', 'GAN acc 0.1719', 'Discriminator loss 0.6491', 'Discriminator accuracy 0.6504', 'Total loss: 1.4864', 'for batch', 42)
('GAN loss 0.8666 ', 'GAN acc 0.1133', 'Discriminator loss 0.6298', 'Discriminator accuracy 0.7207', 'Total loss: 1.4964', 'for batch', 43)
('GAN loss 0.9150 ', 'GAN acc 0.1367', 'Discriminator loss 0.6448', 'Discriminator accuracy 0.7207', 'Total loss: 1.5598', 'for batch', 44)
('GAN loss 0.8055 ', 'GAN acc 0.2734', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.6113', 'Total loss: 1.4607', 'for batch', 45)
('GAN loss 0.7689 ', 'GAN acc 0.7461', 'Discriminator loss 0.6728', 'Discriminator accuracy 0.5098', 'Total loss: 1.4417', 'for batch', 46)
('GAN loss 0.7551 ', 'GAN acc 0.6719', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.4805', 'Total loss: 1.4363', 'for batch', 47)
('GAN loss 0.7925 ', 'GAN acc 0.3789', 'Discriminator loss 0.6720', 'Discriminator accuracy 0.5195', 'Total loss: 1.4646', 'for batch', 48)
('GAN loss 0.7941 ', 'GAN acc 0.3906', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5332', 'Total loss: 1.4668', 'for batch', 49)
('GAN loss 0.7963 ', 'GAN acc 0.3477', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5625', 'Total loss: 1.4669', 'for batch', 50)
('GAN loss 0.7883 ', 'GAN acc 0.4414', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5488', 'Total loss: 1.4561', 'for batch', 51)
('GAN loss 0.7763 ', 'GAN acc 0.4961', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.5137', 'Total loss: 1.4600', 'for batch', 52)
('GAN loss 0.7591 ', 'GAN acc 0.4922', 'Discriminator loss 0.6831', 'Discriminator accuracy 0.5078', 'Total loss: 1.4422', 'for batch', 53)
('GAN loss 0.7866 ', 'GAN acc 0.5898', 'Discriminator loss 0.6890', 'Discriminator accuracy 0.4980', 'Total loss: 1.4755', 'for batch', 54)
('GAN loss 0.9853 ', 'GAN acc 0.0781', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5312', 'Total loss: 1.6504', 'for batch', 55)
('GAN loss 0.7597 ', 'GAN acc 0.7539', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.4902', 'Total loss: 1.4446', 'for batch', 56)
('GAN loss 0.7871 ', 'GAN acc 0.5898', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5293', 'Total loss: 1.4595', 'for batch', 57)
('GAN loss 0.7917 ', 'GAN acc 0.4375', 'Discriminator loss 0.6664', 'Discriminator accuracy 0.5566', 'Total loss: 1.4581', 'for batch', 58)
('GAN loss 0.7578 ', 'GAN acc 0.4922', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5898', 'Total loss: 1.4218', 'for batch', 59)
('GAN loss 0.7565 ', 'GAN acc 0.5352', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5547', 'Total loss: 1.4243', 'for batch', 60)
('GAN loss 0.7557 ', 'GAN acc 0.3789', 'Discriminator loss 0.6734', 'Discriminator accuracy 0.5410', 'Total loss: 1.4291', 'for batch', 61)
('GAN loss 0.7428 ', 'GAN acc 0.5742', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5371', 'Total loss: 1.4140', 'for batch', 62)
('GAN loss 0.7596 ', 'GAN acc 0.3672', 'Discriminator loss 0.6674', 'Discriminator accuracy 0.5566', 'Total loss: 1.4270', 'for batch', 63)
('GAN loss 0.7842 ', 'GAN acc 0.2969', 'Discriminator loss 0.6815', 'Discriminator accuracy 0.5000', 'Total loss: 1.4657', 'for batch', 64)
('GAN loss 0.8070 ', 'GAN acc 0.1172', 'Discriminator loss 0.6658', 'Discriminator accuracy 0.5703', 'Total loss: 1.4728', 'for batch', 65)
('GAN loss 0.8395 ', 'GAN acc 0.1055', 'Discriminator loss 0.6630', 'Discriminator accuracy 0.6211', 'Total loss: 1.5025', 'for batch', 66)
('GAN loss 0.8906 ', 'GAN acc 0.1094', 'Discriminator loss 0.6638', 'Discriminator accuracy 0.5898', 'Total loss: 1.5545', 'for batch', 67)
('GAN loss 0.8532 ', 'GAN acc 0.1562', 'Discriminator loss 0.6556', 'Discriminator accuracy 0.5703', 'Total loss: 1.5088', 'for batch', 68)
('GAN loss 0.7296 ', 'GAN acc 0.7578', 'Discriminator loss 0.6714', 'Discriminator accuracy 0.5117', 'Total loss: 1.4010', 'for batch', 69)
('GAN loss 0.7540 ', 'GAN acc 0.5820', 'Discriminator loss 0.6637', 'Discriminator accuracy 0.5117', 'Total loss: 1.4177', 'for batch', 70)
('GAN loss 0.7683 ', 'GAN acc 0.5586', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.5312', 'Total loss: 1.4282', 'for batch', 71)
('GAN loss 0.7628 ', 'GAN acc 0.3711', 'Discriminator loss 0.6627', 'Discriminator accuracy 0.5742', 'Total loss: 1.4255', 'for batch', 72)
('GAN loss 0.7688 ', 'GAN acc 0.2461', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5547', 'Total loss: 1.4361', 'for batch', 73)
('GAN loss 0.7675 ', 'GAN acc 0.3555', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.4922', 'Total loss: 1.4474', 'for batch', 74)
('GAN loss 0.7540 ', 'GAN acc 0.6328', 'Discriminator loss 0.6826', 'Discriminator accuracy 0.4941', 'Total loss: 1.4366', 'for batch', 75)
('GAN loss 0.7538 ', 'GAN acc 0.6211', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5273', 'Total loss: 1.4339', 'for batch', 76)
('GAN loss 0.7677 ', 'GAN acc 0.5234', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.5430', 'Total loss: 1.4427', 'for batch', 77)
('GAN loss 0.7916 ', 'GAN acc 0.4609', 'Discriminator loss 0.6765', 'Discriminator accuracy 0.5527', 'Total loss: 1.4681', 'for batch', 78)
('GAN loss 0.8675 ', 'GAN acc 0.1250', 'Discriminator loss 0.6382', 'Discriminator accuracy 0.5977', 'Total loss: 1.5057', 'for batch', 79)
('GAN loss 0.6760 ', 'GAN acc 0.9570', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.5957', 'Total loss: 1.3289', 'for batch', 80)
('GAN loss 0.6718 ', 'GAN acc 0.9258', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5176', 'Total loss: 1.3532', 'for batch', 81)
('GAN loss 0.6651 ', 'GAN acc 0.8906', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.5273', 'Total loss: 1.3352', 'for batch', 82)
('GAN loss 0.6903 ', 'GAN acc 0.8867', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5215', 'Total loss: 1.3576', 'for batch', 83)
('GAN loss 0.6959 ', 'GAN acc 0.7617', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.5371', 'Total loss: 1.3537', 'for batch', 84)
('GAN loss 0.7113 ', 'GAN acc 0.8516', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5195', 'Total loss: 1.3765', 'for batch', 85)
('GAN loss 0.7025 ', 'GAN acc 0.7656', 'Discriminator loss 0.6635', 'Discriminator accuracy 0.5391', 'Total loss: 1.3659', 'for batch', 86)
('GAN loss 0.7178 ', 'GAN acc 0.6680', 'Discriminator loss 0.6682', 'Discriminator accuracy 0.5176', 'Total loss: 1.3859', 'for batch', 87)
('GAN loss 0.7358 ', 'GAN acc 0.5977', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5371', 'Total loss: 1.4067', 'for batch', 88)
('GAN loss 0.7519 ', 'GAN acc 0.4609', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5840', 'Total loss: 1.4171', 'for batch', 89)
('GAN loss 0.7499 ', 'GAN acc 0.3359', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5996', 'Total loss: 1.4172', 'for batch', 90)
('GAN loss 0.7448 ', 'GAN acc 0.3750', 'Discriminator loss 0.6353', 'Discriminator accuracy 0.5684', 'Total loss: 1.3802', 'for batch', 91)
('GAN loss 0.7169 ', 'GAN acc 0.8906', 'Discriminator loss 0.6556', 'Discriminator accuracy 0.5273', 'Total loss: 1.3725', 'for batch', 92)
('GAN loss 0.7015 ', 'GAN acc 0.8945', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5449', 'Total loss: 1.3798', 'for batch', 93)
('GAN loss 0.7316 ', 'GAN acc 0.7773', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5762', 'Total loss: 1.3968', 'for batch', 94)
('GAN loss 0.7561 ', 'GAN acc 0.6523', 'Discriminator loss 0.6699', 'Discriminator accuracy 0.5664', 'Total loss: 1.4259', 'for batch', 95)
('GAN loss 0.7574 ', 'GAN acc 0.5312', 'Discriminator loss 0.6593', 'Discriminator accuracy 0.6289', 'Total loss: 1.4166', 'for batch', 96)
('GAN loss 0.7723 ', 'GAN acc 0.4570', 'Discriminator loss 0.6296', 'Discriminator accuracy 0.5879', 'Total loss: 1.4019', 'for batch', 97)
('GAN loss 0.6894 ', 'GAN acc 0.9102', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5195', 'Total loss: 1.3672', 'for batch', 98)
('GAN loss 0.7400 ', 'GAN acc 0.8438', 'Discriminator loss 0.6522', 'Discriminator accuracy 0.6387', 'Total loss: 1.3923', 'for batch', 99)
('GAN loss 0.7075 ', 'GAN acc 0.8125', 'Discriminator loss 0.6670', 'Discriminator accuracy 0.5430', 'Total loss: 1.3746', 'for batch', 100)
('GAN loss 0.7003 ', 'GAN acc 0.8789', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5801', 'Total loss: 1.3597', 'for batch', 101)
('GAN loss 0.7366 ', 'GAN acc 0.8281', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.5977', 'Total loss: 1.4016', 'for batch', 102)
('GAN loss 0.6575 ', 'GAN acc 0.8789', 'Discriminator loss 0.6776', 'Discriminator accuracy 0.5293', 'Total loss: 1.3352', 'for batch', 103)
('GAN loss 0.6852 ', 'GAN acc 0.8789', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.4902', 'Total loss: 1.3747', 'for batch', 104)
('GAN loss 0.6777 ', 'GAN acc 0.8594', 'Discriminator loss 0.6343', 'Discriminator accuracy 0.5820', 'Total loss: 1.3120', 'for batch', 105)
('GAN loss 0.6781 ', 'GAN acc 0.9297', 'Discriminator loss 0.6710', 'Discriminator accuracy 0.5410', 'Total loss: 1.3491', 'for batch', 106)
('GAN loss 0.7031 ', 'GAN acc 0.6445', 'Discriminator loss 0.6405', 'Discriminator accuracy 0.6836', 'Total loss: 1.3436', 'for batch', 107)
('GAN loss 0.6587 ', 'GAN acc 0.9219', 'Discriminator loss 0.6461', 'Discriminator accuracy 0.6172', 'Total loss: 1.3048', 'for batch', 108)
('GAN loss 0.6271 ', 'GAN acc 0.9688', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.4922', 'Total loss: 1.3111', 'for batch', 109)
('GAN loss 0.6266 ', 'GAN acc 0.9531', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.5078', 'Total loss: 1.3160', 'for batch', 110)
('GAN loss 0.6537 ', 'GAN acc 0.9492', 'Discriminator loss 0.6962', 'Discriminator accuracy 0.4961', 'Total loss: 1.3499', 'for batch', 111)
('GAN loss 0.6880 ', 'GAN acc 0.8867', 'Discriminator loss 0.6844', 'Discriminator accuracy 0.5332', 'Total loss: 1.3725', 'for batch', 112)
('GAN loss 0.7300 ', 'GAN acc 0.6914', 'Discriminator loss 0.6806', 'Discriminator accuracy 0.5293', 'Total loss: 1.4106', 'for batch', 113)
('GAN loss 0.7827 ', 'GAN acc 0.3203', 'Discriminator loss 0.6551', 'Discriminator accuracy 0.6133', 'Total loss: 1.4379', 'for batch', 114)
('GAN loss 0.7309 ', 'GAN acc 0.8008', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5371', 'Total loss: 1.3935', 'for batch', 115)
('GAN loss 0.6741 ', 'GAN acc 0.9453', 'Discriminator loss 0.6877', 'Discriminator accuracy 0.4824', 'Total loss: 1.3618', 'for batch', 116)
('GAN loss 0.6634 ', 'GAN acc 0.9805', 'Discriminator loss 0.6228', 'Discriminator accuracy 0.6797', 'Total loss: 1.2862', 'for batch', 117)
('GAN loss 0.6824 ', 'GAN acc 0.9414', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5098', 'Total loss: 1.3606', 'for batch', 118)
('GAN loss 0.6755 ', 'GAN acc 0.9141', 'Discriminator loss 0.6548', 'Discriminator accuracy 0.5527', 'Total loss: 1.3303', 'for batch', 119)
('GAN loss 0.7117 ', 'GAN acc 0.8477', 'Discriminator loss 0.6366', 'Discriminator accuracy 0.5996', 'Total loss: 1.3482', 'for batch', 120)
('GAN loss 0.6959 ', 'GAN acc 0.7539', 'Discriminator loss 0.6451', 'Discriminator accuracy 0.6191', 'Total loss: 1.3411', 'for batch', 121)
('GAN loss 0.7365 ', 'GAN acc 0.4805', 'Discriminator loss 0.6060', 'Discriminator accuracy 0.6094', 'Total loss: 1.3425', 'for batch', 122)
('GAN loss 0.6935 ', 'GAN acc 0.9414', 'Discriminator loss 0.6601', 'Discriminator accuracy 0.5703', 'Total loss: 1.3536', 'for batch', 123)
('GAN loss 0.7139 ', 'GAN acc 0.9297', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.5371', 'Total loss: 1.3806', 'for batch', 124)
('GAN loss 0.6937 ', 'GAN acc 0.7578', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5312', 'Total loss: 1.3594', 'for batch', 125)
('GAN loss 0.7185 ', 'GAN acc 0.5430', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.5488', 'Total loss: 1.3857', 'for batch', 126)
('GAN loss 0.7244 ', 'GAN acc 0.4727', 'Discriminator loss 0.6659', 'Discriminator accuracy 0.5781', 'Total loss: 1.3903', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54161114)
('DISCRIMINATOR_Imagem FAKE=', 0.50391221)
('Discriminator trained', 104, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.510706')
----------------------------------
('Epoch', 24, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7272 ', 'GAN acc 0.3750', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.6641', 'Total loss: 1.3913', 'for batch', 0)
('GAN loss 0.7579 ', 'GAN acc 0.2969', 'Discriminator loss 0.6603', 'Discriminator accuracy 0.6543', 'Total loss: 1.4182', 'for batch', 1)
('GAN loss 0.7843 ', 'GAN acc 0.4023', 'Discriminator loss 0.6572', 'Discriminator accuracy 0.6465', 'Total loss: 1.4415', 'for batch', 2)
('GAN loss 0.8165 ', 'GAN acc 0.3594', 'Discriminator loss 0.6429', 'Discriminator accuracy 0.6035', 'Total loss: 1.4594', 'for batch', 3)
('GAN loss 0.7323 ', 'GAN acc 0.8164', 'Discriminator loss 0.6695', 'Discriminator accuracy 0.5645', 'Total loss: 1.4018', 'for batch', 4)
('GAN loss 0.7196 ', 'GAN acc 0.6992', 'Discriminator loss 0.6421', 'Discriminator accuracy 0.5566', 'Total loss: 1.3616', 'for batch', 5)
('GAN loss 0.7317 ', 'GAN acc 0.7617', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5312', 'Total loss: 1.4064', 'for batch', 6)
('GAN loss 0.7300 ', 'GAN acc 0.7227', 'Discriminator loss 0.6834', 'Discriminator accuracy 0.5020', 'Total loss: 1.4134', 'for batch', 7)
('GAN loss 0.7588 ', 'GAN acc 0.7617', 'Discriminator loss 0.6619', 'Discriminator accuracy 0.5762', 'Total loss: 1.4206', 'for batch', 8)
('GAN loss 0.7538 ', 'GAN acc 0.6367', 'Discriminator loss 0.6600', 'Discriminator accuracy 0.5957', 'Total loss: 1.4138', 'for batch', 9)
('GAN loss 0.7686 ', 'GAN acc 0.5430', 'Discriminator loss 0.6359', 'Discriminator accuracy 0.6484', 'Total loss: 1.4045', 'for batch', 10)
('GAN loss 0.7269 ', 'GAN acc 0.7773', 'Discriminator loss 0.6316', 'Discriminator accuracy 0.5918', 'Total loss: 1.3585', 'for batch', 11)
('GAN loss 0.6690 ', 'GAN acc 0.9609', 'Discriminator loss 0.7064', 'Discriminator accuracy 0.4941', 'Total loss: 1.3754', 'for batch', 12)
('GAN loss 0.6902 ', 'GAN acc 0.9219', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5078', 'Total loss: 1.3679', 'for batch', 13)
('GAN loss 0.7242 ', 'GAN acc 0.7227', 'Discriminator loss 0.6743', 'Discriminator accuracy 0.5352', 'Total loss: 1.3985', 'for batch', 14)
('GAN loss 0.7194 ', 'GAN acc 0.7461', 'Discriminator loss 0.6611', 'Discriminator accuracy 0.5879', 'Total loss: 1.3806', 'for batch', 15)
('GAN loss 0.7243 ', 'GAN acc 0.4258', 'Discriminator loss 0.6535', 'Discriminator accuracy 0.6562', 'Total loss: 1.3778', 'for batch', 16)
('GAN loss 0.7057 ', 'GAN acc 0.5469', 'Discriminator loss 0.6457', 'Discriminator accuracy 0.5820', 'Total loss: 1.3514', 'for batch', 17)
('GAN loss 0.7176 ', 'GAN acc 0.6445', 'Discriminator loss 0.6130', 'Discriminator accuracy 0.5801', 'Total loss: 1.3306', 'for batch', 18)
('GAN loss 0.6575 ', 'GAN acc 0.9688', 'Discriminator loss 0.6452', 'Discriminator accuracy 0.5566', 'Total loss: 1.3027', 'for batch', 19)
('GAN loss 0.6765 ', 'GAN acc 0.9531', 'Discriminator loss 0.6495', 'Discriminator accuracy 0.6172', 'Total loss: 1.3260', 'for batch', 20)
('GAN loss 0.6550 ', 'GAN acc 0.9336', 'Discriminator loss 0.6872', 'Discriminator accuracy 0.5156', 'Total loss: 1.3422', 'for batch', 21)
('GAN loss 0.6178 ', 'GAN acc 0.9805', 'Discriminator loss 0.6045', 'Discriminator accuracy 0.6289', 'Total loss: 1.2222', 'for batch', 22)
('GAN loss 0.6519 ', 'GAN acc 0.9570', 'Discriminator loss 0.6367', 'Discriminator accuracy 0.6836', 'Total loss: 1.2887', 'for batch', 23)
('GAN loss 0.6003 ', 'GAN acc 0.9727', 'Discriminator loss 0.5899', 'Discriminator accuracy 0.6348', 'Total loss: 1.1901', 'for batch', 24)
('GAN loss 0.6083 ', 'GAN acc 0.9688', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.5020', 'Total loss: 1.3031', 'for batch', 25)
('GAN loss 0.6339 ', 'GAN acc 0.9766', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5391', 'Total loss: 1.3140', 'for batch', 26)
('GAN loss 0.7063 ', 'GAN acc 0.8555', 'Discriminator loss 0.6272', 'Discriminator accuracy 0.6445', 'Total loss: 1.3335', 'for batch', 27)
('GAN loss 0.6429 ', 'GAN acc 0.9727', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5527', 'Total loss: 1.3195', 'for batch', 28)
('GAN loss 0.6269 ', 'GAN acc 0.9727', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.5625', 'Total loss: 1.2980', 'for batch', 29)
('GAN loss 0.6416 ', 'GAN acc 0.9453', 'Discriminator loss 0.6525', 'Discriminator accuracy 0.5840', 'Total loss: 1.2941', 'for batch', 30)
('GAN loss 0.6725 ', 'GAN acc 0.9258', 'Discriminator loss 0.6886', 'Discriminator accuracy 0.5137', 'Total loss: 1.3611', 'for batch', 31)
('GAN loss 0.6559 ', 'GAN acc 0.9609', 'Discriminator loss 0.6036', 'Discriminator accuracy 0.6465', 'Total loss: 1.2596', 'for batch', 32)
('GAN loss 0.6041 ', 'GAN acc 0.9844', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5820', 'Total loss: 1.2665', 'for batch', 33)
('GAN loss 0.6244 ', 'GAN acc 0.9609', 'Discriminator loss 0.6031', 'Discriminator accuracy 0.6934', 'Total loss: 1.2275', 'for batch', 34)
('GAN loss 0.5739 ', 'GAN acc 0.9883', 'Discriminator loss 0.6424', 'Discriminator accuracy 0.5605', 'Total loss: 1.2163', 'for batch', 35)
('GAN loss 0.5529 ', 'GAN acc 0.9883', 'Discriminator loss 0.6014', 'Discriminator accuracy 0.6836', 'Total loss: 1.1543', 'for batch', 36)
('GAN loss 0.5393 ', 'GAN acc 0.9844', 'Discriminator loss 0.5854', 'Discriminator accuracy 0.6387', 'Total loss: 1.1247', 'for batch', 37)
('GAN loss 0.5432 ', 'GAN acc 0.9805', 'Discriminator loss 0.6254', 'Discriminator accuracy 0.6016', 'Total loss: 1.1686', 'for batch', 38)
('GAN loss 0.5444 ', 'GAN acc 0.9805', 'Discriminator loss 0.5827', 'Discriminator accuracy 0.6504', 'Total loss: 1.1271', 'for batch', 39)
('GAN loss 0.5393 ', 'GAN acc 0.9844', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.4863', 'Total loss: 1.2162', 'for batch', 40)
('GAN loss 0.5595 ', 'GAN acc 0.9844', 'Discriminator loss 0.5664', 'Discriminator accuracy 0.6680', 'Total loss: 1.1259', 'for batch', 41)
('GAN loss 0.6048 ', 'GAN acc 0.9883', 'Discriminator loss 0.6110', 'Discriminator accuracy 0.6699', 'Total loss: 1.2158', 'for batch', 42)
('GAN loss 0.5654 ', 'GAN acc 0.9883', 'Discriminator loss 0.6775', 'Discriminator accuracy 0.5449', 'Total loss: 1.2429', 'for batch', 43)
('GAN loss 0.5740 ', 'GAN acc 0.9805', 'Discriminator loss 0.7032', 'Discriminator accuracy 0.5195', 'Total loss: 1.2773', 'for batch', 44)
('GAN loss 0.6418 ', 'GAN acc 0.9375', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5293', 'Total loss: 1.3253', 'for batch', 45)
('GAN loss 0.6821 ', 'GAN acc 0.9609', 'Discriminator loss 0.7066', 'Discriminator accuracy 0.5137', 'Total loss: 1.3887', 'for batch', 46)
('GAN loss 0.6988 ', 'GAN acc 0.5781', 'Discriminator loss 0.7143', 'Discriminator accuracy 0.5020', 'Total loss: 1.4131', 'for batch', 47)
('GAN loss 0.7212 ', 'GAN acc 0.7109', 'Discriminator loss 0.7137', 'Discriminator accuracy 0.5312', 'Total loss: 1.4349', 'for batch', 48)
('GAN loss 0.7199 ', 'GAN acc 0.5898', 'Discriminator loss 0.6937', 'Discriminator accuracy 0.4863', 'Total loss: 1.4136', 'for batch', 49)
('GAN loss 0.7438 ', 'GAN acc 0.3906', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.4863', 'Total loss: 1.4266', 'for batch', 50)
('GAN loss 0.7361 ', 'GAN acc 0.3945', 'Discriminator loss 0.6470', 'Discriminator accuracy 0.5840', 'Total loss: 1.3832', 'for batch', 51)
('GAN loss 0.7778 ', 'GAN acc 0.1484', 'Discriminator loss 0.6631', 'Discriminator accuracy 0.6582', 'Total loss: 1.4409', 'for batch', 52)
('GAN loss 0.8856 ', 'GAN acc 0.0586', 'Discriminator loss 0.5985', 'Discriminator accuracy 0.6367', 'Total loss: 1.4841', 'for batch', 53)
('GAN loss 0.7940 ', 'GAN acc 0.2109', 'Discriminator loss 0.5923', 'Discriminator accuracy 0.5312', 'Total loss: 1.3863', 'for batch', 54)
('GAN loss 0.7134 ', 'GAN acc 0.8906', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5723', 'Total loss: 1.3858', 'for batch', 55)
('GAN loss 0.6731 ', 'GAN acc 0.9141', 'Discriminator loss 0.6852', 'Discriminator accuracy 0.5195', 'Total loss: 1.3583', 'for batch', 56)
('GAN loss 0.6880 ', 'GAN acc 0.9219', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.5176', 'Total loss: 1.3688', 'for batch', 57)
('GAN loss 0.6852 ', 'GAN acc 0.9023', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5273', 'Total loss: 1.3694', 'for batch', 58)
('GAN loss 0.6808 ', 'GAN acc 0.8672', 'Discriminator loss 0.6702', 'Discriminator accuracy 0.5312', 'Total loss: 1.3510', 'for batch', 59)
('GAN loss 0.7307 ', 'GAN acc 0.8164', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.5059', 'Total loss: 1.4125', 'for batch', 60)
('GAN loss 0.7015 ', 'GAN acc 0.8594', 'Discriminator loss 0.6765', 'Discriminator accuracy 0.5273', 'Total loss: 1.3780', 'for batch', 61)
('GAN loss 0.7219 ', 'GAN acc 0.8594', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5176', 'Total loss: 1.4016', 'for batch', 62)
('GAN loss 0.7305 ', 'GAN acc 0.8281', 'Discriminator loss 0.6547', 'Discriminator accuracy 0.5430', 'Total loss: 1.3852', 'for batch', 63)
('GAN loss 0.6837 ', 'GAN acc 0.9102', 'Discriminator loss 0.6450', 'Discriminator accuracy 0.6055', 'Total loss: 1.3287', 'for batch', 64)
('GAN loss 0.7160 ', 'GAN acc 0.9375', 'Discriminator loss 0.6228', 'Discriminator accuracy 0.6992', 'Total loss: 1.3388', 'for batch', 65)
('GAN loss 0.7123 ', 'GAN acc 0.9141', 'Discriminator loss 0.6372', 'Discriminator accuracy 0.6289', 'Total loss: 1.3496', 'for batch', 66)
('GAN loss 0.6913 ', 'GAN acc 0.9688', 'Discriminator loss 0.6508', 'Discriminator accuracy 0.5410', 'Total loss: 1.3421', 'for batch', 67)
('GAN loss 0.6357 ', 'GAN acc 0.9805', 'Discriminator loss 0.5897', 'Discriminator accuracy 0.6191', 'Total loss: 1.2254', 'for batch', 68)
('GAN loss 0.6001 ', 'GAN acc 0.9883', 'Discriminator loss 0.6386', 'Discriminator accuracy 0.5859', 'Total loss: 1.2387', 'for batch', 69)
('GAN loss 0.6357 ', 'GAN acc 0.9844', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5156', 'Total loss: 1.3248', 'for batch', 70)
('GAN loss 0.6507 ', 'GAN acc 0.9805', 'Discriminator loss 0.5913', 'Discriminator accuracy 0.6777', 'Total loss: 1.2421', 'for batch', 71)
('GAN loss 0.6530 ', 'GAN acc 0.9766', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5488', 'Total loss: 1.3290', 'for batch', 72)
('GAN loss 0.5775 ', 'GAN acc 0.9883', 'Discriminator loss 0.5267', 'Discriminator accuracy 0.5762', 'Total loss: 1.1042', 'for batch', 73)
('GAN loss 0.5912 ', 'GAN acc 0.9922', 'Discriminator loss 0.6009', 'Discriminator accuracy 0.6660', 'Total loss: 1.1922', 'for batch', 74)
('GAN loss 0.5839 ', 'GAN acc 0.9844', 'Discriminator loss 0.6515', 'Discriminator accuracy 0.6074', 'Total loss: 1.2354', 'for batch', 75)
('GAN loss 0.5882 ', 'GAN acc 0.9883', 'Discriminator loss 0.5569', 'Discriminator accuracy 0.7188', 'Total loss: 1.1451', 'for batch', 76)
('GAN loss 0.5863 ', 'GAN acc 0.9805', 'Discriminator loss 0.4842', 'Discriminator accuracy 0.6914', 'Total loss: 1.0705', 'for batch', 77)
('GAN loss 0.5448 ', 'GAN acc 0.9883', 'Discriminator loss 0.6098', 'Discriminator accuracy 0.6211', 'Total loss: 1.1545', 'for batch', 78)
('GAN loss 0.5454 ', 'GAN acc 0.9883', 'Discriminator loss 0.5082', 'Discriminator accuracy 0.7910', 'Total loss: 1.0536', 'for batch', 79)
('GAN loss 0.5293 ', 'GAN acc 0.9844', 'Discriminator loss 0.5410', 'Discriminator accuracy 0.7363', 'Total loss: 1.0703', 'for batch', 80)
('GAN loss 0.5019 ', 'GAN acc 0.9883', 'Discriminator loss 0.5161', 'Discriminator accuracy 0.7148', 'Total loss: 1.0180', 'for batch', 81)
('GAN loss 0.5900 ', 'GAN acc 0.9766', 'Discriminator loss 0.6441', 'Discriminator accuracy 0.6074', 'Total loss: 1.2341', 'for batch', 82)
('GAN loss 0.5045 ', 'GAN acc 0.9844', 'Discriminator loss 0.7570', 'Discriminator accuracy 0.5137', 'Total loss: 1.2615', 'for batch', 83)
('GAN loss 0.5299 ', 'GAN acc 0.9883', 'Discriminator loss 0.5774', 'Discriminator accuracy 0.6387', 'Total loss: 1.1073', 'for batch', 84)
('GAN loss 0.5703 ', 'GAN acc 0.9883', 'Discriminator loss 0.7093', 'Discriminator accuracy 0.5195', 'Total loss: 1.2796', 'for batch', 85)
('GAN loss 0.5670 ', 'GAN acc 0.9922', 'Discriminator loss 0.5497', 'Discriminator accuracy 0.6973', 'Total loss: 1.1167', 'for batch', 86)
('GAN loss 0.5943 ', 'GAN acc 0.9844', 'Discriminator loss 0.5123', 'Discriminator accuracy 0.7207', 'Total loss: 1.1066', 'for batch', 87)
('GAN loss 0.5753 ', 'GAN acc 0.9883', 'Discriminator loss 0.5586', 'Discriminator accuracy 0.6914', 'Total loss: 1.1339', 'for batch', 88)
('GAN loss 0.5419 ', 'GAN acc 0.9922', 'Discriminator loss 0.4607', 'Discriminator accuracy 0.8281', 'Total loss: 1.0026', 'for batch', 89)
('GAN loss 0.5029 ', 'GAN acc 0.9922', 'Discriminator loss 0.3716', 'Discriminator accuracy 0.9043', 'Total loss: 0.8745', 'for batch', 90)
('GAN loss 0.4763 ', 'GAN acc 0.9922', 'Discriminator loss 0.4528', 'Discriminator accuracy 0.7812', 'Total loss: 0.9290', 'for batch', 91)
('GAN loss 0.4277 ', 'GAN acc 0.9922', 'Discriminator loss 0.3849', 'Discriminator accuracy 0.8926', 'Total loss: 0.8126', 'for batch', 92)
('GAN loss 0.4503 ', 'GAN acc 0.9844', 'Discriminator loss 0.3664', 'Discriminator accuracy 0.9023', 'Total loss: 0.8167', 'for batch', 93)
('GAN loss 0.4023 ', 'GAN acc 0.9961', 'Discriminator loss 0.3234', 'Discriminator accuracy 0.9414', 'Total loss: 0.7257', 'for batch', 94)
('GAN loss 0.4207 ', 'GAN acc 0.9883', 'Discriminator loss 0.3542', 'Discriminator accuracy 0.8711', 'Total loss: 0.7749', 'for batch', 95)
('GAN loss 0.3854 ', 'GAN acc 0.9883', 'Discriminator loss 0.3884', 'Discriminator accuracy 0.8594', 'Total loss: 0.7739', 'for batch', 96)
('GAN loss 0.3613 ', 'GAN acc 0.9883', 'Discriminator loss 0.4123', 'Discriminator accuracy 0.7422', 'Total loss: 0.7736', 'for batch', 97)
('GAN loss 0.3599 ', 'GAN acc 0.9844', 'Discriminator loss 0.5522', 'Discriminator accuracy 0.6973', 'Total loss: 0.9122', 'for batch', 98)
('GAN loss 0.4330 ', 'GAN acc 0.9805', 'Discriminator loss 0.3336', 'Discriminator accuracy 0.8379', 'Total loss: 0.7665', 'for batch', 99)
('GAN loss 0.3361 ', 'GAN acc 0.9961', 'Discriminator loss 0.3606', 'Discriminator accuracy 0.8496', 'Total loss: 0.6967', 'for batch', 100)
('GAN loss 0.3335 ', 'GAN acc 0.9883', 'Discriminator loss 0.4003', 'Discriminator accuracy 0.8340', 'Total loss: 0.7338', 'for batch', 101)
('GAN loss 0.3827 ', 'GAN acc 0.9805', 'Discriminator loss 0.3610', 'Discriminator accuracy 0.8125', 'Total loss: 0.7438', 'for batch', 102)
('GAN loss 0.3895 ', 'GAN acc 0.9883', 'Discriminator loss 0.4666', 'Discriminator accuracy 0.7695', 'Total loss: 0.8561', 'for batch', 103)
('GAN loss 0.3815 ', 'GAN acc 0.9844', 'Discriminator loss 0.7397', 'Discriminator accuracy 0.5996', 'Total loss: 1.1212', 'for batch', 104)
('GAN loss 0.4338 ', 'GAN acc 0.9844', 'Discriminator loss 0.6178', 'Discriminator accuracy 0.6504', 'Total loss: 1.0516', 'for batch', 105)
('GAN loss 0.4297 ', 'GAN acc 0.9883', 'Discriminator loss 0.5938', 'Discriminator accuracy 0.6484', 'Total loss: 1.0236', 'for batch', 106)
('GAN loss 0.4977 ', 'GAN acc 0.9805', 'Discriminator loss 0.5939', 'Discriminator accuracy 0.6582', 'Total loss: 1.0916', 'for batch', 107)
('GAN loss 0.4727 ', 'GAN acc 0.9922', 'Discriminator loss 0.4343', 'Discriminator accuracy 0.8086', 'Total loss: 0.9070', 'for batch', 108)
('GAN loss 0.4488 ', 'GAN acc 0.9922', 'Discriminator loss 0.4142', 'Discriminator accuracy 0.8301', 'Total loss: 0.8630', 'for batch', 109)
('GAN loss 0.4501 ', 'GAN acc 0.9766', 'Discriminator loss 0.4004', 'Discriminator accuracy 0.8242', 'Total loss: 0.8506', 'for batch', 110)
('GAN loss 0.4008 ', 'GAN acc 0.9805', 'Discriminator loss 0.4284', 'Discriminator accuracy 0.8125', 'Total loss: 0.8292', 'for batch', 111)
('GAN loss 0.4287 ', 'GAN acc 0.9883', 'Discriminator loss 0.3766', 'Discriminator accuracy 0.8496', 'Total loss: 0.8054', 'for batch', 112)
('GAN loss 0.3795 ', 'GAN acc 0.9883', 'Discriminator loss 0.5018', 'Discriminator accuracy 0.7559', 'Total loss: 0.8813', 'for batch', 113)
('GAN loss 0.3457 ', 'GAN acc 0.9961', 'Discriminator loss 0.4037', 'Discriminator accuracy 0.8125', 'Total loss: 0.7494', 'for batch', 114)
('GAN loss 0.3959 ', 'GAN acc 0.9844', 'Discriminator loss 0.6480', 'Discriminator accuracy 0.6348', 'Total loss: 1.0439', 'for batch', 115)
('GAN loss 0.4206 ', 'GAN acc 0.9922', 'Discriminator loss 0.7610', 'Discriminator accuracy 0.5254', 'Total loss: 1.1815', 'for batch', 116)
('GAN loss 0.4678 ', 'GAN acc 0.9883', 'Discriminator loss 0.5450', 'Discriminator accuracy 0.7051', 'Total loss: 1.0128', 'for batch', 117)
('GAN loss 0.5121 ', 'GAN acc 0.9922', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.5273', 'Total loss: 1.1986', 'for batch', 118)
('GAN loss 0.4507 ', 'GAN acc 0.9844', 'Discriminator loss 0.7659', 'Discriminator accuracy 0.5410', 'Total loss: 1.2166', 'for batch', 119)
('GAN loss 0.4808 ', 'GAN acc 0.9883', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5742', 'Total loss: 1.1728', 'for batch', 120)
('GAN loss 0.5181 ', 'GAN acc 0.9922', 'Discriminator loss 0.7146', 'Discriminator accuracy 0.5469', 'Total loss: 1.2327', 'for batch', 121)
('GAN loss 0.5358 ', 'GAN acc 0.9844', 'Discriminator loss 0.5864', 'Discriminator accuracy 0.6445', 'Total loss: 1.1222', 'for batch', 122)
('GAN loss 0.5216 ', 'GAN acc 0.9961', 'Discriminator loss 0.5566', 'Discriminator accuracy 0.6953', 'Total loss: 1.0782', 'for batch', 123)
('GAN loss 0.5381 ', 'GAN acc 0.9805', 'Discriminator loss 0.3307', 'Discriminator accuracy 0.9316', 'Total loss: 0.8688', 'for batch', 124)
('GAN loss 0.5108 ', 'GAN acc 0.9883', 'Discriminator loss 0.5731', 'Discriminator accuracy 0.6367', 'Total loss: 1.0839', 'for batch', 125)
('GAN loss 0.5096 ', 'GAN acc 0.9922', 'Discriminator loss 0.3787', 'Discriminator accuracy 0.9199', 'Total loss: 0.8884', 'for batch', 126)
('GAN loss 0.4749 ', 'GAN acc 0.9922', 'Discriminator loss 0.3165', 'Discriminator accuracy 0.9648', 'Total loss: 0.7914', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.59509373)
('DISCRIMINATOR_Imagem FAKE=', 0.16015095)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.473086')
----------------------------------
('Epoch', 25, 'of', 50)
('Number of batches', 128)
('GAN loss 0.4392 ', 'GAN acc 0.9883', 'Discriminator loss 0.3277', 'Discriminator accuracy 0.9395', 'Total loss: 0.7670', 'for batch', 0)
('GAN loss 0.3993 ', 'GAN acc 0.9922', 'Discriminator loss 0.4065', 'Discriminator accuracy 0.8301', 'Total loss: 0.8058', 'for batch', 1)
('GAN loss 0.3917 ', 'GAN acc 0.9883', 'Discriminator loss 0.3341', 'Discriminator accuracy 0.9297', 'Total loss: 0.7259', 'for batch', 2)
('GAN loss 0.3775 ', 'GAN acc 0.9922', 'Discriminator loss 0.5089', 'Discriminator accuracy 0.7246', 'Total loss: 0.8865', 'for batch', 3)
('GAN loss 0.3660 ', 'GAN acc 0.9922', 'Discriminator loss 0.4266', 'Discriminator accuracy 0.8164', 'Total loss: 0.7926', 'for batch', 4)
('GAN loss 0.3469 ', 'GAN acc 0.9961', 'Discriminator loss 0.4071', 'Discriminator accuracy 0.8496', 'Total loss: 0.7540', 'for batch', 5)
('GAN loss 0.3541 ', 'GAN acc 0.9883', 'Discriminator loss 0.4245', 'Discriminator accuracy 0.8496', 'Total loss: 0.7786', 'for batch', 6)
('GAN loss 0.3415 ', 'GAN acc 0.9922', 'Discriminator loss 0.3725', 'Discriminator accuracy 0.9199', 'Total loss: 0.7140', 'for batch', 7)
('GAN loss 0.3056 ', 'GAN acc 0.9883', 'Discriminator loss 0.3915', 'Discriminator accuracy 0.8027', 'Total loss: 0.6971', 'for batch', 8)
('GAN loss 0.3102 ', 'GAN acc 0.9883', 'Discriminator loss 0.4419', 'Discriminator accuracy 0.8047', 'Total loss: 0.7521', 'for batch', 9)
('GAN loss 0.3077 ', 'GAN acc 0.9883', 'Discriminator loss 0.2668', 'Discriminator accuracy 0.9316', 'Total loss: 0.5745', 'for batch', 10)
('GAN loss 0.3118 ', 'GAN acc 0.9883', 'Discriminator loss 0.3532', 'Discriminator accuracy 0.8574', 'Total loss: 0.6651', 'for batch', 11)
('GAN loss 0.3040 ', 'GAN acc 0.9883', 'Discriminator loss 0.5504', 'Discriminator accuracy 0.6992', 'Total loss: 0.8544', 'for batch', 12)
('GAN loss 0.2894 ', 'GAN acc 0.9883', 'Discriminator loss 0.4427', 'Discriminator accuracy 0.7852', 'Total loss: 0.7321', 'for batch', 13)
('GAN loss 0.2783 ', 'GAN acc 0.9922', 'Discriminator loss 0.2635', 'Discriminator accuracy 0.9727', 'Total loss: 0.5418', 'for batch', 14)
('GAN loss 0.2477 ', 'GAN acc 0.9883', 'Discriminator loss 0.2471', 'Discriminator accuracy 0.9688', 'Total loss: 0.4948', 'for batch', 15)
('GAN loss 0.2376 ', 'GAN acc 0.9922', 'Discriminator loss 0.2865', 'Discriminator accuracy 0.9004', 'Total loss: 0.5242', 'for batch', 16)
('GAN loss 0.2313 ', 'GAN acc 0.9961', 'Discriminator loss 0.2917', 'Discriminator accuracy 0.8770', 'Total loss: 0.5230', 'for batch', 17)
('GAN loss 0.2537 ', 'GAN acc 0.9844', 'Discriminator loss 0.3454', 'Discriminator accuracy 0.8633', 'Total loss: 0.5991', 'for batch', 18)
('GAN loss 0.2247 ', 'GAN acc 0.9883', 'Discriminator loss 0.3030', 'Discriminator accuracy 0.9062', 'Total loss: 0.5277', 'for batch', 19)
('GAN loss 0.2059 ', 'GAN acc 0.9922', 'Discriminator loss 0.2261', 'Discriminator accuracy 0.9258', 'Total loss: 0.4319', 'for batch', 20)
('GAN loss 0.7276 ', 'GAN acc 0.5195', 'Discriminator loss 0.4890', 'Discriminator accuracy 0.7441', 'Total loss: 1.2166', 'for batch', 21)
('GAN loss 0.5286 ', 'GAN acc 0.9883', 'Discriminator loss 0.8300', 'Discriminator accuracy 0.5254', 'Total loss: 1.3586', 'for batch', 22)
('GAN loss 0.9922 ', 'GAN acc 0.0703', 'Discriminator loss 0.6460', 'Discriminator accuracy 0.5234', 'Total loss: 1.6382', 'for batch', 23)
('GAN loss 1.4371 ', 'GAN acc 0.0000', 'Discriminator loss 0.6084', 'Discriminator accuracy 0.7500', 'Total loss: 2.0455', 'for batch', 24)
('GAN loss 1.0550 ', 'GAN acc 0.0117', 'Discriminator loss 0.6555', 'Discriminator accuracy 0.5254', 'Total loss: 1.7105', 'for batch', 25)
('GAN loss 0.9115 ', 'GAN acc 0.0234', 'Discriminator loss 0.6411', 'Discriminator accuracy 0.7402', 'Total loss: 1.5526', 'for batch', 26)
('GAN loss 0.8819 ', 'GAN acc 0.0312', 'Discriminator loss 0.6344', 'Discriminator accuracy 0.7578', 'Total loss: 1.5163', 'for batch', 27)
('GAN loss 0.9121 ', 'GAN acc 0.0312', 'Discriminator loss 0.6317', 'Discriminator accuracy 0.7539', 'Total loss: 1.5438', 'for batch', 28)
('GAN loss 0.9667 ', 'GAN acc 0.0273', 'Discriminator loss 0.6225', 'Discriminator accuracy 0.8047', 'Total loss: 1.5892', 'for batch', 29)
('GAN loss 1.0471 ', 'GAN acc 0.0312', 'Discriminator loss 0.6112', 'Discriminator accuracy 0.8555', 'Total loss: 1.6583', 'for batch', 30)
('GAN loss 1.0810 ', 'GAN acc 0.0352', 'Discriminator loss 0.6085', 'Discriminator accuracy 0.7949', 'Total loss: 1.6896', 'for batch', 31)
('GAN loss 1.1191 ', 'GAN acc 0.0352', 'Discriminator loss 0.6202', 'Discriminator accuracy 0.6816', 'Total loss: 1.7393', 'for batch', 32)
('GAN loss 1.0594 ', 'GAN acc 0.0430', 'Discriminator loss 0.6730', 'Discriminator accuracy 0.5508', 'Total loss: 1.7324', 'for batch', 33)
('GAN loss 1.0709 ', 'GAN acc 0.0195', 'Discriminator loss 0.6452', 'Discriminator accuracy 0.6543', 'Total loss: 1.7161', 'for batch', 34)
('GAN loss 1.0475 ', 'GAN acc 0.0039', 'Discriminator loss 0.6470', 'Discriminator accuracy 0.6289', 'Total loss: 1.6946', 'for batch', 35)
('GAN loss 1.1257 ', 'GAN acc 0.0000', 'Discriminator loss 0.6329', 'Discriminator accuracy 0.6680', 'Total loss: 1.7586', 'for batch', 36)
('GAN loss 1.2043 ', 'GAN acc 0.2500', 'Discriminator loss 0.6226', 'Discriminator accuracy 0.5840', 'Total loss: 1.8269', 'for batch', 37)
('GAN loss 0.6128 ', 'GAN acc 0.9844', 'Discriminator loss 0.7043', 'Discriminator accuracy 0.5098', 'Total loss: 1.3171', 'for batch', 38)
('GAN loss 0.9930 ', 'GAN acc 0.5078', 'Discriminator loss 0.6605', 'Discriminator accuracy 0.5586', 'Total loss: 1.6535', 'for batch', 39)
('GAN loss 0.7046 ', 'GAN acc 0.6641', 'Discriminator loss 0.6651', 'Discriminator accuracy 0.5000', 'Total loss: 1.3697', 'for batch', 40)
('GAN loss 0.9481 ', 'GAN acc 0.0547', 'Discriminator loss 0.6584', 'Discriminator accuracy 0.5781', 'Total loss: 1.6064', 'for batch', 41)
('GAN loss 0.8976 ', 'GAN acc 0.0742', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.6133', 'Total loss: 1.5617', 'for batch', 42)
('GAN loss 0.7804 ', 'GAN acc 0.3125', 'Discriminator loss 0.6863', 'Discriminator accuracy 0.4922', 'Total loss: 1.4666', 'for batch', 43)
('GAN loss 1.1124 ', 'GAN acc 0.0273', 'Discriminator loss 0.6039', 'Discriminator accuracy 0.6465', 'Total loss: 1.7163', 'for batch', 44)
('GAN loss 0.7615 ', 'GAN acc 0.3359', 'Discriminator loss 0.6292', 'Discriminator accuracy 0.6211', 'Total loss: 1.3907', 'for batch', 45)
('GAN loss 0.9826 ', 'GAN acc 0.1758', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5215', 'Total loss: 1.6609', 'for batch', 46)
('GAN loss 0.8626 ', 'GAN acc 0.0508', 'Discriminator loss 0.6722', 'Discriminator accuracy 0.5762', 'Total loss: 1.5349', 'for batch', 47)
('GAN loss 0.7926 ', 'GAN acc 0.1289', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.5566', 'Total loss: 1.4492', 'for batch', 48)
('GAN loss 0.6822 ', 'GAN acc 0.6055', 'Discriminator loss 0.6625', 'Discriminator accuracy 0.5645', 'Total loss: 1.3447', 'for batch', 49)
('GAN loss 0.6585 ', 'GAN acc 0.7266', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5332', 'Total loss: 1.3339', 'for batch', 50)
('GAN loss 0.7106 ', 'GAN acc 0.5547', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.6016', 'Total loss: 1.3684', 'for batch', 51)
('GAN loss 0.7420 ', 'GAN acc 0.4297', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5879', 'Total loss: 1.4098', 'for batch', 52)
('GAN loss 0.6260 ', 'GAN acc 0.8555', 'Discriminator loss 0.6324', 'Discriminator accuracy 0.5664', 'Total loss: 1.2584', 'for batch', 53)
('GAN loss 0.7472 ', 'GAN acc 0.5625', 'Discriminator loss 0.6532', 'Discriminator accuracy 0.6016', 'Total loss: 1.4004', 'for batch', 54)
('GAN loss 0.7784 ', 'GAN acc 0.7227', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.5840', 'Total loss: 1.4281', 'for batch', 55)
('GAN loss 0.8121 ', 'GAN acc 0.3984', 'Discriminator loss 0.6994', 'Discriminator accuracy 0.4980', 'Total loss: 1.5115', 'for batch', 56)
('GAN loss 0.8136 ', 'GAN acc 0.2500', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5469', 'Total loss: 1.4960', 'for batch', 57)
('GAN loss 0.7845 ', 'GAN acc 0.3242', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5254', 'Total loss: 1.4743', 'for batch', 58)
('GAN loss 0.7864 ', 'GAN acc 0.2305', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.5137', 'Total loss: 1.4792', 'for batch', 59)
('GAN loss 0.7830 ', 'GAN acc 0.2461', 'Discriminator loss 0.6874', 'Discriminator accuracy 0.5254', 'Total loss: 1.4703', 'for batch', 60)
('GAN loss 0.7939 ', 'GAN acc 0.1953', 'Discriminator loss 0.6947', 'Discriminator accuracy 0.4863', 'Total loss: 1.4886', 'for batch', 61)
('GAN loss 0.7843 ', 'GAN acc 0.2305', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.5312', 'Total loss: 1.4737', 'for batch', 62)
('GAN loss 0.8153 ', 'GAN acc 0.1328', 'Discriminator loss 0.6786', 'Discriminator accuracy 0.5645', 'Total loss: 1.4939', 'for batch', 63)
('GAN loss 0.8313 ', 'GAN acc 0.0703', 'Discriminator loss 0.6755', 'Discriminator accuracy 0.5801', 'Total loss: 1.5067', 'for batch', 64)
('GAN loss 0.7985 ', 'GAN acc 0.0625', 'Discriminator loss 0.6615', 'Discriminator accuracy 0.5977', 'Total loss: 1.4599', 'for batch', 65)
('GAN loss 0.7737 ', 'GAN acc 0.1602', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.5566', 'Total loss: 1.4463', 'for batch', 66)
('GAN loss 0.8053 ', 'GAN acc 0.2812', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.5898', 'Total loss: 1.4785', 'for batch', 67)
('GAN loss 0.7636 ', 'GAN acc 0.2227', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5645', 'Total loss: 1.4345', 'for batch', 68)
('GAN loss 0.6967 ', 'GAN acc 0.6602', 'Discriminator loss 0.5992', 'Discriminator accuracy 0.6191', 'Total loss: 1.2959', 'for batch', 69)
('GAN loss 0.6898 ', 'GAN acc 0.7031', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5195', 'Total loss: 1.3698', 'for batch', 70)
('GAN loss 0.7101 ', 'GAN acc 0.6719', 'Discriminator loss 0.6795', 'Discriminator accuracy 0.5273', 'Total loss: 1.3896', 'for batch', 71)
('GAN loss 0.7237 ', 'GAN acc 0.4844', 'Discriminator loss 0.6538', 'Discriminator accuracy 0.6660', 'Total loss: 1.3775', 'for batch', 72)
('GAN loss 0.7166 ', 'GAN acc 0.4961', 'Discriminator loss 0.6571', 'Discriminator accuracy 0.6133', 'Total loss: 1.3737', 'for batch', 73)
('GAN loss 0.6507 ', 'GAN acc 0.9336', 'Discriminator loss 0.6795', 'Discriminator accuracy 0.5234', 'Total loss: 1.3302', 'for batch', 74)
('GAN loss 0.6296 ', 'GAN acc 0.9727', 'Discriminator loss 0.6691', 'Discriminator accuracy 0.5156', 'Total loss: 1.2987', 'for batch', 75)
('GAN loss 0.6287 ', 'GAN acc 0.9570', 'Discriminator loss 0.6136', 'Discriminator accuracy 0.6699', 'Total loss: 1.2423', 'for batch', 76)
('GAN loss 0.5895 ', 'GAN acc 0.9844', 'Discriminator loss 0.5687', 'Discriminator accuracy 0.6523', 'Total loss: 1.1582', 'for batch', 77)
('GAN loss 0.5730 ', 'GAN acc 0.9922', 'Discriminator loss 0.6493', 'Discriminator accuracy 0.5547', 'Total loss: 1.2222', 'for batch', 78)
('GAN loss 0.6081 ', 'GAN acc 0.9883', 'Discriminator loss 0.6250', 'Discriminator accuracy 0.5703', 'Total loss: 1.2331', 'for batch', 79)
('GAN loss 0.6358 ', 'GAN acc 0.9375', 'Discriminator loss 0.5581', 'Discriminator accuracy 0.6797', 'Total loss: 1.1939', 'for batch', 80)
('GAN loss 0.5859 ', 'GAN acc 0.9844', 'Discriminator loss 0.5767', 'Discriminator accuracy 0.6250', 'Total loss: 1.1626', 'for batch', 81)
('GAN loss 0.6692 ', 'GAN acc 0.8320', 'Discriminator loss 0.6232', 'Discriminator accuracy 0.6328', 'Total loss: 1.2924', 'for batch', 82)
('GAN loss 0.6007 ', 'GAN acc 0.9688', 'Discriminator loss 0.6152', 'Discriminator accuracy 0.6191', 'Total loss: 1.2159', 'for batch', 83)
('GAN loss 0.5737 ', 'GAN acc 0.9922', 'Discriminator loss 0.6199', 'Discriminator accuracy 0.5898', 'Total loss: 1.1936', 'for batch', 84)
('GAN loss 0.6164 ', 'GAN acc 0.9609', 'Discriminator loss 0.6467', 'Discriminator accuracy 0.5801', 'Total loss: 1.2630', 'for batch', 85)
('GAN loss 0.8972 ', 'GAN acc 0.1172', 'Discriminator loss 0.5309', 'Discriminator accuracy 0.8184', 'Total loss: 1.4281', 'for batch', 86)
('GAN loss 0.4110 ', 'GAN acc 0.9844', 'Discriminator loss 0.8603', 'Discriminator accuracy 0.4863', 'Total loss: 1.2713', 'for batch', 87)
('GAN loss 0.5182 ', 'GAN acc 0.9961', 'Discriminator loss 0.7121', 'Discriminator accuracy 0.5762', 'Total loss: 1.2303', 'for batch', 88)
('GAN loss 0.6401 ', 'GAN acc 0.8867', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.6016', 'Total loss: 1.3249', 'for batch', 89)
('GAN loss 0.7279 ', 'GAN acc 0.2734', 'Discriminator loss 0.5883', 'Discriminator accuracy 0.6426', 'Total loss: 1.3162', 'for batch', 90)
('GAN loss 0.8090 ', 'GAN acc 0.0273', 'Discriminator loss 0.6539', 'Discriminator accuracy 0.6699', 'Total loss: 1.4629', 'for batch', 91)
('GAN loss 0.8161 ', 'GAN acc 0.0352', 'Discriminator loss 0.6378', 'Discriminator accuracy 0.6133', 'Total loss: 1.4539', 'for batch', 92)
('GAN loss 0.7351 ', 'GAN acc 0.2617', 'Discriminator loss 0.6000', 'Discriminator accuracy 0.5391', 'Total loss: 1.3352', 'for batch', 93)
('GAN loss 0.6219 ', 'GAN acc 0.9570', 'Discriminator loss 0.5482', 'Discriminator accuracy 0.6230', 'Total loss: 1.1701', 'for batch', 94)
('GAN loss 0.5475 ', 'GAN acc 0.9883', 'Discriminator loss 0.5672', 'Discriminator accuracy 0.7129', 'Total loss: 1.1147', 'for batch', 95)
('GAN loss 0.5033 ', 'GAN acc 0.9961', 'Discriminator loss 0.6059', 'Discriminator accuracy 0.6406', 'Total loss: 1.1092', 'for batch', 96)
('GAN loss 0.5289 ', 'GAN acc 0.9883', 'Discriminator loss 0.6219', 'Discriminator accuracy 0.6348', 'Total loss: 1.1508', 'for batch', 97)
('GAN loss 0.5756 ', 'GAN acc 0.9805', 'Discriminator loss 0.6575', 'Discriminator accuracy 0.6152', 'Total loss: 1.2330', 'for batch', 98)
('GAN loss 0.5841 ', 'GAN acc 0.9844', 'Discriminator loss 0.5467', 'Discriminator accuracy 0.6953', 'Total loss: 1.1307', 'for batch', 99)
('GAN loss 0.4673 ', 'GAN acc 0.9961', 'Discriminator loss 0.5393', 'Discriminator accuracy 0.6387', 'Total loss: 1.0066', 'for batch', 100)
('GAN loss 0.4523 ', 'GAN acc 0.9922', 'Discriminator loss 0.5192', 'Discriminator accuracy 0.7832', 'Total loss: 0.9715', 'for batch', 101)
('GAN loss 0.4987 ', 'GAN acc 0.9805', 'Discriminator loss 0.5226', 'Discriminator accuracy 0.7520', 'Total loss: 1.0214', 'for batch', 102)
('GAN loss 0.4460 ', 'GAN acc 0.9883', 'Discriminator loss 0.5473', 'Discriminator accuracy 0.7559', 'Total loss: 0.9933', 'for batch', 103)
('GAN loss 0.4327 ', 'GAN acc 0.9922', 'Discriminator loss 0.6154', 'Discriminator accuracy 0.6504', 'Total loss: 1.0481', 'for batch', 104)
('GAN loss 0.4028 ', 'GAN acc 0.9922', 'Discriminator loss 0.5085', 'Discriminator accuracy 0.7012', 'Total loss: 0.9113', 'for batch', 105)
('GAN loss 0.3909 ', 'GAN acc 0.9883', 'Discriminator loss 0.4860', 'Discriminator accuracy 0.7617', 'Total loss: 0.8769', 'for batch', 106)
('GAN loss 0.4046 ', 'GAN acc 0.9883', 'Discriminator loss 0.4515', 'Discriminator accuracy 0.7988', 'Total loss: 0.8561', 'for batch', 107)
('GAN loss 0.3924 ', 'GAN acc 0.9922', 'Discriminator loss 0.4552', 'Discriminator accuracy 0.8027', 'Total loss: 0.8476', 'for batch', 108)
('GAN loss 0.3877 ', 'GAN acc 0.9922', 'Discriminator loss 0.4244', 'Discriminator accuracy 0.8184', 'Total loss: 0.8121', 'for batch', 109)
('GAN loss 0.3813 ', 'GAN acc 0.9883', 'Discriminator loss 0.3698', 'Discriminator accuracy 0.8789', 'Total loss: 0.7511', 'for batch', 110)
('GAN loss 0.3433 ', 'GAN acc 0.9883', 'Discriminator loss 0.4551', 'Discriminator accuracy 0.7539', 'Total loss: 0.7984', 'for batch', 111)
('GAN loss 0.3810 ', 'GAN acc 0.9922', 'Discriminator loss 0.4827', 'Discriminator accuracy 0.7480', 'Total loss: 0.8637', 'for batch', 112)
('GAN loss 0.3354 ', 'GAN acc 0.9922', 'Discriminator loss 0.3840', 'Discriminator accuracy 0.8711', 'Total loss: 0.7194', 'for batch', 113)
('GAN loss 0.2659 ', 'GAN acc 0.9961', 'Discriminator loss 0.1774', 'Discriminator accuracy 0.9961', 'Total loss: 0.4433', 'for batch', 114)
('GAN loss 0.3068 ', 'GAN acc 0.9883', 'Discriminator loss 0.6827', 'Discriminator accuracy 0.6328', 'Total loss: 0.9895', 'for batch', 115)
('GAN loss 0.3414 ', 'GAN acc 0.9922', 'Discriminator loss 0.4169', 'Discriminator accuracy 0.7793', 'Total loss: 0.7583', 'for batch', 116)
('GAN loss 0.4905 ', 'GAN acc 0.9883', 'Discriminator loss 0.3738', 'Discriminator accuracy 0.8711', 'Total loss: 0.8643', 'for batch', 117)
('GAN loss 0.3053 ', 'GAN acc 0.9961', 'Discriminator loss 0.7695', 'Discriminator accuracy 0.5234', 'Total loss: 1.0748', 'for batch', 118)
('GAN loss 0.3372 ', 'GAN acc 0.9922', 'Discriminator loss 0.6525', 'Discriminator accuracy 0.6348', 'Total loss: 0.9897', 'for batch', 119)
('GAN loss 0.3762 ', 'GAN acc 0.9883', 'Discriminator loss 0.5673', 'Discriminator accuracy 0.6953', 'Total loss: 0.9435', 'for batch', 120)
('GAN loss 0.4261 ', 'GAN acc 0.9922', 'Discriminator loss 0.5476', 'Discriminator accuracy 0.6953', 'Total loss: 0.9738', 'for batch', 121)
('GAN loss 0.4423 ', 'GAN acc 0.9922', 'Discriminator loss 0.4589', 'Discriminator accuracy 0.7637', 'Total loss: 0.9012', 'for batch', 122)
('GAN loss 0.4463 ', 'GAN acc 0.9961', 'Discriminator loss 0.4193', 'Discriminator accuracy 0.8125', 'Total loss: 0.8656', 'for batch', 123)
('GAN loss 0.4329 ', 'GAN acc 0.9844', 'Discriminator loss 0.3278', 'Discriminator accuracy 0.8906', 'Total loss: 0.7607', 'for batch', 124)
('GAN loss 0.4154 ', 'GAN acc 0.9883', 'Discriminator loss 0.3921', 'Discriminator accuracy 0.8340', 'Total loss: 0.8075', 'for batch', 125)
('GAN loss 0.4059 ', 'GAN acc 0.9922', 'Discriminator loss 0.4609', 'Discriminator accuracy 0.7578', 'Total loss: 0.8668', 'for batch', 126)
('GAN loss 0.4194 ', 'GAN acc 0.9922', 'Discriminator loss 0.4909', 'Discriminator accuracy 0.7109', 'Total loss: 0.9103', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.64326799)
('DISCRIMINATOR_Imagem FAKE=', 0.20256539)
('Discriminator trained', 64, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.621813')
----------------------------------
('Epoch', 26, 'of', 50)
('Number of batches', 128)
('GAN loss 0.4575 ', 'GAN acc 0.9883', 'Discriminator loss 0.3550', 'Discriminator accuracy 0.8906', 'Total loss: 0.8125', 'for batch', 0)
('GAN loss 0.3552 ', 'GAN acc 0.9922', 'Discriminator loss 0.2591', 'Discriminator accuracy 0.9863', 'Total loss: 0.6143', 'for batch', 1)
('GAN loss 0.3640 ', 'GAN acc 0.9844', 'Discriminator loss 0.3684', 'Discriminator accuracy 0.8887', 'Total loss: 0.7323', 'for batch', 2)
('GAN loss 0.3388 ', 'GAN acc 0.9883', 'Discriminator loss 0.3411', 'Discriminator accuracy 0.8789', 'Total loss: 0.6799', 'for batch', 3)
('GAN loss 0.3005 ', 'GAN acc 0.9922', 'Discriminator loss 0.4200', 'Discriminator accuracy 0.8125', 'Total loss: 0.7205', 'for batch', 4)
('GAN loss 0.2811 ', 'GAN acc 0.9961', 'Discriminator loss 0.3006', 'Discriminator accuracy 0.9219', 'Total loss: 0.5816', 'for batch', 5)
('GAN loss 0.2785 ', 'GAN acc 0.9922', 'Discriminator loss 0.3976', 'Discriminator accuracy 0.8398', 'Total loss: 0.6761', 'for batch', 6)
('GAN loss 0.2243 ', 'GAN acc 0.9961', 'Discriminator loss 0.2475', 'Discriminator accuracy 0.9355', 'Total loss: 0.4718', 'for batch', 7)
('GAN loss 0.2381 ', 'GAN acc 0.9922', 'Discriminator loss 0.3134', 'Discriminator accuracy 0.8867', 'Total loss: 0.5515', 'for batch', 8)
('GAN loss 0.2214 ', 'GAN acc 0.9883', 'Discriminator loss 0.2975', 'Discriminator accuracy 0.8867', 'Total loss: 0.5190', 'for batch', 9)
('GAN loss 0.2529 ', 'GAN acc 0.9883', 'Discriminator loss 0.3983', 'Discriminator accuracy 0.7715', 'Total loss: 0.6512', 'for batch', 10)
('GAN loss 0.1685 ', 'GAN acc 0.9922', 'Discriminator loss 0.4803', 'Discriminator accuracy 0.7148', 'Total loss: 0.6488', 'for batch', 11)
('GAN loss 0.1620 ', 'GAN acc 0.9922', 'Discriminator loss 0.3710', 'Discriminator accuracy 0.8438', 'Total loss: 0.5330', 'for batch', 12)
('GAN loss 0.2093 ', 'GAN acc 0.9883', 'Discriminator loss 0.4923', 'Discriminator accuracy 0.7598', 'Total loss: 0.7016', 'for batch', 13)
('GAN loss 0.2354 ', 'GAN acc 0.9922', 'Discriminator loss 0.3029', 'Discriminator accuracy 0.8555', 'Total loss: 0.5383', 'for batch', 14)
('GAN loss 0.2328 ', 'GAN acc 0.9844', 'Discriminator loss 0.2396', 'Discriminator accuracy 0.9531', 'Total loss: 0.4724', 'for batch', 15)
('GAN loss 0.1932 ', 'GAN acc 0.9922', 'Discriminator loss 0.2171', 'Discriminator accuracy 0.9395', 'Total loss: 0.4103', 'for batch', 16)
('GAN loss 0.1815 ', 'GAN acc 0.9961', 'Discriminator loss 0.3054', 'Discriminator accuracy 0.8770', 'Total loss: 0.4869', 'for batch', 17)
('GAN loss 0.1944 ', 'GAN acc 0.9844', 'Discriminator loss 0.4190', 'Discriminator accuracy 0.8184', 'Total loss: 0.6134', 'for batch', 18)
('GAN loss 0.1854 ', 'GAN acc 0.9883', 'Discriminator loss 0.1543', 'Discriminator accuracy 0.9492', 'Total loss: 0.3397', 'for batch', 19)
('GAN loss 0.1688 ', 'GAN acc 0.9883', 'Discriminator loss 0.1271', 'Discriminator accuracy 0.9941', 'Total loss: 0.2959', 'for batch', 20)
('GAN loss 0.1809 ', 'GAN acc 0.9922', 'Discriminator loss 0.3475', 'Discriminator accuracy 0.8242', 'Total loss: 0.5284', 'for batch', 21)
('GAN loss 0.1492 ', 'GAN acc 0.9961', 'Discriminator loss 0.2505', 'Discriminator accuracy 0.9199', 'Total loss: 0.3997', 'for batch', 22)
('GAN loss 0.1366 ', 'GAN acc 0.9961', 'Discriminator loss 0.2036', 'Discriminator accuracy 0.9375', 'Total loss: 0.3401', 'for batch', 23)
('GAN loss 0.1396 ', 'GAN acc 0.9883', 'Discriminator loss 0.0935', 'Discriminator accuracy 0.9980', 'Total loss: 0.2331', 'for batch', 24)
('GAN loss 0.1405 ', 'GAN acc 0.9844', 'Discriminator loss 0.2135', 'Discriminator accuracy 0.8945', 'Total loss: 0.3540', 'for batch', 25)
('GAN loss 0.1642 ', 'GAN acc 0.9922', 'Discriminator loss 0.2908', 'Discriminator accuracy 0.8633', 'Total loss: 0.4551', 'for batch', 26)
('GAN loss 0.1302 ', 'GAN acc 0.9922', 'Discriminator loss 0.3226', 'Discriminator accuracy 0.8711', 'Total loss: 0.4528', 'for batch', 27)
('GAN loss 0.1002 ', 'GAN acc 0.9922', 'Discriminator loss 0.1120', 'Discriminator accuracy 0.9766', 'Total loss: 0.2122', 'for batch', 28)
('GAN loss 0.1211 ', 'GAN acc 0.9844', 'Discriminator loss 0.2439', 'Discriminator accuracy 0.8828', 'Total loss: 0.3650', 'for batch', 29)
('GAN loss 0.1299 ', 'GAN acc 0.9961', 'Discriminator loss 0.3007', 'Discriminator accuracy 0.8770', 'Total loss: 0.4306', 'for batch', 30)
('GAN loss 0.1580 ', 'GAN acc 0.9883', 'Discriminator loss 0.3153', 'Discriminator accuracy 0.8633', 'Total loss: 0.4733', 'for batch', 31)
('GAN loss 0.0979 ', 'GAN acc 0.9961', 'Discriminator loss 0.1797', 'Discriminator accuracy 0.9648', 'Total loss: 0.2776', 'for batch', 32)
('GAN loss 0.1066 ', 'GAN acc 0.9961', 'Discriminator loss 0.3287', 'Discriminator accuracy 0.8789', 'Total loss: 0.4353', 'for batch', 33)
('GAN loss 0.1308 ', 'GAN acc 0.9961', 'Discriminator loss 0.4630', 'Discriminator accuracy 0.8184', 'Total loss: 0.5937', 'for batch', 34)
('GAN loss 0.1614 ', 'GAN acc 0.9922', 'Discriminator loss 0.2991', 'Discriminator accuracy 0.8848', 'Total loss: 0.4606', 'for batch', 35)
('GAN loss 0.1561 ', 'GAN acc 0.9922', 'Discriminator loss 0.0831', 'Discriminator accuracy 0.9980', 'Total loss: 0.2392', 'for batch', 36)
('GAN loss 0.1460 ', 'GAN acc 0.9961', 'Discriminator loss 0.1956', 'Discriminator accuracy 0.9375', 'Total loss: 0.3416', 'for batch', 37)
('GAN loss 0.1812 ', 'GAN acc 0.9922', 'Discriminator loss 0.3224', 'Discriminator accuracy 0.8457', 'Total loss: 0.5036', 'for batch', 38)
('GAN loss 0.2008 ', 'GAN acc 0.9844', 'Discriminator loss 0.1913', 'Discriminator accuracy 0.9766', 'Total loss: 0.3921', 'for batch', 39)
('GAN loss 0.1556 ', 'GAN acc 0.9922', 'Discriminator loss 0.2503', 'Discriminator accuracy 0.9180', 'Total loss: 0.4059', 'for batch', 40)
('GAN loss 0.1592 ', 'GAN acc 0.9922', 'Discriminator loss 0.3387', 'Discriminator accuracy 0.8555', 'Total loss: 0.4979', 'for batch', 41)
('GAN loss 0.1985 ', 'GAN acc 0.9883', 'Discriminator loss 0.5082', 'Discriminator accuracy 0.7676', 'Total loss: 0.7067', 'for batch', 42)
('GAN loss 0.1283 ', 'GAN acc 0.9922', 'Discriminator loss 0.3645', 'Discriminator accuracy 0.8438', 'Total loss: 0.4928', 'for batch', 43)
('GAN loss 0.1757 ', 'GAN acc 0.9844', 'Discriminator loss 0.7360', 'Discriminator accuracy 0.6953', 'Total loss: 0.9117', 'for batch', 44)
('GAN loss 0.2123 ', 'GAN acc 0.9961', 'Discriminator loss 0.6484', 'Discriminator accuracy 0.7070', 'Total loss: 0.8607', 'for batch', 45)
('GAN loss 0.2813 ', 'GAN acc 0.9922', 'Discriminator loss 0.5396', 'Discriminator accuracy 0.7422', 'Total loss: 0.8209', 'for batch', 46)
('GAN loss 0.3159 ', 'GAN acc 0.9922', 'Discriminator loss 0.4474', 'Discriminator accuracy 0.7676', 'Total loss: 0.7633', 'for batch', 47)
('GAN loss 0.3443 ', 'GAN acc 0.9922', 'Discriminator loss 0.4207', 'Discriminator accuracy 0.8066', 'Total loss: 0.7650', 'for batch', 48)
('GAN loss 0.3317 ', 'GAN acc 0.9922', 'Discriminator loss 0.3231', 'Discriminator accuracy 0.9297', 'Total loss: 0.6548', 'for batch', 49)
('GAN loss 0.2672 ', 'GAN acc 0.9961', 'Discriminator loss 0.2405', 'Discriminator accuracy 0.9609', 'Total loss: 0.5076', 'for batch', 50)
('GAN loss 0.2431 ', 'GAN acc 0.9922', 'Discriminator loss 0.3205', 'Discriminator accuracy 0.8242', 'Total loss: 0.5636', 'for batch', 51)
('GAN loss 0.2281 ', 'GAN acc 0.9961', 'Discriminator loss 0.2008', 'Discriminator accuracy 0.9395', 'Total loss: 0.4290', 'for batch', 52)
('GAN loss 0.2683 ', 'GAN acc 0.9883', 'Discriminator loss 0.1936', 'Discriminator accuracy 0.9395', 'Total loss: 0.4619', 'for batch', 53)
('GAN loss 0.2200 ', 'GAN acc 0.9922', 'Discriminator loss 0.3914', 'Discriminator accuracy 0.8418', 'Total loss: 0.6114', 'for batch', 54)
('GAN loss 0.2452 ', 'GAN acc 0.9922', 'Discriminator loss 0.5285', 'Discriminator accuracy 0.7559', 'Total loss: 0.7737', 'for batch', 55)
('GAN loss 0.3186 ', 'GAN acc 0.9883', 'Discriminator loss 0.9243', 'Discriminator accuracy 0.5059', 'Total loss: 1.2429', 'for batch', 56)
('GAN loss 0.3445 ', 'GAN acc 0.9883', 'Discriminator loss 0.8142', 'Discriminator accuracy 0.5234', 'Total loss: 1.1586', 'for batch', 57)
('GAN loss 0.3966 ', 'GAN acc 0.9844', 'Discriminator loss 0.7217', 'Discriminator accuracy 0.5879', 'Total loss: 1.1182', 'for batch', 58)
('GAN loss 0.4219 ', 'GAN acc 0.9922', 'Discriminator loss 0.7459', 'Discriminator accuracy 0.5273', 'Total loss: 1.1679', 'for batch', 59)
('GAN loss 0.4809 ', 'GAN acc 0.9844', 'Discriminator loss 0.7606', 'Discriminator accuracy 0.5020', 'Total loss: 1.2415', 'for batch', 60)
('GAN loss 0.4908 ', 'GAN acc 0.9883', 'Discriminator loss 0.6200', 'Discriminator accuracy 0.6816', 'Total loss: 1.1109', 'for batch', 61)
('GAN loss 0.4924 ', 'GAN acc 0.9844', 'Discriminator loss 0.6755', 'Discriminator accuracy 0.5781', 'Total loss: 1.1679', 'for batch', 62)
('GAN loss 0.5043 ', 'GAN acc 0.9883', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.5410', 'Total loss: 1.2003', 'for batch', 63)
('GAN loss 0.4814 ', 'GAN acc 0.9922', 'Discriminator loss 0.5150', 'Discriminator accuracy 0.7266', 'Total loss: 0.9964', 'for batch', 64)
('GAN loss 0.4516 ', 'GAN acc 0.9922', 'Discriminator loss 0.4570', 'Discriminator accuracy 0.8223', 'Total loss: 0.9086', 'for batch', 65)
('GAN loss 0.4531 ', 'GAN acc 0.9922', 'Discriminator loss 0.5862', 'Discriminator accuracy 0.6797', 'Total loss: 1.0393', 'for batch', 66)
('GAN loss 0.4653 ', 'GAN acc 0.9844', 'Discriminator loss 0.6062', 'Discriminator accuracy 0.6387', 'Total loss: 1.0716', 'for batch', 67)
('GAN loss 0.4733 ', 'GAN acc 0.9844', 'Discriminator loss 0.5928', 'Discriminator accuracy 0.6621', 'Total loss: 1.0661', 'for batch', 68)
('GAN loss 0.4605 ', 'GAN acc 0.9883', 'Discriminator loss 0.4836', 'Discriminator accuracy 0.7910', 'Total loss: 0.9441', 'for batch', 69)
('GAN loss 0.4251 ', 'GAN acc 0.9922', 'Discriminator loss 0.3775', 'Discriminator accuracy 0.8438', 'Total loss: 0.8025', 'for batch', 70)
('GAN loss 0.4131 ', 'GAN acc 0.9883', 'Discriminator loss 0.3012', 'Discriminator accuracy 0.9375', 'Total loss: 0.7144', 'for batch', 71)
('GAN loss 0.3774 ', 'GAN acc 0.9922', 'Discriminator loss 0.4298', 'Discriminator accuracy 0.8164', 'Total loss: 0.8072', 'for batch', 72)
('GAN loss 0.3781 ', 'GAN acc 0.9922', 'Discriminator loss 0.4176', 'Discriminator accuracy 0.8105', 'Total loss: 0.7956', 'for batch', 73)
('GAN loss 0.3554 ', 'GAN acc 0.9922', 'Discriminator loss 0.3408', 'Discriminator accuracy 0.8613', 'Total loss: 0.6962', 'for batch', 74)
('GAN loss 0.3479 ', 'GAN acc 0.9922', 'Discriminator loss 0.4096', 'Discriminator accuracy 0.8125', 'Total loss: 0.7575', 'for batch', 75)
('GAN loss 0.3298 ', 'GAN acc 0.9961', 'Discriminator loss 0.3218', 'Discriminator accuracy 0.8770', 'Total loss: 0.6516', 'for batch', 76)
('GAN loss 0.3011 ', 'GAN acc 0.9961', 'Discriminator loss 0.1505', 'Discriminator accuracy 1.0000', 'Total loss: 0.4515', 'for batch', 77)
('GAN loss 0.3003 ', 'GAN acc 0.9922', 'Discriminator loss 0.3582', 'Discriminator accuracy 0.8555', 'Total loss: 0.6585', 'for batch', 78)
('GAN loss 0.2807 ', 'GAN acc 0.9922', 'Discriminator loss 0.2681', 'Discriminator accuracy 0.9355', 'Total loss: 0.5488', 'for batch', 79)
('GAN loss 0.2490 ', 'GAN acc 0.9961', 'Discriminator loss 0.1803', 'Discriminator accuracy 0.9961', 'Total loss: 0.4292', 'for batch', 80)
('GAN loss 0.2761 ', 'GAN acc 0.9922', 'Discriminator loss 0.2625', 'Discriminator accuracy 0.8965', 'Total loss: 0.5385', 'for batch', 81)
('GAN loss 0.2398 ', 'GAN acc 0.9883', 'Discriminator loss 0.3090', 'Discriminator accuracy 0.8770', 'Total loss: 0.5489', 'for batch', 82)
('GAN loss 0.2145 ', 'GAN acc 0.9922', 'Discriminator loss 0.2895', 'Discriminator accuracy 0.8848', 'Total loss: 0.5040', 'for batch', 83)
('GAN loss 0.2104 ', 'GAN acc 0.9922', 'Discriminator loss 0.1712', 'Discriminator accuracy 0.9766', 'Total loss: 0.3817', 'for batch', 84)
('GAN loss 0.3682 ', 'GAN acc 0.9766', 'Discriminator loss 0.4503', 'Discriminator accuracy 0.7500', 'Total loss: 0.8185', 'for batch', 85)
('GAN loss 0.2388 ', 'GAN acc 0.9922', 'Discriminator loss 1.0354', 'Discriminator accuracy 0.5000', 'Total loss: 1.2742', 'for batch', 86)
('GAN loss 0.3153 ', 'GAN acc 0.9922', 'Discriminator loss 0.5641', 'Discriminator accuracy 0.7617', 'Total loss: 0.8794', 'for batch', 87)
('GAN loss 0.5665 ', 'GAN acc 0.9727', 'Discriminator loss 0.6512', 'Discriminator accuracy 0.6875', 'Total loss: 1.2178', 'for batch', 88)
('GAN loss 0.6101 ', 'GAN acc 0.9609', 'Discriminator loss 0.3103', 'Discriminator accuracy 0.9355', 'Total loss: 0.9205', 'for batch', 89)
('GAN loss 0.3625 ', 'GAN acc 0.9922', 'Discriminator loss 0.3132', 'Discriminator accuracy 0.9473', 'Total loss: 0.6757', 'for batch', 90)
('GAN loss 0.3352 ', 'GAN acc 0.9961', 'Discriminator loss 0.4049', 'Discriminator accuracy 0.7969', 'Total loss: 0.7401', 'for batch', 91)
('GAN loss 0.3046 ', 'GAN acc 0.9961', 'Discriminator loss 0.4045', 'Discriminator accuracy 0.8164', 'Total loss: 0.7092', 'for batch', 92)
('GAN loss 0.2245 ', 'GAN acc 0.9961', 'Discriminator loss 0.2395', 'Discriminator accuracy 0.9746', 'Total loss: 0.4640', 'for batch', 93)
('GAN loss 0.1796 ', 'GAN acc 1.0000', 'Discriminator loss 0.1710', 'Discriminator accuracy 0.9688', 'Total loss: 0.3506', 'for batch', 94)
('GAN loss 0.1790 ', 'GAN acc 0.9961', 'Discriminator loss 0.4144', 'Discriminator accuracy 0.8184', 'Total loss: 0.5934', 'for batch', 95)
('GAN loss 0.1716 ', 'GAN acc 0.9961', 'Discriminator loss 0.2109', 'Discriminator accuracy 0.9355', 'Total loss: 0.3825', 'for batch', 96)
('GAN loss 0.1480 ', 'GAN acc 1.0000', 'Discriminator loss 0.0986', 'Discriminator accuracy 0.9980', 'Total loss: 0.2466', 'for batch', 97)
('GAN loss 0.1349 ', 'GAN acc 1.0000', 'Discriminator loss 0.1737', 'Discriminator accuracy 0.9375', 'Total loss: 0.3086', 'for batch', 98)
('GAN loss 0.1781 ', 'GAN acc 0.9922', 'Discriminator loss 0.2035', 'Discriminator accuracy 0.9219', 'Total loss: 0.3816', 'for batch', 99)
('GAN loss 0.0947 ', 'GAN acc 1.0000', 'Discriminator loss 0.4881', 'Discriminator accuracy 0.6582', 'Total loss: 0.5828', 'for batch', 100)
('GAN loss 0.1070 ', 'GAN acc 1.0000', 'Discriminator loss 0.3497', 'Discriminator accuracy 0.8691', 'Total loss: 0.4567', 'for batch', 101)
('GAN loss 0.1326 ', 'GAN acc 1.0000', 'Discriminator loss 0.2734', 'Discriminator accuracy 0.8750', 'Total loss: 0.4060', 'for batch', 102)
('GAN loss 0.1879 ', 'GAN acc 1.0000', 'Discriminator loss 0.5508', 'Discriminator accuracy 0.7520', 'Total loss: 0.7386', 'for batch', 103)
('GAN loss 0.2362 ', 'GAN acc 1.0000', 'Discriminator loss 0.3092', 'Discriminator accuracy 0.8672', 'Total loss: 0.5454', 'for batch', 104)
('GAN loss 0.2194 ', 'GAN acc 1.0000', 'Discriminator loss 0.3179', 'Discriminator accuracy 0.9219', 'Total loss: 0.5373', 'for batch', 105)
('GAN loss 0.1819 ', 'GAN acc 1.0000', 'Discriminator loss 0.2194', 'Discriminator accuracy 0.9824', 'Total loss: 0.4013', 'for batch', 106)
('GAN loss 0.1695 ', 'GAN acc 1.0000', 'Discriminator loss 0.3186', 'Discriminator accuracy 0.8770', 'Total loss: 0.4881', 'for batch', 107)
('GAN loss 0.1857 ', 'GAN acc 1.0000', 'Discriminator loss 0.5175', 'Discriminator accuracy 0.7461', 'Total loss: 0.7032', 'for batch', 108)
('GAN loss 0.2020 ', 'GAN acc 1.0000', 'Discriminator loss 0.2936', 'Discriminator accuracy 0.8594', 'Total loss: 0.4956', 'for batch', 109)
('GAN loss 0.1887 ', 'GAN acc 1.0000', 'Discriminator loss 0.2563', 'Discriminator accuracy 0.9355', 'Total loss: 0.4450', 'for batch', 110)
('GAN loss 0.1664 ', 'GAN acc 1.0000', 'Discriminator loss 0.2172', 'Discriminator accuracy 0.9316', 'Total loss: 0.3836', 'for batch', 111)
('GAN loss 0.1526 ', 'GAN acc 1.0000', 'Discriminator loss 0.2081', 'Discriminator accuracy 0.9336', 'Total loss: 0.3607', 'for batch', 112)
('GAN loss 0.1399 ', 'GAN acc 1.0000', 'Discriminator loss 0.1669', 'Discriminator accuracy 0.9375', 'Total loss: 0.3068', 'for batch', 113)
('GAN loss 0.1227 ', 'GAN acc 1.0000', 'Discriminator loss 0.0798', 'Discriminator accuracy 0.9980', 'Total loss: 0.2024', 'for batch', 114)
('GAN loss 0.1209 ', 'GAN acc 1.0000', 'Discriminator loss 0.2181', 'Discriminator accuracy 0.9375', 'Total loss: 0.3390', 'for batch', 115)
('GAN loss 0.1286 ', 'GAN acc 1.0000', 'Discriminator loss 0.2280', 'Discriminator accuracy 0.8828', 'Total loss: 0.3566', 'for batch', 116)
('GAN loss 0.1288 ', 'GAN acc 1.0000', 'Discriminator loss 0.1799', 'Discriminator accuracy 0.9375', 'Total loss: 0.3087', 'for batch', 117)
('GAN loss 0.1138 ', 'GAN acc 1.0000', 'Discriminator loss 0.1705', 'Discriminator accuracy 0.9512', 'Total loss: 0.2843', 'for batch', 118)
('GAN loss 0.1219 ', 'GAN acc 1.0000', 'Discriminator loss 0.4143', 'Discriminator accuracy 0.8516', 'Total loss: 0.5362', 'for batch', 119)
('GAN loss 0.1009 ', 'GAN acc 1.0000', 'Discriminator loss 0.1270', 'Discriminator accuracy 0.9941', 'Total loss: 0.2279', 'for batch', 120)
('GAN loss 0.0946 ', 'GAN acc 1.0000', 'Discriminator loss 0.1804', 'Discriminator accuracy 0.9180', 'Total loss: 0.2749', 'for batch', 121)
('GAN loss 0.1016 ', 'GAN acc 1.0000', 'Discriminator loss 0.2522', 'Discriminator accuracy 0.8848', 'Total loss: 0.3538', 'for batch', 122)
('GAN loss 0.0871 ', 'GAN acc 1.0000', 'Discriminator loss 0.0930', 'Discriminator accuracy 1.0000', 'Total loss: 0.1801', 'for batch', 123)
('GAN loss 0.0734 ', 'GAN acc 1.0000', 'Discriminator loss 0.0682', 'Discriminator accuracy 1.0000', 'Total loss: 0.1417', 'for batch', 124)
('GAN loss 0.0827 ', 'GAN acc 1.0000', 'Discriminator loss 0.5237', 'Discriminator accuracy 0.8145', 'Total loss: 0.6064', 'for batch', 125)
('GAN loss 0.0999 ', 'GAN acc 1.0000', 'Discriminator loss 0.3471', 'Discriminator accuracy 0.8730', 'Total loss: 0.4470', 'for batch', 126)
('GAN loss 0.0993 ', 'GAN acc 1.0000', 'Discriminator loss 0.0701', 'Discriminator accuracy 1.0000', 'Total loss: 0.1694', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.88174784)
('DISCRIMINATOR_Imagem FAKE=', 0.13407284)
('Discriminator trained', 9, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.022973')
----------------------------------
('Epoch', 27, 'of', 50)
('Number of batches', 128)
('GAN loss 0.0927 ', 'GAN acc 1.0000', 'Discriminator loss 0.0860', 'Discriminator accuracy 0.9961', 'Total loss: 0.1787', 'for batch', 0)
('GAN loss 0.0806 ', 'GAN acc 1.0000', 'Discriminator loss 0.0637', 'Discriminator accuracy 1.0000', 'Total loss: 0.1443', 'for batch', 1)
('GAN loss 0.0890 ', 'GAN acc 1.0000', 'Discriminator loss 0.2969', 'Discriminator accuracy 0.8750', 'Total loss: 0.3859', 'for batch', 2)
('GAN loss 0.1019 ', 'GAN acc 1.0000', 'Discriminator loss 0.2951', 'Discriminator accuracy 0.8730', 'Total loss: 0.3970', 'for batch', 3)
('GAN loss 0.0888 ', 'GAN acc 1.0000', 'Discriminator loss 0.1124', 'Discriminator accuracy 1.0000', 'Total loss: 0.2012', 'for batch', 4)
('GAN loss 0.1028 ', 'GAN acc 1.0000', 'Discriminator loss 0.3382', 'Discriminator accuracy 0.8223', 'Total loss: 0.4410', 'for batch', 5)
('GAN loss 0.1186 ', 'GAN acc 1.0000', 'Discriminator loss 0.4013', 'Discriminator accuracy 0.8457', 'Total loss: 0.5199', 'for batch', 6)
('GAN loss 0.0841 ', 'GAN acc 1.0000', 'Discriminator loss 0.1995', 'Discriminator accuracy 0.9688', 'Total loss: 0.2836', 'for batch', 7)
('GAN loss 0.0808 ', 'GAN acc 1.0000', 'Discriminator loss 0.2789', 'Discriminator accuracy 0.8809', 'Total loss: 0.3597', 'for batch', 8)
('GAN loss 0.0771 ', 'GAN acc 1.0000', 'Discriminator loss 0.0672', 'Discriminator accuracy 1.0000', 'Total loss: 0.1444', 'for batch', 9)
('GAN loss 0.0933 ', 'GAN acc 1.0000', 'Discriminator loss 0.3010', 'Discriminator accuracy 0.8750', 'Total loss: 0.3944', 'for batch', 10)
('GAN loss 0.1167 ', 'GAN acc 1.0000', 'Discriminator loss 0.2966', 'Discriminator accuracy 0.8770', 'Total loss: 0.4133', 'for batch', 11)
('GAN loss 0.1211 ', 'GAN acc 1.0000', 'Discriminator loss 0.4872', 'Discriminator accuracy 0.7930', 'Total loss: 0.6083', 'for batch', 12)
('GAN loss 0.1067 ', 'GAN acc 1.0000', 'Discriminator loss 0.2547', 'Discriminator accuracy 0.9297', 'Total loss: 0.3614', 'for batch', 13)
('GAN loss 0.0979 ', 'GAN acc 1.0000', 'Discriminator loss 0.1939', 'Discriminator accuracy 0.9355', 'Total loss: 0.2918', 'for batch', 14)
('GAN loss 0.1000 ', 'GAN acc 1.0000', 'Discriminator loss 0.3253', 'Discriminator accuracy 0.8789', 'Total loss: 0.4253', 'for batch', 15)
('GAN loss 0.1136 ', 'GAN acc 1.0000', 'Discriminator loss 0.1808', 'Discriminator accuracy 0.9375', 'Total loss: 0.2945', 'for batch', 16)
('GAN loss 0.1041 ', 'GAN acc 1.0000', 'Discriminator loss 0.1484', 'Discriminator accuracy 0.9863', 'Total loss: 0.2525', 'for batch', 17)
('GAN loss 0.1436 ', 'GAN acc 0.9922', 'Discriminator loss 0.5114', 'Discriminator accuracy 0.7793', 'Total loss: 0.6550', 'for batch', 18)
('GAN loss 0.1181 ', 'GAN acc 1.0000', 'Discriminator loss 0.2547', 'Discriminator accuracy 0.9297', 'Total loss: 0.3728', 'for batch', 19)
('GAN loss 0.1137 ', 'GAN acc 0.9922', 'Discriminator loss 0.1363', 'Discriminator accuracy 0.9863', 'Total loss: 0.2500', 'for batch', 20)
('GAN loss 0.1289 ', 'GAN acc 0.9961', 'Discriminator loss 0.6666', 'Discriminator accuracy 0.7305', 'Total loss: 0.7955', 'for batch', 21)
('GAN loss 0.1691 ', 'GAN acc 0.9961', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.6895', 'Total loss: 0.8402', 'for batch', 22)
('GAN loss 0.1465 ', 'GAN acc 0.9961', 'Discriminator loss 0.4554', 'Discriminator accuracy 0.7715', 'Total loss: 0.6019', 'for batch', 23)
('GAN loss 0.1765 ', 'GAN acc 0.9922', 'Discriminator loss 0.5979', 'Discriminator accuracy 0.7500', 'Total loss: 0.7744', 'for batch', 24)
('GAN loss 0.2049 ', 'GAN acc 0.9883', 'Discriminator loss 0.4730', 'Discriminator accuracy 0.8086', 'Total loss: 0.6779', 'for batch', 25)
('GAN loss 0.2208 ', 'GAN acc 0.9961', 'Discriminator loss 0.5062', 'Discriminator accuracy 0.7598', 'Total loss: 0.7270', 'for batch', 26)
('GAN loss 0.2407 ', 'GAN acc 0.9961', 'Discriminator loss 0.4983', 'Discriminator accuracy 0.7598', 'Total loss: 0.7390', 'for batch', 27)
('GAN loss 0.3178 ', 'GAN acc 0.9805', 'Discriminator loss 0.4833', 'Discriminator accuracy 0.7773', 'Total loss: 0.8011', 'for batch', 28)
('GAN loss 0.2657 ', 'GAN acc 0.9844', 'Discriminator loss 0.3778', 'Discriminator accuracy 0.8555', 'Total loss: 0.6435', 'for batch', 29)
('GAN loss 0.2494 ', 'GAN acc 0.9961', 'Discriminator loss 0.5256', 'Discriminator accuracy 0.7500', 'Total loss: 0.7750', 'for batch', 30)
('GAN loss 0.2665 ', 'GAN acc 0.9883', 'Discriminator loss 0.4620', 'Discriminator accuracy 0.8066', 'Total loss: 0.7285', 'for batch', 31)
('GAN loss 0.2517 ', 'GAN acc 0.9922', 'Discriminator loss 0.3256', 'Discriminator accuracy 0.8770', 'Total loss: 0.5773', 'for batch', 32)
('GAN loss 0.2596 ', 'GAN acc 0.9922', 'Discriminator loss 0.5195', 'Discriminator accuracy 0.7383', 'Total loss: 0.7791', 'for batch', 33)
('GAN loss 0.2731 ', 'GAN acc 0.9961', 'Discriminator loss 0.5475', 'Discriminator accuracy 0.7031', 'Total loss: 0.8206', 'for batch', 34)
('GAN loss 0.2884 ', 'GAN acc 0.9922', 'Discriminator loss 0.4870', 'Discriminator accuracy 0.7598', 'Total loss: 0.7753', 'for batch', 35)
('GAN loss 0.2795 ', 'GAN acc 0.9922', 'Discriminator loss 0.2297', 'Discriminator accuracy 0.9746', 'Total loss: 0.5092', 'for batch', 36)
('GAN loss 0.2575 ', 'GAN acc 1.0000', 'Discriminator loss 0.3168', 'Discriminator accuracy 0.8809', 'Total loss: 0.5743', 'for batch', 37)
('GAN loss 0.2691 ', 'GAN acc 0.9922', 'Discriminator loss 0.4806', 'Discriminator accuracy 0.7637', 'Total loss: 0.7497', 'for batch', 38)
('GAN loss 0.2760 ', 'GAN acc 0.9883', 'Discriminator loss 0.3637', 'Discriminator accuracy 0.8633', 'Total loss: 0.6397', 'for batch', 39)
('GAN loss 0.2530 ', 'GAN acc 0.9922', 'Discriminator loss 0.2503', 'Discriminator accuracy 0.9355', 'Total loss: 0.5033', 'for batch', 40)
('GAN loss 0.2461 ', 'GAN acc 0.9922', 'Discriminator loss 0.2635', 'Discriminator accuracy 0.9355', 'Total loss: 0.5095', 'for batch', 41)
('GAN loss 0.2476 ', 'GAN acc 0.9922', 'Discriminator loss 0.4048', 'Discriminator accuracy 0.8164', 'Total loss: 0.6524', 'for batch', 42)
('GAN loss 0.2422 ', 'GAN acc 0.9922', 'Discriminator loss 0.2013', 'Discriminator accuracy 0.9590', 'Total loss: 0.4435', 'for batch', 43)
('GAN loss 0.2604 ', 'GAN acc 0.9883', 'Discriminator loss 0.5331', 'Discriminator accuracy 0.7500', 'Total loss: 0.7935', 'for batch', 44)
('GAN loss 0.2406 ', 'GAN acc 0.9961', 'Discriminator loss 0.3146', 'Discriminator accuracy 0.8770', 'Total loss: 0.5552', 'for batch', 45)
('GAN loss 0.2403 ', 'GAN acc 0.9961', 'Discriminator loss 0.3263', 'Discriminator accuracy 0.8750', 'Total loss: 0.5666', 'for batch', 46)
('GAN loss 0.2468 ', 'GAN acc 0.9922', 'Discriminator loss 0.2790', 'Discriminator accuracy 0.9023', 'Total loss: 0.5257', 'for batch', 47)
('GAN loss 0.2199 ', 'GAN acc 0.9961', 'Discriminator loss 0.2323', 'Discriminator accuracy 0.9414', 'Total loss: 0.4522', 'for batch', 48)
('GAN loss 0.2099 ', 'GAN acc 0.9922', 'Discriminator loss 0.2441', 'Discriminator accuracy 0.9238', 'Total loss: 0.4540', 'for batch', 49)
('GAN loss 0.1986 ', 'GAN acc 0.9961', 'Discriminator loss 0.2898', 'Discriminator accuracy 0.8848', 'Total loss: 0.4884', 'for batch', 50)
('GAN loss 0.1993 ', 'GAN acc 0.9922', 'Discriminator loss 0.2128', 'Discriminator accuracy 0.9395', 'Total loss: 0.4122', 'for batch', 51)
('GAN loss 0.1922 ', 'GAN acc 0.9961', 'Discriminator loss 0.2062', 'Discriminator accuracy 0.9336', 'Total loss: 0.3984', 'for batch', 52)
('GAN loss 0.1823 ', 'GAN acc 0.9961', 'Discriminator loss 0.2015', 'Discriminator accuracy 0.9395', 'Total loss: 0.3839', 'for batch', 53)
('GAN loss 0.1784 ', 'GAN acc 0.9922', 'Discriminator loss 0.1810', 'Discriminator accuracy 0.9375', 'Total loss: 0.3593', 'for batch', 54)
('GAN loss 0.1718 ', 'GAN acc 0.9922', 'Discriminator loss 0.1076', 'Discriminator accuracy 1.0000', 'Total loss: 0.2794', 'for batch', 55)
('GAN loss 0.1582 ', 'GAN acc 0.9883', 'Discriminator loss 0.3246', 'Discriminator accuracy 0.8789', 'Total loss: 0.4828', 'for batch', 56)
('GAN loss 0.1450 ', 'GAN acc 0.9922', 'Discriminator loss 0.0950', 'Discriminator accuracy 0.9980', 'Total loss: 0.2399', 'for batch', 57)
('GAN loss 0.1361 ', 'GAN acc 0.9961', 'Discriminator loss 0.2355', 'Discriminator accuracy 0.9180', 'Total loss: 0.3715', 'for batch', 58)
('GAN loss 0.1393 ', 'GAN acc 0.9922', 'Discriminator loss 0.0836', 'Discriminator accuracy 0.9941', 'Total loss: 0.2228', 'for batch', 59)
('GAN loss 0.1236 ', 'GAN acc 0.9961', 'Discriminator loss 0.1484', 'Discriminator accuracy 0.9414', 'Total loss: 0.2720', 'for batch', 60)
('GAN loss 0.1230 ', 'GAN acc 0.9922', 'Discriminator loss 0.2029', 'Discriminator accuracy 0.9375', 'Total loss: 0.3259', 'for batch', 61)
('GAN loss 0.1413 ', 'GAN acc 0.9883', 'Discriminator loss 0.3747', 'Discriminator accuracy 0.8555', 'Total loss: 0.5160', 'for batch', 62)
('GAN loss 0.1318 ', 'GAN acc 0.9922', 'Discriminator loss 0.1694', 'Discriminator accuracy 0.9395', 'Total loss: 0.3012', 'for batch', 63)
('GAN loss 0.1253 ', 'GAN acc 0.9961', 'Discriminator loss 0.3443', 'Discriminator accuracy 0.8750', 'Total loss: 0.4697', 'for batch', 64)
('GAN loss 0.1386 ', 'GAN acc 0.9961', 'Discriminator loss 0.2147', 'Discriminator accuracy 0.9141', 'Total loss: 0.3533', 'for batch', 65)
('GAN loss 0.1360 ', 'GAN acc 0.9961', 'Discriminator loss 0.2740', 'Discriminator accuracy 0.8848', 'Total loss: 0.4100', 'for batch', 66)
('GAN loss 0.1275 ', 'GAN acc 0.9961', 'Discriminator loss 0.2998', 'Discriminator accuracy 0.8652', 'Total loss: 0.4273', 'for batch', 67)
('GAN loss 0.1358 ', 'GAN acc 0.9844', 'Discriminator loss 0.1446', 'Discriminator accuracy 0.9844', 'Total loss: 0.2803', 'for batch', 68)
('GAN loss 0.1384 ', 'GAN acc 0.9883', 'Discriminator loss 0.2997', 'Discriminator accuracy 0.8770', 'Total loss: 0.4381', 'for batch', 69)
('GAN loss 0.1326 ', 'GAN acc 0.9922', 'Discriminator loss 0.1940', 'Discriminator accuracy 0.9395', 'Total loss: 0.3266', 'for batch', 70)
('GAN loss 0.1272 ', 'GAN acc 0.9883', 'Discriminator loss 0.0757', 'Discriminator accuracy 0.9980', 'Total loss: 0.2029', 'for batch', 71)
('GAN loss 0.1255 ', 'GAN acc 0.9922', 'Discriminator loss 0.4639', 'Discriminator accuracy 0.8223', 'Total loss: 0.5895', 'for batch', 72)
('GAN loss 0.1667 ', 'GAN acc 0.9922', 'Discriminator loss 0.3078', 'Discriminator accuracy 0.8691', 'Total loss: 0.4745', 'for batch', 73)
('GAN loss 0.1465 ', 'GAN acc 0.9922', 'Discriminator loss 0.1884', 'Discriminator accuracy 0.9375', 'Total loss: 0.3348', 'for batch', 74)
('GAN loss 0.1675 ', 'GAN acc 0.9883', 'Discriminator loss 0.2751', 'Discriminator accuracy 0.8906', 'Total loss: 0.4427', 'for batch', 75)
('GAN loss 0.1417 ', 'GAN acc 0.9961', 'Discriminator loss 0.3421', 'Discriminator accuracy 0.8770', 'Total loss: 0.4838', 'for batch', 76)
('GAN loss 0.1439 ', 'GAN acc 0.9961', 'Discriminator loss 0.2016', 'Discriminator accuracy 0.9395', 'Total loss: 0.3456', 'for batch', 77)
('GAN loss 0.1756 ', 'GAN acc 0.9922', 'Discriminator loss 0.6126', 'Discriminator accuracy 0.7285', 'Total loss: 0.7882', 'for batch', 78)
('GAN loss 0.2096 ', 'GAN acc 0.9922', 'Discriminator loss 0.5632', 'Discriminator accuracy 0.7578', 'Total loss: 0.7728', 'for batch', 79)
('GAN loss 0.2100 ', 'GAN acc 0.9961', 'Discriminator loss 0.2742', 'Discriminator accuracy 0.8926', 'Total loss: 0.4843', 'for batch', 80)
('GAN loss 0.2119 ', 'GAN acc 0.9961', 'Discriminator loss 0.2695', 'Discriminator accuracy 0.9121', 'Total loss: 0.4814', 'for batch', 81)
('GAN loss 0.2398 ', 'GAN acc 0.9883', 'Discriminator loss 0.4794', 'Discriminator accuracy 0.7676', 'Total loss: 0.7192', 'for batch', 82)
('GAN loss 0.2796 ', 'GAN acc 0.9922', 'Discriminator loss 0.4653', 'Discriminator accuracy 0.7969', 'Total loss: 0.7449', 'for batch', 83)
('GAN loss 0.2280 ', 'GAN acc 0.9961', 'Discriminator loss 0.4441', 'Discriminator accuracy 0.7656', 'Total loss: 0.6721', 'for batch', 84)
('GAN loss 0.2645 ', 'GAN acc 0.9883', 'Discriminator loss 0.4080', 'Discriminator accuracy 0.8145', 'Total loss: 0.6725', 'for batch', 85)
('GAN loss 0.2603 ', 'GAN acc 0.9922', 'Discriminator loss 0.3993', 'Discriminator accuracy 0.8164', 'Total loss: 0.6596', 'for batch', 86)
('GAN loss 0.2603 ', 'GAN acc 0.9922', 'Discriminator loss 0.3000', 'Discriminator accuracy 0.8535', 'Total loss: 0.5603', 'for batch', 87)
('GAN loss 0.2851 ', 'GAN acc 0.9922', 'Discriminator loss 0.5273', 'Discriminator accuracy 0.7227', 'Total loss: 0.8124', 'for batch', 88)
('GAN loss 0.2942 ', 'GAN acc 0.9883', 'Discriminator loss 0.2329', 'Discriminator accuracy 0.9316', 'Total loss: 0.5271', 'for batch', 89)
('GAN loss 0.2600 ', 'GAN acc 0.9922', 'Discriminator loss 0.2401', 'Discriminator accuracy 0.9336', 'Total loss: 0.5000', 'for batch', 90)
('GAN loss 0.2478 ', 'GAN acc 0.9961', 'Discriminator loss 0.2607', 'Discriminator accuracy 0.9043', 'Total loss: 0.5085', 'for batch', 91)
('GAN loss 0.2348 ', 'GAN acc 0.9961', 'Discriminator loss 0.3972', 'Discriminator accuracy 0.8105', 'Total loss: 0.6320', 'for batch', 92)
('GAN loss 0.2286 ', 'GAN acc 0.9961', 'Discriminator loss 0.1872', 'Discriminator accuracy 0.9551', 'Total loss: 0.4158', 'for batch', 93)
('GAN loss 0.2037 ', 'GAN acc 0.9961', 'Discriminator loss 0.1448', 'Discriminator accuracy 0.9863', 'Total loss: 0.3486', 'for batch', 94)
('GAN loss 0.2118 ', 'GAN acc 0.9922', 'Discriminator loss 0.5181', 'Discriminator accuracy 0.7578', 'Total loss: 0.7299', 'for batch', 95)
('GAN loss 0.2087 ', 'GAN acc 0.9961', 'Discriminator loss 0.2717', 'Discriminator accuracy 0.8887', 'Total loss: 0.4804', 'for batch', 96)
('GAN loss 0.2169 ', 'GAN acc 0.9883', 'Discriminator loss 0.2296', 'Discriminator accuracy 0.9219', 'Total loss: 0.4465', 'for batch', 97)
('GAN loss 0.2087 ', 'GAN acc 0.9922', 'Discriminator loss 0.2410', 'Discriminator accuracy 0.9297', 'Total loss: 0.4498', 'for batch', 98)
('GAN loss 0.2138 ', 'GAN acc 0.9922', 'Discriminator loss 0.2697', 'Discriminator accuracy 0.8770', 'Total loss: 0.4835', 'for batch', 99)
('GAN loss 0.1826 ', 'GAN acc 0.9961', 'Discriminator loss 0.2320', 'Discriminator accuracy 0.9395', 'Total loss: 0.4146', 'for batch', 100)
('GAN loss 0.1607 ', 'GAN acc 0.9961', 'Discriminator loss 0.1508', 'Discriminator accuracy 0.9395', 'Total loss: 0.3115', 'for batch', 101)
('GAN loss 0.1687 ', 'GAN acc 0.9883', 'Discriminator loss 0.2085', 'Discriminator accuracy 0.9395', 'Total loss: 0.3772', 'for batch', 102)
('GAN loss 0.1788 ', 'GAN acc 0.9922', 'Discriminator loss 0.6300', 'Discriminator accuracy 0.6992', 'Total loss: 0.8088', 'for batch', 103)
('GAN loss 0.1940 ', 'GAN acc 0.9922', 'Discriminator loss 0.2587', 'Discriminator accuracy 0.8906', 'Total loss: 0.4527', 'for batch', 104)
('GAN loss 0.1954 ', 'GAN acc 0.9922', 'Discriminator loss 0.2784', 'Discriminator accuracy 0.9141', 'Total loss: 0.4738', 'for batch', 105)
('GAN loss 0.1851 ', 'GAN acc 0.9922', 'Discriminator loss 0.2179', 'Discriminator accuracy 0.9199', 'Total loss: 0.4030', 'for batch', 106)
('GAN loss 0.1941 ', 'GAN acc 0.9922', 'Discriminator loss 0.3137', 'Discriminator accuracy 0.8789', 'Total loss: 0.5078', 'for batch', 107)
('GAN loss 0.1973 ', 'GAN acc 0.9961', 'Discriminator loss 0.4711', 'Discriminator accuracy 0.7969', 'Total loss: 0.6684', 'for batch', 108)
('GAN loss 0.1934 ', 'GAN acc 0.9961', 'Discriminator loss 0.1378', 'Discriminator accuracy 0.9746', 'Total loss: 0.3312', 'for batch', 109)
('GAN loss 0.2008 ', 'GAN acc 0.9883', 'Discriminator loss 0.2898', 'Discriminator accuracy 0.8809', 'Total loss: 0.4905', 'for batch', 110)
('GAN loss 0.1943 ', 'GAN acc 0.9961', 'Discriminator loss 0.1865', 'Discriminator accuracy 0.9316', 'Total loss: 0.3808', 'for batch', 111)
('GAN loss 0.1770 ', 'GAN acc 0.9961', 'Discriminator loss 0.1051', 'Discriminator accuracy 0.9961', 'Total loss: 0.2821', 'for batch', 112)
('GAN loss 0.1547 ', 'GAN acc 0.9961', 'Discriminator loss 0.1024', 'Discriminator accuracy 0.9941', 'Total loss: 0.2572', 'for batch', 113)
('GAN loss 0.1415 ', 'GAN acc 0.9961', 'Discriminator loss 0.0692', 'Discriminator accuracy 1.0000', 'Total loss: 0.2107', 'for batch', 114)
('GAN loss 0.1391 ', 'GAN acc 0.9922', 'Discriminator loss 0.2854', 'Discriminator accuracy 0.8789', 'Total loss: 0.4245', 'for batch', 115)
('GAN loss 0.1386 ', 'GAN acc 0.9961', 'Discriminator loss 0.1890', 'Discriminator accuracy 0.9355', 'Total loss: 0.3277', 'for batch', 116)
('GAN loss 0.1351 ', 'GAN acc 0.9922', 'Discriminator loss 0.0745', 'Discriminator accuracy 0.9961', 'Total loss: 0.2096', 'for batch', 117)
('GAN loss 0.1223 ', 'GAN acc 0.9961', 'Discriminator loss 0.1211', 'Discriminator accuracy 0.9512', 'Total loss: 0.2435', 'for batch', 118)
('GAN loss 0.1493 ', 'GAN acc 0.9922', 'Discriminator loss 0.5052', 'Discriminator accuracy 0.7734', 'Total loss: 0.6546', 'for batch', 119)
('GAN loss 0.1309 ', 'GAN acc 0.9922', 'Discriminator loss 0.2617', 'Discriminator accuracy 0.8945', 'Total loss: 0.3926', 'for batch', 120)
('GAN loss 0.1279 ', 'GAN acc 0.9922', 'Discriminator loss 0.2094', 'Discriminator accuracy 0.9316', 'Total loss: 0.3373', 'for batch', 121)
('GAN loss 0.1277 ', 'GAN acc 0.9922', 'Discriminator loss 0.2950', 'Discriminator accuracy 0.8672', 'Total loss: 0.4227', 'for batch', 122)
('GAN loss 0.1219 ', 'GAN acc 1.0000', 'Discriminator loss 0.0536', 'Discriminator accuracy 1.0000', 'Total loss: 0.1755', 'for batch', 123)
('GAN loss 0.1247 ', 'GAN acc 0.9883', 'Discriminator loss 0.0615', 'Discriminator accuracy 0.9941', 'Total loss: 0.1861', 'for batch', 124)
('GAN loss 0.1189 ', 'GAN acc 0.9922', 'Discriminator loss 0.2126', 'Discriminator accuracy 0.9336', 'Total loss: 0.3315', 'for batch', 125)
('GAN loss 0.1130 ', 'GAN acc 0.9922', 'Discriminator loss 0.0607', 'Discriminator accuracy 0.9980', 'Total loss: 0.1737', 'for batch', 126)
('GAN loss 15.0079 ', 'GAN acc 0.0000', 'Discriminator loss 0.0492', 'Discriminator accuracy 1.0000', 'Total loss: 15.0571', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.91956985)
('DISCRIMINATOR_Imagem FAKE=', 0.85466307)
('Discriminator trained', 0, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.352806')
----------------------------------
('Epoch', 28, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7854 ', 'GAN acc 0.9570', 'Discriminator loss 1.1761', 'Discriminator accuracy 0.5254', 'Total loss: 1.9615', 'for batch', 0)
('GAN loss 1.4233 ', 'GAN acc 0.8477', 'Discriminator loss 0.8785', 'Discriminator accuracy 0.5469', 'Total loss: 2.3018', 'for batch', 1)
('GAN loss 1.6329 ', 'GAN acc 0.8906', 'Discriminator loss 0.7661', 'Discriminator accuracy 0.5488', 'Total loss: 2.3990', 'for batch', 2)
('GAN loss 1.6338 ', 'GAN acc 0.7031', 'Discriminator loss 0.6926', 'Discriminator accuracy 0.5391', 'Total loss: 2.3263', 'for batch', 3)
('GAN loss 1.3896 ', 'GAN acc 0.7188', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.5352', 'Total loss: 2.0764', 'for batch', 4)
('GAN loss 1.3805 ', 'GAN acc 0.7109', 'Discriminator loss 0.6462', 'Discriminator accuracy 0.5742', 'Total loss: 2.0267', 'for batch', 5)
('GAN loss 1.6900 ', 'GAN acc 0.6953', 'Discriminator loss 0.6240', 'Discriminator accuracy 0.5723', 'Total loss: 2.3140', 'for batch', 6)
('GAN loss 1.5177 ', 'GAN acc 0.7031', 'Discriminator loss 0.6347', 'Discriminator accuracy 0.5586', 'Total loss: 2.1523', 'for batch', 7)
('GAN loss 1.4616 ', 'GAN acc 0.7305', 'Discriminator loss 0.6365', 'Discriminator accuracy 0.5586', 'Total loss: 2.0981', 'for batch', 8)
('GAN loss 1.4871 ', 'GAN acc 0.7695', 'Discriminator loss 0.6433', 'Discriminator accuracy 0.5332', 'Total loss: 2.1304', 'for batch', 9)
('GAN loss 1.2893 ', 'GAN acc 0.7695', 'Discriminator loss 0.6352', 'Discriminator accuracy 0.5645', 'Total loss: 1.9245', 'for batch', 10)
('GAN loss 1.3429 ', 'GAN acc 0.7930', 'Discriminator loss 0.6417', 'Discriminator accuracy 0.5566', 'Total loss: 1.9845', 'for batch', 11)
('GAN loss 1.2243 ', 'GAN acc 0.6680', 'Discriminator loss 0.6669', 'Discriminator accuracy 0.5488', 'Total loss: 1.8913', 'for batch', 12)
('GAN loss 1.1416 ', 'GAN acc 0.7109', 'Discriminator loss 0.6636', 'Discriminator accuracy 0.5449', 'Total loss: 1.8052', 'for batch', 13)
('GAN loss 1.2172 ', 'GAN acc 0.7891', 'Discriminator loss 0.6771', 'Discriminator accuracy 0.5059', 'Total loss: 1.8943', 'for batch', 14)
('GAN loss 1.1207 ', 'GAN acc 0.7383', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.5234', 'Total loss: 1.8044', 'for batch', 15)
('GAN loss 1.0357 ', 'GAN acc 0.5430', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5020', 'Total loss: 1.7230', 'for batch', 16)
('GAN loss 1.1120 ', 'GAN acc 0.3555', 'Discriminator loss 0.6419', 'Discriminator accuracy 0.6211', 'Total loss: 1.7540', 'for batch', 17)
('GAN loss 1.0360 ', 'GAN acc 0.3164', 'Discriminator loss 0.6341', 'Discriminator accuracy 0.6289', 'Total loss: 1.6701', 'for batch', 18)
('GAN loss 1.1027 ', 'GAN acc 0.3594', 'Discriminator loss 0.6271', 'Discriminator accuracy 0.6172', 'Total loss: 1.7298', 'for batch', 19)
('GAN loss 1.0130 ', 'GAN acc 0.3477', 'Discriminator loss 0.6179', 'Discriminator accuracy 0.6035', 'Total loss: 1.6309', 'for batch', 20)
('GAN loss 1.0095 ', 'GAN acc 0.3906', 'Discriminator loss 0.6519', 'Discriminator accuracy 0.5527', 'Total loss: 1.6614', 'for batch', 21)
('GAN loss 1.1179 ', 'GAN acc 0.4180', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5508', 'Total loss: 1.7958', 'for batch', 22)
('GAN loss 1.0661 ', 'GAN acc 0.4844', 'Discriminator loss 0.6825', 'Discriminator accuracy 0.5098', 'Total loss: 1.7487', 'for batch', 23)
('GAN loss 1.1345 ', 'GAN acc 0.5039', 'Discriminator loss 0.6587', 'Discriminator accuracy 0.5430', 'Total loss: 1.7933', 'for batch', 24)
('GAN loss 1.0122 ', 'GAN acc 0.6758', 'Discriminator loss 0.6698', 'Discriminator accuracy 0.5215', 'Total loss: 1.6820', 'for batch', 25)
('GAN loss 0.9159 ', 'GAN acc 0.6836', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.5547', 'Total loss: 1.5836', 'for batch', 26)
('GAN loss 0.9232 ', 'GAN acc 0.7422', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5566', 'Total loss: 1.5856', 'for batch', 27)
('GAN loss 0.9040 ', 'GAN acc 0.7031', 'Discriminator loss 0.6845', 'Discriminator accuracy 0.5312', 'Total loss: 1.5885', 'for batch', 28)
('GAN loss 0.8920 ', 'GAN acc 0.6055', 'Discriminator loss 0.6660', 'Discriminator accuracy 0.5273', 'Total loss: 1.5580', 'for batch', 29)
('GAN loss 0.9895 ', 'GAN acc 0.6875', 'Discriminator loss 0.6674', 'Discriminator accuracy 0.5234', 'Total loss: 1.6570', 'for batch', 30)
('GAN loss 0.8891 ', 'GAN acc 0.6133', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5195', 'Total loss: 1.5598', 'for batch', 31)
('GAN loss 0.9450 ', 'GAN acc 0.5898', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5156', 'Total loss: 1.6153', 'for batch', 32)
('GAN loss 0.8565 ', 'GAN acc 0.6055', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.4922', 'Total loss: 1.5325', 'for batch', 33)
('GAN loss 0.9160 ', 'GAN acc 0.6055', 'Discriminator loss 0.6663', 'Discriminator accuracy 0.5000', 'Total loss: 1.5823', 'for batch', 34)
('GAN loss 0.9228 ', 'GAN acc 0.6211', 'Discriminator loss 0.6616', 'Discriminator accuracy 0.5137', 'Total loss: 1.5844', 'for batch', 35)
('GAN loss 0.8406 ', 'GAN acc 0.7070', 'Discriminator loss 0.6674', 'Discriminator accuracy 0.5215', 'Total loss: 1.5080', 'for batch', 36)
('GAN loss 0.8905 ', 'GAN acc 0.7031', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.4863', 'Total loss: 1.5659', 'for batch', 37)
('GAN loss 0.9446 ', 'GAN acc 0.5820', 'Discriminator loss 0.6593', 'Discriminator accuracy 0.5312', 'Total loss: 1.6039', 'for batch', 38)
('GAN loss 1.0151 ', 'GAN acc 0.6367', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.5449', 'Total loss: 1.6708', 'for batch', 39)
('GAN loss 0.8350 ', 'GAN acc 0.7578', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5039', 'Total loss: 1.5028', 'for batch', 40)
('GAN loss 0.8556 ', 'GAN acc 0.8242', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.5332', 'Total loss: 1.5134', 'for batch', 41)
('GAN loss 0.7817 ', 'GAN acc 0.8320', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.4863', 'Total loss: 1.4613', 'for batch', 42)
('GAN loss 0.8446 ', 'GAN acc 0.8164', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.5430', 'Total loss: 1.5065', 'for batch', 43)
('GAN loss 0.9038 ', 'GAN acc 0.7617', 'Discriminator loss 0.6544', 'Discriminator accuracy 0.5703', 'Total loss: 1.5581', 'for batch', 44)
('GAN loss 0.8673 ', 'GAN acc 0.7930', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.5547', 'Total loss: 1.5241', 'for batch', 45)
('GAN loss 0.9120 ', 'GAN acc 0.7500', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.5137', 'Total loss: 1.5792', 'for batch', 46)
('GAN loss 0.8281 ', 'GAN acc 0.7070', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5449', 'Total loss: 1.5043', 'for batch', 47)
('GAN loss 0.9036 ', 'GAN acc 0.6094', 'Discriminator loss 0.6790', 'Discriminator accuracy 0.5234', 'Total loss: 1.5826', 'for batch', 48)
('GAN loss 1.0426 ', 'GAN acc 0.5000', 'Discriminator loss 0.6896', 'Discriminator accuracy 0.4883', 'Total loss: 1.7322', 'for batch', 49)
('GAN loss 0.9167 ', 'GAN acc 0.2930', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.5430', 'Total loss: 1.5844', 'for batch', 50)
('GAN loss 1.0207 ', 'GAN acc 0.2695', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5215', 'Total loss: 1.6833', 'for batch', 51)
('GAN loss 0.9013 ', 'GAN acc 0.4062', 'Discriminator loss 0.6553', 'Discriminator accuracy 0.5703', 'Total loss: 1.5566', 'for batch', 52)
('GAN loss 0.9286 ', 'GAN acc 0.4922', 'Discriminator loss 0.6570', 'Discriminator accuracy 0.5684', 'Total loss: 1.5856', 'for batch', 53)
('GAN loss 0.9602 ', 'GAN acc 0.5195', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.5625', 'Total loss: 1.6213', 'for batch', 54)
('GAN loss 0.9519 ', 'GAN acc 0.6172', 'Discriminator loss 0.6658', 'Discriminator accuracy 0.5488', 'Total loss: 1.6177', 'for batch', 55)
('GAN loss 0.9331 ', 'GAN acc 0.6445', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5332', 'Total loss: 1.6145', 'for batch', 56)
('GAN loss 0.8988 ', 'GAN acc 0.7227', 'Discriminator loss 0.6742', 'Discriminator accuracy 0.5059', 'Total loss: 1.5730', 'for batch', 57)
('GAN loss 0.8904 ', 'GAN acc 0.6602', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5176', 'Total loss: 1.5672', 'for batch', 58)
('GAN loss 0.8791 ', 'GAN acc 0.6758', 'Discriminator loss 0.6795', 'Discriminator accuracy 0.5410', 'Total loss: 1.5586', 'for batch', 59)
('GAN loss 0.8727 ', 'GAN acc 0.6445', 'Discriminator loss 0.6729', 'Discriminator accuracy 0.5352', 'Total loss: 1.5456', 'for batch', 60)
('GAN loss 0.7942 ', 'GAN acc 0.6602', 'Discriminator loss 0.6705', 'Discriminator accuracy 0.5586', 'Total loss: 1.4647', 'for batch', 61)
('GAN loss 0.8308 ', 'GAN acc 0.6211', 'Discriminator loss 0.6637', 'Discriminator accuracy 0.5703', 'Total loss: 1.4946', 'for batch', 62)
('GAN loss 0.9116 ', 'GAN acc 0.6016', 'Discriminator loss 0.6600', 'Discriminator accuracy 0.5859', 'Total loss: 1.5717', 'for batch', 63)
('GAN loss 0.8737 ', 'GAN acc 0.6641', 'Discriminator loss 0.6583', 'Discriminator accuracy 0.5879', 'Total loss: 1.5319', 'for batch', 64)
('GAN loss 0.9087 ', 'GAN acc 0.7773', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5215', 'Total loss: 1.5853', 'for batch', 65)
('GAN loss 0.8555 ', 'GAN acc 0.7461', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.4902', 'Total loss: 1.5351', 'for batch', 66)
('GAN loss 0.8791 ', 'GAN acc 0.7266', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.5117', 'Total loss: 1.5639', 'for batch', 67)
('GAN loss 0.8824 ', 'GAN acc 0.7461', 'Discriminator loss 0.6710', 'Discriminator accuracy 0.5078', 'Total loss: 1.5533', 'for batch', 68)
('GAN loss 0.9069 ', 'GAN acc 0.6953', 'Discriminator loss 0.6692', 'Discriminator accuracy 0.5137', 'Total loss: 1.5760', 'for batch', 69)
('GAN loss 0.9686 ', 'GAN acc 0.7031', 'Discriminator loss 0.6640', 'Discriminator accuracy 0.5488', 'Total loss: 1.6327', 'for batch', 70)
('GAN loss 0.9324 ', 'GAN acc 0.7227', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.5566', 'Total loss: 1.5930', 'for batch', 71)
('GAN loss 0.8574 ', 'GAN acc 0.7500', 'Discriminator loss 0.6615', 'Discriminator accuracy 0.5469', 'Total loss: 1.5189', 'for batch', 72)
('GAN loss 0.8022 ', 'GAN acc 0.6797', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.5430', 'Total loss: 1.4575', 'for batch', 73)
('GAN loss 0.8235 ', 'GAN acc 0.7109', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.5371', 'Total loss: 1.4835', 'for batch', 74)
('GAN loss 0.7767 ', 'GAN acc 0.7773', 'Discriminator loss 0.6643', 'Discriminator accuracy 0.5352', 'Total loss: 1.4409', 'for batch', 75)
('GAN loss 0.9255 ', 'GAN acc 0.8047', 'Discriminator loss 0.6661', 'Discriminator accuracy 0.5117', 'Total loss: 1.5916', 'for batch', 76)
('GAN loss 1.0446 ', 'GAN acc 0.7344', 'Discriminator loss 0.6635', 'Discriminator accuracy 0.5156', 'Total loss: 1.7082', 'for batch', 77)
('GAN loss 1.2390 ', 'GAN acc 0.7266', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5039', 'Total loss: 1.9016', 'for batch', 78)
('GAN loss 0.9657 ', 'GAN acc 0.8281', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.5137', 'Total loss: 1.6308', 'for batch', 79)
('GAN loss 0.9097 ', 'GAN acc 0.8672', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.5215', 'Total loss: 1.5716', 'for batch', 80)
('GAN loss 0.8200 ', 'GAN acc 0.8281', 'Discriminator loss 0.6633', 'Discriminator accuracy 0.5371', 'Total loss: 1.4833', 'for batch', 81)
('GAN loss 0.8304 ', 'GAN acc 0.8086', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.5234', 'Total loss: 1.4945', 'for batch', 82)
('GAN loss 0.8819 ', 'GAN acc 0.8555', 'Discriminator loss 0.6613', 'Discriminator accuracy 0.5352', 'Total loss: 1.5432', 'for batch', 83)
('GAN loss 0.8091 ', 'GAN acc 0.7773', 'Discriminator loss 0.6450', 'Discriminator accuracy 0.5684', 'Total loss: 1.4541', 'for batch', 84)
('GAN loss 0.8949 ', 'GAN acc 0.6953', 'Discriminator loss 0.6586', 'Discriminator accuracy 0.5703', 'Total loss: 1.5535', 'for batch', 85)
('GAN loss 0.9206 ', 'GAN acc 0.6680', 'Discriminator loss 0.6499', 'Discriminator accuracy 0.5957', 'Total loss: 1.5705', 'for batch', 86)
('GAN loss 0.9521 ', 'GAN acc 0.6445', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5234', 'Total loss: 1.6244', 'for batch', 87)
('GAN loss 0.9582 ', 'GAN acc 0.6836', 'Discriminator loss 0.6674', 'Discriminator accuracy 0.5156', 'Total loss: 1.6256', 'for batch', 88)
('GAN loss 1.0312 ', 'GAN acc 0.6680', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.4902', 'Total loss: 1.7014', 'for batch', 89)
('GAN loss 1.0144 ', 'GAN acc 0.5664', 'Discriminator loss 0.6717', 'Discriminator accuracy 0.4922', 'Total loss: 1.6861', 'for batch', 90)
('GAN loss 0.9002 ', 'GAN acc 0.6523', 'Discriminator loss 0.6692', 'Discriminator accuracy 0.4922', 'Total loss: 1.5694', 'for batch', 91)
('GAN loss 1.0524 ', 'GAN acc 0.5820', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5371', 'Total loss: 1.7163', 'for batch', 92)
('GAN loss 0.8673 ', 'GAN acc 0.7344', 'Discriminator loss 0.6569', 'Discriminator accuracy 0.5000', 'Total loss: 1.5242', 'for batch', 93)
('GAN loss 0.8428 ', 'GAN acc 0.7031', 'Discriminator loss 0.6785', 'Discriminator accuracy 0.4980', 'Total loss: 1.5213', 'for batch', 94)
('GAN loss 0.8092 ', 'GAN acc 0.7461', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5078', 'Total loss: 1.4744', 'for batch', 95)
('GAN loss 0.8397 ', 'GAN acc 0.6719', 'Discriminator loss 0.6719', 'Discriminator accuracy 0.5156', 'Total loss: 1.5116', 'for batch', 96)
('GAN loss 0.8389 ', 'GAN acc 0.5977', 'Discriminator loss 0.6900', 'Discriminator accuracy 0.5352', 'Total loss: 1.5288', 'for batch', 97)
('GAN loss 0.8438 ', 'GAN acc 0.5273', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5195', 'Total loss: 1.5262', 'for batch', 98)
('GAN loss 0.9828 ', 'GAN acc 0.4180', 'Discriminator loss 0.6905', 'Discriminator accuracy 0.5312', 'Total loss: 1.6734', 'for batch', 99)
('GAN loss 0.8818 ', 'GAN acc 0.3867', 'Discriminator loss 0.6694', 'Discriminator accuracy 0.5508', 'Total loss: 1.5512', 'for batch', 100)
('GAN loss 0.8879 ', 'GAN acc 0.4609', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.5664', 'Total loss: 1.5524', 'for batch', 101)
('GAN loss 0.9970 ', 'GAN acc 0.4805', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.5918', 'Total loss: 1.6632', 'for batch', 102)
('GAN loss 0.9235 ', 'GAN acc 0.5938', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5527', 'Total loss: 1.5982', 'for batch', 103)
('GAN loss 0.8736 ', 'GAN acc 0.6953', 'Discriminator loss 0.6770', 'Discriminator accuracy 0.5078', 'Total loss: 1.5506', 'for batch', 104)
('GAN loss 0.8856 ', 'GAN acc 0.8164', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.5371', 'Total loss: 1.5504', 'for batch', 105)
('GAN loss 0.8126 ', 'GAN acc 0.7305', 'Discriminator loss 0.6659', 'Discriminator accuracy 0.5293', 'Total loss: 1.4784', 'for batch', 106)
('GAN loss 0.7922 ', 'GAN acc 0.8047', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5195', 'Total loss: 1.4561', 'for batch', 107)
('GAN loss 0.8538 ', 'GAN acc 0.7773', 'Discriminator loss 0.6621', 'Discriminator accuracy 0.5508', 'Total loss: 1.5158', 'for batch', 108)
('GAN loss 0.8526 ', 'GAN acc 0.8438', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.5078', 'Total loss: 1.5211', 'for batch', 109)
('GAN loss 0.8882 ', 'GAN acc 0.8164', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5254', 'Total loss: 1.5526', 'for batch', 110)
('GAN loss 0.8635 ', 'GAN acc 0.8047', 'Discriminator loss 0.6702', 'Discriminator accuracy 0.5039', 'Total loss: 1.5338', 'for batch', 111)
('GAN loss 0.8216 ', 'GAN acc 0.8477', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5176', 'Total loss: 1.4964', 'for batch', 112)
('GAN loss 0.8001 ', 'GAN acc 0.8594', 'Discriminator loss 0.6806', 'Discriminator accuracy 0.4980', 'Total loss: 1.4807', 'for batch', 113)
('GAN loss 0.7591 ', 'GAN acc 0.8984', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5020', 'Total loss: 1.4327', 'for batch', 114)
('GAN loss 0.7854 ', 'GAN acc 0.8984', 'Discriminator loss 0.6638', 'Discriminator accuracy 0.5156', 'Total loss: 1.4492', 'for batch', 115)
('GAN loss 0.7940 ', 'GAN acc 0.8906', 'Discriminator loss 0.6722', 'Discriminator accuracy 0.5117', 'Total loss: 1.4662', 'for batch', 116)
('GAN loss 0.8031 ', 'GAN acc 0.8672', 'Discriminator loss 0.6549', 'Discriminator accuracy 0.5176', 'Total loss: 1.4580', 'for batch', 117)
('GAN loss 0.7929 ', 'GAN acc 0.8320', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.5293', 'Total loss: 1.4596', 'for batch', 118)
('GAN loss 0.7809 ', 'GAN acc 0.8477', 'Discriminator loss 0.6577', 'Discriminator accuracy 0.5430', 'Total loss: 1.4385', 'for batch', 119)
('GAN loss 0.8574 ', 'GAN acc 0.8242', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.5664', 'Total loss: 1.5170', 'for batch', 120)
('GAN loss 0.7906 ', 'GAN acc 0.8242', 'Discriminator loss 0.6716', 'Discriminator accuracy 0.5508', 'Total loss: 1.4622', 'for batch', 121)
('GAN loss 0.8444 ', 'GAN acc 0.7578', 'Discriminator loss 0.6483', 'Discriminator accuracy 0.5723', 'Total loss: 1.4926', 'for batch', 122)
('GAN loss 0.8535 ', 'GAN acc 0.7578', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5137', 'Total loss: 1.5168', 'for batch', 123)
('GAN loss 0.8094 ', 'GAN acc 0.8281', 'Discriminator loss 0.6712', 'Discriminator accuracy 0.4941', 'Total loss: 1.4806', 'for batch', 124)
('GAN loss 0.7911 ', 'GAN acc 0.8359', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.5078', 'Total loss: 1.4530', 'for batch', 125)
('GAN loss 0.7886 ', 'GAN acc 0.8477', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.5020', 'Total loss: 1.4571', 'for batch', 126)
('GAN loss 0.7864 ', 'GAN acc 0.7773', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5312', 'Total loss: 1.4504', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54392505)
('DISCRIMINATOR_Imagem FAKE=', 0.49614301)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.154571')
----------------------------------
('Epoch', 29, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7968 ', 'GAN acc 0.7422', 'Discriminator loss 0.6695', 'Discriminator accuracy 0.5352', 'Total loss: 1.4663', 'for batch', 0)
('GAN loss 0.8145 ', 'GAN acc 0.6836', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.5352', 'Total loss: 1.4877', 'for batch', 1)
('GAN loss 0.8159 ', 'GAN acc 0.5273', 'Discriminator loss 0.6779', 'Discriminator accuracy 0.5332', 'Total loss: 1.4938', 'for batch', 2)
('GAN loss 0.8526 ', 'GAN acc 0.4180', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5430', 'Total loss: 1.5358', 'for batch', 3)
('GAN loss 0.8604 ', 'GAN acc 0.3125', 'Discriminator loss 0.6913', 'Discriminator accuracy 0.4980', 'Total loss: 1.5517', 'for batch', 4)
('GAN loss 0.8983 ', 'GAN acc 0.2305', 'Discriminator loss 0.6615', 'Discriminator accuracy 0.5527', 'Total loss: 1.5597', 'for batch', 5)
('GAN loss 0.9074 ', 'GAN acc 0.2266', 'Discriminator loss 0.6647', 'Discriminator accuracy 0.5371', 'Total loss: 1.5720', 'for batch', 6)
('GAN loss 0.8866 ', 'GAN acc 0.3008', 'Discriminator loss 0.6687', 'Discriminator accuracy 0.6152', 'Total loss: 1.5553', 'for batch', 7)
('GAN loss 0.9088 ', 'GAN acc 0.3672', 'Discriminator loss 0.6411', 'Discriminator accuracy 0.6816', 'Total loss: 1.5500', 'for batch', 8)
('GAN loss 0.8060 ', 'GAN acc 0.4961', 'Discriminator loss 0.6532', 'Discriminator accuracy 0.6641', 'Total loss: 1.4592', 'for batch', 9)
('GAN loss 0.8414 ', 'GAN acc 0.5469', 'Discriminator loss 0.6449', 'Discriminator accuracy 0.6133', 'Total loss: 1.4863', 'for batch', 10)
('GAN loss 0.8654 ', 'GAN acc 0.6133', 'Discriminator loss 0.6520', 'Discriminator accuracy 0.6016', 'Total loss: 1.5174', 'for batch', 11)
('GAN loss 0.8553 ', 'GAN acc 0.7109', 'Discriminator loss 0.6741', 'Discriminator accuracy 0.5586', 'Total loss: 1.5294', 'for batch', 12)
('GAN loss 0.8696 ', 'GAN acc 0.7617', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.4902', 'Total loss: 1.5436', 'for batch', 13)
('GAN loss 0.9368 ', 'GAN acc 0.7617', 'Discriminator loss 0.6743', 'Discriminator accuracy 0.5039', 'Total loss: 1.6111', 'for batch', 14)
('GAN loss 0.8913 ', 'GAN acc 0.8086', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.4805', 'Total loss: 1.5679', 'for batch', 15)
('GAN loss 0.8334 ', 'GAN acc 0.7656', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.4941', 'Total loss: 1.5061', 'for batch', 16)
('GAN loss 0.8483 ', 'GAN acc 0.7266', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.4941', 'Total loss: 1.5190', 'for batch', 17)
('GAN loss 0.8633 ', 'GAN acc 0.4883', 'Discriminator loss 0.6749', 'Discriminator accuracy 0.5000', 'Total loss: 1.5382', 'for batch', 18)
('GAN loss 0.8310 ', 'GAN acc 0.7148', 'Discriminator loss 0.6715', 'Discriminator accuracy 0.5176', 'Total loss: 1.5026', 'for batch', 19)
('GAN loss 0.7897 ', 'GAN acc 0.7969', 'Discriminator loss 0.6666', 'Discriminator accuracy 0.4961', 'Total loss: 1.4563', 'for batch', 20)
('GAN loss 0.8010 ', 'GAN acc 0.7969', 'Discriminator loss 0.6692', 'Discriminator accuracy 0.4961', 'Total loss: 1.4702', 'for batch', 21)
('GAN loss 0.7845 ', 'GAN acc 0.8125', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5176', 'Total loss: 1.4502', 'for batch', 22)
('GAN loss 0.7834 ', 'GAN acc 0.7422', 'Discriminator loss 0.6365', 'Discriminator accuracy 0.5625', 'Total loss: 1.4199', 'for batch', 23)
('GAN loss 0.8734 ', 'GAN acc 0.4727', 'Discriminator loss 0.6614', 'Discriminator accuracy 0.5410', 'Total loss: 1.5347', 'for batch', 24)
('GAN loss 0.8262 ', 'GAN acc 0.7891', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5371', 'Total loss: 1.4905', 'for batch', 25)
('GAN loss 0.7546 ', 'GAN acc 0.9062', 'Discriminator loss 0.6664', 'Discriminator accuracy 0.4961', 'Total loss: 1.4210', 'for batch', 26)
('GAN loss 0.7642 ', 'GAN acc 0.9062', 'Discriminator loss 0.6558', 'Discriminator accuracy 0.5234', 'Total loss: 1.4200', 'for batch', 27)
('GAN loss 0.7707 ', 'GAN acc 0.9141', 'Discriminator loss 0.6531', 'Discriminator accuracy 0.5469', 'Total loss: 1.4238', 'for batch', 28)
('GAN loss 0.7401 ', 'GAN acc 0.8633', 'Discriminator loss 0.6513', 'Discriminator accuracy 0.5469', 'Total loss: 1.3914', 'for batch', 29)
('GAN loss 0.7507 ', 'GAN acc 0.7852', 'Discriminator loss 0.6579', 'Discriminator accuracy 0.5332', 'Total loss: 1.4086', 'for batch', 30)
('GAN loss 0.7703 ', 'GAN acc 0.7227', 'Discriminator loss 0.6474', 'Discriminator accuracy 0.5645', 'Total loss: 1.4177', 'for batch', 31)
('GAN loss 0.8042 ', 'GAN acc 0.6641', 'Discriminator loss 0.6598', 'Discriminator accuracy 0.5547', 'Total loss: 1.4640', 'for batch', 32)
('GAN loss 0.8083 ', 'GAN acc 0.4648', 'Discriminator loss 0.6617', 'Discriminator accuracy 0.5840', 'Total loss: 1.4700', 'for batch', 33)
('GAN loss 0.9306 ', 'GAN acc 0.3477', 'Discriminator loss 0.6475', 'Discriminator accuracy 0.5996', 'Total loss: 1.5781', 'for batch', 34)
('GAN loss 0.9825 ', 'GAN acc 0.3359', 'Discriminator loss 0.6291', 'Discriminator accuracy 0.6348', 'Total loss: 1.6117', 'for batch', 35)
('GAN loss 0.9673 ', 'GAN acc 0.5000', 'Discriminator loss 0.6688', 'Discriminator accuracy 0.5156', 'Total loss: 1.6361', 'for batch', 36)
('GAN loss 1.0488 ', 'GAN acc 0.5547', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.5684', 'Total loss: 1.7067', 'for batch', 37)
('GAN loss 0.9018 ', 'GAN acc 0.6328', 'Discriminator loss 0.6452', 'Discriminator accuracy 0.5391', 'Total loss: 1.5470', 'for batch', 38)
('GAN loss 0.9281 ', 'GAN acc 0.6719', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.5312', 'Total loss: 1.6124', 'for batch', 39)
('GAN loss 0.8174 ', 'GAN acc 0.7383', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5742', 'Total loss: 1.4899', 'for batch', 40)
('GAN loss 0.8506 ', 'GAN acc 0.5625', 'Discriminator loss 0.6412', 'Discriminator accuracy 0.6113', 'Total loss: 1.4917', 'for batch', 41)
('GAN loss 0.8312 ', 'GAN acc 0.6016', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.5273', 'Total loss: 1.5123', 'for batch', 42)
('GAN loss 0.8649 ', 'GAN acc 0.5820', 'Discriminator loss 0.6458', 'Discriminator accuracy 0.6309', 'Total loss: 1.5107', 'for batch', 43)
('GAN loss 0.7867 ', 'GAN acc 0.5977', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5762', 'Total loss: 1.4460', 'for batch', 44)
('GAN loss 0.7939 ', 'GAN acc 0.6211', 'Discriminator loss 0.6593', 'Discriminator accuracy 0.5488', 'Total loss: 1.4533', 'for batch', 45)
('GAN loss 0.8895 ', 'GAN acc 0.6016', 'Discriminator loss 0.6751', 'Discriminator accuracy 0.5137', 'Total loss: 1.5646', 'for batch', 46)
('GAN loss 0.8762 ', 'GAN acc 0.5703', 'Discriminator loss 0.6728', 'Discriminator accuracy 0.5664', 'Total loss: 1.5490', 'for batch', 47)
('GAN loss 0.8494 ', 'GAN acc 0.6328', 'Discriminator loss 0.6367', 'Discriminator accuracy 0.6270', 'Total loss: 1.4861', 'for batch', 48)
('GAN loss 0.9092 ', 'GAN acc 0.3828', 'Discriminator loss 0.6844', 'Discriminator accuracy 0.5098', 'Total loss: 1.5936', 'for batch', 49)
('GAN loss 0.7829 ', 'GAN acc 0.5039', 'Discriminator loss 0.6481', 'Discriminator accuracy 0.5645', 'Total loss: 1.4311', 'for batch', 50)
('GAN loss 0.8374 ', 'GAN acc 0.5820', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.5742', 'Total loss: 1.4931', 'for batch', 51)
('GAN loss 0.7939 ', 'GAN acc 0.6875', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.5430', 'Total loss: 1.4587', 'for batch', 52)
('GAN loss 0.8253 ', 'GAN acc 0.6484', 'Discriminator loss 0.6456', 'Discriminator accuracy 0.5586', 'Total loss: 1.4709', 'for batch', 53)
('GAN loss 0.8009 ', 'GAN acc 0.6523', 'Discriminator loss 0.6452', 'Discriminator accuracy 0.5605', 'Total loss: 1.4461', 'for batch', 54)
('GAN loss 0.9318 ', 'GAN acc 0.4609', 'Discriminator loss 0.6661', 'Discriminator accuracy 0.5391', 'Total loss: 1.5980', 'for batch', 55)
('GAN loss 0.7800 ', 'GAN acc 0.5312', 'Discriminator loss 0.6767', 'Discriminator accuracy 0.5195', 'Total loss: 1.4568', 'for batch', 56)
('GAN loss 0.7674 ', 'GAN acc 0.5859', 'Discriminator loss 0.6664', 'Discriminator accuracy 0.5762', 'Total loss: 1.4339', 'for batch', 57)
('GAN loss 0.7851 ', 'GAN acc 0.5820', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5469', 'Total loss: 1.4603', 'for batch', 58)
('GAN loss 0.7901 ', 'GAN acc 0.5352', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.5957', 'Total loss: 1.4549', 'for batch', 59)
('GAN loss 0.7670 ', 'GAN acc 0.5977', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.5645', 'Total loss: 1.4403', 'for batch', 60)
('GAN loss 0.7882 ', 'GAN acc 0.5195', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5645', 'Total loss: 1.4534', 'for batch', 61)
('GAN loss 0.7868 ', 'GAN acc 0.5430', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5684', 'Total loss: 1.4508', 'for batch', 62)
('GAN loss 0.7733 ', 'GAN acc 0.7422', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.4824', 'Total loss: 1.4374', 'for batch', 63)
('GAN loss 0.7855 ', 'GAN acc 0.7422', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.4824', 'Total loss: 1.4610', 'for batch', 64)
('GAN loss 0.7734 ', 'GAN acc 0.7109', 'Discriminator loss 0.6712', 'Discriminator accuracy 0.5098', 'Total loss: 1.4446', 'for batch', 65)
('GAN loss 0.7578 ', 'GAN acc 0.7617', 'Discriminator loss 0.6623', 'Discriminator accuracy 0.5312', 'Total loss: 1.4201', 'for batch', 66)
('GAN loss 0.8277 ', 'GAN acc 0.7578', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5000', 'Total loss: 1.5168', 'for batch', 67)
('GAN loss 0.8592 ', 'GAN acc 0.5820', 'Discriminator loss 0.6526', 'Discriminator accuracy 0.6250', 'Total loss: 1.5118', 'for batch', 68)
('GAN loss 0.8055 ', 'GAN acc 0.6797', 'Discriminator loss 0.6570', 'Discriminator accuracy 0.5977', 'Total loss: 1.4626', 'for batch', 69)
('GAN loss 0.8839 ', 'GAN acc 0.5938', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.5664', 'Total loss: 1.5501', 'for batch', 70)
('GAN loss 0.8560 ', 'GAN acc 0.6367', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.5586', 'Total loss: 1.5166', 'for batch', 71)
('GAN loss 0.7893 ', 'GAN acc 0.6484', 'Discriminator loss 0.6731', 'Discriminator accuracy 0.5547', 'Total loss: 1.4624', 'for batch', 72)
('GAN loss 0.7995 ', 'GAN acc 0.6602', 'Discriminator loss 0.6446', 'Discriminator accuracy 0.6055', 'Total loss: 1.4441', 'for batch', 73)
('GAN loss 0.7740 ', 'GAN acc 0.6562', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5312', 'Total loss: 1.4638', 'for batch', 74)
('GAN loss 0.7906 ', 'GAN acc 0.6445', 'Discriminator loss 0.6919', 'Discriminator accuracy 0.5195', 'Total loss: 1.4825', 'for batch', 75)
('GAN loss 0.7844 ', 'GAN acc 0.6914', 'Discriminator loss 0.6341', 'Discriminator accuracy 0.6992', 'Total loss: 1.4185', 'for batch', 76)
('GAN loss 0.7706 ', 'GAN acc 0.6562', 'Discriminator loss 0.6603', 'Discriminator accuracy 0.6094', 'Total loss: 1.4309', 'for batch', 77)
('GAN loss 0.7414 ', 'GAN acc 0.7344', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5352', 'Total loss: 1.4274', 'for batch', 78)
('GAN loss 0.7103 ', 'GAN acc 0.8008', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5176', 'Total loss: 1.3877', 'for batch', 79)
('GAN loss 0.7320 ', 'GAN acc 0.7734', 'Discriminator loss 0.6300', 'Discriminator accuracy 0.5820', 'Total loss: 1.3620', 'for batch', 80)
('GAN loss 0.6834 ', 'GAN acc 0.7617', 'Discriminator loss 0.6386', 'Discriminator accuracy 0.5840', 'Total loss: 1.3220', 'for batch', 81)
('GAN loss 0.7022 ', 'GAN acc 0.7930', 'Discriminator loss 0.6805', 'Discriminator accuracy 0.5020', 'Total loss: 1.3827', 'for batch', 82)
('GAN loss 0.7330 ', 'GAN acc 0.7500', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.4844', 'Total loss: 1.4210', 'for batch', 83)
('GAN loss 0.7557 ', 'GAN acc 0.8477', 'Discriminator loss 0.5926', 'Discriminator accuracy 0.6172', 'Total loss: 1.3483', 'for batch', 84)
('GAN loss 0.7980 ', 'GAN acc 0.8516', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.4961', 'Total loss: 1.4781', 'for batch', 85)
('GAN loss 0.7599 ', 'GAN acc 0.9141', 'Discriminator loss 0.6472', 'Discriminator accuracy 0.5137', 'Total loss: 1.4071', 'for batch', 86)
('GAN loss 0.7421 ', 'GAN acc 0.9180', 'Discriminator loss 0.6725', 'Discriminator accuracy 0.5176', 'Total loss: 1.4146', 'for batch', 87)
('GAN loss 0.7351 ', 'GAN acc 0.9141', 'Discriminator loss 0.6621', 'Discriminator accuracy 0.5410', 'Total loss: 1.3972', 'for batch', 88)
('GAN loss 0.7648 ', 'GAN acc 0.8906', 'Discriminator loss 0.6656', 'Discriminator accuracy 0.5508', 'Total loss: 1.4304', 'for batch', 89)
('GAN loss 0.7615 ', 'GAN acc 0.9062', 'Discriminator loss 0.6481', 'Discriminator accuracy 0.5957', 'Total loss: 1.4096', 'for batch', 90)
('GAN loss 0.7098 ', 'GAN acc 0.9180', 'Discriminator loss 0.6396', 'Discriminator accuracy 0.6230', 'Total loss: 1.3494', 'for batch', 91)
('GAN loss 0.6899 ', 'GAN acc 0.8750', 'Discriminator loss 0.6211', 'Discriminator accuracy 0.6035', 'Total loss: 1.3111', 'for batch', 92)
('GAN loss 0.6750 ', 'GAN acc 0.9492', 'Discriminator loss 0.6541', 'Discriminator accuracy 0.5039', 'Total loss: 1.3291', 'for batch', 93)
('GAN loss 0.6602 ', 'GAN acc 0.9531', 'Discriminator loss 0.6508', 'Discriminator accuracy 0.5430', 'Total loss: 1.3110', 'for batch', 94)
('GAN loss 0.6673 ', 'GAN acc 0.9414', 'Discriminator loss 0.5939', 'Discriminator accuracy 0.6055', 'Total loss: 1.2612', 'for batch', 95)
('GAN loss 0.6466 ', 'GAN acc 0.9648', 'Discriminator loss 0.6128', 'Discriminator accuracy 0.6309', 'Total loss: 1.2594', 'for batch', 96)
('GAN loss 0.6370 ', 'GAN acc 0.9336', 'Discriminator loss 0.6102', 'Discriminator accuracy 0.6074', 'Total loss: 1.2472', 'for batch', 97)
('GAN loss 0.6741 ', 'GAN acc 0.9492', 'Discriminator loss 0.6841', 'Discriminator accuracy 0.4824', 'Total loss: 1.3582', 'for batch', 98)
('GAN loss 0.7164 ', 'GAN acc 0.9258', 'Discriminator loss 0.6332', 'Discriminator accuracy 0.6270', 'Total loss: 1.3496', 'for batch', 99)
('GAN loss 0.7071 ', 'GAN acc 0.9648', 'Discriminator loss 0.5559', 'Discriminator accuracy 0.6582', 'Total loss: 1.2630', 'for batch', 100)
('GAN loss 0.7606 ', 'GAN acc 0.8594', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5430', 'Total loss: 1.4465', 'for batch', 101)
('GAN loss 0.9409 ', 'GAN acc 0.6250', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.5898', 'Total loss: 1.6264', 'for batch', 102)
('GAN loss 0.8923 ', 'GAN acc 0.6758', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5215', 'Total loss: 1.5818', 'for batch', 103)
('GAN loss 0.7912 ', 'GAN acc 0.8359', 'Discriminator loss 0.6640', 'Discriminator accuracy 0.5488', 'Total loss: 1.4552', 'for batch', 104)
('GAN loss 0.7418 ', 'GAN acc 0.8359', 'Discriminator loss 0.6398', 'Discriminator accuracy 0.5840', 'Total loss: 1.3816', 'for batch', 105)
('GAN loss 0.6999 ', 'GAN acc 0.8828', 'Discriminator loss 0.6229', 'Discriminator accuracy 0.5938', 'Total loss: 1.3228', 'for batch', 106)
('GAN loss 0.7289 ', 'GAN acc 0.8203', 'Discriminator loss 0.6023', 'Discriminator accuracy 0.6641', 'Total loss: 1.3313', 'for batch', 107)
('GAN loss 0.6865 ', 'GAN acc 0.9023', 'Discriminator loss 0.6130', 'Discriminator accuracy 0.6582', 'Total loss: 1.2995', 'for batch', 108)
('GAN loss 0.7106 ', 'GAN acc 0.8398', 'Discriminator loss 0.6296', 'Discriminator accuracy 0.6797', 'Total loss: 1.3402', 'for batch', 109)
('GAN loss 0.6762 ', 'GAN acc 0.9219', 'Discriminator loss 0.6061', 'Discriminator accuracy 0.5781', 'Total loss: 1.2823', 'for batch', 110)
('GAN loss 0.6777 ', 'GAN acc 0.9297', 'Discriminator loss 0.6916', 'Discriminator accuracy 0.5078', 'Total loss: 1.3693', 'for batch', 111)
('GAN loss 0.8217 ', 'GAN acc 0.8789', 'Discriminator loss 0.6708', 'Discriminator accuracy 0.5508', 'Total loss: 1.4925', 'for batch', 112)
('GAN loss 0.7815 ', 'GAN acc 0.7773', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.5605', 'Total loss: 1.4338', 'for batch', 113)
('GAN loss 0.8510 ', 'GAN acc 0.7891', 'Discriminator loss 0.6224', 'Discriminator accuracy 0.6289', 'Total loss: 1.4733', 'for batch', 114)
('GAN loss 0.8173 ', 'GAN acc 0.7852', 'Discriminator loss 0.5750', 'Discriminator accuracy 0.7402', 'Total loss: 1.3923', 'for batch', 115)
('GAN loss 0.8004 ', 'GAN acc 0.9219', 'Discriminator loss 0.5912', 'Discriminator accuracy 0.6641', 'Total loss: 1.3915', 'for batch', 116)
('GAN loss 0.6681 ', 'GAN acc 0.9727', 'Discriminator loss 0.4953', 'Discriminator accuracy 0.7734', 'Total loss: 1.1634', 'for batch', 117)
('GAN loss 0.6282 ', 'GAN acc 0.9805', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5312', 'Total loss: 1.2995', 'for batch', 118)
('GAN loss 0.6018 ', 'GAN acc 0.9805', 'Discriminator loss 0.6397', 'Discriminator accuracy 0.5879', 'Total loss: 1.2416', 'for batch', 119)
('GAN loss 0.6153 ', 'GAN acc 0.9688', 'Discriminator loss 0.5979', 'Discriminator accuracy 0.6738', 'Total loss: 1.2132', 'for batch', 120)
('GAN loss 0.6665 ', 'GAN acc 0.9766', 'Discriminator loss 0.6229', 'Discriminator accuracy 0.6797', 'Total loss: 1.2894', 'for batch', 121)
('GAN loss 0.6246 ', 'GAN acc 0.9688', 'Discriminator loss 0.4808', 'Discriminator accuracy 0.6992', 'Total loss: 1.1054', 'for batch', 122)
('GAN loss 0.6339 ', 'GAN acc 0.9766', 'Discriminator loss 0.5681', 'Discriminator accuracy 0.6816', 'Total loss: 1.2020', 'for batch', 123)
('GAN loss 1.0374 ', 'GAN acc 0.1484', 'Discriminator loss 0.5617', 'Discriminator accuracy 0.7227', 'Total loss: 1.5990', 'for batch', 124)
('GAN loss 3.4010 ', 'GAN acc 0.0000', 'Discriminator loss 0.5216', 'Discriminator accuracy 0.8906', 'Total loss: 3.9225', 'for batch', 125)
('GAN loss 4.7622 ', 'GAN acc 0.0000', 'Discriminator loss 0.6069', 'Discriminator accuracy 0.6191', 'Total loss: 5.3691', 'for batch', 126)
('GAN loss 5.5563 ', 'GAN acc 0.0195', 'Discriminator loss 0.3435', 'Discriminator accuracy 0.8438', 'Total loss: 5.8998', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.64562082)
('DISCRIMINATOR_Imagem FAKE=', 0.51998121)
('Discriminator trained', 112, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.531269')
----------------------------------
('Epoch', 30, 'of', 50)
('Number of batches', 128)
('GAN loss 1.0970 ', 'GAN acc 0.8438', 'Discriminator loss 0.6002', 'Discriminator accuracy 0.5664', 'Total loss: 1.6972', 'for batch', 0)
('GAN loss 1.0880 ', 'GAN acc 0.4609', 'Discriminator loss 0.5862', 'Discriminator accuracy 0.5664', 'Total loss: 1.6742', 'for batch', 1)
('GAN loss 1.3362 ', 'GAN acc 0.0508', 'Discriminator loss 0.5659', 'Discriminator accuracy 0.6484', 'Total loss: 1.9021', 'for batch', 2)
('GAN loss 1.6751 ', 'GAN acc 0.0000', 'Discriminator loss 0.5450', 'Discriminator accuracy 0.8398', 'Total loss: 2.2201', 'for batch', 3)
('GAN loss 1.7374 ', 'GAN acc 0.0000', 'Discriminator loss 0.5231', 'Discriminator accuracy 0.9668', 'Total loss: 2.2604', 'for batch', 4)
('GAN loss 1.7344 ', 'GAN acc 0.0000', 'Discriminator loss 0.5290', 'Discriminator accuracy 0.8633', 'Total loss: 2.2635', 'for batch', 5)
('GAN loss 0.9283 ', 'GAN acc 0.8906', 'Discriminator loss 0.5962', 'Discriminator accuracy 0.6953', 'Total loss: 1.5245', 'for batch', 6)
('GAN loss 1.0644 ', 'GAN acc 0.8125', 'Discriminator loss 0.6621', 'Discriminator accuracy 0.5312', 'Total loss: 1.7265', 'for batch', 7)
('GAN loss 1.0358 ', 'GAN acc 0.2070', 'Discriminator loss 0.6003', 'Discriminator accuracy 0.5684', 'Total loss: 1.6361', 'for batch', 8)
('GAN loss 0.8958 ', 'GAN acc 0.0391', 'Discriminator loss 0.5267', 'Discriminator accuracy 0.7500', 'Total loss: 1.4225', 'for batch', 9)
('GAN loss 0.9502 ', 'GAN acc 0.0469', 'Discriminator loss 0.4534', 'Discriminator accuracy 0.9375', 'Total loss: 1.4036', 'for batch', 10)
('GAN loss 0.9413 ', 'GAN acc 0.0938', 'Discriminator loss 0.4485', 'Discriminator accuracy 0.9062', 'Total loss: 1.3898', 'for batch', 11)
('GAN loss 0.7673 ', 'GAN acc 0.4922', 'Discriminator loss 0.4807', 'Discriminator accuracy 0.8184', 'Total loss: 1.2480', 'for batch', 12)
('GAN loss 0.6288 ', 'GAN acc 0.8984', 'Discriminator loss 0.5784', 'Discriminator accuracy 0.6250', 'Total loss: 1.2072', 'for batch', 13)
('GAN loss 0.5659 ', 'GAN acc 0.9805', 'Discriminator loss 0.5523', 'Discriminator accuracy 0.6914', 'Total loss: 1.1181', 'for batch', 14)
('GAN loss 0.5872 ', 'GAN acc 0.9688', 'Discriminator loss 0.5591', 'Discriminator accuracy 0.7324', 'Total loss: 1.1463', 'for batch', 15)
('GAN loss 0.6796 ', 'GAN acc 0.9102', 'Discriminator loss 0.6141', 'Discriminator accuracy 0.6172', 'Total loss: 1.2936', 'for batch', 16)
('GAN loss 0.7073 ', 'GAN acc 0.8867', 'Discriminator loss 0.4963', 'Discriminator accuracy 0.7480', 'Total loss: 1.2036', 'for batch', 17)
('GAN loss 0.7162 ', 'GAN acc 0.8750', 'Discriminator loss 0.5043', 'Discriminator accuracy 0.6953', 'Total loss: 1.2205', 'for batch', 18)
('GAN loss 0.7890 ', 'GAN acc 0.7305', 'Discriminator loss 0.4581', 'Discriminator accuracy 0.7891', 'Total loss: 1.2470', 'for batch', 19)
('GAN loss 0.6186 ', 'GAN acc 0.9570', 'Discriminator loss 0.4437', 'Discriminator accuracy 0.7422', 'Total loss: 1.0623', 'for batch', 20)
('GAN loss 0.6674 ', 'GAN acc 0.9570', 'Discriminator loss 0.5820', 'Discriminator accuracy 0.6152', 'Total loss: 1.2494', 'for batch', 21)
('GAN loss 0.6621 ', 'GAN acc 0.9570', 'Discriminator loss 0.4119', 'Discriminator accuracy 0.7871', 'Total loss: 1.0740', 'for batch', 22)
('GAN loss 0.6820 ', 'GAN acc 0.9492', 'Discriminator loss 0.3485', 'Discriminator accuracy 0.8711', 'Total loss: 1.0305', 'for batch', 23)
('GAN loss 0.5497 ', 'GAN acc 0.9648', 'Discriminator loss 0.4183', 'Discriminator accuracy 0.8301', 'Total loss: 0.9680', 'for batch', 24)
('GAN loss 0.5471 ', 'GAN acc 0.9688', 'Discriminator loss 0.4693', 'Discriminator accuracy 0.7207', 'Total loss: 1.0164', 'for batch', 25)
('GAN loss 0.6617 ', 'GAN acc 0.9688', 'Discriminator loss 0.5223', 'Discriminator accuracy 0.6719', 'Total loss: 1.1840', 'for batch', 26)
('GAN loss 0.7375 ', 'GAN acc 0.7969', 'Discriminator loss 0.5449', 'Discriminator accuracy 0.6816', 'Total loss: 1.2824', 'for batch', 27)
('GAN loss 0.7049 ', 'GAN acc 0.9141', 'Discriminator loss 0.5430', 'Discriminator accuracy 0.6855', 'Total loss: 1.2479', 'for batch', 28)
('GAN loss 0.7807 ', 'GAN acc 0.8867', 'Discriminator loss 0.5011', 'Discriminator accuracy 0.6953', 'Total loss: 1.2818', 'for batch', 29)
('GAN loss 0.8303 ', 'GAN acc 0.1641', 'Discriminator loss 0.5652', 'Discriminator accuracy 0.6270', 'Total loss: 1.3954', 'for batch', 30)
('GAN loss 0.8014 ', 'GAN acc 0.3281', 'Discriminator loss 0.4545', 'Discriminator accuracy 0.8359', 'Total loss: 1.2559', 'for batch', 31)
('GAN loss 0.7243 ', 'GAN acc 0.7031', 'Discriminator loss 0.3919', 'Discriminator accuracy 0.8848', 'Total loss: 1.1162', 'for batch', 32)
('GAN loss 0.6615 ', 'GAN acc 0.9062', 'Discriminator loss 0.5646', 'Discriminator accuracy 0.6211', 'Total loss: 1.2261', 'for batch', 33)
('GAN loss 0.7007 ', 'GAN acc 0.7617', 'Discriminator loss 0.4650', 'Discriminator accuracy 0.7305', 'Total loss: 1.1656', 'for batch', 34)
('GAN loss 0.8520 ', 'GAN acc 0.2266', 'Discriminator loss 0.4364', 'Discriminator accuracy 0.7656', 'Total loss: 1.2884', 'for batch', 35)
('GAN loss 0.7921 ', 'GAN acc 0.5898', 'Discriminator loss 0.4710', 'Discriminator accuracy 0.7266', 'Total loss: 1.2630', 'for batch', 36)
('GAN loss 0.6691 ', 'GAN acc 0.8789', 'Discriminator loss 0.3613', 'Discriminator accuracy 0.8945', 'Total loss: 1.0303', 'for batch', 37)
('GAN loss 0.3865 ', 'GAN acc 0.9805', 'Discriminator loss 0.3263', 'Discriminator accuracy 0.8672', 'Total loss: 0.7128', 'for batch', 38)
('GAN loss 0.5441 ', 'GAN acc 0.9414', 'Discriminator loss 0.2739', 'Discriminator accuracy 0.8945', 'Total loss: 0.8180', 'for batch', 39)
('GAN loss 0.6143 ', 'GAN acc 0.9766', 'Discriminator loss 0.6595', 'Discriminator accuracy 0.6758', 'Total loss: 1.2738', 'for batch', 40)
('GAN loss 0.8242 ', 'GAN acc 0.3945', 'Discriminator loss 0.5671', 'Discriminator accuracy 0.6660', 'Total loss: 1.3913', 'for batch', 41)
('GAN loss 1.0397 ', 'GAN acc 0.0156', 'Discriminator loss 0.6429', 'Discriminator accuracy 0.5371', 'Total loss: 1.6826', 'for batch', 42)
('GAN loss 0.8867 ', 'GAN acc 0.1133', 'Discriminator loss 0.5548', 'Discriminator accuracy 0.7539', 'Total loss: 1.4416', 'for batch', 43)
('GAN loss 0.7520 ', 'GAN acc 0.3984', 'Discriminator loss 0.5750', 'Discriminator accuracy 0.7246', 'Total loss: 1.3271', 'for batch', 44)
('GAN loss 0.9166 ', 'GAN acc 0.0898', 'Discriminator loss 0.6404', 'Discriminator accuracy 0.6035', 'Total loss: 1.5570', 'for batch', 45)
('GAN loss 0.9498 ', 'GAN acc 0.2344', 'Discriminator loss 0.6000', 'Discriminator accuracy 0.6992', 'Total loss: 1.5498', 'for batch', 46)
('GAN loss 0.7765 ', 'GAN acc 0.5547', 'Discriminator loss 0.5543', 'Discriminator accuracy 0.7461', 'Total loss: 1.3308', 'for batch', 47)
('GAN loss 0.5196 ', 'GAN acc 0.9805', 'Discriminator loss 0.4599', 'Discriminator accuracy 0.7773', 'Total loss: 0.9795', 'for batch', 48)
('GAN loss 0.9284 ', 'GAN acc 0.3867', 'Discriminator loss 0.5906', 'Discriminator accuracy 0.6465', 'Total loss: 1.5189', 'for batch', 49)
('GAN loss 0.7727 ', 'GAN acc 0.4453', 'Discriminator loss 0.7291', 'Discriminator accuracy 0.4863', 'Total loss: 1.5018', 'for batch', 50)
('GAN loss 0.9725 ', 'GAN acc 0.0195', 'Discriminator loss 0.5745', 'Discriminator accuracy 0.6504', 'Total loss: 1.5470', 'for batch', 51)
('GAN loss 1.0278 ', 'GAN acc 0.0039', 'Discriminator loss 0.5897', 'Discriminator accuracy 0.8477', 'Total loss: 1.6175', 'for batch', 52)
('GAN loss 0.9307 ', 'GAN acc 0.0547', 'Discriminator loss 0.5720', 'Discriminator accuracy 0.8184', 'Total loss: 1.5027', 'for batch', 53)
('GAN loss 0.8277 ', 'GAN acc 0.2500', 'Discriminator loss 0.6057', 'Discriminator accuracy 0.6934', 'Total loss: 1.4334', 'for batch', 54)
('GAN loss 0.7687 ', 'GAN acc 0.7617', 'Discriminator loss 0.6232', 'Discriminator accuracy 0.5938', 'Total loss: 1.3920', 'for batch', 55)
('GAN loss 0.9537 ', 'GAN acc 0.3047', 'Discriminator loss 0.6289', 'Discriminator accuracy 0.5996', 'Total loss: 1.5826', 'for batch', 56)
('GAN loss 0.8399 ', 'GAN acc 0.4180', 'Discriminator loss 0.6020', 'Discriminator accuracy 0.6445', 'Total loss: 1.4419', 'for batch', 57)
('GAN loss 0.8003 ', 'GAN acc 0.5312', 'Discriminator loss 0.5751', 'Discriminator accuracy 0.7012', 'Total loss: 1.3754', 'for batch', 58)
('GAN loss 0.5347 ', 'GAN acc 0.9062', 'Discriminator loss 0.5091', 'Discriminator accuracy 0.7656', 'Total loss: 1.0438', 'for batch', 59)
('GAN loss 0.7362 ', 'GAN acc 0.5938', 'Discriminator loss 0.5980', 'Discriminator accuracy 0.6309', 'Total loss: 1.3342', 'for batch', 60)
('GAN loss 0.9244 ', 'GAN acc 0.0234', 'Discriminator loss 0.6212', 'Discriminator accuracy 0.5625', 'Total loss: 1.5457', 'for batch', 61)
('GAN loss 1.0197 ', 'GAN acc 0.0117', 'Discriminator loss 0.5890', 'Discriminator accuracy 0.8555', 'Total loss: 1.6087', 'for batch', 62)
('GAN loss 0.9676 ', 'GAN acc 0.0273', 'Discriminator loss 0.5839', 'Discriminator accuracy 0.7520', 'Total loss: 1.5515', 'for batch', 63)
('GAN loss 1.0100 ', 'GAN acc 0.0234', 'Discriminator loss 0.6228', 'Discriminator accuracy 0.6914', 'Total loss: 1.6328', 'for batch', 64)
('GAN loss 0.9951 ', 'GAN acc 0.0469', 'Discriminator loss 0.5944', 'Discriminator accuracy 0.6523', 'Total loss: 1.5895', 'for batch', 65)
('GAN loss 0.8691 ', 'GAN acc 0.1562', 'Discriminator loss 0.5721', 'Discriminator accuracy 0.6934', 'Total loss: 1.4412', 'for batch', 66)
('GAN loss 0.9550 ', 'GAN acc 0.2500', 'Discriminator loss 0.5983', 'Discriminator accuracy 0.6699', 'Total loss: 1.5533', 'for batch', 67)
('GAN loss 0.8332 ', 'GAN acc 0.4766', 'Discriminator loss 0.5735', 'Discriminator accuracy 0.6699', 'Total loss: 1.4067', 'for batch', 68)
('GAN loss 0.4840 ', 'GAN acc 0.9727', 'Discriminator loss 0.6110', 'Discriminator accuracy 0.6113', 'Total loss: 1.0950', 'for batch', 69)
('GAN loss 0.6524 ', 'GAN acc 0.8516', 'Discriminator loss 0.6344', 'Discriminator accuracy 0.6309', 'Total loss: 1.2868', 'for batch', 70)
('GAN loss 0.6167 ', 'GAN acc 0.9297', 'Discriminator loss 0.6455', 'Discriminator accuracy 0.5664', 'Total loss: 1.2623', 'for batch', 71)
('GAN loss 0.6932 ', 'GAN acc 0.6406', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.5547', 'Total loss: 1.3686', 'for batch', 72)
('GAN loss 0.7627 ', 'GAN acc 0.3828', 'Discriminator loss 0.5824', 'Discriminator accuracy 0.6445', 'Total loss: 1.3452', 'for batch', 73)
('GAN loss 0.7812 ', 'GAN acc 0.2344', 'Discriminator loss 0.6479', 'Discriminator accuracy 0.6113', 'Total loss: 1.4291', 'for batch', 74)
('GAN loss 0.7650 ', 'GAN acc 0.3125', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5742', 'Total loss: 1.4324', 'for batch', 75)
('GAN loss 0.8059 ', 'GAN acc 0.3750', 'Discriminator loss 0.6007', 'Discriminator accuracy 0.6875', 'Total loss: 1.4066', 'for batch', 76)
('GAN loss 0.6116 ', 'GAN acc 0.8164', 'Discriminator loss 0.6147', 'Discriminator accuracy 0.6211', 'Total loss: 1.2262', 'for batch', 77)
('GAN loss 0.5959 ', 'GAN acc 0.9375', 'Discriminator loss 0.6827', 'Discriminator accuracy 0.5527', 'Total loss: 1.2786', 'for batch', 78)
('GAN loss 0.7255 ', 'GAN acc 0.7617', 'Discriminator loss 0.6940', 'Discriminator accuracy 0.5293', 'Total loss: 1.4195', 'for batch', 79)
('GAN loss 0.7409 ', 'GAN acc 0.7070', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.5137', 'Total loss: 1.4008', 'for batch', 80)
('GAN loss 0.7527 ', 'GAN acc 0.5195', 'Discriminator loss 0.6446', 'Discriminator accuracy 0.5195', 'Total loss: 1.3973', 'for batch', 81)
('GAN loss 0.8018 ', 'GAN acc 0.3945', 'Discriminator loss 0.6573', 'Discriminator accuracy 0.5352', 'Total loss: 1.4591', 'for batch', 82)
('GAN loss 0.8607 ', 'GAN acc 0.2539', 'Discriminator loss 0.6323', 'Discriminator accuracy 0.6191', 'Total loss: 1.4931', 'for batch', 83)
('GAN loss 0.6494 ', 'GAN acc 0.8633', 'Discriminator loss 0.5141', 'Discriminator accuracy 0.7070', 'Total loss: 1.1635', 'for batch', 84)
('GAN loss 0.7533 ', 'GAN acc 0.6797', 'Discriminator loss 0.5808', 'Discriminator accuracy 0.6973', 'Total loss: 1.3342', 'for batch', 85)
('GAN loss 0.5794 ', 'GAN acc 0.9727', 'Discriminator loss 0.6399', 'Discriminator accuracy 0.5996', 'Total loss: 1.2193', 'for batch', 86)
('GAN loss 0.5997 ', 'GAN acc 0.9648', 'Discriminator loss 0.5424', 'Discriminator accuracy 0.7148', 'Total loss: 1.1421', 'for batch', 87)
('GAN loss 0.6893 ', 'GAN acc 0.8281', 'Discriminator loss 0.6556', 'Discriminator accuracy 0.5781', 'Total loss: 1.3449', 'for batch', 88)
('GAN loss 0.7975 ', 'GAN acc 0.5078', 'Discriminator loss 0.6186', 'Discriminator accuracy 0.6562', 'Total loss: 1.4161', 'for batch', 89)
('GAN loss 0.6719 ', 'GAN acc 0.9023', 'Discriminator loss 0.6690', 'Discriminator accuracy 0.5527', 'Total loss: 1.3409', 'for batch', 90)
('GAN loss 0.6724 ', 'GAN acc 0.8516', 'Discriminator loss 0.6378', 'Discriminator accuracy 0.5801', 'Total loss: 1.3103', 'for batch', 91)
('GAN loss 0.7162 ', 'GAN acc 0.7227', 'Discriminator loss 0.6234', 'Discriminator accuracy 0.6074', 'Total loss: 1.3396', 'for batch', 92)
('GAN loss 0.6584 ', 'GAN acc 0.8125', 'Discriminator loss 0.6283', 'Discriminator accuracy 0.6113', 'Total loss: 1.2867', 'for batch', 93)
('GAN loss 0.6377 ', 'GAN acc 0.9492', 'Discriminator loss 0.6307', 'Discriminator accuracy 0.5664', 'Total loss: 1.2684', 'for batch', 94)
('GAN loss 0.6377 ', 'GAN acc 0.9023', 'Discriminator loss 0.6074', 'Discriminator accuracy 0.6289', 'Total loss: 1.2451', 'for batch', 95)
('GAN loss 0.4992 ', 'GAN acc 0.9922', 'Discriminator loss 0.5185', 'Discriminator accuracy 0.7207', 'Total loss: 1.0177', 'for batch', 96)
('GAN loss 0.4941 ', 'GAN acc 0.9766', 'Discriminator loss 0.5314', 'Discriminator accuracy 0.7012', 'Total loss: 1.0255', 'for batch', 97)
('GAN loss 1.0360 ', 'GAN acc 0.0977', 'Discriminator loss 0.6077', 'Discriminator accuracy 0.6523', 'Total loss: 1.6436', 'for batch', 98)
('GAN loss 0.7843 ', 'GAN acc 0.3008', 'Discriminator loss 0.5969', 'Discriminator accuracy 0.6191', 'Total loss: 1.3811', 'for batch', 99)
('GAN loss 0.9539 ', 'GAN acc 0.0156', 'Discriminator loss 0.6022', 'Discriminator accuracy 0.6758', 'Total loss: 1.5562', 'for batch', 100)
('GAN loss 0.9716 ', 'GAN acc 0.0195', 'Discriminator loss 0.6163', 'Discriminator accuracy 0.7773', 'Total loss: 1.5879', 'for batch', 101)
('GAN loss 0.9565 ', 'GAN acc 0.0195', 'Discriminator loss 0.6097', 'Discriminator accuracy 0.8125', 'Total loss: 1.5662', 'for batch', 102)
('GAN loss 0.9561 ', 'GAN acc 0.0391', 'Discriminator loss 0.6323', 'Discriminator accuracy 0.7480', 'Total loss: 1.5884', 'for batch', 103)
('GAN loss 0.9366 ', 'GAN acc 0.0547', 'Discriminator loss 0.6239', 'Discriminator accuracy 0.7363', 'Total loss: 1.5606', 'for batch', 104)
('GAN loss 0.8711 ', 'GAN acc 0.1016', 'Discriminator loss 0.6050', 'Discriminator accuracy 0.6543', 'Total loss: 1.4761', 'for batch', 105)
('GAN loss 0.8927 ', 'GAN acc 0.0898', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5137', 'Total loss: 1.5679', 'for batch', 106)
('GAN loss 0.7750 ', 'GAN acc 0.4453', 'Discriminator loss 0.6460', 'Discriminator accuracy 0.5488', 'Total loss: 1.4210', 'for batch', 107)
('GAN loss 0.7354 ', 'GAN acc 0.6328', 'Discriminator loss 0.6393', 'Discriminator accuracy 0.5762', 'Total loss: 1.3747', 'for batch', 108)
('GAN loss 0.8103 ', 'GAN acc 0.4961', 'Discriminator loss 0.6316', 'Discriminator accuracy 0.6465', 'Total loss: 1.4418', 'for batch', 109)
('GAN loss 0.6443 ', 'GAN acc 0.8516', 'Discriminator loss 0.5431', 'Discriminator accuracy 0.6797', 'Total loss: 1.1874', 'for batch', 110)
('GAN loss 1.1769 ', 'GAN acc 0.0742', 'Discriminator loss 0.6461', 'Discriminator accuracy 0.6035', 'Total loss: 1.8231', 'for batch', 111)
('GAN loss 0.9763 ', 'GAN acc 0.0469', 'Discriminator loss 0.6309', 'Discriminator accuracy 0.5488', 'Total loss: 1.6072', 'for batch', 112)
('GAN loss 1.1649 ', 'GAN acc 0.0312', 'Discriminator loss 0.5980', 'Discriminator accuracy 0.8164', 'Total loss: 1.7630', 'for batch', 113)
('GAN loss 1.0656 ', 'GAN acc 0.0391', 'Discriminator loss 0.6068', 'Discriminator accuracy 0.6484', 'Total loss: 1.6724', 'for batch', 114)
('GAN loss 0.9289 ', 'GAN acc 0.1055', 'Discriminator loss 0.6467', 'Discriminator accuracy 0.6152', 'Total loss: 1.5756', 'for batch', 115)
('GAN loss 0.9175 ', 'GAN acc 0.0820', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.6816', 'Total loss: 1.5807', 'for batch', 116)
('GAN loss 0.8789 ', 'GAN acc 0.1719', 'Discriminator loss 0.6784', 'Discriminator accuracy 0.5273', 'Total loss: 1.5573', 'for batch', 117)
('GAN loss 0.9398 ', 'GAN acc 0.0547', 'Discriminator loss 0.6852', 'Discriminator accuracy 0.5000', 'Total loss: 1.6251', 'for batch', 118)
('GAN loss 0.9013 ', 'GAN acc 0.1172', 'Discriminator loss 0.6414', 'Discriminator accuracy 0.5488', 'Total loss: 1.5427', 'for batch', 119)
('GAN loss 0.8930 ', 'GAN acc 0.1328', 'Discriminator loss 0.5847', 'Discriminator accuracy 0.6777', 'Total loss: 1.4777', 'for batch', 120)
('GAN loss 0.8385 ', 'GAN acc 0.2344', 'Discriminator loss 0.5961', 'Discriminator accuracy 0.6699', 'Total loss: 1.4346', 'for batch', 121)
('GAN loss 0.6374 ', 'GAN acc 0.9648', 'Discriminator loss 0.5533', 'Discriminator accuracy 0.6641', 'Total loss: 1.1907', 'for batch', 122)
('GAN loss 0.5433 ', 'GAN acc 0.9766', 'Discriminator loss 0.5537', 'Discriminator accuracy 0.6660', 'Total loss: 1.0970', 'for batch', 123)
('GAN loss 0.6706 ', 'GAN acc 0.8086', 'Discriminator loss 0.4822', 'Discriminator accuracy 0.8027', 'Total loss: 1.1528', 'for batch', 124)
('GAN loss 0.3763 ', 'GAN acc 0.9922', 'Discriminator loss 0.5522', 'Discriminator accuracy 0.6270', 'Total loss: 0.9285', 'for batch', 125)
('GAN loss 0.4433 ', 'GAN acc 0.9766', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.5840', 'Total loss: 1.1362', 'for batch', 126)
('GAN loss 0.5858 ', 'GAN acc 0.9805', 'Discriminator loss 0.7279', 'Discriminator accuracy 0.5273', 'Total loss: 1.3138', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.66381776)
('DISCRIMINATOR_Imagem FAKE=', 0.52035129)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.466627')
----------------------------------
('Epoch', 31, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7615 ', 'GAN acc 0.6055', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.5547', 'Total loss: 1.4167', 'for batch', 0)
('GAN loss 0.7765 ', 'GAN acc 0.3984', 'Discriminator loss 0.5589', 'Discriminator accuracy 0.6387', 'Total loss: 1.3354', 'for batch', 1)
('GAN loss 0.7521 ', 'GAN acc 0.4141', 'Discriminator loss 0.6041', 'Discriminator accuracy 0.5938', 'Total loss: 1.3563', 'for batch', 2)
('GAN loss 0.7665 ', 'GAN acc 0.3984', 'Discriminator loss 0.6482', 'Discriminator accuracy 0.5996', 'Total loss: 1.4146', 'for batch', 3)
('GAN loss 0.7403 ', 'GAN acc 0.3984', 'Discriminator loss 0.6294', 'Discriminator accuracy 0.5820', 'Total loss: 1.3697', 'for batch', 4)
('GAN loss 0.6699 ', 'GAN acc 0.6211', 'Discriminator loss 0.5547', 'Discriminator accuracy 0.6621', 'Total loss: 1.2246', 'for batch', 5)
('GAN loss 0.6160 ', 'GAN acc 0.9102', 'Discriminator loss 0.5238', 'Discriminator accuracy 0.6797', 'Total loss: 1.1399', 'for batch', 6)
('GAN loss 0.6169 ', 'GAN acc 0.9102', 'Discriminator loss 0.5854', 'Discriminator accuracy 0.6836', 'Total loss: 1.2023', 'for batch', 7)
('GAN loss 0.5214 ', 'GAN acc 0.9844', 'Discriminator loss 0.4870', 'Discriminator accuracy 0.7227', 'Total loss: 1.0084', 'for batch', 8)
('GAN loss 0.5411 ', 'GAN acc 0.9883', 'Discriminator loss 0.5787', 'Discriminator accuracy 0.6523', 'Total loss: 1.1198', 'for batch', 9)
('GAN loss 0.5759 ', 'GAN acc 0.9844', 'Discriminator loss 0.5375', 'Discriminator accuracy 0.7090', 'Total loss: 1.1134', 'for batch', 10)
('GAN loss 0.5476 ', 'GAN acc 0.9805', 'Discriminator loss 0.6173', 'Discriminator accuracy 0.6035', 'Total loss: 1.1649', 'for batch', 11)
('GAN loss 0.6481 ', 'GAN acc 0.9727', 'Discriminator loss 0.6020', 'Discriminator accuracy 0.6504', 'Total loss: 1.2501', 'for batch', 12)
('GAN loss 0.6808 ', 'GAN acc 0.9492', 'Discriminator loss 0.5991', 'Discriminator accuracy 0.6367', 'Total loss: 1.2798', 'for batch', 13)
('GAN loss 0.6322 ', 'GAN acc 0.9766', 'Discriminator loss 0.5445', 'Discriminator accuracy 0.6973', 'Total loss: 1.1767', 'for batch', 14)
('GAN loss 0.7217 ', 'GAN acc 0.9570', 'Discriminator loss 0.6081', 'Discriminator accuracy 0.6348', 'Total loss: 1.3298', 'for batch', 15)
('GAN loss 0.5938 ', 'GAN acc 0.9883', 'Discriminator loss 0.5900', 'Discriminator accuracy 0.6289', 'Total loss: 1.1838', 'for batch', 16)
('GAN loss 0.6076 ', 'GAN acc 0.9883', 'Discriminator loss 0.5400', 'Discriminator accuracy 0.7148', 'Total loss: 1.1477', 'for batch', 17)
('GAN loss 0.6157 ', 'GAN acc 0.9766', 'Discriminator loss 0.5624', 'Discriminator accuracy 0.6465', 'Total loss: 1.1781', 'for batch', 18)
('GAN loss 0.6252 ', 'GAN acc 0.9766', 'Discriminator loss 0.6009', 'Discriminator accuracy 0.6328', 'Total loss: 1.2261', 'for batch', 19)
('GAN loss 0.7769 ', 'GAN acc 0.8477', 'Discriminator loss 0.4950', 'Discriminator accuracy 0.8223', 'Total loss: 1.2719', 'for batch', 20)
('GAN loss 0.6594 ', 'GAN acc 0.9766', 'Discriminator loss 0.7046', 'Discriminator accuracy 0.5488', 'Total loss: 1.3640', 'for batch', 21)
('GAN loss 0.6871 ', 'GAN acc 0.8594', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.5859', 'Total loss: 1.3515', 'for batch', 22)
('GAN loss 0.7095 ', 'GAN acc 0.7930', 'Discriminator loss 0.5699', 'Discriminator accuracy 0.6641', 'Total loss: 1.2794', 'for batch', 23)
('GAN loss 0.7619 ', 'GAN acc 0.8047', 'Discriminator loss 0.6306', 'Discriminator accuracy 0.5918', 'Total loss: 1.3925', 'for batch', 24)
('GAN loss 0.7183 ', 'GAN acc 0.8516', 'Discriminator loss 0.6354', 'Discriminator accuracy 0.5527', 'Total loss: 1.3536', 'for batch', 25)
('GAN loss 0.6489 ', 'GAN acc 0.9648', 'Discriminator loss 0.6362', 'Discriminator accuracy 0.5469', 'Total loss: 1.2852', 'for batch', 26)
('GAN loss 0.6671 ', 'GAN acc 0.9414', 'Discriminator loss 0.6477', 'Discriminator accuracy 0.5645', 'Total loss: 1.3148', 'for batch', 27)
('GAN loss 0.7170 ', 'GAN acc 0.7734', 'Discriminator loss 0.6090', 'Discriminator accuracy 0.6172', 'Total loss: 1.3260', 'for batch', 28)
('GAN loss 0.6715 ', 'GAN acc 0.8125', 'Discriminator loss 0.5949', 'Discriminator accuracy 0.6211', 'Total loss: 1.2665', 'for batch', 29)
('GAN loss 0.6701 ', 'GAN acc 0.8516', 'Discriminator loss 0.6379', 'Discriminator accuracy 0.5430', 'Total loss: 1.3080', 'for batch', 30)
('GAN loss 0.6924 ', 'GAN acc 0.6914', 'Discriminator loss 0.6453', 'Discriminator accuracy 0.5723', 'Total loss: 1.3377', 'for batch', 31)
('GAN loss 0.6997 ', 'GAN acc 0.5859', 'Discriminator loss 0.6302', 'Discriminator accuracy 0.6113', 'Total loss: 1.3299', 'for batch', 32)
('GAN loss 0.6979 ', 'GAN acc 0.7266', 'Discriminator loss 0.6051', 'Discriminator accuracy 0.6094', 'Total loss: 1.3030', 'for batch', 33)
('GAN loss 0.6469 ', 'GAN acc 0.9102', 'Discriminator loss 0.5632', 'Discriminator accuracy 0.5977', 'Total loss: 1.2101', 'for batch', 34)
('GAN loss 0.5706 ', 'GAN acc 0.9805', 'Discriminator loss 0.5027', 'Discriminator accuracy 0.7305', 'Total loss: 1.0733', 'for batch', 35)
('GAN loss 0.5818 ', 'GAN acc 0.9727', 'Discriminator loss 0.5689', 'Discriminator accuracy 0.6660', 'Total loss: 1.1507', 'for batch', 36)
('GAN loss 0.5737 ', 'GAN acc 0.9531', 'Discriminator loss 0.5026', 'Discriminator accuracy 0.7441', 'Total loss: 1.0763', 'for batch', 37)
('GAN loss 0.5390 ', 'GAN acc 0.9805', 'Discriminator loss 0.4951', 'Discriminator accuracy 0.7207', 'Total loss: 1.0341', 'for batch', 38)
('GAN loss 0.4962 ', 'GAN acc 0.9766', 'Discriminator loss 0.4545', 'Discriminator accuracy 0.7910', 'Total loss: 0.9507', 'for batch', 39)
('GAN loss 0.4421 ', 'GAN acc 0.9844', 'Discriminator loss 0.5575', 'Discriminator accuracy 0.6836', 'Total loss: 0.9996', 'for batch', 40)
('GAN loss 0.4381 ', 'GAN acc 0.9883', 'Discriminator loss 0.4999', 'Discriminator accuracy 0.7480', 'Total loss: 0.9380', 'for batch', 41)
('GAN loss 0.5761 ', 'GAN acc 0.9648', 'Discriminator loss 0.6265', 'Discriminator accuracy 0.6387', 'Total loss: 1.2026', 'for batch', 42)
('GAN loss 0.4527 ', 'GAN acc 0.9922', 'Discriminator loss 0.7135', 'Discriminator accuracy 0.5684', 'Total loss: 1.1663', 'for batch', 43)
('GAN loss 0.5171 ', 'GAN acc 0.9766', 'Discriminator loss 0.6009', 'Discriminator accuracy 0.6562', 'Total loss: 1.1180', 'for batch', 44)
('GAN loss 0.6651 ', 'GAN acc 0.7969', 'Discriminator loss 0.7070', 'Discriminator accuracy 0.5488', 'Total loss: 1.3721', 'for batch', 45)
('GAN loss 0.7311 ', 'GAN acc 0.4219', 'Discriminator loss 0.6376', 'Discriminator accuracy 0.5977', 'Total loss: 1.3687', 'for batch', 46)
('GAN loss 0.7521 ', 'GAN acc 0.3125', 'Discriminator loss 0.6265', 'Discriminator accuracy 0.6445', 'Total loss: 1.3786', 'for batch', 47)
('GAN loss 0.6331 ', 'GAN acc 0.8789', 'Discriminator loss 0.4915', 'Discriminator accuracy 0.7070', 'Total loss: 1.1246', 'for batch', 48)
('GAN loss 0.6140 ', 'GAN acc 0.8867', 'Discriminator loss 0.5950', 'Discriminator accuracy 0.7129', 'Total loss: 1.2090', 'for batch', 49)
('GAN loss 0.5856 ', 'GAN acc 0.9492', 'Discriminator loss 0.6373', 'Discriminator accuracy 0.5781', 'Total loss: 1.2229', 'for batch', 50)
('GAN loss 0.4996 ', 'GAN acc 0.9805', 'Discriminator loss 0.4529', 'Discriminator accuracy 0.8301', 'Total loss: 0.9525', 'for batch', 51)
('GAN loss 0.5065 ', 'GAN acc 0.9375', 'Discriminator loss 0.5778', 'Discriminator accuracy 0.6973', 'Total loss: 1.0843', 'for batch', 52)
('GAN loss 0.4091 ', 'GAN acc 0.9648', 'Discriminator loss 0.5222', 'Discriminator accuracy 0.7070', 'Total loss: 0.9313', 'for batch', 53)
('GAN loss 0.3531 ', 'GAN acc 0.9688', 'Discriminator loss 0.3705', 'Discriminator accuracy 0.8535', 'Total loss: 0.7236', 'for batch', 54)
('GAN loss 0.7736 ', 'GAN acc 0.5781', 'Discriminator loss 0.4846', 'Discriminator accuracy 0.7773', 'Total loss: 1.2582', 'for batch', 55)
('GAN loss 0.6018 ', 'GAN acc 0.9805', 'Discriminator loss 0.7584', 'Discriminator accuracy 0.5059', 'Total loss: 1.3602', 'for batch', 56)
('GAN loss 0.7523 ', 'GAN acc 0.6836', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5215', 'Total loss: 1.4276', 'for batch', 57)
('GAN loss 0.9065 ', 'GAN acc 0.0273', 'Discriminator loss 0.6369', 'Discriminator accuracy 0.5488', 'Total loss: 1.5433', 'for batch', 58)
('GAN loss 1.0233 ', 'GAN acc 0.0000', 'Discriminator loss 0.6220', 'Discriminator accuracy 0.7871', 'Total loss: 1.6453', 'for batch', 59)
('GAN loss 1.0153 ', 'GAN acc 0.0000', 'Discriminator loss 0.6225', 'Discriminator accuracy 0.8320', 'Total loss: 1.6378', 'for batch', 60)
('GAN loss 0.9459 ', 'GAN acc 0.0039', 'Discriminator loss 0.6220', 'Discriminator accuracy 0.8223', 'Total loss: 1.5680', 'for batch', 61)
('GAN loss 0.9251 ', 'GAN acc 0.0430', 'Discriminator loss 0.6277', 'Discriminator accuracy 0.7773', 'Total loss: 1.5528', 'for batch', 62)
('GAN loss 0.8621 ', 'GAN acc 0.0625', 'Discriminator loss 0.6383', 'Discriminator accuracy 0.7012', 'Total loss: 1.5005', 'for batch', 63)
('GAN loss 0.8682 ', 'GAN acc 0.0586', 'Discriminator loss 0.6784', 'Discriminator accuracy 0.5078', 'Total loss: 1.5467', 'for batch', 64)
('GAN loss 0.8813 ', 'GAN acc 0.0312', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.4941', 'Total loss: 1.5663', 'for batch', 65)
('GAN loss 0.7995 ', 'GAN acc 0.1953', 'Discriminator loss 0.6705', 'Discriminator accuracy 0.5137', 'Total loss: 1.4699', 'for batch', 66)
('GAN loss 0.8604 ', 'GAN acc 0.4844', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5352', 'Total loss: 1.5277', 'for batch', 67)
('GAN loss 0.8584 ', 'GAN acc 0.2422', 'Discriminator loss 0.6550', 'Discriminator accuracy 0.5449', 'Total loss: 1.5134', 'for batch', 68)
('GAN loss 0.7990 ', 'GAN acc 0.1836', 'Discriminator loss 0.6316', 'Discriminator accuracy 0.6367', 'Total loss: 1.4306', 'for batch', 69)
('GAN loss 0.9096 ', 'GAN acc 0.0938', 'Discriminator loss 0.6283', 'Discriminator accuracy 0.6562', 'Total loss: 1.5379', 'for batch', 70)
('GAN loss 0.6857 ', 'GAN acc 0.9609', 'Discriminator loss 0.6816', 'Discriminator accuracy 0.5098', 'Total loss: 1.3673', 'for batch', 71)
('GAN loss 0.7331 ', 'GAN acc 0.8984', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5039', 'Total loss: 1.4177', 'for batch', 72)
('GAN loss 0.7707 ', 'GAN acc 0.6758', 'Discriminator loss 0.6589', 'Discriminator accuracy 0.5391', 'Total loss: 1.4296', 'for batch', 73)
('GAN loss 0.7387 ', 'GAN acc 0.4258', 'Discriminator loss 0.6691', 'Discriminator accuracy 0.5449', 'Total loss: 1.4078', 'for batch', 74)
('GAN loss 0.7867 ', 'GAN acc 0.5391', 'Discriminator loss 0.6640', 'Discriminator accuracy 0.5586', 'Total loss: 1.4507', 'for batch', 75)
('GAN loss 0.7676 ', 'GAN acc 0.3516', 'Discriminator loss 0.6565', 'Discriminator accuracy 0.5566', 'Total loss: 1.4241', 'for batch', 76)
('GAN loss 0.7723 ', 'GAN acc 0.5547', 'Discriminator loss 0.6697', 'Discriminator accuracy 0.5371', 'Total loss: 1.4420', 'for batch', 77)
('GAN loss 0.7389 ', 'GAN acc 0.5078', 'Discriminator loss 0.6776', 'Discriminator accuracy 0.5801', 'Total loss: 1.4165', 'for batch', 78)
('GAN loss 0.7326 ', 'GAN acc 0.5664', 'Discriminator loss 0.6561', 'Discriminator accuracy 0.6328', 'Total loss: 1.3888', 'for batch', 79)
('GAN loss 0.7125 ', 'GAN acc 0.6016', 'Discriminator loss 0.6144', 'Discriminator accuracy 0.6621', 'Total loss: 1.3269', 'for batch', 80)
('GAN loss 0.7115 ', 'GAN acc 0.5859', 'Discriminator loss 0.6372', 'Discriminator accuracy 0.6387', 'Total loss: 1.3488', 'for batch', 81)
('GAN loss 0.7145 ', 'GAN acc 0.5508', 'Discriminator loss 0.6349', 'Discriminator accuracy 0.7168', 'Total loss: 1.3494', 'for batch', 82)
('GAN loss 0.7078 ', 'GAN acc 0.6758', 'Discriminator loss 0.6629', 'Discriminator accuracy 0.6113', 'Total loss: 1.3707', 'for batch', 83)
('GAN loss 0.6400 ', 'GAN acc 0.9414', 'Discriminator loss 0.5979', 'Discriminator accuracy 0.6738', 'Total loss: 1.2379', 'for batch', 84)
('GAN loss 0.6526 ', 'GAN acc 0.9297', 'Discriminator loss 0.6887', 'Discriminator accuracy 0.4863', 'Total loss: 1.3413', 'for batch', 85)
('GAN loss 0.6817 ', 'GAN acc 0.9492', 'Discriminator loss 0.6437', 'Discriminator accuracy 0.5840', 'Total loss: 1.3253', 'for batch', 86)
('GAN loss 0.6781 ', 'GAN acc 0.8867', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5410', 'Total loss: 1.3554', 'for batch', 87)
('GAN loss 0.6823 ', 'GAN acc 0.8750', 'Discriminator loss 0.6660', 'Discriminator accuracy 0.4922', 'Total loss: 1.3483', 'for batch', 88)
('GAN loss 0.6699 ', 'GAN acc 0.8242', 'Discriminator loss 0.6909', 'Discriminator accuracy 0.5137', 'Total loss: 1.3608', 'for batch', 89)
('GAN loss 0.6663 ', 'GAN acc 0.7812', 'Discriminator loss 0.6749', 'Discriminator accuracy 0.5469', 'Total loss: 1.3413', 'for batch', 90)
('GAN loss 0.6722 ', 'GAN acc 0.7617', 'Discriminator loss 0.6698', 'Discriminator accuracy 0.5664', 'Total loss: 1.3420', 'for batch', 91)
('GAN loss 0.6796 ', 'GAN acc 0.8164', 'Discriminator loss 0.6549', 'Discriminator accuracy 0.5410', 'Total loss: 1.3344', 'for batch', 92)
('GAN loss 0.7008 ', 'GAN acc 0.8945', 'Discriminator loss 0.6605', 'Discriminator accuracy 0.5137', 'Total loss: 1.3613', 'for batch', 93)
('GAN loss 0.6177 ', 'GAN acc 0.9727', 'Discriminator loss 0.6320', 'Discriminator accuracy 0.5234', 'Total loss: 1.2497', 'for batch', 94)
('GAN loss 0.5859 ', 'GAN acc 0.9844', 'Discriminator loss 0.6210', 'Discriminator accuracy 0.5645', 'Total loss: 1.2070', 'for batch', 95)
('GAN loss 0.5707 ', 'GAN acc 0.9883', 'Discriminator loss 0.6363', 'Discriminator accuracy 0.6055', 'Total loss: 1.2070', 'for batch', 96)
('GAN loss 0.6379 ', 'GAN acc 0.9844', 'Discriminator loss 0.5780', 'Discriminator accuracy 0.6836', 'Total loss: 1.2158', 'for batch', 97)
('GAN loss 0.6049 ', 'GAN acc 0.9805', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5684', 'Total loss: 1.2693', 'for batch', 98)
('GAN loss 0.5371 ', 'GAN acc 0.9844', 'Discriminator loss 0.5706', 'Discriminator accuracy 0.6758', 'Total loss: 1.1078', 'for batch', 99)
('GAN loss 0.5177 ', 'GAN acc 0.9922', 'Discriminator loss 0.5691', 'Discriminator accuracy 0.6191', 'Total loss: 1.0868', 'for batch', 100)
('GAN loss 0.5804 ', 'GAN acc 0.9805', 'Discriminator loss 0.6712', 'Discriminator accuracy 0.5312', 'Total loss: 1.2516', 'for batch', 101)
('GAN loss 0.7088 ', 'GAN acc 0.8008', 'Discriminator loss 0.6461', 'Discriminator accuracy 0.6152', 'Total loss: 1.3548', 'for batch', 102)
('GAN loss 0.6430 ', 'GAN acc 0.9727', 'Discriminator loss 0.6784', 'Discriminator accuracy 0.5156', 'Total loss: 1.3215', 'for batch', 103)
('GAN loss 0.6636 ', 'GAN acc 0.9531', 'Discriminator loss 0.6683', 'Discriminator accuracy 0.5176', 'Total loss: 1.3318', 'for batch', 104)
('GAN loss 0.6582 ', 'GAN acc 0.8906', 'Discriminator loss 0.6566', 'Discriminator accuracy 0.5762', 'Total loss: 1.3148', 'for batch', 105)
('GAN loss 0.6565 ', 'GAN acc 0.8789', 'Discriminator loss 0.6255', 'Discriminator accuracy 0.5742', 'Total loss: 1.2820', 'for batch', 106)
('GAN loss 0.6766 ', 'GAN acc 0.7969', 'Discriminator loss 0.5689', 'Discriminator accuracy 0.7012', 'Total loss: 1.2455', 'for batch', 107)
('GAN loss 0.6059 ', 'GAN acc 0.9375', 'Discriminator loss 0.6157', 'Discriminator accuracy 0.5391', 'Total loss: 1.2216', 'for batch', 108)
('GAN loss 0.6056 ', 'GAN acc 0.9414', 'Discriminator loss 0.6517', 'Discriminator accuracy 0.5918', 'Total loss: 1.2572', 'for batch', 109)
('GAN loss 0.6055 ', 'GAN acc 0.9336', 'Discriminator loss 0.6333', 'Discriminator accuracy 0.5762', 'Total loss: 1.2388', 'for batch', 110)
('GAN loss 0.6160 ', 'GAN acc 0.9297', 'Discriminator loss 0.6892', 'Discriminator accuracy 0.5273', 'Total loss: 1.3052', 'for batch', 111)
('GAN loss 0.6083 ', 'GAN acc 0.8984', 'Discriminator loss 0.6633', 'Discriminator accuracy 0.5449', 'Total loss: 1.2716', 'for batch', 112)
('GAN loss 0.6356 ', 'GAN acc 0.8906', 'Discriminator loss 0.6720', 'Discriminator accuracy 0.5664', 'Total loss: 1.3076', 'for batch', 113)
('GAN loss 0.6355 ', 'GAN acc 0.8828', 'Discriminator loss 0.5940', 'Discriminator accuracy 0.6973', 'Total loss: 1.2295', 'for batch', 114)
('GAN loss 0.6478 ', 'GAN acc 0.8203', 'Discriminator loss 0.6238', 'Discriminator accuracy 0.6406', 'Total loss: 1.2716', 'for batch', 115)
('GAN loss 0.5594 ', 'GAN acc 0.8984', 'Discriminator loss 0.5647', 'Discriminator accuracy 0.7031', 'Total loss: 1.1241', 'for batch', 116)
('GAN loss 0.5688 ', 'GAN acc 0.9336', 'Discriminator loss 0.5988', 'Discriminator accuracy 0.6680', 'Total loss: 1.1676', 'for batch', 117)
('GAN loss 0.6337 ', 'GAN acc 0.8359', 'Discriminator loss 0.6853', 'Discriminator accuracy 0.5332', 'Total loss: 1.3190', 'for batch', 118)
('GAN loss 0.6886 ', 'GAN acc 0.7578', 'Discriminator loss 0.6356', 'Discriminator accuracy 0.6484', 'Total loss: 1.3242', 'for batch', 119)
('GAN loss 0.6406 ', 'GAN acc 0.9180', 'Discriminator loss 0.6015', 'Discriminator accuracy 0.6289', 'Total loss: 1.2421', 'for batch', 120)
('GAN loss 0.6488 ', 'GAN acc 0.9258', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5469', 'Total loss: 1.3242', 'for batch', 121)
('GAN loss 0.6917 ', 'GAN acc 0.9102', 'Discriminator loss 0.5790', 'Discriminator accuracy 0.6680', 'Total loss: 1.2707', 'for batch', 122)
('GAN loss 0.6575 ', 'GAN acc 0.8984', 'Discriminator loss 0.6099', 'Discriminator accuracy 0.6855', 'Total loss: 1.2674', 'for batch', 123)
('GAN loss 0.6766 ', 'GAN acc 0.9648', 'Discriminator loss 0.6187', 'Discriminator accuracy 0.6348', 'Total loss: 1.2953', 'for batch', 124)
('GAN loss 0.5517 ', 'GAN acc 0.9883', 'Discriminator loss 0.6190', 'Discriminator accuracy 0.6211', 'Total loss: 1.1707', 'for batch', 125)
('GAN loss 0.5799 ', 'GAN acc 0.9844', 'Discriminator loss 0.6845', 'Discriminator accuracy 0.5332', 'Total loss: 1.2644', 'for batch', 126)
('GAN loss 0.6458 ', 'GAN acc 0.9805', 'Discriminator loss 0.7228', 'Discriminator accuracy 0.4961', 'Total loss: 1.3686', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.57174623)
('DISCRIMINATOR_Imagem FAKE=', 0.45732149)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.286489')
----------------------------------
('Epoch', 32, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6409 ', 'GAN acc 0.9492', 'Discriminator loss 0.5950', 'Discriminator accuracy 0.6680', 'Total loss: 1.2359', 'for batch', 0)
('GAN loss 0.6378 ', 'GAN acc 0.9688', 'Discriminator loss 0.6068', 'Discriminator accuracy 0.5879', 'Total loss: 1.2447', 'for batch', 1)
('GAN loss 0.6078 ', 'GAN acc 0.9609', 'Discriminator loss 0.6472', 'Discriminator accuracy 0.5332', 'Total loss: 1.2550', 'for batch', 2)
('GAN loss 0.6209 ', 'GAN acc 0.9688', 'Discriminator loss 0.5592', 'Discriminator accuracy 0.6426', 'Total loss: 1.1801', 'for batch', 3)
('GAN loss 0.5960 ', 'GAN acc 0.9805', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5742', 'Total loss: 1.2638', 'for batch', 4)
('GAN loss 0.5682 ', 'GAN acc 0.9922', 'Discriminator loss 0.4758', 'Discriminator accuracy 0.7871', 'Total loss: 1.0439', 'for batch', 5)
('GAN loss 0.5296 ', 'GAN acc 0.9922', 'Discriminator loss 0.5245', 'Discriminator accuracy 0.7305', 'Total loss: 1.0541', 'for batch', 6)
('GAN loss 0.4977 ', 'GAN acc 0.9805', 'Discriminator loss 0.5487', 'Discriminator accuracy 0.7207', 'Total loss: 1.0464', 'for batch', 7)
('GAN loss 0.4510 ', 'GAN acc 0.9844', 'Discriminator loss 0.4876', 'Discriminator accuracy 0.7656', 'Total loss: 0.9386', 'for batch', 8)
('GAN loss 0.4315 ', 'GAN acc 0.9883', 'Discriminator loss 0.5597', 'Discriminator accuracy 0.6836', 'Total loss: 0.9911', 'for batch', 9)
('GAN loss 0.4384 ', 'GAN acc 0.9844', 'Discriminator loss 0.4890', 'Discriminator accuracy 0.7793', 'Total loss: 0.9274', 'for batch', 10)
('GAN loss 0.3846 ', 'GAN acc 0.9805', 'Discriminator loss 0.5590', 'Discriminator accuracy 0.6973', 'Total loss: 0.9437', 'for batch', 11)
('GAN loss 0.3907 ', 'GAN acc 0.9883', 'Discriminator loss 0.6188', 'Discriminator accuracy 0.6309', 'Total loss: 1.0096', 'for batch', 12)
('GAN loss 0.5198 ', 'GAN acc 0.9805', 'Discriminator loss 0.6555', 'Discriminator accuracy 0.6035', 'Total loss: 1.1753', 'for batch', 13)
('GAN loss 0.5555 ', 'GAN acc 0.9805', 'Discriminator loss 0.5319', 'Discriminator accuracy 0.6934', 'Total loss: 1.0874', 'for batch', 14)
('GAN loss 0.4810 ', 'GAN acc 0.9766', 'Discriminator loss 0.5926', 'Discriminator accuracy 0.6074', 'Total loss: 1.0736', 'for batch', 15)
('GAN loss 0.5138 ', 'GAN acc 0.9922', 'Discriminator loss 0.6034', 'Discriminator accuracy 0.6406', 'Total loss: 1.1172', 'for batch', 16)
('GAN loss 0.5243 ', 'GAN acc 0.9922', 'Discriminator loss 0.6051', 'Discriminator accuracy 0.6602', 'Total loss: 1.1294', 'for batch', 17)
('GAN loss 0.5723 ', 'GAN acc 0.9805', 'Discriminator loss 0.5618', 'Discriminator accuracy 0.6855', 'Total loss: 1.1341', 'for batch', 18)
('GAN loss 0.5726 ', 'GAN acc 0.9844', 'Discriminator loss 0.5903', 'Discriminator accuracy 0.6270', 'Total loss: 1.1629', 'for batch', 19)
('GAN loss 0.5923 ', 'GAN acc 0.9727', 'Discriminator loss 0.6146', 'Discriminator accuracy 0.6172', 'Total loss: 1.2069', 'for batch', 20)
('GAN loss 0.6578 ', 'GAN acc 0.9648', 'Discriminator loss 0.6255', 'Discriminator accuracy 0.6094', 'Total loss: 1.2833', 'for batch', 21)
('GAN loss 0.5742 ', 'GAN acc 0.9844', 'Discriminator loss 0.5345', 'Discriminator accuracy 0.7090', 'Total loss: 1.1087', 'for batch', 22)
('GAN loss 0.5292 ', 'GAN acc 0.9844', 'Discriminator loss 0.5054', 'Discriminator accuracy 0.7422', 'Total loss: 1.0346', 'for batch', 23)
('GAN loss 0.5601 ', 'GAN acc 0.9805', 'Discriminator loss 0.5200', 'Discriminator accuracy 0.7305', 'Total loss: 1.0801', 'for batch', 24)
('GAN loss 0.5480 ', 'GAN acc 0.9688', 'Discriminator loss 0.5521', 'Discriminator accuracy 0.6855', 'Total loss: 1.1001', 'for batch', 25)
('GAN loss 0.5353 ', 'GAN acc 0.9883', 'Discriminator loss 0.5954', 'Discriminator accuracy 0.6211', 'Total loss: 1.1307', 'for batch', 26)
('GAN loss 0.5632 ', 'GAN acc 0.9805', 'Discriminator loss 0.5896', 'Discriminator accuracy 0.6562', 'Total loss: 1.1528', 'for batch', 27)
('GAN loss 0.5042 ', 'GAN acc 0.9766', 'Discriminator loss 0.5678', 'Discriminator accuracy 0.6699', 'Total loss: 1.0720', 'for batch', 28)
('GAN loss 0.4954 ', 'GAN acc 0.9844', 'Discriminator loss 0.5947', 'Discriminator accuracy 0.6289', 'Total loss: 1.0901', 'for batch', 29)
('GAN loss 0.5274 ', 'GAN acc 0.9922', 'Discriminator loss 0.6663', 'Discriminator accuracy 0.5742', 'Total loss: 1.1937', 'for batch', 30)
('GAN loss 0.5687 ', 'GAN acc 0.9883', 'Discriminator loss 0.6616', 'Discriminator accuracy 0.5605', 'Total loss: 1.2304', 'for batch', 31)
('GAN loss 0.6060 ', 'GAN acc 0.9727', 'Discriminator loss 0.6207', 'Discriminator accuracy 0.5996', 'Total loss: 1.2267', 'for batch', 32)
('GAN loss 0.6032 ', 'GAN acc 0.9805', 'Discriminator loss 0.6080', 'Discriminator accuracy 0.6172', 'Total loss: 1.2111', 'for batch', 33)
('GAN loss 0.6377 ', 'GAN acc 0.9805', 'Discriminator loss 0.5896', 'Discriminator accuracy 0.6406', 'Total loss: 1.2273', 'for batch', 34)
('GAN loss 0.5672 ', 'GAN acc 0.9766', 'Discriminator loss 0.5125', 'Discriminator accuracy 0.7305', 'Total loss: 1.0796', 'for batch', 35)
('GAN loss 0.5548 ', 'GAN acc 0.9766', 'Discriminator loss 0.6169', 'Discriminator accuracy 0.6406', 'Total loss: 1.1718', 'for batch', 36)
('GAN loss 0.5407 ', 'GAN acc 0.9883', 'Discriminator loss 0.4715', 'Discriminator accuracy 0.8125', 'Total loss: 1.0122', 'for batch', 37)
('GAN loss 0.5050 ', 'GAN acc 0.9844', 'Discriminator loss 0.4888', 'Discriminator accuracy 0.7617', 'Total loss: 0.9938', 'for batch', 38)
('GAN loss 0.4685 ', 'GAN acc 0.9805', 'Discriminator loss 0.4097', 'Discriminator accuracy 0.8145', 'Total loss: 0.8782', 'for batch', 39)
('GAN loss 0.4636 ', 'GAN acc 0.9883', 'Discriminator loss 0.5161', 'Discriminator accuracy 0.7129', 'Total loss: 0.9797', 'for batch', 40)
('GAN loss 0.4568 ', 'GAN acc 0.9844', 'Discriminator loss 0.4218', 'Discriminator accuracy 0.8281', 'Total loss: 0.8786', 'for batch', 41)
('GAN loss 0.4231 ', 'GAN acc 0.9883', 'Discriminator loss 0.4884', 'Discriminator accuracy 0.7324', 'Total loss: 0.9115', 'for batch', 42)
('GAN loss 0.3910 ', 'GAN acc 0.9883', 'Discriminator loss 0.5095', 'Discriminator accuracy 0.6934', 'Total loss: 0.9004', 'for batch', 43)
('GAN loss 0.4064 ', 'GAN acc 0.9805', 'Discriminator loss 0.4626', 'Discriminator accuracy 0.7285', 'Total loss: 0.8691', 'for batch', 44)
('GAN loss 0.3707 ', 'GAN acc 0.9961', 'Discriminator loss 0.5063', 'Discriminator accuracy 0.7734', 'Total loss: 0.8770', 'for batch', 45)
('GAN loss 0.3946 ', 'GAN acc 0.9883', 'Discriminator loss 0.4930', 'Discriminator accuracy 0.6914', 'Total loss: 0.8876', 'for batch', 46)
('GAN loss 0.4132 ', 'GAN acc 0.9883', 'Discriminator loss 0.6577', 'Discriminator accuracy 0.6484', 'Total loss: 1.0710', 'for batch', 47)
('GAN loss 0.4234 ', 'GAN acc 0.9883', 'Discriminator loss 0.4076', 'Discriminator accuracy 0.8184', 'Total loss: 0.8310', 'for batch', 48)
('GAN loss 0.4267 ', 'GAN acc 0.9883', 'Discriminator loss 0.5928', 'Discriminator accuracy 0.6855', 'Total loss: 1.0195', 'for batch', 49)
('GAN loss 0.5124 ', 'GAN acc 0.9883', 'Discriminator loss 0.5434', 'Discriminator accuracy 0.6855', 'Total loss: 1.0558', 'for batch', 50)
('GAN loss 0.4413 ', 'GAN acc 0.9922', 'Discriminator loss 0.5277', 'Discriminator accuracy 0.6523', 'Total loss: 0.9691', 'for batch', 51)
('GAN loss 0.4310 ', 'GAN acc 0.9883', 'Discriminator loss 0.5427', 'Discriminator accuracy 0.6992', 'Total loss: 0.9737', 'for batch', 52)
('GAN loss 0.4324 ', 'GAN acc 0.9844', 'Discriminator loss 0.5001', 'Discriminator accuracy 0.7363', 'Total loss: 0.9325', 'for batch', 53)
('GAN loss 0.4641 ', 'GAN acc 0.9688', 'Discriminator loss 0.3125', 'Discriminator accuracy 0.8867', 'Total loss: 0.7766', 'for batch', 54)
('GAN loss 0.4300 ', 'GAN acc 0.9883', 'Discriminator loss 0.4042', 'Discriminator accuracy 0.8105', 'Total loss: 0.8343', 'for batch', 55)
('GAN loss 0.5297 ', 'GAN acc 0.9844', 'Discriminator loss 0.7157', 'Discriminator accuracy 0.5137', 'Total loss: 1.2454', 'for batch', 56)
('GAN loss 0.4779 ', 'GAN acc 0.9883', 'Discriminator loss 0.4337', 'Discriminator accuracy 0.8652', 'Total loss: 0.9117', 'for batch', 57)
('GAN loss 0.4386 ', 'GAN acc 0.9844', 'Discriminator loss 0.5652', 'Discriminator accuracy 0.6641', 'Total loss: 1.0038', 'for batch', 58)
('GAN loss 0.3769 ', 'GAN acc 0.9844', 'Discriminator loss 0.4677', 'Discriminator accuracy 0.7637', 'Total loss: 0.8446', 'for batch', 59)
('GAN loss 0.3874 ', 'GAN acc 0.9844', 'Discriminator loss 0.6145', 'Discriminator accuracy 0.6309', 'Total loss: 1.0020', 'for batch', 60)
('GAN loss 0.4844 ', 'GAN acc 0.9844', 'Discriminator loss 0.5936', 'Discriminator accuracy 0.6465', 'Total loss: 1.0780', 'for batch', 61)
('GAN loss 0.4712 ', 'GAN acc 0.9844', 'Discriminator loss 0.6261', 'Discriminator accuracy 0.5977', 'Total loss: 1.0974', 'for batch', 62)
('GAN loss 0.4390 ', 'GAN acc 0.9883', 'Discriminator loss 0.5886', 'Discriminator accuracy 0.6113', 'Total loss: 1.0275', 'for batch', 63)
('GAN loss 0.4314 ', 'GAN acc 0.9883', 'Discriminator loss 0.5301', 'Discriminator accuracy 0.7188', 'Total loss: 0.9615', 'for batch', 64)
('GAN loss 0.4323 ', 'GAN acc 0.9883', 'Discriminator loss 0.5291', 'Discriminator accuracy 0.7070', 'Total loss: 0.9614', 'for batch', 65)
('GAN loss 0.4388 ', 'GAN acc 0.9883', 'Discriminator loss 0.5963', 'Discriminator accuracy 0.6465', 'Total loss: 1.0351', 'for batch', 66)
('GAN loss 0.4955 ', 'GAN acc 0.9648', 'Discriminator loss 0.5086', 'Discriminator accuracy 0.7480', 'Total loss: 1.0041', 'for batch', 67)
('GAN loss 0.4602 ', 'GAN acc 0.9805', 'Discriminator loss 0.5546', 'Discriminator accuracy 0.6836', 'Total loss: 1.0148', 'for batch', 68)
('GAN loss 0.4641 ', 'GAN acc 0.9883', 'Discriminator loss 0.5423', 'Discriminator accuracy 0.7168', 'Total loss: 1.0063', 'for batch', 69)
('GAN loss 0.4501 ', 'GAN acc 0.9883', 'Discriminator loss 0.5382', 'Discriminator accuracy 0.7227', 'Total loss: 0.9883', 'for batch', 70)
('GAN loss 0.4894 ', 'GAN acc 0.9805', 'Discriminator loss 0.5283', 'Discriminator accuracy 0.7188', 'Total loss: 1.0177', 'for batch', 71)
('GAN loss 0.4801 ', 'GAN acc 0.9805', 'Discriminator loss 0.6418', 'Discriminator accuracy 0.5918', 'Total loss: 1.1219', 'for batch', 72)
('GAN loss 0.4735 ', 'GAN acc 0.9922', 'Discriminator loss 0.5976', 'Discriminator accuracy 0.6523', 'Total loss: 1.0710', 'for batch', 73)
('GAN loss 0.5344 ', 'GAN acc 0.9922', 'Discriminator loss 0.6350', 'Discriminator accuracy 0.6152', 'Total loss: 1.1694', 'for batch', 74)
('GAN loss 0.5743 ', 'GAN acc 0.9844', 'Discriminator loss 0.7085', 'Discriminator accuracy 0.4883', 'Total loss: 1.2829', 'for batch', 75)
('GAN loss 0.5323 ', 'GAN acc 0.9844', 'Discriminator loss 0.5079', 'Discriminator accuracy 0.7031', 'Total loss: 1.0402', 'for batch', 76)
('GAN loss 0.5378 ', 'GAN acc 0.9883', 'Discriminator loss 0.6050', 'Discriminator accuracy 0.6309', 'Total loss: 1.1428', 'for batch', 77)
('GAN loss 0.5278 ', 'GAN acc 0.9922', 'Discriminator loss 0.6206', 'Discriminator accuracy 0.6172', 'Total loss: 1.1484', 'for batch', 78)
('GAN loss 0.5649 ', 'GAN acc 0.9805', 'Discriminator loss 0.6200', 'Discriminator accuracy 0.6191', 'Total loss: 1.1850', 'for batch', 79)
('GAN loss 0.5555 ', 'GAN acc 0.9883', 'Discriminator loss 0.5511', 'Discriminator accuracy 0.6758', 'Total loss: 1.1066', 'for batch', 80)
('GAN loss 0.5560 ', 'GAN acc 0.9883', 'Discriminator loss 0.5727', 'Discriminator accuracy 0.6562', 'Total loss: 1.1287', 'for batch', 81)
('GAN loss 0.5565 ', 'GAN acc 0.9844', 'Discriminator loss 0.5849', 'Discriminator accuracy 0.6465', 'Total loss: 1.1414', 'for batch', 82)
('GAN loss 0.5619 ', 'GAN acc 0.9844', 'Discriminator loss 0.5806', 'Discriminator accuracy 0.6602', 'Total loss: 1.1425', 'for batch', 83)
('GAN loss 0.5329 ', 'GAN acc 0.9922', 'Discriminator loss 0.4454', 'Discriminator accuracy 0.7969', 'Total loss: 0.9782', 'for batch', 84)
('GAN loss 0.5578 ', 'GAN acc 0.9805', 'Discriminator loss 0.5413', 'Discriminator accuracy 0.6953', 'Total loss: 1.0991', 'for batch', 85)
('GAN loss 0.4970 ', 'GAN acc 0.9844', 'Discriminator loss 0.5202', 'Discriminator accuracy 0.7012', 'Total loss: 1.0172', 'for batch', 86)
('GAN loss 0.4708 ', 'GAN acc 0.9922', 'Discriminator loss 0.4280', 'Discriminator accuracy 0.8242', 'Total loss: 0.8988', 'for batch', 87)
('GAN loss 0.5070 ', 'GAN acc 0.9883', 'Discriminator loss 0.6348', 'Discriminator accuracy 0.6074', 'Total loss: 1.1419', 'for batch', 88)
('GAN loss 0.4732 ', 'GAN acc 0.9883', 'Discriminator loss 0.4741', 'Discriminator accuracy 0.7695', 'Total loss: 0.9473', 'for batch', 89)
('GAN loss 0.4543 ', 'GAN acc 0.9922', 'Discriminator loss 0.5418', 'Discriminator accuracy 0.7090', 'Total loss: 0.9961', 'for batch', 90)
('GAN loss 0.5133 ', 'GAN acc 0.9883', 'Discriminator loss 0.5155', 'Discriminator accuracy 0.7402', 'Total loss: 1.0288', 'for batch', 91)
('GAN loss 0.4387 ', 'GAN acc 0.9922', 'Discriminator loss 0.4813', 'Discriminator accuracy 0.7305', 'Total loss: 0.9200', 'for batch', 92)
('GAN loss 0.4372 ', 'GAN acc 0.9922', 'Discriminator loss 0.4573', 'Discriminator accuracy 0.7969', 'Total loss: 0.8945', 'for batch', 93)
('GAN loss 0.4150 ', 'GAN acc 0.9922', 'Discriminator loss 0.4210', 'Discriminator accuracy 0.7949', 'Total loss: 0.8360', 'for batch', 94)
('GAN loss 0.5178 ', 'GAN acc 0.9727', 'Discriminator loss 0.5175', 'Discriminator accuracy 0.7285', 'Total loss: 1.0353', 'for batch', 95)
('GAN loss 0.4172 ', 'GAN acc 0.9961', 'Discriminator loss 0.7276', 'Discriminator accuracy 0.5820', 'Total loss: 1.1448', 'for batch', 96)
('GAN loss 0.4706 ', 'GAN acc 0.9883', 'Discriminator loss 0.6199', 'Discriminator accuracy 0.6465', 'Total loss: 1.0905', 'for batch', 97)
('GAN loss 0.5623 ', 'GAN acc 0.9844', 'Discriminator loss 0.7427', 'Discriminator accuracy 0.5176', 'Total loss: 1.3050', 'for batch', 98)
('GAN loss 0.6281 ', 'GAN acc 0.9414', 'Discriminator loss 0.6509', 'Discriminator accuracy 0.5996', 'Total loss: 1.2790', 'for batch', 99)
('GAN loss 0.6728 ', 'GAN acc 0.6992', 'Discriminator loss 0.6585', 'Discriminator accuracy 0.5645', 'Total loss: 1.3313', 'for batch', 100)
('GAN loss 0.6600 ', 'GAN acc 0.7656', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.5312', 'Total loss: 1.3544', 'for batch', 101)
('GAN loss 0.6554 ', 'GAN acc 0.9023', 'Discriminator loss 0.6123', 'Discriminator accuracy 0.5938', 'Total loss: 1.2677', 'for batch', 102)
('GAN loss 0.6067 ', 'GAN acc 0.9727', 'Discriminator loss 0.6330', 'Discriminator accuracy 0.5762', 'Total loss: 1.2397', 'for batch', 103)
('GAN loss 0.6089 ', 'GAN acc 0.9609', 'Discriminator loss 0.6911', 'Discriminator accuracy 0.5020', 'Total loss: 1.3000', 'for batch', 104)
('GAN loss 0.6019 ', 'GAN acc 0.9844', 'Discriminator loss 0.6138', 'Discriminator accuracy 0.6289', 'Total loss: 1.2157', 'for batch', 105)
('GAN loss 0.5804 ', 'GAN acc 0.9844', 'Discriminator loss 0.6126', 'Discriminator accuracy 0.5840', 'Total loss: 1.1931', 'for batch', 106)
('GAN loss 0.5620 ', 'GAN acc 0.9844', 'Discriminator loss 0.5010', 'Discriminator accuracy 0.7637', 'Total loss: 1.0630', 'for batch', 107)
('GAN loss 0.5282 ', 'GAN acc 0.9883', 'Discriminator loss 0.5463', 'Discriminator accuracy 0.6875', 'Total loss: 1.0745', 'for batch', 108)
('GAN loss 0.4910 ', 'GAN acc 0.9922', 'Discriminator loss 0.5038', 'Discriminator accuracy 0.7383', 'Total loss: 0.9948', 'for batch', 109)
('GAN loss 0.5170 ', 'GAN acc 0.9844', 'Discriminator loss 0.4904', 'Discriminator accuracy 0.7832', 'Total loss: 1.0073', 'for batch', 110)
('GAN loss 0.5025 ', 'GAN acc 0.9805', 'Discriminator loss 0.5388', 'Discriminator accuracy 0.7227', 'Total loss: 1.0413', 'for batch', 111)
('GAN loss 0.4770 ', 'GAN acc 0.9883', 'Discriminator loss 0.5903', 'Discriminator accuracy 0.6660', 'Total loss: 1.0673', 'for batch', 112)
('GAN loss 0.4765 ', 'GAN acc 0.9922', 'Discriminator loss 0.6238', 'Discriminator accuracy 0.6367', 'Total loss: 1.1003', 'for batch', 113)
('GAN loss 0.4123 ', 'GAN acc 0.9922', 'Discriminator loss 0.4859', 'Discriminator accuracy 0.7773', 'Total loss: 0.8982', 'for batch', 114)
('GAN loss 0.4589 ', 'GAN acc 0.9844', 'Discriminator loss 0.6032', 'Discriminator accuracy 0.6445', 'Total loss: 1.0620', 'for batch', 115)
('GAN loss 0.4727 ', 'GAN acc 0.9883', 'Discriminator loss 0.5926', 'Discriminator accuracy 0.6680', 'Total loss: 1.0653', 'for batch', 116)
('GAN loss 0.4389 ', 'GAN acc 0.9844', 'Discriminator loss 0.4538', 'Discriminator accuracy 0.7891', 'Total loss: 0.8927', 'for batch', 117)
('GAN loss 0.4613 ', 'GAN acc 0.9922', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.6094', 'Total loss: 1.1262', 'for batch', 118)
('GAN loss 0.4972 ', 'GAN acc 0.9883', 'Discriminator loss 0.6151', 'Discriminator accuracy 0.6055', 'Total loss: 1.1123', 'for batch', 119)
('GAN loss 0.4778 ', 'GAN acc 0.9844', 'Discriminator loss 0.4818', 'Discriminator accuracy 0.7461', 'Total loss: 0.9596', 'for batch', 120)
('GAN loss 0.4445 ', 'GAN acc 0.9922', 'Discriminator loss 0.5253', 'Discriminator accuracy 0.7148', 'Total loss: 0.9698', 'for batch', 121)
('GAN loss 0.5331 ', 'GAN acc 0.9844', 'Discriminator loss 0.4594', 'Discriminator accuracy 0.7578', 'Total loss: 0.9925', 'for batch', 122)
('GAN loss 0.4504 ', 'GAN acc 0.9844', 'Discriminator loss 0.4203', 'Discriminator accuracy 0.7988', 'Total loss: 0.8707', 'for batch', 123)
('GAN loss 0.4488 ', 'GAN acc 0.9727', 'Discriminator loss 0.3519', 'Discriminator accuracy 0.8633', 'Total loss: 0.8007', 'for batch', 124)
('GAN loss 0.4174 ', 'GAN acc 0.9883', 'Discriminator loss 0.4436', 'Discriminator accuracy 0.7910', 'Total loss: 0.8610', 'for batch', 125)
('GAN loss 0.4241 ', 'GAN acc 0.9922', 'Discriminator loss 0.6437', 'Discriminator accuracy 0.6289', 'Total loss: 1.0677', 'for batch', 126)
('GAN loss 0.4959 ', 'GAN acc 0.9883', 'Discriminator loss 0.5353', 'Discriminator accuracy 0.7227', 'Total loss: 1.0312', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.59647781)
('DISCRIMINATOR_Imagem FAKE=', 0.34241033)
('Discriminator trained', 51, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.460707')
----------------------------------
('Epoch', 33, 'of', 50)
('Number of batches', 128)
('GAN loss 0.4865 ', 'GAN acc 0.9883', 'Discriminator loss 0.6262', 'Discriminator accuracy 0.5938', 'Total loss: 1.1126', 'for batch', 0)
('GAN loss 0.4926 ', 'GAN acc 0.9883', 'Discriminator loss 0.5902', 'Discriminator accuracy 0.6406', 'Total loss: 1.0828', 'for batch', 1)
('GAN loss 0.5042 ', 'GAN acc 0.9844', 'Discriminator loss 0.6049', 'Discriminator accuracy 0.6387', 'Total loss: 1.1091', 'for batch', 2)
('GAN loss 0.4886 ', 'GAN acc 0.9805', 'Discriminator loss 0.5340', 'Discriminator accuracy 0.6953', 'Total loss: 1.0226', 'for batch', 3)
('GAN loss 0.4670 ', 'GAN acc 0.9844', 'Discriminator loss 0.5248', 'Discriminator accuracy 0.7188', 'Total loss: 0.9919', 'for batch', 4)
('GAN loss 0.4714 ', 'GAN acc 0.9961', 'Discriminator loss 0.3975', 'Discriminator accuracy 0.8652', 'Total loss: 0.8690', 'for batch', 5)
('GAN loss 0.4385 ', 'GAN acc 0.9883', 'Discriminator loss 0.4504', 'Discriminator accuracy 0.8281', 'Total loss: 0.8889', 'for batch', 6)
('GAN loss 0.4033 ', 'GAN acc 0.9883', 'Discriminator loss 0.4703', 'Discriminator accuracy 0.7754', 'Total loss: 0.8735', 'for batch', 7)
('GAN loss 0.3621 ', 'GAN acc 0.9922', 'Discriminator loss 0.4201', 'Discriminator accuracy 0.7930', 'Total loss: 0.7822', 'for batch', 8)
('GAN loss 0.3596 ', 'GAN acc 0.9883', 'Discriminator loss 0.5345', 'Discriminator accuracy 0.7305', 'Total loss: 0.8942', 'for batch', 9)
('GAN loss 0.3751 ', 'GAN acc 0.9883', 'Discriminator loss 0.4062', 'Discriminator accuracy 0.8438', 'Total loss: 0.7813', 'for batch', 10)
('GAN loss 0.3502 ', 'GAN acc 0.9883', 'Discriminator loss 0.5414', 'Discriminator accuracy 0.6934', 'Total loss: 0.8916', 'for batch', 11)
('GAN loss 0.4064 ', 'GAN acc 0.9883', 'Discriminator loss 0.6885', 'Discriminator accuracy 0.5996', 'Total loss: 1.0950', 'for batch', 12)
('GAN loss 0.4500 ', 'GAN acc 0.9844', 'Discriminator loss 0.4869', 'Discriminator accuracy 0.7500', 'Total loss: 0.9369', 'for batch', 13)
('GAN loss 0.3866 ', 'GAN acc 0.9883', 'Discriminator loss 0.5267', 'Discriminator accuracy 0.6602', 'Total loss: 0.9133', 'for batch', 14)
('GAN loss 0.3960 ', 'GAN acc 0.9883', 'Discriminator loss 0.4704', 'Discriminator accuracy 0.7852', 'Total loss: 0.8664', 'for batch', 15)
('GAN loss 0.4034 ', 'GAN acc 0.9922', 'Discriminator loss 0.5429', 'Discriminator accuracy 0.6953', 'Total loss: 0.9463', 'for batch', 16)
('GAN loss 0.3989 ', 'GAN acc 0.9922', 'Discriminator loss 0.4874', 'Discriminator accuracy 0.7324', 'Total loss: 0.8863', 'for batch', 17)
('GAN loss 0.4568 ', 'GAN acc 0.9844', 'Discriminator loss 0.5567', 'Discriminator accuracy 0.6504', 'Total loss: 1.0136', 'for batch', 18)
('GAN loss 0.4560 ', 'GAN acc 0.9883', 'Discriminator loss 0.5682', 'Discriminator accuracy 0.6914', 'Total loss: 1.0242', 'for batch', 19)
('GAN loss 0.4063 ', 'GAN acc 0.9883', 'Discriminator loss 0.3911', 'Discriminator accuracy 0.8555', 'Total loss: 0.7973', 'for batch', 20)
('GAN loss 0.3971 ', 'GAN acc 0.9844', 'Discriminator loss 0.5579', 'Discriminator accuracy 0.6875', 'Total loss: 0.9550', 'for batch', 21)
('GAN loss 0.4206 ', 'GAN acc 0.9922', 'Discriminator loss 0.5324', 'Discriminator accuracy 0.6934', 'Total loss: 0.9530', 'for batch', 22)
('GAN loss 0.4180 ', 'GAN acc 0.9844', 'Discriminator loss 0.4834', 'Discriminator accuracy 0.7500', 'Total loss: 0.9013', 'for batch', 23)
('GAN loss 0.4417 ', 'GAN acc 0.9805', 'Discriminator loss 0.4479', 'Discriminator accuracy 0.7676', 'Total loss: 0.8896', 'for batch', 24)
('GAN loss 0.4909 ', 'GAN acc 0.9766', 'Discriminator loss 0.4639', 'Discriminator accuracy 0.7734', 'Total loss: 0.9547', 'for batch', 25)
('GAN loss 0.4258 ', 'GAN acc 0.9883', 'Discriminator loss 0.5017', 'Discriminator accuracy 0.7344', 'Total loss: 0.9275', 'for batch', 26)
('GAN loss 0.3948 ', 'GAN acc 0.9922', 'Discriminator loss 0.5046', 'Discriminator accuracy 0.7305', 'Total loss: 0.8994', 'for batch', 27)
('GAN loss 0.4526 ', 'GAN acc 0.9727', 'Discriminator loss 0.6323', 'Discriminator accuracy 0.6250', 'Total loss: 1.0849', 'for batch', 28)
('GAN loss 0.4326 ', 'GAN acc 0.9805', 'Discriminator loss 0.5487', 'Discriminator accuracy 0.7012', 'Total loss: 0.9813', 'for batch', 29)
('GAN loss 0.4556 ', 'GAN acc 0.9922', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5723', 'Total loss: 1.1294', 'for batch', 30)
('GAN loss 0.5267 ', 'GAN acc 0.9883', 'Discriminator loss 0.7081', 'Discriminator accuracy 0.5156', 'Total loss: 1.2347', 'for batch', 31)
('GAN loss 0.5285 ', 'GAN acc 0.9922', 'Discriminator loss 0.5964', 'Discriminator accuracy 0.6523', 'Total loss: 1.1249', 'for batch', 32)
('GAN loss 0.5642 ', 'GAN acc 0.9883', 'Discriminator loss 0.5970', 'Discriminator accuracy 0.6094', 'Total loss: 1.1612', 'for batch', 33)
('GAN loss 0.5267 ', 'GAN acc 0.9844', 'Discriminator loss 0.5359', 'Discriminator accuracy 0.6758', 'Total loss: 1.0625', 'for batch', 34)
('GAN loss 0.4904 ', 'GAN acc 0.9883', 'Discriminator loss 0.4834', 'Discriminator accuracy 0.7969', 'Total loss: 0.9738', 'for batch', 35)
('GAN loss 0.4782 ', 'GAN acc 0.9922', 'Discriminator loss 0.5319', 'Discriminator accuracy 0.7422', 'Total loss: 1.0102', 'for batch', 36)
('GAN loss 0.4359 ', 'GAN acc 0.9922', 'Discriminator loss 0.3618', 'Discriminator accuracy 0.8691', 'Total loss: 0.7977', 'for batch', 37)
('GAN loss 0.4584 ', 'GAN acc 0.9844', 'Discriminator loss 0.4323', 'Discriminator accuracy 0.7988', 'Total loss: 0.8907', 'for batch', 38)
('GAN loss 0.4212 ', 'GAN acc 0.9805', 'Discriminator loss 0.3950', 'Discriminator accuracy 0.8203', 'Total loss: 0.8162', 'for batch', 39)
('GAN loss 0.4038 ', 'GAN acc 0.9883', 'Discriminator loss 0.4839', 'Discriminator accuracy 0.7500', 'Total loss: 0.8877', 'for batch', 40)
('GAN loss 0.4144 ', 'GAN acc 0.9883', 'Discriminator loss 0.4123', 'Discriminator accuracy 0.8047', 'Total loss: 0.8266', 'for batch', 41)
('GAN loss 0.3912 ', 'GAN acc 0.9883', 'Discriminator loss 0.5096', 'Discriminator accuracy 0.7266', 'Total loss: 0.9008', 'for batch', 42)
('GAN loss 0.3938 ', 'GAN acc 0.9922', 'Discriminator loss 0.5243', 'Discriminator accuracy 0.6953', 'Total loss: 0.9181', 'for batch', 43)
('GAN loss 0.4228 ', 'GAN acc 0.9844', 'Discriminator loss 0.4765', 'Discriminator accuracy 0.7578', 'Total loss: 0.8993', 'for batch', 44)
('GAN loss 0.4328 ', 'GAN acc 0.9961', 'Discriminator loss 0.5711', 'Discriminator accuracy 0.6523', 'Total loss: 1.0039', 'for batch', 45)
('GAN loss 0.4463 ', 'GAN acc 0.9844', 'Discriminator loss 0.3468', 'Discriminator accuracy 0.8926', 'Total loss: 0.7931', 'for batch', 46)
('GAN loss 0.4038 ', 'GAN acc 0.9883', 'Discriminator loss 0.3619', 'Discriminator accuracy 0.9043', 'Total loss: 0.7657', 'for batch', 47)
('GAN loss 0.3595 ', 'GAN acc 0.9922', 'Discriminator loss 0.3890', 'Discriminator accuracy 0.8398', 'Total loss: 0.7485', 'for batch', 48)
('GAN loss 0.3428 ', 'GAN acc 0.9922', 'Discriminator loss 0.4136', 'Discriminator accuracy 0.7871', 'Total loss: 0.7563', 'for batch', 49)
('GAN loss 0.3918 ', 'GAN acc 0.9922', 'Discriminator loss 0.6097', 'Discriminator accuracy 0.6523', 'Total loss: 1.0015', 'for batch', 50)
('GAN loss 0.3502 ', 'GAN acc 0.9883', 'Discriminator loss 0.4149', 'Discriminator accuracy 0.8105', 'Total loss: 0.7651', 'for batch', 51)
('GAN loss 0.3521 ', 'GAN acc 0.9883', 'Discriminator loss 0.4431', 'Discriminator accuracy 0.7734', 'Total loss: 0.7952', 'for batch', 52)
('GAN loss 0.3514 ', 'GAN acc 0.9922', 'Discriminator loss 0.3601', 'Discriminator accuracy 0.8379', 'Total loss: 0.7114', 'for batch', 53)
('GAN loss 0.3437 ', 'GAN acc 0.9883', 'Discriminator loss 0.1923', 'Discriminator accuracy 0.9902', 'Total loss: 0.5359', 'for batch', 54)
('GAN loss 0.3024 ', 'GAN acc 0.9883', 'Discriminator loss 0.2424', 'Discriminator accuracy 0.9336', 'Total loss: 0.5449', 'for batch', 55)
('GAN loss 0.3704 ', 'GAN acc 0.9883', 'Discriminator loss 0.5443', 'Discriminator accuracy 0.7188', 'Total loss: 0.9147', 'for batch', 56)
('GAN loss 0.3248 ', 'GAN acc 0.9922', 'Discriminator loss 0.5991', 'Discriminator accuracy 0.6348', 'Total loss: 0.9239', 'for batch', 57)
('GAN loss 0.4287 ', 'GAN acc 0.9883', 'Discriminator loss 0.7393', 'Discriminator accuracy 0.5840', 'Total loss: 1.1680', 'for batch', 58)
('GAN loss 0.4202 ', 'GAN acc 0.9922', 'Discriminator loss 0.4672', 'Discriminator accuracy 0.7891', 'Total loss: 0.8873', 'for batch', 59)
('GAN loss 0.4488 ', 'GAN acc 0.9883', 'Discriminator loss 0.6327', 'Discriminator accuracy 0.6367', 'Total loss: 1.0815', 'for batch', 60)
('GAN loss 0.4778 ', 'GAN acc 0.9883', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5840', 'Total loss: 1.1546', 'for batch', 61)
('GAN loss 0.5236 ', 'GAN acc 0.9844', 'Discriminator loss 0.6159', 'Discriminator accuracy 0.6387', 'Total loss: 1.1396', 'for batch', 62)
('GAN loss 0.5077 ', 'GAN acc 0.9883', 'Discriminator loss 0.5507', 'Discriminator accuracy 0.7344', 'Total loss: 1.0584', 'for batch', 63)
('GAN loss 0.4888 ', 'GAN acc 0.9883', 'Discriminator loss 0.5124', 'Discriminator accuracy 0.7578', 'Total loss: 1.0012', 'for batch', 64)
('GAN loss 0.4649 ', 'GAN acc 0.9883', 'Discriminator loss 0.4528', 'Discriminator accuracy 0.8379', 'Total loss: 0.9177', 'for batch', 65)
('GAN loss 0.4453 ', 'GAN acc 0.9883', 'Discriminator loss 0.4891', 'Discriminator accuracy 0.8066', 'Total loss: 0.9344', 'for batch', 66)
('GAN loss 0.4240 ', 'GAN acc 0.9883', 'Discriminator loss 0.4194', 'Discriminator accuracy 0.8398', 'Total loss: 0.8434', 'for batch', 67)
('GAN loss 0.4259 ', 'GAN acc 0.9805', 'Discriminator loss 0.4404', 'Discriminator accuracy 0.8203', 'Total loss: 0.8663', 'for batch', 68)
('GAN loss 0.3677 ', 'GAN acc 0.9883', 'Discriminator loss 0.4379', 'Discriminator accuracy 0.8066', 'Total loss: 0.8057', 'for batch', 69)
('GAN loss 0.3411 ', 'GAN acc 0.9883', 'Discriminator loss 0.4681', 'Discriminator accuracy 0.7598', 'Total loss: 0.8092', 'for batch', 70)
('GAN loss 0.3551 ', 'GAN acc 0.9844', 'Discriminator loss 0.4080', 'Discriminator accuracy 0.8184', 'Total loss: 0.7631', 'for batch', 71)
('GAN loss 0.3554 ', 'GAN acc 0.9883', 'Discriminator loss 0.5111', 'Discriminator accuracy 0.7422', 'Total loss: 0.8665', 'for batch', 72)
('GAN loss 0.3453 ', 'GAN acc 0.9922', 'Discriminator loss 0.4032', 'Discriminator accuracy 0.8203', 'Total loss: 0.7484', 'for batch', 73)
('GAN loss 0.3418 ', 'GAN acc 0.9922', 'Discriminator loss 0.4068', 'Discriminator accuracy 0.8125', 'Total loss: 0.7486', 'for batch', 74)
('GAN loss 0.3844 ', 'GAN acc 0.9844', 'Discriminator loss 0.4453', 'Discriminator accuracy 0.7812', 'Total loss: 0.8297', 'for batch', 75)
('GAN loss 0.3077 ', 'GAN acc 0.9922', 'Discriminator loss 0.3681', 'Discriminator accuracy 0.8516', 'Total loss: 0.6759', 'for batch', 76)
('GAN loss 0.3284 ', 'GAN acc 0.9805', 'Discriminator loss 0.2968', 'Discriminator accuracy 0.9355', 'Total loss: 0.6252', 'for batch', 77)
('GAN loss 0.3084 ', 'GAN acc 0.9922', 'Discriminator loss 0.5304', 'Discriminator accuracy 0.6914', 'Total loss: 0.8387', 'for batch', 78)
('GAN loss 0.3370 ', 'GAN acc 0.9922', 'Discriminator loss 0.5396', 'Discriminator accuracy 0.7383', 'Total loss: 0.8766', 'for batch', 79)
('GAN loss 0.3451 ', 'GAN acc 0.9922', 'Discriminator loss 0.5018', 'Discriminator accuracy 0.7480', 'Total loss: 0.8469', 'for batch', 80)
('GAN loss 0.3678 ', 'GAN acc 0.9922', 'Discriminator loss 0.5389', 'Discriminator accuracy 0.6953', 'Total loss: 0.9067', 'for batch', 81)
('GAN loss 0.4197 ', 'GAN acc 0.9883', 'Discriminator loss 0.5195', 'Discriminator accuracy 0.7363', 'Total loss: 0.9391', 'for batch', 82)
('GAN loss 0.4637 ', 'GAN acc 0.9844', 'Discriminator loss 0.5176', 'Discriminator accuracy 0.6914', 'Total loss: 0.9813', 'for batch', 83)
('GAN loss 0.3711 ', 'GAN acc 0.9961', 'Discriminator loss 0.3269', 'Discriminator accuracy 0.9160', 'Total loss: 0.6981', 'for batch', 84)
('GAN loss 0.4081 ', 'GAN acc 0.9883', 'Discriminator loss 0.5208', 'Discriminator accuracy 0.7363', 'Total loss: 0.9289', 'for batch', 85)
('GAN loss 0.4125 ', 'GAN acc 0.9883', 'Discriminator loss 0.4842', 'Discriminator accuracy 0.7598', 'Total loss: 0.8967', 'for batch', 86)
('GAN loss 0.3331 ', 'GAN acc 0.9883', 'Discriminator loss 0.3778', 'Discriminator accuracy 0.8418', 'Total loss: 0.7110', 'for batch', 87)
('GAN loss 0.3842 ', 'GAN acc 0.9883', 'Discriminator loss 0.6398', 'Discriminator accuracy 0.6523', 'Total loss: 1.0240', 'for batch', 88)
('GAN loss 0.4178 ', 'GAN acc 0.9883', 'Discriminator loss 0.3463', 'Discriminator accuracy 0.8535', 'Total loss: 0.7641', 'for batch', 89)
('GAN loss 0.4397 ', 'GAN acc 0.9922', 'Discriminator loss 0.4016', 'Discriminator accuracy 0.8164', 'Total loss: 0.8414', 'for batch', 90)
('GAN loss 0.3951 ', 'GAN acc 0.9883', 'Discriminator loss 0.3034', 'Discriminator accuracy 0.9121', 'Total loss: 0.6986', 'for batch', 91)
('GAN loss 0.3345 ', 'GAN acc 0.9961', 'Discriminator loss 0.3595', 'Discriminator accuracy 0.8457', 'Total loss: 0.6941', 'for batch', 92)
('GAN loss 0.3205 ', 'GAN acc 0.9922', 'Discriminator loss 0.3966', 'Discriminator accuracy 0.8125', 'Total loss: 0.7171', 'for batch', 93)
('GAN loss 0.3131 ', 'GAN acc 0.9961', 'Discriminator loss 0.3297', 'Discriminator accuracy 0.8691', 'Total loss: 0.6428', 'for batch', 94)
('GAN loss 0.3486 ', 'GAN acc 0.9883', 'Discriminator loss 0.4932', 'Discriminator accuracy 0.7598', 'Total loss: 0.8417', 'for batch', 95)
('GAN loss 0.3665 ', 'GAN acc 0.9961', 'Discriminator loss 0.3657', 'Discriminator accuracy 0.8301', 'Total loss: 0.7322', 'for batch', 96)
('GAN loss 0.3893 ', 'GAN acc 0.9883', 'Discriminator loss 0.4321', 'Discriminator accuracy 0.7812', 'Total loss: 0.8213', 'for batch', 97)
('GAN loss 0.3355 ', 'GAN acc 0.9844', 'Discriminator loss 0.4709', 'Discriminator accuracy 0.7637', 'Total loss: 0.8065', 'for batch', 98)
('GAN loss 0.3335 ', 'GAN acc 0.9883', 'Discriminator loss 0.4040', 'Discriminator accuracy 0.8164', 'Total loss: 0.7375', 'for batch', 99)
('GAN loss 0.3471 ', 'GAN acc 0.9961', 'Discriminator loss 0.3500', 'Discriminator accuracy 0.8652', 'Total loss: 0.6971', 'for batch', 100)
('GAN loss 0.3783 ', 'GAN acc 0.9922', 'Discriminator loss 0.5535', 'Discriminator accuracy 0.6992', 'Total loss: 0.9318', 'for batch', 101)
('GAN loss 0.4155 ', 'GAN acc 0.9805', 'Discriminator loss 0.2832', 'Discriminator accuracy 0.9297', 'Total loss: 0.6987', 'for batch', 102)
('GAN loss 0.4117 ', 'GAN acc 0.9883', 'Discriminator loss 0.4484', 'Discriminator accuracy 0.7656', 'Total loss: 0.8601', 'for batch', 103)
('GAN loss 0.4261 ', 'GAN acc 0.9844', 'Discriminator loss 0.4685', 'Discriminator accuracy 0.7441', 'Total loss: 0.8946', 'for batch', 104)
('GAN loss 0.3857 ', 'GAN acc 0.9883', 'Discriminator loss 0.3700', 'Discriminator accuracy 0.8379', 'Total loss: 0.7557', 'for batch', 105)
('GAN loss 0.3361 ', 'GAN acc 0.9883', 'Discriminator loss 0.3029', 'Discriminator accuracy 0.9199', 'Total loss: 0.6390', 'for batch', 106)
('GAN loss 0.3274 ', 'GAN acc 0.9844', 'Discriminator loss 0.3535', 'Discriminator accuracy 0.8281', 'Total loss: 0.6809', 'for batch', 107)
('GAN loss 0.2672 ', 'GAN acc 0.9922', 'Discriminator loss 0.3682', 'Discriminator accuracy 0.8418', 'Total loss: 0.6354', 'for batch', 108)
('GAN loss 0.2616 ', 'GAN acc 0.9961', 'Discriminator loss 0.3270', 'Discriminator accuracy 0.8730', 'Total loss: 0.5886', 'for batch', 109)
('GAN loss 0.2680 ', 'GAN acc 0.9844', 'Discriminator loss 0.2224', 'Discriminator accuracy 0.9355', 'Total loss: 0.4904', 'for batch', 110)
('GAN loss 0.2527 ', 'GAN acc 0.9883', 'Discriminator loss 0.3143', 'Discriminator accuracy 0.8789', 'Total loss: 0.5670', 'for batch', 111)
('GAN loss 0.2931 ', 'GAN acc 0.9883', 'Discriminator loss 0.3139', 'Discriminator accuracy 0.8652', 'Total loss: 0.6070', 'for batch', 112)
('GAN loss 0.2294 ', 'GAN acc 0.9922', 'Discriminator loss 0.3413', 'Discriminator accuracy 0.8691', 'Total loss: 0.5707', 'for batch', 113)
('GAN loss 0.2068 ', 'GAN acc 0.9961', 'Discriminator loss 0.1229', 'Discriminator accuracy 0.9844', 'Total loss: 0.3297', 'for batch', 114)
('GAN loss 0.1953 ', 'GAN acc 0.9883', 'Discriminator loss 0.2563', 'Discriminator accuracy 0.8770', 'Total loss: 0.4516', 'for batch', 115)
('GAN loss 0.1744 ', 'GAN acc 0.9922', 'Discriminator loss 0.1881', 'Discriminator accuracy 0.9590', 'Total loss: 0.3625', 'for batch', 116)
('GAN loss 0.1459 ', 'GAN acc 0.9922', 'Discriminator loss 0.1043', 'Discriminator accuracy 0.9922', 'Total loss: 0.2502', 'for batch', 117)
('GAN loss 0.1364 ', 'GAN acc 0.9961', 'Discriminator loss 0.1994', 'Discriminator accuracy 0.9395', 'Total loss: 0.3358', 'for batch', 118)
('GAN loss 0.1381 ', 'GAN acc 0.9922', 'Discriminator loss 0.3263', 'Discriminator accuracy 0.8789', 'Total loss: 0.4643', 'for batch', 119)
('GAN loss 0.1524 ', 'GAN acc 0.9883', 'Discriminator loss 0.0737', 'Discriminator accuracy 0.9961', 'Total loss: 0.2261', 'for batch', 120)
('GAN loss 0.1729 ', 'GAN acc 0.9922', 'Discriminator loss 0.2556', 'Discriminator accuracy 0.8867', 'Total loss: 0.4285', 'for batch', 121)
('GAN loss 0.1370 ', 'GAN acc 0.9883', 'Discriminator loss 0.2269', 'Discriminator accuracy 0.9414', 'Total loss: 0.3639', 'for batch', 122)
('GAN loss 0.1354 ', 'GAN acc 0.9961', 'Discriminator loss 0.3387', 'Discriminator accuracy 0.8789', 'Total loss: 0.4741', 'for batch', 123)
('GAN loss 0.1624 ', 'GAN acc 0.9844', 'Discriminator loss 0.0779', 'Discriminator accuracy 0.9922', 'Total loss: 0.2403', 'for batch', 124)
('GAN loss 0.1768 ', 'GAN acc 0.9883', 'Discriminator loss 0.2944', 'Discriminator accuracy 0.8770', 'Total loss: 0.4713', 'for batch', 125)
('GAN loss 3.0415 ', 'GAN acc 0.0391', 'Discriminator loss 0.4672', 'Discriminator accuracy 0.7500', 'Total loss: 3.5087', 'for batch', 126)
('GAN loss 0.7795 ', 'GAN acc 0.2891', 'Discriminator loss 0.6381', 'Discriminator accuracy 0.6035', 'Total loss: 1.4176', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.63545722)
('DISCRIMINATOR_Imagem FAKE=', 0.44726661)
('Discriminator trained', 13, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.389729')
----------------------------------
('Epoch', 34, 'of', 50)
('Number of batches', 128)
('GAN loss 1.9177 ', 'GAN acc 0.0000', 'Discriminator loss 0.5376', 'Discriminator accuracy 0.8301', 'Total loss: 2.4553', 'for batch', 0)
('GAN loss 1.1480 ', 'GAN acc 0.0000', 'Discriminator loss 0.6051', 'Discriminator accuracy 0.5215', 'Total loss: 1.7531', 'for batch', 1)
('GAN loss 1.0300 ', 'GAN acc 0.0195', 'Discriminator loss 0.5217', 'Discriminator accuracy 0.9121', 'Total loss: 1.5517', 'for batch', 2)
('GAN loss 1.0699 ', 'GAN acc 0.0352', 'Discriminator loss 0.5456', 'Discriminator accuracy 0.8652', 'Total loss: 1.6154', 'for batch', 3)
('GAN loss 1.3965 ', 'GAN acc 0.0156', 'Discriminator loss 0.6107', 'Discriminator accuracy 0.7773', 'Total loss: 2.0071', 'for batch', 4)
('GAN loss 0.7233 ', 'GAN acc 0.4141', 'Discriminator loss 0.6327', 'Discriminator accuracy 0.5645', 'Total loss: 1.3560', 'for batch', 5)
('GAN loss 0.7340 ', 'GAN acc 0.3750', 'Discriminator loss 0.6623', 'Discriminator accuracy 0.5684', 'Total loss: 1.3963', 'for batch', 6)
('GAN loss 0.9433 ', 'GAN acc 0.0625', 'Discriminator loss 0.6057', 'Discriminator accuracy 0.6230', 'Total loss: 1.5489', 'for batch', 7)
('GAN loss 0.8676 ', 'GAN acc 0.1602', 'Discriminator loss 0.5902', 'Discriminator accuracy 0.6992', 'Total loss: 1.4578', 'for batch', 8)
('GAN loss 0.6956 ', 'GAN acc 0.6094', 'Discriminator loss 0.5961', 'Discriminator accuracy 0.6621', 'Total loss: 1.2917', 'for batch', 9)
('GAN loss 0.7488 ', 'GAN acc 0.4180', 'Discriminator loss 0.5916', 'Discriminator accuracy 0.6699', 'Total loss: 1.3404', 'for batch', 10)
('GAN loss 0.7006 ', 'GAN acc 0.5742', 'Discriminator loss 0.6054', 'Discriminator accuracy 0.6328', 'Total loss: 1.3059', 'for batch', 11)
('GAN loss 0.7268 ', 'GAN acc 0.4805', 'Discriminator loss 0.6074', 'Discriminator accuracy 0.6250', 'Total loss: 1.3341', 'for batch', 12)
('GAN loss 0.7799 ', 'GAN acc 0.3594', 'Discriminator loss 0.6000', 'Discriminator accuracy 0.6797', 'Total loss: 1.3800', 'for batch', 13)
('GAN loss 0.6314 ', 'GAN acc 0.7617', 'Discriminator loss 0.5696', 'Discriminator accuracy 0.7031', 'Total loss: 1.2010', 'for batch', 14)
('GAN loss 0.6450 ', 'GAN acc 0.6992', 'Discriminator loss 0.6277', 'Discriminator accuracy 0.6016', 'Total loss: 1.2727', 'for batch', 15)
('GAN loss 0.5679 ', 'GAN acc 0.9023', 'Discriminator loss 0.6262', 'Discriminator accuracy 0.5918', 'Total loss: 1.1941', 'for batch', 16)
('GAN loss 0.4855 ', 'GAN acc 0.9727', 'Discriminator loss 0.5909', 'Discriminator accuracy 0.6543', 'Total loss: 1.0764', 'for batch', 17)
('GAN loss 0.4890 ', 'GAN acc 0.9805', 'Discriminator loss 0.5894', 'Discriminator accuracy 0.6660', 'Total loss: 1.0784', 'for batch', 18)
('GAN loss 0.5583 ', 'GAN acc 0.9492', 'Discriminator loss 0.6149', 'Discriminator accuracy 0.6211', 'Total loss: 1.1732', 'for batch', 19)
('GAN loss 0.6372 ', 'GAN acc 0.8008', 'Discriminator loss 0.5915', 'Discriminator accuracy 0.6621', 'Total loss: 1.2287', 'for batch', 20)
('GAN loss 0.7130 ', 'GAN acc 0.4609', 'Discriminator loss 0.6547', 'Discriminator accuracy 0.5371', 'Total loss: 1.3676', 'for batch', 21)
('GAN loss 0.5710 ', 'GAN acc 0.9414', 'Discriminator loss 0.5900', 'Discriminator accuracy 0.6445', 'Total loss: 1.1610', 'for batch', 22)
('GAN loss 0.5130 ', 'GAN acc 0.9805', 'Discriminator loss 0.5692', 'Discriminator accuracy 0.6855', 'Total loss: 1.0822', 'for batch', 23)
('GAN loss 0.5131 ', 'GAN acc 0.9805', 'Discriminator loss 0.5755', 'Discriminator accuracy 0.6758', 'Total loss: 1.0886', 'for batch', 24)
('GAN loss 0.4986 ', 'GAN acc 0.9883', 'Discriminator loss 0.5451', 'Discriminator accuracy 0.6992', 'Total loss: 1.0437', 'for batch', 25)
('GAN loss 0.6217 ', 'GAN acc 0.8633', 'Discriminator loss 0.6260', 'Discriminator accuracy 0.6074', 'Total loss: 1.2477', 'for batch', 26)
('GAN loss 0.5894 ', 'GAN acc 0.9141', 'Discriminator loss 0.6122', 'Discriminator accuracy 0.6426', 'Total loss: 1.2015', 'for batch', 27)
('GAN loss 0.5365 ', 'GAN acc 0.9727', 'Discriminator loss 0.6138', 'Discriminator accuracy 0.6094', 'Total loss: 1.1503', 'for batch', 28)
('GAN loss 0.6989 ', 'GAN acc 0.5078', 'Discriminator loss 0.5886', 'Discriminator accuracy 0.6426', 'Total loss: 1.2876', 'for batch', 29)
('GAN loss 0.7271 ', 'GAN acc 0.3906', 'Discriminator loss 0.6344', 'Discriminator accuracy 0.5918', 'Total loss: 1.3615', 'for batch', 30)
('GAN loss 0.8118 ', 'GAN acc 0.1797', 'Discriminator loss 0.6690', 'Discriminator accuracy 0.5371', 'Total loss: 1.4808', 'for batch', 31)
('GAN loss 0.7039 ', 'GAN acc 0.4766', 'Discriminator loss 0.6291', 'Discriminator accuracy 0.5898', 'Total loss: 1.3330', 'for batch', 32)
('GAN loss 0.5394 ', 'GAN acc 0.9609', 'Discriminator loss 0.5978', 'Discriminator accuracy 0.5605', 'Total loss: 1.1372', 'for batch', 33)
('GAN loss 0.5906 ', 'GAN acc 0.8281', 'Discriminator loss 0.5576', 'Discriminator accuracy 0.6816', 'Total loss: 1.1482', 'for batch', 34)
('GAN loss 0.3996 ', 'GAN acc 0.9922', 'Discriminator loss 0.5318', 'Discriminator accuracy 0.6875', 'Total loss: 0.9314', 'for batch', 35)
('GAN loss 0.5425 ', 'GAN acc 0.9453', 'Discriminator loss 0.6945', 'Discriminator accuracy 0.5684', 'Total loss: 1.2369', 'for batch', 36)
('GAN loss 0.6092 ', 'GAN acc 0.8359', 'Discriminator loss 0.5498', 'Discriminator accuracy 0.6973', 'Total loss: 1.1589', 'for batch', 37)
('GAN loss 0.5201 ', 'GAN acc 0.9727', 'Discriminator loss 0.5178', 'Discriminator accuracy 0.7129', 'Total loss: 1.0380', 'for batch', 38)
('GAN loss 0.4814 ', 'GAN acc 0.9727', 'Discriminator loss 0.5052', 'Discriminator accuracy 0.7539', 'Total loss: 0.9866', 'for batch', 39)
('GAN loss 0.4585 ', 'GAN acc 0.9844', 'Discriminator loss 0.5186', 'Discriminator accuracy 0.7129', 'Total loss: 0.9772', 'for batch', 40)
('GAN loss 0.4411 ', 'GAN acc 0.9922', 'Discriminator loss 0.5130', 'Discriminator accuracy 0.7266', 'Total loss: 0.9541', 'for batch', 41)
('GAN loss 0.5708 ', 'GAN acc 0.9062', 'Discriminator loss 0.6650', 'Discriminator accuracy 0.5645', 'Total loss: 1.2359', 'for batch', 42)
('GAN loss 0.4460 ', 'GAN acc 0.9922', 'Discriminator loss 0.6280', 'Discriminator accuracy 0.5098', 'Total loss: 1.0740', 'for batch', 43)
('GAN loss 0.4844 ', 'GAN acc 0.9844', 'Discriminator loss 0.5578', 'Discriminator accuracy 0.6875', 'Total loss: 1.0423', 'for batch', 44)
('GAN loss 0.6291 ', 'GAN acc 0.8477', 'Discriminator loss 0.6531', 'Discriminator accuracy 0.5859', 'Total loss: 1.2822', 'for batch', 45)
('GAN loss 0.6479 ', 'GAN acc 0.7930', 'Discriminator loss 0.5824', 'Discriminator accuracy 0.6719', 'Total loss: 1.2304', 'for batch', 46)
('GAN loss 0.6995 ', 'GAN acc 0.6055', 'Discriminator loss 0.6089', 'Discriminator accuracy 0.6660', 'Total loss: 1.3085', 'for batch', 47)
('GAN loss 0.5588 ', 'GAN acc 0.9648', 'Discriminator loss 0.4557', 'Discriminator accuracy 0.7910', 'Total loss: 1.0145', 'for batch', 48)
('GAN loss 0.5442 ', 'GAN acc 0.9531', 'Discriminator loss 0.5495', 'Discriminator accuracy 0.7188', 'Total loss: 1.0937', 'for batch', 49)
('GAN loss 0.6459 ', 'GAN acc 0.7891', 'Discriminator loss 0.6502', 'Discriminator accuracy 0.5566', 'Total loss: 1.2961', 'for batch', 50)
('GAN loss 0.4861 ', 'GAN acc 0.9883', 'Discriminator loss 0.5915', 'Discriminator accuracy 0.6602', 'Total loss: 1.0775', 'for batch', 51)
('GAN loss 0.4849 ', 'GAN acc 0.9844', 'Discriminator loss 0.6137', 'Discriminator accuracy 0.6445', 'Total loss: 1.0985', 'for batch', 52)
('GAN loss 0.4917 ', 'GAN acc 0.9883', 'Discriminator loss 0.5382', 'Discriminator accuracy 0.6914', 'Total loss: 1.0298', 'for batch', 53)
('GAN loss 0.4404 ', 'GAN acc 0.9844', 'Discriminator loss 0.3816', 'Discriminator accuracy 0.8477', 'Total loss: 0.8221', 'for batch', 54)
('GAN loss 0.3924 ', 'GAN acc 0.9883', 'Discriminator loss 0.3995', 'Discriminator accuracy 0.8145', 'Total loss: 0.7918', 'for batch', 55)
('GAN loss 0.4780 ', 'GAN acc 0.9844', 'Discriminator loss 0.7554', 'Discriminator accuracy 0.5156', 'Total loss: 1.2335', 'for batch', 56)
('GAN loss 0.5794 ', 'GAN acc 0.9844', 'Discriminator loss 0.5796', 'Discriminator accuracy 0.6348', 'Total loss: 1.1590', 'for batch', 57)
('GAN loss 0.6793 ', 'GAN acc 0.6719', 'Discriminator loss 0.6271', 'Discriminator accuracy 0.5996', 'Total loss: 1.3064', 'for batch', 58)
('GAN loss 0.5681 ', 'GAN acc 0.9766', 'Discriminator loss 0.4787', 'Discriminator accuracy 0.7383', 'Total loss: 1.0467', 'for batch', 59)
('GAN loss 0.5398 ', 'GAN acc 0.9766', 'Discriminator loss 0.5775', 'Discriminator accuracy 0.6465', 'Total loss: 1.1172', 'for batch', 60)
('GAN loss 0.5707 ', 'GAN acc 0.9688', 'Discriminator loss 0.6135', 'Discriminator accuracy 0.6152', 'Total loss: 1.1841', 'for batch', 61)
('GAN loss 0.6044 ', 'GAN acc 0.9453', 'Discriminator loss 0.5916', 'Discriminator accuracy 0.6211', 'Total loss: 1.1960', 'for batch', 62)
('GAN loss 0.5748 ', 'GAN acc 0.9805', 'Discriminator loss 0.5815', 'Discriminator accuracy 0.6367', 'Total loss: 1.1563', 'for batch', 63)
('GAN loss 0.5228 ', 'GAN acc 0.9844', 'Discriminator loss 0.5107', 'Discriminator accuracy 0.7207', 'Total loss: 1.0335', 'for batch', 64)
('GAN loss 0.5300 ', 'GAN acc 0.9883', 'Discriminator loss 0.5681', 'Discriminator accuracy 0.6680', 'Total loss: 1.0981', 'for batch', 65)
('GAN loss 0.5092 ', 'GAN acc 0.9883', 'Discriminator loss 0.5564', 'Discriminator accuracy 0.6914', 'Total loss: 1.0656', 'for batch', 66)
('GAN loss 0.4624 ', 'GAN acc 0.9883', 'Discriminator loss 0.4965', 'Discriminator accuracy 0.7324', 'Total loss: 0.9590', 'for batch', 67)
('GAN loss 0.4548 ', 'GAN acc 0.9805', 'Discriminator loss 0.5474', 'Discriminator accuracy 0.6934', 'Total loss: 1.0022', 'for batch', 68)
('GAN loss 0.4337 ', 'GAN acc 1.0000', 'Discriminator loss 0.4296', 'Discriminator accuracy 0.8066', 'Total loss: 0.8633', 'for batch', 69)
('GAN loss 0.4666 ', 'GAN acc 0.9961', 'Discriminator loss 0.5090', 'Discriminator accuracy 0.7383', 'Total loss: 0.9756', 'for batch', 70)
('GAN loss 0.4711 ', 'GAN acc 0.9805', 'Discriminator loss 0.4839', 'Discriminator accuracy 0.7676', 'Total loss: 0.9550', 'for batch', 71)
('GAN loss 0.3888 ', 'GAN acc 1.0000', 'Discriminator loss 0.5566', 'Discriminator accuracy 0.6445', 'Total loss: 0.9455', 'for batch', 72)
('GAN loss 0.4346 ', 'GAN acc 1.0000', 'Discriminator loss 0.5810', 'Discriminator accuracy 0.6445', 'Total loss: 1.0157', 'for batch', 73)
('GAN loss 0.4757 ', 'GAN acc 1.0000', 'Discriminator loss 0.5304', 'Discriminator accuracy 0.6875', 'Total loss: 1.0061', 'for batch', 74)
('GAN loss 0.5910 ', 'GAN acc 0.9570', 'Discriminator loss 0.6585', 'Discriminator accuracy 0.5762', 'Total loss: 1.2496', 'for batch', 75)
('GAN loss 0.5860 ', 'GAN acc 0.9492', 'Discriminator loss 0.4252', 'Discriminator accuracy 0.8574', 'Total loss: 1.0112', 'for batch', 76)
('GAN loss 0.5335 ', 'GAN acc 0.9688', 'Discriminator loss 0.5040', 'Discriminator accuracy 0.7637', 'Total loss: 1.0375', 'for batch', 77)
('GAN loss 0.4690 ', 'GAN acc 0.9922', 'Discriminator loss 0.5247', 'Discriminator accuracy 0.7266', 'Total loss: 0.9938', 'for batch', 78)
('GAN loss 0.4649 ', 'GAN acc 0.9844', 'Discriminator loss 0.5527', 'Discriminator accuracy 0.7070', 'Total loss: 1.0176', 'for batch', 79)
('GAN loss 0.4134 ', 'GAN acc 0.9883', 'Discriminator loss 0.5624', 'Discriminator accuracy 0.6484', 'Total loss: 0.9759', 'for batch', 80)
('GAN loss 0.4733 ', 'GAN acc 0.9922', 'Discriminator loss 0.5801', 'Discriminator accuracy 0.6367', 'Total loss: 1.0534', 'for batch', 81)
('GAN loss 0.5323 ', 'GAN acc 0.9844', 'Discriminator loss 0.5683', 'Discriminator accuracy 0.6367', 'Total loss: 1.1007', 'for batch', 82)
('GAN loss 0.5943 ', 'GAN acc 0.9844', 'Discriminator loss 0.5395', 'Discriminator accuracy 0.6855', 'Total loss: 1.1338', 'for batch', 83)
('GAN loss 0.5355 ', 'GAN acc 0.9844', 'Discriminator loss 0.4475', 'Discriminator accuracy 0.8242', 'Total loss: 0.9830', 'for batch', 84)
('GAN loss 0.5299 ', 'GAN acc 0.9805', 'Discriminator loss 0.4888', 'Discriminator accuracy 0.7598', 'Total loss: 1.0186', 'for batch', 85)
('GAN loss 0.4351 ', 'GAN acc 0.9883', 'Discriminator loss 0.4914', 'Discriminator accuracy 0.7441', 'Total loss: 0.9265', 'for batch', 86)
('GAN loss 0.3523 ', 'GAN acc 0.9883', 'Discriminator loss 0.3545', 'Discriminator accuracy 0.8535', 'Total loss: 0.7067', 'for batch', 87)
('GAN loss 0.4316 ', 'GAN acc 0.9922', 'Discriminator loss 0.5859', 'Discriminator accuracy 0.6836', 'Total loss: 1.0175', 'for batch', 88)
('GAN loss 0.3534 ', 'GAN acc 0.9883', 'Discriminator loss 0.4307', 'Discriminator accuracy 0.7910', 'Total loss: 0.7841', 'for batch', 89)
('GAN loss 0.3763 ', 'GAN acc 0.9922', 'Discriminator loss 0.4956', 'Discriminator accuracy 0.7246', 'Total loss: 0.8719', 'for batch', 90)
('GAN loss 0.3745 ', 'GAN acc 0.9922', 'Discriminator loss 0.3706', 'Discriminator accuracy 0.8594', 'Total loss: 0.7451', 'for batch', 91)
('GAN loss 0.4016 ', 'GAN acc 0.9922', 'Discriminator loss 0.4136', 'Discriminator accuracy 0.8125', 'Total loss: 0.8152', 'for batch', 92)
('GAN loss 0.3932 ', 'GAN acc 0.9883', 'Discriminator loss 0.4135', 'Discriminator accuracy 0.8008', 'Total loss: 0.8068', 'for batch', 93)
('GAN loss 0.3343 ', 'GAN acc 0.9961', 'Discriminator loss 0.3622', 'Discriminator accuracy 0.8516', 'Total loss: 0.6964', 'for batch', 94)
('GAN loss 0.4028 ', 'GAN acc 0.9883', 'Discriminator loss 0.5155', 'Discriminator accuracy 0.7031', 'Total loss: 0.9183', 'for batch', 95)
('GAN loss 0.3233 ', 'GAN acc 0.9961', 'Discriminator loss 0.4345', 'Discriminator accuracy 0.7812', 'Total loss: 0.7578', 'for batch', 96)
('GAN loss 0.3646 ', 'GAN acc 0.9883', 'Discriminator loss 0.5140', 'Discriminator accuracy 0.7422', 'Total loss: 0.8786', 'for batch', 97)
('GAN loss 0.4544 ', 'GAN acc 0.9922', 'Discriminator loss 0.5703', 'Discriminator accuracy 0.6641', 'Total loss: 1.0247', 'for batch', 98)
('GAN loss 0.4548 ', 'GAN acc 0.9883', 'Discriminator loss 0.3688', 'Discriminator accuracy 0.8730', 'Total loss: 0.8235', 'for batch', 99)
('GAN loss 0.3723 ', 'GAN acc 0.9961', 'Discriminator loss 0.3233', 'Discriminator accuracy 0.9043', 'Total loss: 0.6956', 'for batch', 100)
('GAN loss 0.3767 ', 'GAN acc 0.9922', 'Discriminator loss 0.5246', 'Discriminator accuracy 0.6973', 'Total loss: 0.9013', 'for batch', 101)
('GAN loss 0.3840 ', 'GAN acc 0.9883', 'Discriminator loss 0.3816', 'Discriminator accuracy 0.8164', 'Total loss: 0.7656', 'for batch', 102)
('GAN loss 0.4048 ', 'GAN acc 0.9883', 'Discriminator loss 0.4565', 'Discriminator accuracy 0.7559', 'Total loss: 0.8613', 'for batch', 103)
('GAN loss 0.4360 ', 'GAN acc 0.9922', 'Discriminator loss 0.4611', 'Discriminator accuracy 0.7598', 'Total loss: 0.8971', 'for batch', 104)
('GAN loss 0.4448 ', 'GAN acc 0.9883', 'Discriminator loss 0.3859', 'Discriminator accuracy 0.8145', 'Total loss: 0.8306', 'for batch', 105)
('GAN loss 0.5003 ', 'GAN acc 0.9844', 'Discriminator loss 0.4866', 'Discriminator accuracy 0.7656', 'Total loss: 0.9869', 'for batch', 106)
('GAN loss 0.3440 ', 'GAN acc 0.9922', 'Discriminator loss 0.5398', 'Discriminator accuracy 0.6113', 'Total loss: 0.8838', 'for batch', 107)
('GAN loss 0.4142 ', 'GAN acc 0.9922', 'Discriminator loss 0.5663', 'Discriminator accuracy 0.6875', 'Total loss: 0.9805', 'for batch', 108)
('GAN loss 0.4583 ', 'GAN acc 0.9961', 'Discriminator loss 0.5110', 'Discriminator accuracy 0.7285', 'Total loss: 0.9692', 'for batch', 109)
('GAN loss 0.4769 ', 'GAN acc 0.9805', 'Discriminator loss 0.4979', 'Discriminator accuracy 0.7383', 'Total loss: 0.9748', 'for batch', 110)
('GAN loss 0.4945 ', 'GAN acc 0.9766', 'Discriminator loss 0.4803', 'Discriminator accuracy 0.7520', 'Total loss: 0.9748', 'for batch', 111)
('GAN loss 0.5026 ', 'GAN acc 0.9844', 'Discriminator loss 0.5084', 'Discriminator accuracy 0.7480', 'Total loss: 1.0110', 'for batch', 112)
('GAN loss 0.4471 ', 'GAN acc 0.9922', 'Discriminator loss 0.5014', 'Discriminator accuracy 0.7344', 'Total loss: 0.9485', 'for batch', 113)
('GAN loss 0.3794 ', 'GAN acc 0.9883', 'Discriminator loss 0.3663', 'Discriminator accuracy 0.8555', 'Total loss: 0.7457', 'for batch', 114)
('GAN loss 0.3794 ', 'GAN acc 0.9844', 'Discriminator loss 0.4317', 'Discriminator accuracy 0.8027', 'Total loss: 0.8111', 'for batch', 115)
('GAN loss 0.3395 ', 'GAN acc 0.9961', 'Discriminator loss 0.3635', 'Discriminator accuracy 0.8574', 'Total loss: 0.7029', 'for batch', 116)
('GAN loss 0.3126 ', 'GAN acc 0.9844', 'Discriminator loss 0.2473', 'Discriminator accuracy 0.9395', 'Total loss: 0.5599', 'for batch', 117)
('GAN loss 0.2566 ', 'GAN acc 0.9961', 'Discriminator loss 0.2925', 'Discriminator accuracy 0.8926', 'Total loss: 0.5491', 'for batch', 118)
('GAN loss 0.2907 ', 'GAN acc 0.9883', 'Discriminator loss 0.3969', 'Discriminator accuracy 0.8223', 'Total loss: 0.6876', 'for batch', 119)
('GAN loss 0.2293 ', 'GAN acc 0.9883', 'Discriminator loss 0.2790', 'Discriminator accuracy 0.9062', 'Total loss: 0.5083', 'for batch', 120)
('GAN loss 0.2524 ', 'GAN acc 0.9922', 'Discriminator loss 0.4374', 'Discriminator accuracy 0.7637', 'Total loss: 0.6898', 'for batch', 121)
('GAN loss 0.3167 ', 'GAN acc 0.9844', 'Discriminator loss 0.2373', 'Discriminator accuracy 0.9297', 'Total loss: 0.5540', 'for batch', 122)
('GAN loss 0.2298 ', 'GAN acc 0.9922', 'Discriminator loss 0.3545', 'Discriminator accuracy 0.8477', 'Total loss: 0.5843', 'for batch', 123)
('GAN loss 0.2174 ', 'GAN acc 0.9922', 'Discriminator loss 0.2121', 'Discriminator accuracy 0.9355', 'Total loss: 0.4295', 'for batch', 124)
('GAN loss 0.2132 ', 'GAN acc 0.9883', 'Discriminator loss 0.3074', 'Discriminator accuracy 0.8770', 'Total loss: 0.5206', 'for batch', 125)
('GAN loss 0.2740 ', 'GAN acc 0.9883', 'Discriminator loss 0.6511', 'Discriminator accuracy 0.6934', 'Total loss: 0.9251', 'for batch', 126)
('GAN loss 0.3610 ', 'GAN acc 0.9883', 'Discriminator loss 0.4626', 'Discriminator accuracy 0.7539', 'Total loss: 0.8236', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.66342366)
('DISCRIMINATOR_Imagem FAKE=', 0.18896466)
('Discriminator trained', 40, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.029567')
----------------------------------
('Epoch', 35, 'of', 50)
('Number of batches', 128)
('GAN loss 0.3722 ', 'GAN acc 0.9844', 'Discriminator loss 0.5049', 'Discriminator accuracy 0.7246', 'Total loss: 0.8771', 'for batch', 0)
('GAN loss 0.3501 ', 'GAN acc 0.9922', 'Discriminator loss 0.4143', 'Discriminator accuracy 0.7930', 'Total loss: 0.7644', 'for batch', 1)
('GAN loss 0.3870 ', 'GAN acc 0.9883', 'Discriminator loss 0.4550', 'Discriminator accuracy 0.7617', 'Total loss: 0.8420', 'for batch', 2)
('GAN loss 0.4308 ', 'GAN acc 0.9805', 'Discriminator loss 0.3885', 'Discriminator accuracy 0.8477', 'Total loss: 0.8193', 'for batch', 3)
('GAN loss 0.3841 ', 'GAN acc 0.9883', 'Discriminator loss 0.5033', 'Discriminator accuracy 0.7207', 'Total loss: 0.8874', 'for batch', 4)
('GAN loss 0.3494 ', 'GAN acc 0.9961', 'Discriminator loss 0.3340', 'Discriminator accuracy 0.8750', 'Total loss: 0.6833', 'for batch', 5)
('GAN loss 0.3267 ', 'GAN acc 0.9922', 'Discriminator loss 0.3205', 'Discriminator accuracy 0.8750', 'Total loss: 0.6472', 'for batch', 6)
('GAN loss 0.3184 ', 'GAN acc 0.9922', 'Discriminator loss 0.3458', 'Discriminator accuracy 0.8691', 'Total loss: 0.6642', 'for batch', 7)
('GAN loss 0.3160 ', 'GAN acc 0.9922', 'Discriminator loss 0.3505', 'Discriminator accuracy 0.8496', 'Total loss: 0.6666', 'for batch', 8)
('GAN loss 0.2893 ', 'GAN acc 0.9883', 'Discriminator loss 0.4493', 'Discriminator accuracy 0.7617', 'Total loss: 0.7385', 'for batch', 9)
('GAN loss 0.2766 ', 'GAN acc 0.9883', 'Discriminator loss 0.3319', 'Discriminator accuracy 0.8750', 'Total loss: 0.6086', 'for batch', 10)
('GAN loss 0.3216 ', 'GAN acc 0.9922', 'Discriminator loss 0.5638', 'Discriminator accuracy 0.6973', 'Total loss: 0.8855', 'for batch', 11)
('GAN loss 0.4864 ', 'GAN acc 0.9688', 'Discriminator loss 0.6571', 'Discriminator accuracy 0.6074', 'Total loss: 1.1434', 'for batch', 12)
('GAN loss 0.3668 ', 'GAN acc 0.9961', 'Discriminator loss 0.7361', 'Discriminator accuracy 0.5020', 'Total loss: 1.1028', 'for batch', 13)
('GAN loss 0.4760 ', 'GAN acc 0.9922', 'Discriminator loss 0.5555', 'Discriminator accuracy 0.6621', 'Total loss: 1.0314', 'for batch', 14)
('GAN loss 0.5948 ', 'GAN acc 0.9180', 'Discriminator loss 0.6670', 'Discriminator accuracy 0.5762', 'Total loss: 1.2618', 'for batch', 15)
('GAN loss 0.6710 ', 'GAN acc 0.6445', 'Discriminator loss 0.6974', 'Discriminator accuracy 0.5664', 'Total loss: 1.3684', 'for batch', 16)
('GAN loss 0.6317 ', 'GAN acc 0.8594', 'Discriminator loss 0.6486', 'Discriminator accuracy 0.5898', 'Total loss: 1.2804', 'for batch', 17)
('GAN loss 0.5685 ', 'GAN acc 0.9766', 'Discriminator loss 0.6148', 'Discriminator accuracy 0.5059', 'Total loss: 1.1834', 'for batch', 18)
('GAN loss 0.5451 ', 'GAN acc 0.9844', 'Discriminator loss 0.6008', 'Discriminator accuracy 0.6230', 'Total loss: 1.1459', 'for batch', 19)
('GAN loss 0.5265 ', 'GAN acc 0.9766', 'Discriminator loss 0.4177', 'Discriminator accuracy 0.9492', 'Total loss: 0.9441', 'for batch', 20)
('GAN loss 0.5787 ', 'GAN acc 0.9258', 'Discriminator loss 0.5272', 'Discriminator accuracy 0.7559', 'Total loss: 1.1059', 'for batch', 21)
('GAN loss 0.5586 ', 'GAN acc 0.9766', 'Discriminator loss 0.4370', 'Discriminator accuracy 0.8535', 'Total loss: 0.9955', 'for batch', 22)
('GAN loss 0.4764 ', 'GAN acc 0.9844', 'Discriminator loss 0.5054', 'Discriminator accuracy 0.7656', 'Total loss: 0.9818', 'for batch', 23)
('GAN loss 0.3736 ', 'GAN acc 0.9922', 'Discriminator loss 0.4858', 'Discriminator accuracy 0.7227', 'Total loss: 0.8594', 'for batch', 24)
('GAN loss 0.3298 ', 'GAN acc 0.9844', 'Discriminator loss 0.4160', 'Discriminator accuracy 0.8027', 'Total loss: 0.7459', 'for batch', 25)
('GAN loss 0.3193 ', 'GAN acc 0.9922', 'Discriminator loss 0.4934', 'Discriminator accuracy 0.7422', 'Total loss: 0.8127', 'for batch', 26)
('GAN loss 0.3249 ', 'GAN acc 0.9883', 'Discriminator loss 0.4138', 'Discriminator accuracy 0.8145', 'Total loss: 0.7387', 'for batch', 27)
('GAN loss 0.3812 ', 'GAN acc 0.9844', 'Discriminator loss 0.6018', 'Discriminator accuracy 0.6641', 'Total loss: 0.9831', 'for batch', 28)
('GAN loss 0.3715 ', 'GAN acc 0.9844', 'Discriminator loss 0.5265', 'Discriminator accuracy 0.7461', 'Total loss: 0.8980', 'for batch', 29)
('GAN loss 0.3918 ', 'GAN acc 0.9961', 'Discriminator loss 0.6939', 'Discriminator accuracy 0.5723', 'Total loss: 1.0857', 'for batch', 30)
('GAN loss 0.4736 ', 'GAN acc 0.9883', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.6035', 'Total loss: 1.1421', 'for batch', 31)
('GAN loss 0.4854 ', 'GAN acc 0.9922', 'Discriminator loss 0.5410', 'Discriminator accuracy 0.7363', 'Total loss: 1.0264', 'for batch', 32)
('GAN loss 0.4555 ', 'GAN acc 0.9922', 'Discriminator loss 0.5489', 'Discriminator accuracy 0.6641', 'Total loss: 1.0043', 'for batch', 33)
('GAN loss 0.4408 ', 'GAN acc 0.9883', 'Discriminator loss 0.5359', 'Discriminator accuracy 0.6895', 'Total loss: 0.9768', 'for batch', 34)
('GAN loss 0.4471 ', 'GAN acc 0.9922', 'Discriminator loss 0.5316', 'Discriminator accuracy 0.7129', 'Total loss: 0.9787', 'for batch', 35)
('GAN loss 0.4835 ', 'GAN acc 0.9883', 'Discriminator loss 0.5787', 'Discriminator accuracy 0.6348', 'Total loss: 1.0622', 'for batch', 36)
('GAN loss 0.4536 ', 'GAN acc 1.0000', 'Discriminator loss 0.3990', 'Discriminator accuracy 0.8594', 'Total loss: 0.8527', 'for batch', 37)
('GAN loss 0.4452 ', 'GAN acc 0.9883', 'Discriminator loss 0.4718', 'Discriminator accuracy 0.7773', 'Total loss: 0.9170', 'for batch', 38)
('GAN loss 0.3967 ', 'GAN acc 0.9883', 'Discriminator loss 0.4201', 'Discriminator accuracy 0.8027', 'Total loss: 0.8168', 'for batch', 39)
('GAN loss 0.4162 ', 'GAN acc 0.9922', 'Discriminator loss 0.5008', 'Discriminator accuracy 0.7285', 'Total loss: 0.9170', 'for batch', 40)
('GAN loss 0.4209 ', 'GAN acc 0.9961', 'Discriminator loss 0.5027', 'Discriminator accuracy 0.7422', 'Total loss: 0.9237', 'for batch', 41)
('GAN loss 0.4634 ', 'GAN acc 0.9922', 'Discriminator loss 0.5574', 'Discriminator accuracy 0.6992', 'Total loss: 1.0208', 'for batch', 42)
('GAN loss 0.4583 ', 'GAN acc 0.9922', 'Discriminator loss 0.5591', 'Discriminator accuracy 0.6641', 'Total loss: 1.0174', 'for batch', 43)
('GAN loss 0.4599 ', 'GAN acc 0.9844', 'Discriminator loss 0.4722', 'Discriminator accuracy 0.7559', 'Total loss: 0.9320', 'for batch', 44)
('GAN loss 0.4932 ', 'GAN acc 0.9922', 'Discriminator loss 0.5871', 'Discriminator accuracy 0.6484', 'Total loss: 1.0803', 'for batch', 45)
('GAN loss 0.4823 ', 'GAN acc 0.9922', 'Discriminator loss 0.4183', 'Discriminator accuracy 0.8477', 'Total loss: 0.9007', 'for batch', 46)
('GAN loss 0.4660 ', 'GAN acc 0.9883', 'Discriminator loss 0.4134', 'Discriminator accuracy 0.8594', 'Total loss: 0.8794', 'for batch', 47)
('GAN loss 0.4028 ', 'GAN acc 0.9922', 'Discriminator loss 0.4718', 'Discriminator accuracy 0.7090', 'Total loss: 0.8746', 'for batch', 48)
('GAN loss 0.3660 ', 'GAN acc 1.0000', 'Discriminator loss 0.3981', 'Discriminator accuracy 0.8184', 'Total loss: 0.7641', 'for batch', 49)
('GAN loss 0.4037 ', 'GAN acc 0.9961', 'Discriminator loss 0.6387', 'Discriminator accuracy 0.6328', 'Total loss: 1.0424', 'for batch', 50)
('GAN loss 0.4203 ', 'GAN acc 0.9922', 'Discriminator loss 0.3998', 'Discriminator accuracy 0.8105', 'Total loss: 0.8200', 'for batch', 51)
('GAN loss 0.4291 ', 'GAN acc 0.9922', 'Discriminator loss 0.3837', 'Discriminator accuracy 0.8223', 'Total loss: 0.8129', 'for batch', 52)
('GAN loss 0.3584 ', 'GAN acc 0.9922', 'Discriminator loss 0.3027', 'Discriminator accuracy 0.9414', 'Total loss: 0.6611', 'for batch', 53)
('GAN loss 0.3079 ', 'GAN acc 0.9883', 'Discriminator loss 0.2212', 'Discriminator accuracy 0.9473', 'Total loss: 0.5292', 'for batch', 54)
('GAN loss 0.2717 ', 'GAN acc 0.9922', 'Discriminator loss 0.2227', 'Discriminator accuracy 0.9395', 'Total loss: 0.4944', 'for batch', 55)
('GAN loss 0.3299 ', 'GAN acc 0.9883', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.6387', 'Total loss: 1.0181', 'for batch', 56)
('GAN loss 0.3096 ', 'GAN acc 0.9961', 'Discriminator loss 0.3271', 'Discriminator accuracy 0.8652', 'Total loss: 0.6367', 'for batch', 57)
('GAN loss 0.3155 ', 'GAN acc 0.9922', 'Discriminator loss 0.3622', 'Discriminator accuracy 0.8691', 'Total loss: 0.6777', 'for batch', 58)
('GAN loss 0.2723 ', 'GAN acc 0.9961', 'Discriminator loss 0.3022', 'Discriminator accuracy 0.8770', 'Total loss: 0.5745', 'for batch', 59)
('GAN loss 0.2686 ', 'GAN acc 0.9922', 'Discriminator loss 0.3207', 'Discriminator accuracy 0.8750', 'Total loss: 0.5893', 'for batch', 60)
('GAN loss 0.2730 ', 'GAN acc 0.9883', 'Discriminator loss 0.4232', 'Discriminator accuracy 0.8086', 'Total loss: 0.6961', 'for batch', 61)
('GAN loss 0.3379 ', 'GAN acc 0.9883', 'Discriminator loss 0.5020', 'Discriminator accuracy 0.7539', 'Total loss: 0.8399', 'for batch', 62)
('GAN loss 0.3122 ', 'GAN acc 0.9922', 'Discriminator loss 0.3994', 'Discriminator accuracy 0.8066', 'Total loss: 0.7116', 'for batch', 63)
('GAN loss 0.3197 ', 'GAN acc 0.9922', 'Discriminator loss 0.4290', 'Discriminator accuracy 0.7930', 'Total loss: 0.7487', 'for batch', 64)
('GAN loss 0.2967 ', 'GAN acc 0.9961', 'Discriminator loss 0.2845', 'Discriminator accuracy 0.9141', 'Total loss: 0.5812', 'for batch', 65)
('GAN loss 0.3024 ', 'GAN acc 0.9883', 'Discriminator loss 0.4466', 'Discriminator accuracy 0.7871', 'Total loss: 0.7490', 'for batch', 66)
('GAN loss 0.3106 ', 'GAN acc 0.9883', 'Discriminator loss 0.3543', 'Discriminator accuracy 0.8438', 'Total loss: 0.6649', 'for batch', 67)
('GAN loss 0.6328 ', 'GAN acc 0.7070', 'Discriminator loss 0.4257', 'Discriminator accuracy 0.7812', 'Total loss: 1.0586', 'for batch', 68)
('GAN loss 0.4975 ', 'GAN acc 0.9883', 'Discriminator loss 0.5322', 'Discriminator accuracy 0.7051', 'Total loss: 1.0297', 'for batch', 69)
('GAN loss 0.8051 ', 'GAN acc 0.2227', 'Discriminator loss 0.5837', 'Discriminator accuracy 0.6309', 'Total loss: 1.3888', 'for batch', 70)
('GAN loss 1.1597 ', 'GAN acc 0.0039', 'Discriminator loss 0.5640', 'Discriminator accuracy 0.7559', 'Total loss: 1.7237', 'for batch', 71)
('GAN loss 0.6488 ', 'GAN acc 0.7578', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.5176', 'Total loss: 1.3120', 'for batch', 72)
('GAN loss 0.5619 ', 'GAN acc 0.9609', 'Discriminator loss 0.6515', 'Discriminator accuracy 0.5938', 'Total loss: 1.2134', 'for batch', 73)
('GAN loss 0.6174 ', 'GAN acc 0.9141', 'Discriminator loss 0.5404', 'Discriminator accuracy 0.7285', 'Total loss: 1.1578', 'for batch', 74)
('GAN loss 1.0043 ', 'GAN acc 0.0703', 'Discriminator loss 0.6151', 'Discriminator accuracy 0.6367', 'Total loss: 1.6194', 'for batch', 75)
('GAN loss 0.4282 ', 'GAN acc 0.9922', 'Discriminator loss 0.5811', 'Discriminator accuracy 0.5508', 'Total loss: 1.0093', 'for batch', 76)
('GAN loss 0.3931 ', 'GAN acc 0.9922', 'Discriminator loss 0.5580', 'Discriminator accuracy 0.6758', 'Total loss: 0.9511', 'for batch', 77)
('GAN loss 0.4563 ', 'GAN acc 0.9922', 'Discriminator loss 0.6064', 'Discriminator accuracy 0.6465', 'Total loss: 1.0627', 'for batch', 78)
('GAN loss 0.5492 ', 'GAN acc 0.9883', 'Discriminator loss 0.6272', 'Discriminator accuracy 0.5957', 'Total loss: 1.1765', 'for batch', 79)
('GAN loss 0.6527 ', 'GAN acc 0.8867', 'Discriminator loss 0.6336', 'Discriminator accuracy 0.5996', 'Total loss: 1.2863', 'for batch', 80)
('GAN loss 0.5666 ', 'GAN acc 0.9922', 'Discriminator loss 0.6347', 'Discriminator accuracy 0.5469', 'Total loss: 1.2013', 'for batch', 81)
('GAN loss 0.5355 ', 'GAN acc 0.9883', 'Discriminator loss 0.5634', 'Discriminator accuracy 0.6719', 'Total loss: 1.0989', 'for batch', 82)
('GAN loss 0.5192 ', 'GAN acc 0.9922', 'Discriminator loss 0.5629', 'Discriminator accuracy 0.6777', 'Total loss: 1.0822', 'for batch', 83)
('GAN loss 0.5642 ', 'GAN acc 0.9922', 'Discriminator loss 0.5352', 'Discriminator accuracy 0.7285', 'Total loss: 1.0994', 'for batch', 84)
('GAN loss 0.4708 ', 'GAN acc 0.9922', 'Discriminator loss 0.5912', 'Discriminator accuracy 0.6328', 'Total loss: 1.0620', 'for batch', 85)
('GAN loss 0.4511 ', 'GAN acc 0.9922', 'Discriminator loss 0.5281', 'Discriminator accuracy 0.7227', 'Total loss: 0.9792', 'for batch', 86)
('GAN loss 0.4846 ', 'GAN acc 0.9805', 'Discriminator loss 0.4540', 'Discriminator accuracy 0.7988', 'Total loss: 0.9386', 'for batch', 87)
('GAN loss 0.5194 ', 'GAN acc 0.9883', 'Discriminator loss 0.6412', 'Discriminator accuracy 0.6133', 'Total loss: 1.1606', 'for batch', 88)
('GAN loss 0.3565 ', 'GAN acc 0.9922', 'Discriminator loss 0.5330', 'Discriminator accuracy 0.6680', 'Total loss: 0.8895', 'for batch', 89)
('GAN loss 0.3445 ', 'GAN acc 0.9961', 'Discriminator loss 0.5534', 'Discriminator accuracy 0.6953', 'Total loss: 0.8979', 'for batch', 90)
('GAN loss 0.3786 ', 'GAN acc 0.9961', 'Discriminator loss 0.5841', 'Discriminator accuracy 0.6484', 'Total loss: 0.9627', 'for batch', 91)
('GAN loss 0.4086 ', 'GAN acc 0.9961', 'Discriminator loss 0.5211', 'Discriminator accuracy 0.6934', 'Total loss: 0.9297', 'for batch', 92)
('GAN loss 0.4700 ', 'GAN acc 0.9922', 'Discriminator loss 0.4977', 'Discriminator accuracy 0.7422', 'Total loss: 0.9677', 'for batch', 93)
('GAN loss 0.4521 ', 'GAN acc 0.9961', 'Discriminator loss 0.4729', 'Discriminator accuracy 0.7676', 'Total loss: 0.9249', 'for batch', 94)
('GAN loss 0.4828 ', 'GAN acc 0.9883', 'Discriminator loss 0.5937', 'Discriminator accuracy 0.6270', 'Total loss: 1.0765', 'for batch', 95)
('GAN loss 0.4607 ', 'GAN acc 0.9961', 'Discriminator loss 0.5063', 'Discriminator accuracy 0.7383', 'Total loss: 0.9669', 'for batch', 96)
('GAN loss 0.4462 ', 'GAN acc 0.9883', 'Discriminator loss 0.5317', 'Discriminator accuracy 0.6953', 'Total loss: 0.9778', 'for batch', 97)
('GAN loss 0.4905 ', 'GAN acc 0.9883', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5625', 'Total loss: 1.1746', 'for batch', 98)
('GAN loss 0.5215 ', 'GAN acc 0.9883', 'Discriminator loss 0.4925', 'Discriminator accuracy 0.7852', 'Total loss: 1.0139', 'for batch', 99)
('GAN loss 0.5106 ', 'GAN acc 0.9961', 'Discriminator loss 0.5135', 'Discriminator accuracy 0.7539', 'Total loss: 1.0242', 'for batch', 100)
('GAN loss 0.5069 ', 'GAN acc 0.9883', 'Discriminator loss 0.5985', 'Discriminator accuracy 0.6328', 'Total loss: 1.1054', 'for batch', 101)
('GAN loss 0.5259 ', 'GAN acc 0.9805', 'Discriminator loss 0.5252', 'Discriminator accuracy 0.7129', 'Total loss: 1.0511', 'for batch', 102)
('GAN loss 0.4621 ', 'GAN acc 0.9883', 'Discriminator loss 0.4901', 'Discriminator accuracy 0.7422', 'Total loss: 0.9521', 'for batch', 103)
('GAN loss 0.4824 ', 'GAN acc 0.9883', 'Discriminator loss 0.6016', 'Discriminator accuracy 0.6836', 'Total loss: 1.0840', 'for batch', 104)
('GAN loss 0.4794 ', 'GAN acc 0.9922', 'Discriminator loss 0.5024', 'Discriminator accuracy 0.7520', 'Total loss: 0.9819', 'for batch', 105)
('GAN loss 0.4924 ', 'GAN acc 0.9922', 'Discriminator loss 0.5970', 'Discriminator accuracy 0.6504', 'Total loss: 1.0895', 'for batch', 106)
('GAN loss 0.4720 ', 'GAN acc 0.9883', 'Discriminator loss 0.5115', 'Discriminator accuracy 0.7441', 'Total loss: 0.9835', 'for batch', 107)
('GAN loss 0.4611 ', 'GAN acc 0.9922', 'Discriminator loss 0.4951', 'Discriminator accuracy 0.7246', 'Total loss: 0.9562', 'for batch', 108)
('GAN loss 0.4469 ', 'GAN acc 1.0000', 'Discriminator loss 0.4349', 'Discriminator accuracy 0.8086', 'Total loss: 0.8819', 'for batch', 109)
('GAN loss 0.4519 ', 'GAN acc 0.9805', 'Discriminator loss 0.4191', 'Discriminator accuracy 0.8164', 'Total loss: 0.8710', 'for batch', 110)
('GAN loss 0.4105 ', 'GAN acc 0.9922', 'Discriminator loss 0.4930', 'Discriminator accuracy 0.7227', 'Total loss: 0.9035', 'for batch', 111)
('GAN loss 0.4560 ', 'GAN acc 0.9883', 'Discriminator loss 0.6032', 'Discriminator accuracy 0.6406', 'Total loss: 1.0592', 'for batch', 112)
('GAN loss 0.4665 ', 'GAN acc 0.9922', 'Discriminator loss 0.5152', 'Discriminator accuracy 0.7480', 'Total loss: 0.9817', 'for batch', 113)
('GAN loss 0.3883 ', 'GAN acc 0.9961', 'Discriminator loss 0.3782', 'Discriminator accuracy 0.8613', 'Total loss: 0.7665', 'for batch', 114)
('GAN loss 0.3766 ', 'GAN acc 0.9922', 'Discriminator loss 0.4699', 'Discriminator accuracy 0.7676', 'Total loss: 0.8466', 'for batch', 115)
('GAN loss 0.3545 ', 'GAN acc 1.0000', 'Discriminator loss 0.4053', 'Discriminator accuracy 0.8418', 'Total loss: 0.7598', 'for batch', 116)
('GAN loss 0.3006 ', 'GAN acc 1.0000', 'Discriminator loss 0.3571', 'Discriminator accuracy 0.8359', 'Total loss: 0.6578', 'for batch', 117)
('GAN loss 0.2961 ', 'GAN acc 1.0000', 'Discriminator loss 0.3607', 'Discriminator accuracy 0.8633', 'Total loss: 0.6568', 'for batch', 118)
('GAN loss 0.3854 ', 'GAN acc 0.9922', 'Discriminator loss 0.4915', 'Discriminator accuracy 0.7871', 'Total loss: 0.8769', 'for batch', 119)
('GAN loss 0.2580 ', 'GAN acc 1.0000', 'Discriminator loss 0.6095', 'Discriminator accuracy 0.6387', 'Total loss: 0.8675', 'for batch', 120)
('GAN loss 0.3450 ', 'GAN acc 1.0000', 'Discriminator loss 0.5707', 'Discriminator accuracy 0.7090', 'Total loss: 0.9157', 'for batch', 121)
('GAN loss 0.4371 ', 'GAN acc 1.0000', 'Discriminator loss 0.6174', 'Discriminator accuracy 0.6797', 'Total loss: 1.0546', 'for batch', 122)
('GAN loss 0.4952 ', 'GAN acc 1.0000', 'Discriminator loss 0.4443', 'Discriminator accuracy 0.7676', 'Total loss: 0.9395', 'for batch', 123)
('GAN loss 0.5226 ', 'GAN acc 0.9492', 'Discriminator loss 0.3781', 'Discriminator accuracy 0.8477', 'Total loss: 0.9006', 'for batch', 124)
('GAN loss 0.4546 ', 'GAN acc 0.9961', 'Discriminator loss 0.4640', 'Discriminator accuracy 0.7676', 'Total loss: 0.9185', 'for batch', 125)
('GAN loss 0.4694 ', 'GAN acc 0.9922', 'Discriminator loss 0.6084', 'Discriminator accuracy 0.6367', 'Total loss: 1.0778', 'for batch', 126)
('GAN loss 0.4691 ', 'GAN acc 0.9922', 'Discriminator loss 0.5467', 'Discriminator accuracy 0.6992', 'Total loss: 1.0158', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.62183523)
('DISCRIMINATOR_Imagem FAKE=', 0.42481709)
('Discriminator trained', 31, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.295290')
----------------------------------
('Epoch', 36, 'of', 50)
('Number of batches', 128)
('GAN loss 0.4970 ', 'GAN acc 0.9922', 'Discriminator loss 0.6305', 'Discriminator accuracy 0.6230', 'Total loss: 1.1276', 'for batch', 0)
('GAN loss 0.5187 ', 'GAN acc 0.9883', 'Discriminator loss 0.5812', 'Discriminator accuracy 0.6504', 'Total loss: 1.0999', 'for batch', 1)
('GAN loss 0.5429 ', 'GAN acc 0.9883', 'Discriminator loss 0.5820', 'Discriminator accuracy 0.6719', 'Total loss: 1.1249', 'for batch', 2)
('GAN loss 0.5646 ', 'GAN acc 0.9766', 'Discriminator loss 0.5304', 'Discriminator accuracy 0.7168', 'Total loss: 1.0950', 'for batch', 3)
('GAN loss 0.5071 ', 'GAN acc 0.9922', 'Discriminator loss 0.5188', 'Discriminator accuracy 0.6973', 'Total loss: 1.0259', 'for batch', 4)
('GAN loss 0.4507 ', 'GAN acc 1.0000', 'Discriminator loss 0.4092', 'Discriminator accuracy 0.8535', 'Total loss: 0.8600', 'for batch', 5)
('GAN loss 0.4321 ', 'GAN acc 0.9922', 'Discriminator loss 0.4454', 'Discriminator accuracy 0.8125', 'Total loss: 0.8775', 'for batch', 6)
('GAN loss 0.4127 ', 'GAN acc 0.9922', 'Discriminator loss 0.4175', 'Discriminator accuracy 0.8457', 'Total loss: 0.8302', 'for batch', 7)
('GAN loss 0.3801 ', 'GAN acc 0.9961', 'Discriminator loss 0.3969', 'Discriminator accuracy 0.8164', 'Total loss: 0.7771', 'for batch', 8)
('GAN loss 0.3935 ', 'GAN acc 0.9883', 'Discriminator loss 0.5130', 'Discriminator accuracy 0.7422', 'Total loss: 0.9065', 'for batch', 9)
('GAN loss 0.3755 ', 'GAN acc 0.9922', 'Discriminator loss 0.4276', 'Discriminator accuracy 0.8027', 'Total loss: 0.8032', 'for batch', 10)
('GAN loss 0.3700 ', 'GAN acc 0.9883', 'Discriminator loss 0.5592', 'Discriminator accuracy 0.6758', 'Total loss: 0.9292', 'for batch', 11)
('GAN loss 0.4059 ', 'GAN acc 0.9961', 'Discriminator loss 0.6926', 'Discriminator accuracy 0.5684', 'Total loss: 1.0984', 'for batch', 12)
('GAN loss 0.4576 ', 'GAN acc 0.9883', 'Discriminator loss 0.4966', 'Discriminator accuracy 0.7422', 'Total loss: 0.9542', 'for batch', 13)
('GAN loss 0.4408 ', 'GAN acc 0.9922', 'Discriminator loss 0.4746', 'Discriminator accuracy 0.7422', 'Total loss: 0.9154', 'for batch', 14)
('GAN loss 0.4239 ', 'GAN acc 0.9961', 'Discriminator loss 0.4664', 'Discriminator accuracy 0.7559', 'Total loss: 0.8903', 'for batch', 15)
('GAN loss 0.4298 ', 'GAN acc 0.9922', 'Discriminator loss 0.5234', 'Discriminator accuracy 0.7051', 'Total loss: 0.9532', 'for batch', 16)
('GAN loss 0.4139 ', 'GAN acc 0.9961', 'Discriminator loss 0.4663', 'Discriminator accuracy 0.7656', 'Total loss: 0.8802', 'for batch', 17)
('GAN loss 0.4048 ', 'GAN acc 0.9883', 'Discriminator loss 0.5534', 'Discriminator accuracy 0.6895', 'Total loss: 0.9583', 'for batch', 18)
('GAN loss 0.4398 ', 'GAN acc 0.9844', 'Discriminator loss 0.6044', 'Discriminator accuracy 0.6289', 'Total loss: 1.0442', 'for batch', 19)
('GAN loss 0.4144 ', 'GAN acc 0.9883', 'Discriminator loss 0.3345', 'Discriminator accuracy 0.9238', 'Total loss: 0.7489', 'for batch', 20)
('GAN loss 0.4180 ', 'GAN acc 0.9922', 'Discriminator loss 0.5306', 'Discriminator accuracy 0.7012', 'Total loss: 0.9486', 'for batch', 21)
('GAN loss 0.4211 ', 'GAN acc 0.9961', 'Discriminator loss 0.5490', 'Discriminator accuracy 0.6855', 'Total loss: 0.9701', 'for batch', 22)
('GAN loss 0.4453 ', 'GAN acc 0.9883', 'Discriminator loss 0.5334', 'Discriminator accuracy 0.6914', 'Total loss: 0.9787', 'for batch', 23)
('GAN loss 0.4322 ', 'GAN acc 0.9883', 'Discriminator loss 0.4804', 'Discriminator accuracy 0.7500', 'Total loss: 0.9126', 'for batch', 24)
('GAN loss 0.4290 ', 'GAN acc 0.9883', 'Discriminator loss 0.4285', 'Discriminator accuracy 0.7969', 'Total loss: 0.8575', 'for batch', 25)
('GAN loss 0.3966 ', 'GAN acc 0.9883', 'Discriminator loss 0.4473', 'Discriminator accuracy 0.7832', 'Total loss: 0.8439', 'for batch', 26)
('GAN loss 0.3754 ', 'GAN acc 0.9922', 'Discriminator loss 0.3758', 'Discriminator accuracy 0.8555', 'Total loss: 0.7512', 'for batch', 27)
('GAN loss 0.3976 ', 'GAN acc 0.9844', 'Discriminator loss 0.5430', 'Discriminator accuracy 0.7148', 'Total loss: 0.9406', 'for batch', 28)
('GAN loss 0.3935 ', 'GAN acc 0.9844', 'Discriminator loss 0.5156', 'Discriminator accuracy 0.7441', 'Total loss: 0.9091', 'for batch', 29)
('GAN loss 0.4446 ', 'GAN acc 0.9922', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.6094', 'Total loss: 1.1103', 'for batch', 30)
('GAN loss 0.5052 ', 'GAN acc 0.9883', 'Discriminator loss 0.6205', 'Discriminator accuracy 0.6602', 'Total loss: 1.1257', 'for batch', 31)
('GAN loss 0.4420 ', 'GAN acc 0.9922', 'Discriminator loss 0.4499', 'Discriminator accuracy 0.8203', 'Total loss: 0.8919', 'for batch', 32)
('GAN loss 0.4107 ', 'GAN acc 0.9922', 'Discriminator loss 0.4892', 'Discriminator accuracy 0.7559', 'Total loss: 0.8999', 'for batch', 33)
('GAN loss 0.4022 ', 'GAN acc 0.9961', 'Discriminator loss 0.5191', 'Discriminator accuracy 0.7207', 'Total loss: 0.9213', 'for batch', 34)
('GAN loss 0.4202 ', 'GAN acc 0.9922', 'Discriminator loss 0.5007', 'Discriminator accuracy 0.7539', 'Total loss: 0.9210', 'for batch', 35)
('GAN loss 0.4261 ', 'GAN acc 0.9883', 'Discriminator loss 0.5451', 'Discriminator accuracy 0.7285', 'Total loss: 0.9712', 'for batch', 36)
('GAN loss 0.3873 ', 'GAN acc 1.0000', 'Discriminator loss 0.3429', 'Discriminator accuracy 0.8867', 'Total loss: 0.7301', 'for batch', 37)
('GAN loss 0.3800 ', 'GAN acc 0.9961', 'Discriminator loss 0.4485', 'Discriminator accuracy 0.8008', 'Total loss: 0.8285', 'for batch', 38)
('GAN loss 0.3580 ', 'GAN acc 0.9961', 'Discriminator loss 0.3718', 'Discriminator accuracy 0.8516', 'Total loss: 0.7298', 'for batch', 39)
('GAN loss 0.3751 ', 'GAN acc 0.9922', 'Discriminator loss 0.4741', 'Discriminator accuracy 0.7500', 'Total loss: 0.8492', 'for batch', 40)
('GAN loss 0.3729 ', 'GAN acc 0.9961', 'Discriminator loss 0.4368', 'Discriminator accuracy 0.7949', 'Total loss: 0.8097', 'for batch', 41)
('GAN loss 0.4058 ', 'GAN acc 0.9883', 'Discriminator loss 0.4993', 'Discriminator accuracy 0.7812', 'Total loss: 0.9050', 'for batch', 42)
('GAN loss 0.3893 ', 'GAN acc 0.9961', 'Discriminator loss 0.5096', 'Discriminator accuracy 0.7227', 'Total loss: 0.8990', 'for batch', 43)
('GAN loss 0.3826 ', 'GAN acc 0.9961', 'Discriminator loss 0.4991', 'Discriminator accuracy 0.7285', 'Total loss: 0.8817', 'for batch', 44)
('GAN loss 0.4134 ', 'GAN acc 0.9961', 'Discriminator loss 0.5332', 'Discriminator accuracy 0.6875', 'Total loss: 0.9465', 'for batch', 45)
('GAN loss 0.4209 ', 'GAN acc 0.9922', 'Discriminator loss 0.3396', 'Discriminator accuracy 0.8730', 'Total loss: 0.7605', 'for batch', 46)
('GAN loss 0.3956 ', 'GAN acc 0.9961', 'Discriminator loss 0.3854', 'Discriminator accuracy 0.8789', 'Total loss: 0.7810', 'for batch', 47)
('GAN loss 0.3493 ', 'GAN acc 0.9961', 'Discriminator loss 0.4230', 'Discriminator accuracy 0.7715', 'Total loss: 0.7723', 'for batch', 48)
('GAN loss 0.3381 ', 'GAN acc 0.9961', 'Discriminator loss 0.3847', 'Discriminator accuracy 0.8301', 'Total loss: 0.7228', 'for batch', 49)
('GAN loss 0.3808 ', 'GAN acc 0.9922', 'Discriminator loss 0.6233', 'Discriminator accuracy 0.6270', 'Total loss: 1.0041', 'for batch', 50)
('GAN loss 0.3691 ', 'GAN acc 0.9961', 'Discriminator loss 0.3859', 'Discriminator accuracy 0.8496', 'Total loss: 0.7550', 'for batch', 51)
('GAN loss 0.3530 ', 'GAN acc 0.9961', 'Discriminator loss 0.3872', 'Discriminator accuracy 0.8086', 'Total loss: 0.7402', 'for batch', 52)
('GAN loss 0.3156 ', 'GAN acc 1.0000', 'Discriminator loss 0.2796', 'Discriminator accuracy 0.9160', 'Total loss: 0.5952', 'for batch', 53)
('GAN loss 0.2729 ', 'GAN acc 1.0000', 'Discriminator loss 0.2102', 'Discriminator accuracy 0.9531', 'Total loss: 0.4831', 'for batch', 54)
('GAN loss 0.2438 ', 'GAN acc 1.0000', 'Discriminator loss 0.2332', 'Discriminator accuracy 0.9336', 'Total loss: 0.4769', 'for batch', 55)
('GAN loss 0.3065 ', 'GAN acc 0.9922', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.6309', 'Total loss: 0.9594', 'for batch', 56)
('GAN loss 0.2667 ', 'GAN acc 0.9961', 'Discriminator loss 0.4066', 'Discriminator accuracy 0.7500', 'Total loss: 0.6733', 'for batch', 57)
('GAN loss 0.2819 ', 'GAN acc 1.0000', 'Discriminator loss 0.5301', 'Discriminator accuracy 0.7188', 'Total loss: 0.8120', 'for batch', 58)
('GAN loss 0.3001 ', 'GAN acc 0.9922', 'Discriminator loss 0.3155', 'Discriminator accuracy 0.8711', 'Total loss: 0.6156', 'for batch', 59)
('GAN loss 0.2762 ', 'GAN acc 1.0000', 'Discriminator loss 0.3281', 'Discriminator accuracy 0.8750', 'Total loss: 0.6043', 'for batch', 60)
('GAN loss 0.3159 ', 'GAN acc 0.9883', 'Discriminator loss 0.4375', 'Discriminator accuracy 0.8066', 'Total loss: 0.7534', 'for batch', 61)
('GAN loss 0.3331 ', 'GAN acc 0.9922', 'Discriminator loss 0.5309', 'Discriminator accuracy 0.7285', 'Total loss: 0.8640', 'for batch', 62)
('GAN loss 0.3163 ', 'GAN acc 0.9883', 'Discriminator loss 0.4056', 'Discriminator accuracy 0.8105', 'Total loss: 0.7220', 'for batch', 63)
('GAN loss 0.3061 ', 'GAN acc 0.9922', 'Discriminator loss 0.4980', 'Discriminator accuracy 0.7441', 'Total loss: 0.8041', 'for batch', 64)
('GAN loss 0.3293 ', 'GAN acc 0.9883', 'Discriminator loss 0.3432', 'Discriminator accuracy 0.8770', 'Total loss: 0.6725', 'for batch', 65)
('GAN loss 0.2955 ', 'GAN acc 0.9883', 'Discriminator loss 0.4455', 'Discriminator accuracy 0.7734', 'Total loss: 0.7410', 'for batch', 66)
('GAN loss 0.2735 ', 'GAN acc 0.9922', 'Discriminator loss 0.3999', 'Discriminator accuracy 0.8242', 'Total loss: 0.6735', 'for batch', 67)
('GAN loss 0.4216 ', 'GAN acc 0.9766', 'Discriminator loss 0.4541', 'Discriminator accuracy 0.7852', 'Total loss: 0.8757', 'for batch', 68)
('GAN loss 0.2464 ', 'GAN acc 0.9922', 'Discriminator loss 0.6162', 'Discriminator accuracy 0.5645', 'Total loss: 0.8626', 'for batch', 69)
('GAN loss 0.2575 ', 'GAN acc 0.9922', 'Discriminator loss 0.5137', 'Discriminator accuracy 0.7578', 'Total loss: 0.7712', 'for batch', 70)
('GAN loss 0.3458 ', 'GAN acc 0.9883', 'Discriminator loss 0.5549', 'Discriminator accuracy 0.7266', 'Total loss: 0.9007', 'for batch', 71)
('GAN loss 0.4736 ', 'GAN acc 0.9844', 'Discriminator loss 0.5471', 'Discriminator accuracy 0.7031', 'Total loss: 1.0207', 'for batch', 72)
('GAN loss 0.5196 ', 'GAN acc 0.9805', 'Discriminator loss 0.4782', 'Discriminator accuracy 0.7715', 'Total loss: 0.9978', 'for batch', 73)
('GAN loss 0.4772 ', 'GAN acc 0.9922', 'Discriminator loss 0.4551', 'Discriminator accuracy 0.7969', 'Total loss: 0.9323', 'for batch', 74)
('GAN loss 0.5181 ', 'GAN acc 0.9844', 'Discriminator loss 0.5372', 'Discriminator accuracy 0.7012', 'Total loss: 1.0553', 'for batch', 75)
('GAN loss 0.3985 ', 'GAN acc 0.9883', 'Discriminator loss 0.3408', 'Discriminator accuracy 0.8711', 'Total loss: 0.7394', 'for batch', 76)
('GAN loss 0.3530 ', 'GAN acc 0.9922', 'Discriminator loss 0.3104', 'Discriminator accuracy 0.8770', 'Total loss: 0.6634', 'for batch', 77)
('GAN loss 0.3669 ', 'GAN acc 0.9922', 'Discriminator loss 0.4218', 'Discriminator accuracy 0.8086', 'Total loss: 0.7886', 'for batch', 78)
('GAN loss 0.3170 ', 'GAN acc 0.9922', 'Discriminator loss 0.4336', 'Discriminator accuracy 0.7832', 'Total loss: 0.7507', 'for batch', 79)
('GAN loss 0.3218 ', 'GAN acc 0.9883', 'Discriminator loss 0.4320', 'Discriminator accuracy 0.8105', 'Total loss: 0.7537', 'for batch', 80)
('GAN loss 0.3018 ', 'GAN acc 0.9922', 'Discriminator loss 0.5211', 'Discriminator accuracy 0.7129', 'Total loss: 0.8229', 'for batch', 81)
('GAN loss 0.2943 ', 'GAN acc 0.9883', 'Discriminator loss 0.5359', 'Discriminator accuracy 0.7285', 'Total loss: 0.8302', 'for batch', 82)
('GAN loss 0.3285 ', 'GAN acc 0.9922', 'Discriminator loss 0.5081', 'Discriminator accuracy 0.7090', 'Total loss: 0.8366', 'for batch', 83)
('GAN loss 0.3056 ', 'GAN acc 0.9961', 'Discriminator loss 0.3148', 'Discriminator accuracy 0.9043', 'Total loss: 0.6204', 'for batch', 84)
('GAN loss 0.3120 ', 'GAN acc 0.9883', 'Discriminator loss 0.4738', 'Discriminator accuracy 0.7676', 'Total loss: 0.7858', 'for batch', 85)
('GAN loss 0.2908 ', 'GAN acc 0.9922', 'Discriminator loss 0.3502', 'Discriminator accuracy 0.8633', 'Total loss: 0.6410', 'for batch', 86)
('GAN loss 0.2654 ', 'GAN acc 0.9883', 'Discriminator loss 0.2517', 'Discriminator accuracy 0.9316', 'Total loss: 0.5170', 'for batch', 87)
('GAN loss 0.2586 ', 'GAN acc 0.9922', 'Discriminator loss 0.4368', 'Discriminator accuracy 0.8066', 'Total loss: 0.6953', 'for batch', 88)
('GAN loss 0.2523 ', 'GAN acc 0.9883', 'Discriminator loss 0.3227', 'Discriminator accuracy 0.8574', 'Total loss: 0.5750', 'for batch', 89)
('GAN loss 0.2416 ', 'GAN acc 0.9922', 'Discriminator loss 0.2372', 'Discriminator accuracy 0.9395', 'Total loss: 0.4788', 'for batch', 90)
('GAN loss 0.2026 ', 'GAN acc 0.9961', 'Discriminator loss 0.3131', 'Discriminator accuracy 0.8828', 'Total loss: 0.5157', 'for batch', 91)
('GAN loss 0.2165 ', 'GAN acc 0.9961', 'Discriminator loss 0.4684', 'Discriminator accuracy 0.7676', 'Total loss: 0.6849', 'for batch', 92)
('GAN loss 0.2250 ', 'GAN acc 0.9961', 'Discriminator loss 0.3587', 'Discriminator accuracy 0.8496', 'Total loss: 0.5838', 'for batch', 93)
('GAN loss 0.2336 ', 'GAN acc 1.0000', 'Discriminator loss 0.3226', 'Discriminator accuracy 0.8691', 'Total loss: 0.5562', 'for batch', 94)
('GAN loss 0.2907 ', 'GAN acc 0.9883', 'Discriminator loss 0.5326', 'Discriminator accuracy 0.7051', 'Total loss: 0.8233', 'for batch', 95)
('GAN loss 0.2681 ', 'GAN acc 0.9961', 'Discriminator loss 0.3411', 'Discriminator accuracy 0.8965', 'Total loss: 0.6092', 'for batch', 96)
('GAN loss 0.2899 ', 'GAN acc 0.9883', 'Discriminator loss 0.4851', 'Discriminator accuracy 0.7539', 'Total loss: 0.7749', 'for batch', 97)
('GAN loss 0.3253 ', 'GAN acc 0.9883', 'Discriminator loss 0.5034', 'Discriminator accuracy 0.7324', 'Total loss: 0.8287', 'for batch', 98)
('GAN loss 0.3030 ', 'GAN acc 0.9922', 'Discriminator loss 0.3090', 'Discriminator accuracy 0.9004', 'Total loss: 0.6120', 'for batch', 99)
('GAN loss 0.2725 ', 'GAN acc 0.9961', 'Discriminator loss 0.2878', 'Discriminator accuracy 0.9062', 'Total loss: 0.5602', 'for batch', 100)
('GAN loss 0.2892 ', 'GAN acc 0.9961', 'Discriminator loss 0.5722', 'Discriminator accuracy 0.6914', 'Total loss: 0.8613', 'for batch', 101)
('GAN loss 0.3024 ', 'GAN acc 0.9805', 'Discriminator loss 0.2635', 'Discriminator accuracy 0.9199', 'Total loss: 0.5659', 'for batch', 102)
('GAN loss 0.2984 ', 'GAN acc 0.9883', 'Discriminator loss 0.4896', 'Discriminator accuracy 0.7559', 'Total loss: 0.7880', 'for batch', 103)
('GAN loss 0.3286 ', 'GAN acc 0.9844', 'Discriminator loss 0.5017', 'Discriminator accuracy 0.7520', 'Total loss: 0.8303', 'for batch', 104)
('GAN loss 0.3459 ', 'GAN acc 0.9883', 'Discriminator loss 0.4178', 'Discriminator accuracy 0.8164', 'Total loss: 0.7637', 'for batch', 105)
('GAN loss 0.3773 ', 'GAN acc 0.9883', 'Discriminator loss 0.5220', 'Discriminator accuracy 0.7070', 'Total loss: 0.8992', 'for batch', 106)
('GAN loss 0.3604 ', 'GAN acc 0.9961', 'Discriminator loss 0.4662', 'Discriminator accuracy 0.7734', 'Total loss: 0.8266', 'for batch', 107)
('GAN loss 0.3675 ', 'GAN acc 0.9922', 'Discriminator loss 0.4445', 'Discriminator accuracy 0.8047', 'Total loss: 0.8120', 'for batch', 108)
('GAN loss 0.3292 ', 'GAN acc 0.9961', 'Discriminator loss 0.3439', 'Discriminator accuracy 0.8691', 'Total loss: 0.6731', 'for batch', 109)
('GAN loss 0.3244 ', 'GAN acc 0.9883', 'Discriminator loss 0.3198', 'Discriminator accuracy 0.8789', 'Total loss: 0.6442', 'for batch', 110)
('GAN loss 0.3189 ', 'GAN acc 0.9922', 'Discriminator loss 0.4784', 'Discriminator accuracy 0.7559', 'Total loss: 0.7973', 'for batch', 111)
('GAN loss 0.3434 ', 'GAN acc 0.9922', 'Discriminator loss 0.5775', 'Discriminator accuracy 0.6895', 'Total loss: 0.9210', 'for batch', 112)
('GAN loss 0.3647 ', 'GAN acc 0.9922', 'Discriminator loss 0.4154', 'Discriminator accuracy 0.8125', 'Total loss: 0.7801', 'for batch', 113)
('GAN loss 0.3541 ', 'GAN acc 0.9961', 'Discriminator loss 0.2964', 'Discriminator accuracy 0.9102', 'Total loss: 0.6505', 'for batch', 114)
('GAN loss 0.3685 ', 'GAN acc 0.9883', 'Discriminator loss 0.4588', 'Discriminator accuracy 0.7832', 'Total loss: 0.8273', 'for batch', 115)
('GAN loss 0.3492 ', 'GAN acc 0.9961', 'Discriminator loss 0.3822', 'Discriminator accuracy 0.8438', 'Total loss: 0.7314', 'for batch', 116)
('GAN loss 0.3150 ', 'GAN acc 0.9961', 'Discriminator loss 0.3337', 'Discriminator accuracy 0.8809', 'Total loss: 0.6486', 'for batch', 117)
('GAN loss 0.2906 ', 'GAN acc 0.9961', 'Discriminator loss 0.2553', 'Discriminator accuracy 0.9316', 'Total loss: 0.5459', 'for batch', 118)
('GAN loss 0.2982 ', 'GAN acc 0.9961', 'Discriminator loss 0.4793', 'Discriminator accuracy 0.7578', 'Total loss: 0.7775', 'for batch', 119)
('GAN loss 0.2913 ', 'GAN acc 0.9922', 'Discriminator loss 0.3155', 'Discriminator accuracy 0.8789', 'Total loss: 0.6068', 'for batch', 120)
('GAN loss 0.3037 ', 'GAN acc 0.9922', 'Discriminator loss 0.3773', 'Discriminator accuracy 0.8340', 'Total loss: 0.6809', 'for batch', 121)
('GAN loss 0.3027 ', 'GAN acc 0.9922', 'Discriminator loss 0.3226', 'Discriminator accuracy 0.8730', 'Total loss: 0.6253', 'for batch', 122)
('GAN loss 0.2833 ', 'GAN acc 0.9961', 'Discriminator loss 0.3261', 'Discriminator accuracy 0.8750', 'Total loss: 0.6094', 'for batch', 123)
('GAN loss 0.2684 ', 'GAN acc 0.9883', 'Discriminator loss 0.1445', 'Discriminator accuracy 0.9961', 'Total loss: 0.4129', 'for batch', 124)
('GAN loss 0.2464 ', 'GAN acc 0.9883', 'Discriminator loss 0.3114', 'Discriminator accuracy 0.8770', 'Total loss: 0.5578', 'for batch', 125)
('GAN loss 0.2724 ', 'GAN acc 0.9961', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.6426', 'Total loss: 0.9564', 'for batch', 126)
('GAN loss 0.3242 ', 'GAN acc 0.9922', 'Discriminator loss 0.4941', 'Discriminator accuracy 0.7559', 'Total loss: 0.8183', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.74181181)
('DISCRIMINATOR_Imagem FAKE=', 0.35676065)
('Discriminator trained', 8, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.381062')
----------------------------------
('Epoch', 37, 'of', 50)
('Number of batches', 128)
('GAN loss 0.3786 ', 'GAN acc 0.9883', 'Discriminator loss 0.6229', 'Discriminator accuracy 0.6562', 'Total loss: 1.0015', 'for batch', 0)
('GAN loss 0.4050 ', 'GAN acc 0.9883', 'Discriminator loss 0.4501', 'Discriminator accuracy 0.7793', 'Total loss: 0.8551', 'for batch', 1)
('GAN loss 0.4013 ', 'GAN acc 0.9844', 'Discriminator loss 0.4934', 'Discriminator accuracy 0.7559', 'Total loss: 0.8946', 'for batch', 2)
('GAN loss 0.3979 ', 'GAN acc 0.9883', 'Discriminator loss 0.4430', 'Discriminator accuracy 0.7969', 'Total loss: 0.8408', 'for batch', 3)
('GAN loss 0.3839 ', 'GAN acc 0.9844', 'Discriminator loss 0.4959', 'Discriminator accuracy 0.7363', 'Total loss: 0.8799', 'for batch', 4)
('GAN loss 0.3542 ', 'GAN acc 0.9961', 'Discriminator loss 0.3368', 'Discriminator accuracy 0.8730', 'Total loss: 0.6910', 'for batch', 5)
('GAN loss 0.3356 ', 'GAN acc 0.9961', 'Discriminator loss 0.4029', 'Discriminator accuracy 0.8164', 'Total loss: 0.7385', 'for batch', 6)
('GAN loss 0.3194 ', 'GAN acc 0.9961', 'Discriminator loss 0.3272', 'Discriminator accuracy 0.8750', 'Total loss: 0.6466', 'for batch', 7)
('GAN loss 0.3145 ', 'GAN acc 0.9961', 'Discriminator loss 0.3760', 'Discriminator accuracy 0.8457', 'Total loss: 0.6905', 'for batch', 8)
('GAN loss 0.3699 ', 'GAN acc 0.9883', 'Discriminator loss 0.4488', 'Discriminator accuracy 0.7793', 'Total loss: 0.8187', 'for batch', 9)
('GAN loss 0.3293 ', 'GAN acc 0.9883', 'Discriminator loss 0.3374', 'Discriminator accuracy 0.8652', 'Total loss: 0.6666', 'for batch', 10)
('GAN loss 0.3802 ', 'GAN acc 0.9883', 'Discriminator loss 0.5297', 'Discriminator accuracy 0.7188', 'Total loss: 0.9099', 'for batch', 11)
('GAN loss 0.3978 ', 'GAN acc 0.9844', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.6074', 'Total loss: 1.0524', 'for batch', 12)
('GAN loss 0.3790 ', 'GAN acc 0.9844', 'Discriminator loss 0.3911', 'Discriminator accuracy 0.8359', 'Total loss: 0.7702', 'for batch', 13)
('GAN loss 0.3535 ', 'GAN acc 0.9922', 'Discriminator loss 0.4365', 'Discriminator accuracy 0.8008', 'Total loss: 0.7900', 'for batch', 14)
('GAN loss 0.3469 ', 'GAN acc 0.9844', 'Discriminator loss 0.3323', 'Discriminator accuracy 0.8711', 'Total loss: 0.6792', 'for batch', 15)
('GAN loss 0.3308 ', 'GAN acc 0.9922', 'Discriminator loss 0.3466', 'Discriminator accuracy 0.8633', 'Total loss: 0.6774', 'for batch', 16)
('GAN loss 0.2929 ', 'GAN acc 0.9961', 'Discriminator loss 0.3480', 'Discriminator accuracy 0.8691', 'Total loss: 0.6409', 'for batch', 17)
('GAN loss 0.3198 ', 'GAN acc 0.9844', 'Discriminator loss 0.5838', 'Discriminator accuracy 0.6758', 'Total loss: 0.9036', 'for batch', 18)
('GAN loss 0.3484 ', 'GAN acc 0.9883', 'Discriminator loss 0.4697', 'Discriminator accuracy 0.7578', 'Total loss: 0.8182', 'for batch', 19)
('GAN loss 0.2901 ', 'GAN acc 0.9922', 'Discriminator loss 0.2669', 'Discriminator accuracy 0.9277', 'Total loss: 0.5570', 'for batch', 20)
('GAN loss 0.2863 ', 'GAN acc 0.9922', 'Discriminator loss 0.4478', 'Discriminator accuracy 0.7715', 'Total loss: 0.7341', 'for batch', 21)
('GAN loss 0.2998 ', 'GAN acc 0.9922', 'Discriminator loss 0.3198', 'Discriminator accuracy 0.8691', 'Total loss: 0.6197', 'for batch', 22)
('GAN loss 0.2855 ', 'GAN acc 0.9922', 'Discriminator loss 0.3938', 'Discriminator accuracy 0.8340', 'Total loss: 0.6794', 'for batch', 23)
('GAN loss 0.2623 ', 'GAN acc 0.9922', 'Discriminator loss 0.3828', 'Discriminator accuracy 0.8457', 'Total loss: 0.6451', 'for batch', 24)
('GAN loss 0.2576 ', 'GAN acc 0.9922', 'Discriminator loss 0.3134', 'Discriminator accuracy 0.8789', 'Total loss: 0.5711', 'for batch', 25)
('GAN loss 0.2293 ', 'GAN acc 0.9922', 'Discriminator loss 0.2720', 'Discriminator accuracy 0.9102', 'Total loss: 0.5013', 'for batch', 26)
('GAN loss 0.2109 ', 'GAN acc 0.9922', 'Discriminator loss 0.2701', 'Discriminator accuracy 0.9160', 'Total loss: 0.4810', 'for batch', 27)
('GAN loss 0.2155 ', 'GAN acc 0.9883', 'Discriminator loss 0.4532', 'Discriminator accuracy 0.8086', 'Total loss: 0.6687', 'for batch', 28)
('GAN loss 0.2320 ', 'GAN acc 0.9922', 'Discriminator loss 0.5222', 'Discriminator accuracy 0.7500', 'Total loss: 0.7542', 'for batch', 29)
('GAN loss 0.2666 ', 'GAN acc 0.9922', 'Discriminator loss 0.4501', 'Discriminator accuracy 0.7871', 'Total loss: 0.7167', 'for batch', 30)
('GAN loss 0.2941 ', 'GAN acc 0.9883', 'Discriminator loss 0.4553', 'Discriminator accuracy 0.7988', 'Total loss: 0.7493', 'for batch', 31)
('GAN loss 0.2676 ', 'GAN acc 0.9961', 'Discriminator loss 0.2728', 'Discriminator accuracy 0.9102', 'Total loss: 0.5403', 'for batch', 32)
('GAN loss 0.2577 ', 'GAN acc 0.9961', 'Discriminator loss 0.2688', 'Discriminator accuracy 0.9141', 'Total loss: 0.5265', 'for batch', 33)
('GAN loss 0.2574 ', 'GAN acc 0.9922', 'Discriminator loss 0.3208', 'Discriminator accuracy 0.8789', 'Total loss: 0.5782', 'for batch', 34)
('GAN loss 0.2537 ', 'GAN acc 0.9922', 'Discriminator loss 0.3174', 'Discriminator accuracy 0.8848', 'Total loss: 0.5711', 'for batch', 35)
('GAN loss 0.2782 ', 'GAN acc 0.9883', 'Discriminator loss 0.4836', 'Discriminator accuracy 0.7559', 'Total loss: 0.7617', 'for batch', 36)
('GAN loss 0.2481 ', 'GAN acc 0.9961', 'Discriminator loss 0.2840', 'Discriminator accuracy 0.8965', 'Total loss: 0.5322', 'for batch', 37)
('GAN loss 0.2473 ', 'GAN acc 0.9922', 'Discriminator loss 0.2251', 'Discriminator accuracy 0.9297', 'Total loss: 0.4724', 'for batch', 38)
('GAN loss 0.2296 ', 'GAN acc 0.9922', 'Discriminator loss 0.2305', 'Discriminator accuracy 0.9375', 'Total loss: 0.4600', 'for batch', 39)
('GAN loss 0.2133 ', 'GAN acc 0.9922', 'Discriminator loss 0.2614', 'Discriminator accuracy 0.9180', 'Total loss: 0.4747', 'for batch', 40)
('GAN loss 0.1954 ', 'GAN acc 0.9961', 'Discriminator loss 0.1579', 'Discriminator accuracy 0.9863', 'Total loss: 0.3533', 'for batch', 41)
('GAN loss 0.1913 ', 'GAN acc 0.9961', 'Discriminator loss 0.4268', 'Discriminator accuracy 0.8125', 'Total loss: 0.6181', 'for batch', 42)
('GAN loss 0.2046 ', 'GAN acc 0.9922', 'Discriminator loss 0.2815', 'Discriminator accuracy 0.8867', 'Total loss: 0.4862', 'for batch', 43)
('GAN loss 0.2402 ', 'GAN acc 0.9883', 'Discriminator loss 0.5469', 'Discriminator accuracy 0.7383', 'Total loss: 0.7871', 'for batch', 44)
('GAN loss 0.2200 ', 'GAN acc 0.9961', 'Discriminator loss 0.3772', 'Discriminator accuracy 0.8379', 'Total loss: 0.5973', 'for batch', 45)
('GAN loss 0.2111 ', 'GAN acc 0.9922', 'Discriminator loss 0.2088', 'Discriminator accuracy 0.9395', 'Total loss: 0.4199', 'for batch', 46)
('GAN loss 0.2047 ', 'GAN acc 0.9961', 'Discriminator loss 0.2690', 'Discriminator accuracy 0.8848', 'Total loss: 0.4737', 'for batch', 47)
('GAN loss 0.2071 ', 'GAN acc 0.9961', 'Discriminator loss 0.3083', 'Discriminator accuracy 0.8770', 'Total loss: 0.5153', 'for batch', 48)
('GAN loss 0.2016 ', 'GAN acc 0.9961', 'Discriminator loss 0.1915', 'Discriminator accuracy 0.9395', 'Total loss: 0.3930', 'for batch', 49)
('GAN loss 0.2452 ', 'GAN acc 0.9922', 'Discriminator loss 0.5746', 'Discriminator accuracy 0.7012', 'Total loss: 0.8198', 'for batch', 50)
('GAN loss 0.2403 ', 'GAN acc 0.9922', 'Discriminator loss 0.3020', 'Discriminator accuracy 0.8750', 'Total loss: 0.5423', 'for batch', 51)
('GAN loss 0.2092 ', 'GAN acc 0.9961', 'Discriminator loss 0.2232', 'Discriminator accuracy 0.9512', 'Total loss: 0.4323', 'for batch', 52)
('GAN loss 0.1967 ', 'GAN acc 0.9922', 'Discriminator loss 0.1225', 'Discriminator accuracy 0.9980', 'Total loss: 0.3192', 'for batch', 53)
('GAN loss 0.1686 ', 'GAN acc 0.9922', 'Discriminator loss 0.0929', 'Discriminator accuracy 1.0000', 'Total loss: 0.2615', 'for batch', 54)
('GAN loss 0.1549 ', 'GAN acc 0.9922', 'Discriminator loss 0.1767', 'Discriminator accuracy 0.9395', 'Total loss: 0.3316', 'for batch', 55)
('GAN loss 0.1882 ', 'GAN acc 0.9922', 'Discriminator loss 0.5903', 'Discriminator accuracy 0.7227', 'Total loss: 0.7785', 'for batch', 56)
('GAN loss 0.2058 ', 'GAN acc 0.9922', 'Discriminator loss 0.2666', 'Discriminator accuracy 0.8965', 'Total loss: 0.4723', 'for batch', 57)
('GAN loss 0.1715 ', 'GAN acc 0.9961', 'Discriminator loss 0.3723', 'Discriminator accuracy 0.7949', 'Total loss: 0.5438', 'for batch', 58)
('GAN loss 0.1660 ', 'GAN acc 0.9961', 'Discriminator loss 0.2542', 'Discriminator accuracy 0.8887', 'Total loss: 0.4202', 'for batch', 59)
('GAN loss 0.1662 ', 'GAN acc 0.9961', 'Discriminator loss 0.3151', 'Discriminator accuracy 0.8789', 'Total loss: 0.4813', 'for batch', 60)
('GAN loss 0.1897 ', 'GAN acc 0.9922', 'Discriminator loss 0.4553', 'Discriminator accuracy 0.7988', 'Total loss: 0.6451', 'for batch', 61)
('GAN loss 0.2301 ', 'GAN acc 0.9844', 'Discriminator loss 0.5352', 'Discriminator accuracy 0.7559', 'Total loss: 0.7654', 'for batch', 62)
('GAN loss 0.2491 ', 'GAN acc 0.9883', 'Discriminator loss 0.3712', 'Discriminator accuracy 0.8223', 'Total loss: 0.6203', 'for batch', 63)
('GAN loss 0.2923 ', 'GAN acc 0.9922', 'Discriminator loss 0.4334', 'Discriminator accuracy 0.7617', 'Total loss: 0.7258', 'for batch', 64)
('GAN loss 0.2998 ', 'GAN acc 0.9883', 'Discriminator loss 0.2512', 'Discriminator accuracy 0.9258', 'Total loss: 0.5509', 'for batch', 65)
('GAN loss 0.2670 ', 'GAN acc 0.9922', 'Discriminator loss 0.3475', 'Discriminator accuracy 0.8398', 'Total loss: 0.6144', 'for batch', 66)
('GAN loss 0.2498 ', 'GAN acc 0.9922', 'Discriminator loss 0.2603', 'Discriminator accuracy 0.9355', 'Total loss: 0.5101', 'for batch', 67)
('GAN loss 0.2377 ', 'GAN acc 0.9883', 'Discriminator loss 0.2087', 'Discriminator accuracy 0.9336', 'Total loss: 0.4464', 'for batch', 68)
('GAN loss 0.2376 ', 'GAN acc 0.9883', 'Discriminator loss 0.4095', 'Discriminator accuracy 0.8164', 'Total loss: 0.6472', 'for batch', 69)
('GAN loss 0.2315 ', 'GAN acc 0.9922', 'Discriminator loss 0.2324', 'Discriminator accuracy 0.9316', 'Total loss: 0.4639', 'for batch', 70)
('GAN loss 0.2174 ', 'GAN acc 0.9883', 'Discriminator loss 0.1330', 'Discriminator accuracy 1.0000', 'Total loss: 0.3504', 'for batch', 71)
('GAN loss 0.2143 ', 'GAN acc 0.9922', 'Discriminator loss 0.3187', 'Discriminator accuracy 0.8750', 'Total loss: 0.5330', 'for batch', 72)
('GAN loss 0.2142 ', 'GAN acc 0.9922', 'Discriminator loss 0.3395', 'Discriminator accuracy 0.8555', 'Total loss: 0.5537', 'for batch', 73)
('GAN loss 0.2321 ', 'GAN acc 0.9922', 'Discriminator loss 0.3187', 'Discriminator accuracy 0.8711', 'Total loss: 0.5507', 'for batch', 74)
('GAN loss 0.2266 ', 'GAN acc 0.9844', 'Discriminator loss 0.2267', 'Discriminator accuracy 0.9316', 'Total loss: 0.4533', 'for batch', 75)
('GAN loss 0.1837 ', 'GAN acc 0.9961', 'Discriminator loss 0.1833', 'Discriminator accuracy 0.9629', 'Total loss: 0.3670', 'for batch', 76)
('GAN loss 0.1795 ', 'GAN acc 0.9922', 'Discriminator loss 0.1097', 'Discriminator accuracy 0.9961', 'Total loss: 0.2892', 'for batch', 77)
('GAN loss 0.1732 ', 'GAN acc 0.9922', 'Discriminator loss 0.3183', 'Discriminator accuracy 0.8770', 'Total loss: 0.4915', 'for batch', 78)
('GAN loss 0.1708 ', 'GAN acc 0.9961', 'Discriminator loss 0.4315', 'Discriminator accuracy 0.8184', 'Total loss: 0.6023', 'for batch', 79)
('GAN loss 0.1889 ', 'GAN acc 0.9961', 'Discriminator loss 0.3199', 'Discriminator accuracy 0.8770', 'Total loss: 0.5088', 'for batch', 80)
('GAN loss 0.2012 ', 'GAN acc 0.9922', 'Discriminator loss 0.4133', 'Discriminator accuracy 0.8184', 'Total loss: 0.6146', 'for batch', 81)
('GAN loss 0.2775 ', 'GAN acc 0.9883', 'Discriminator loss 0.4810', 'Discriminator accuracy 0.7578', 'Total loss: 0.7585', 'for batch', 82)
('GAN loss 0.2332 ', 'GAN acc 0.9922', 'Discriminator loss 0.2389', 'Discriminator accuracy 0.9551', 'Total loss: 0.4721', 'for batch', 83)
('GAN loss 0.2191 ', 'GAN acc 0.9961', 'Discriminator loss 0.2254', 'Discriminator accuracy 0.9355', 'Total loss: 0.4445', 'for batch', 84)
('GAN loss 0.2517 ', 'GAN acc 0.9883', 'Discriminator loss 0.5067', 'Discriminator accuracy 0.7598', 'Total loss: 0.7584', 'for batch', 85)
('GAN loss 0.2401 ', 'GAN acc 0.9922', 'Discriminator loss 0.3027', 'Discriminator accuracy 0.8770', 'Total loss: 0.5429', 'for batch', 86)
('GAN loss 0.2372 ', 'GAN acc 0.9883', 'Discriminator loss 0.1226', 'Discriminator accuracy 1.0000', 'Total loss: 0.3597', 'for batch', 87)
('GAN loss 0.2396 ', 'GAN acc 0.9922', 'Discriminator loss 0.3989', 'Discriminator accuracy 0.8164', 'Total loss: 0.6385', 'for batch', 88)
('GAN loss 0.2207 ', 'GAN acc 0.9961', 'Discriminator loss 0.2230', 'Discriminator accuracy 0.9336', 'Total loss: 0.4437', 'for batch', 89)
('GAN loss 0.2159 ', 'GAN acc 0.9922', 'Discriminator loss 0.1332', 'Discriminator accuracy 0.9922', 'Total loss: 0.3491', 'for batch', 90)
('GAN loss 0.1887 ', 'GAN acc 0.9922', 'Discriminator loss 0.2304', 'Discriminator accuracy 0.9297', 'Total loss: 0.4191', 'for batch', 91)
('GAN loss 0.1809 ', 'GAN acc 0.9961', 'Discriminator loss 0.2636', 'Discriminator accuracy 0.8945', 'Total loss: 0.4444', 'for batch', 92)
('GAN loss 0.2040 ', 'GAN acc 0.9922', 'Discriminator loss 0.3165', 'Discriminator accuracy 0.8770', 'Total loss: 0.5205', 'for batch', 93)
('GAN loss 0.1814 ', 'GAN acc 0.9961', 'Discriminator loss 0.2204', 'Discriminator accuracy 0.9375', 'Total loss: 0.4018', 'for batch', 94)
('GAN loss 0.1982 ', 'GAN acc 0.9922', 'Discriminator loss 0.2867', 'Discriminator accuracy 0.8750', 'Total loss: 0.4850', 'for batch', 95)
('GAN loss 0.1575 ', 'GAN acc 1.0000', 'Discriminator loss 0.2940', 'Discriminator accuracy 0.9004', 'Total loss: 0.4515', 'for batch', 96)
('GAN loss 0.1911 ', 'GAN acc 0.9883', 'Discriminator loss 0.5042', 'Discriminator accuracy 0.7578', 'Total loss: 0.6953', 'for batch', 97)
('GAN loss 0.2267 ', 'GAN acc 0.9922', 'Discriminator loss 0.3710', 'Discriminator accuracy 0.8086', 'Total loss: 0.5977', 'for batch', 98)
('GAN loss 0.1870 ', 'GAN acc 0.9922', 'Discriminator loss 0.2771', 'Discriminator accuracy 0.9004', 'Total loss: 0.4641', 'for batch', 99)
('GAN loss 0.1805 ', 'GAN acc 0.9961', 'Discriminator loss 0.2043', 'Discriminator accuracy 0.9395', 'Total loss: 0.3848', 'for batch', 100)
('GAN loss 0.1969 ', 'GAN acc 0.9883', 'Discriminator loss 0.6101', 'Discriminator accuracy 0.7051', 'Total loss: 0.8070', 'for batch', 101)
('GAN loss 0.2168 ', 'GAN acc 0.9844', 'Discriminator loss 0.1885', 'Discriminator accuracy 0.9375', 'Total loss: 0.4053', 'for batch', 102)
('GAN loss 0.2207 ', 'GAN acc 0.9883', 'Discriminator loss 0.4136', 'Discriminator accuracy 0.8184', 'Total loss: 0.6343', 'for batch', 103)
('GAN loss 0.2220 ', 'GAN acc 0.9961', 'Discriminator loss 0.4016', 'Discriminator accuracy 0.8184', 'Total loss: 0.6236', 'for batch', 104)
('GAN loss 0.2564 ', 'GAN acc 0.9922', 'Discriminator loss 0.2651', 'Discriminator accuracy 0.8887', 'Total loss: 0.5215', 'for batch', 105)
('GAN loss 0.2124 ', 'GAN acc 0.9922', 'Discriminator loss 0.2814', 'Discriminator accuracy 0.9082', 'Total loss: 0.4938', 'for batch', 106)
('GAN loss 0.2152 ', 'GAN acc 0.9844', 'Discriminator loss 0.3584', 'Discriminator accuracy 0.8359', 'Total loss: 0.5736', 'for batch', 107)
('GAN loss 0.2096 ', 'GAN acc 0.9922', 'Discriminator loss 0.3175', 'Discriminator accuracy 0.8750', 'Total loss: 0.5272', 'for batch', 108)
('GAN loss 0.2026 ', 'GAN acc 0.9961', 'Discriminator loss 0.3063', 'Discriminator accuracy 0.8691', 'Total loss: 0.5089', 'for batch', 109)
('GAN loss 0.2033 ', 'GAN acc 0.9961', 'Discriminator loss 0.2177', 'Discriminator accuracy 0.9395', 'Total loss: 0.4211', 'for batch', 110)
('GAN loss 0.1984 ', 'GAN acc 0.9922', 'Discriminator loss 0.2974', 'Discriminator accuracy 0.8770', 'Total loss: 0.4959', 'for batch', 111)
('GAN loss 0.2062 ', 'GAN acc 0.9922', 'Discriminator loss 0.2370', 'Discriminator accuracy 0.9277', 'Total loss: 0.4432', 'for batch', 112)
('GAN loss 0.1913 ', 'GAN acc 0.9922', 'Discriminator loss 0.2875', 'Discriminator accuracy 0.8828', 'Total loss: 0.4788', 'for batch', 113)
('GAN loss 0.1765 ', 'GAN acc 0.9961', 'Discriminator loss 0.1184', 'Discriminator accuracy 0.9883', 'Total loss: 0.2950', 'for batch', 114)
('GAN loss 0.1748 ', 'GAN acc 0.9922', 'Discriminator loss 0.3358', 'Discriminator accuracy 0.8633', 'Total loss: 0.5105', 'for batch', 115)
('GAN loss 0.1674 ', 'GAN acc 0.9961', 'Discriminator loss 0.2102', 'Discriminator accuracy 0.9297', 'Total loss: 0.3776', 'for batch', 116)
('GAN loss 0.1770 ', 'GAN acc 0.9883', 'Discriminator loss 0.1398', 'Discriminator accuracy 0.9688', 'Total loss: 0.3169', 'for batch', 117)
('GAN loss 0.1433 ', 'GAN acc 0.9961', 'Discriminator loss 0.2202', 'Discriminator accuracy 0.9297', 'Total loss: 0.3635', 'for batch', 118)
('GAN loss 0.1562 ', 'GAN acc 0.9922', 'Discriminator loss 0.4163', 'Discriminator accuracy 0.8203', 'Total loss: 0.5726', 'for batch', 119)
('GAN loss 0.1705 ', 'GAN acc 0.9883', 'Discriminator loss 0.2939', 'Discriminator accuracy 0.8809', 'Total loss: 0.4643', 'for batch', 120)
('GAN loss 0.1692 ', 'GAN acc 0.9961', 'Discriminator loss 0.3406', 'Discriminator accuracy 0.8691', 'Total loss: 0.5099', 'for batch', 121)
('GAN loss 0.1811 ', 'GAN acc 0.9883', 'Discriminator loss 0.2778', 'Discriminator accuracy 0.8848', 'Total loss: 0.4590', 'for batch', 122)
('GAN loss 0.1651 ', 'GAN acc 0.9961', 'Discriminator loss 0.3346', 'Discriminator accuracy 0.8652', 'Total loss: 0.4997', 'for batch', 123)
('GAN loss 0.1516 ', 'GAN acc 0.9922', 'Discriminator loss 0.1009', 'Discriminator accuracy 0.9922', 'Total loss: 0.2525', 'for batch', 124)
('GAN loss 0.1605 ', 'GAN acc 0.9961', 'Discriminator loss 0.3030', 'Discriminator accuracy 0.8770', 'Total loss: 0.4636', 'for batch', 125)
('GAN loss 0.1970 ', 'GAN acc 0.9922', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.6934', 'Total loss: 0.8837', 'for batch', 126)
('GAN loss 0.2391 ', 'GAN acc 0.9922', 'Discriminator loss 0.3693', 'Discriminator accuracy 0.8203', 'Total loss: 0.6084', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.77604449)
('DISCRIMINATOR_Imagem FAKE=', 0.11569365)
('Discriminator trained', 1, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.995845')
----------------------------------
('Epoch', 38, 'of', 50)
('Number of batches', 128)
('GAN loss 0.2705 ', 'GAN acc 0.9883', 'Discriminator loss 0.3219', 'Discriminator accuracy 0.8711', 'Total loss: 0.5924', 'for batch', 0)
('GAN loss 0.2953 ', 'GAN acc 0.9883', 'Discriminator loss 0.3981', 'Discriminator accuracy 0.8164', 'Total loss: 0.6935', 'for batch', 1)
('GAN loss 0.2381 ', 'GAN acc 0.9922', 'Discriminator loss 0.3292', 'Discriminator accuracy 0.8711', 'Total loss: 0.5673', 'for batch', 2)
('GAN loss 0.2329 ', 'GAN acc 0.9922', 'Discriminator loss 0.3075', 'Discriminator accuracy 0.8750', 'Total loss: 0.5404', 'for batch', 3)
('GAN loss 0.2262 ', 'GAN acc 0.9883', 'Discriminator loss 0.3144', 'Discriminator accuracy 0.8750', 'Total loss: 0.5406', 'for batch', 4)
('GAN loss 0.2238 ', 'GAN acc 0.9961', 'Discriminator loss 0.2887', 'Discriminator accuracy 0.8828', 'Total loss: 0.5125', 'for batch', 5)
('GAN loss 0.2287 ', 'GAN acc 0.9922', 'Discriminator loss 0.2874', 'Discriminator accuracy 0.8809', 'Total loss: 0.5161', 'for batch', 6)
('GAN loss 0.2099 ', 'GAN acc 0.9961', 'Discriminator loss 0.1254', 'Discriminator accuracy 0.9980', 'Total loss: 0.3353', 'for batch', 7)
('GAN loss 0.1876 ', 'GAN acc 0.9961', 'Discriminator loss 0.1443', 'Discriminator accuracy 0.9785', 'Total loss: 0.3320', 'for batch', 8)
('GAN loss 0.1739 ', 'GAN acc 0.9922', 'Discriminator loss 0.2181', 'Discriminator accuracy 0.9355', 'Total loss: 0.3920', 'for batch', 9)
('GAN loss 0.1753 ', 'GAN acc 0.9844', 'Discriminator loss 0.1463', 'Discriminator accuracy 0.9531', 'Total loss: 0.3216', 'for batch', 10)
('GAN loss 0.1841 ', 'GAN acc 0.9883', 'Discriminator loss 0.3841', 'Discriminator accuracy 0.8320', 'Total loss: 0.5682', 'for batch', 11)
('GAN loss 0.2223 ', 'GAN acc 0.9883', 'Discriminator loss 0.5296', 'Discriminator accuracy 0.7344', 'Total loss: 0.7519', 'for batch', 12)
('GAN loss 0.1631 ', 'GAN acc 0.9922', 'Discriminator loss 0.5846', 'Discriminator accuracy 0.6074', 'Total loss: 0.7477', 'for batch', 13)
('GAN loss 0.1701 ', 'GAN acc 0.9961', 'Discriminator loss 0.3885', 'Discriminator accuracy 0.8262', 'Total loss: 0.5586', 'for batch', 14)
('GAN loss 0.1790 ', 'GAN acc 0.9961', 'Discriminator loss 0.2901', 'Discriminator accuracy 0.8906', 'Total loss: 0.4691', 'for batch', 15)
('GAN loss 0.2185 ', 'GAN acc 0.9922', 'Discriminator loss 0.4282', 'Discriminator accuracy 0.8105', 'Total loss: 0.6468', 'for batch', 16)
('GAN loss 0.2477 ', 'GAN acc 0.9961', 'Discriminator loss 0.3224', 'Discriminator accuracy 0.8477', 'Total loss: 0.5701', 'for batch', 17)
('GAN loss 0.4282 ', 'GAN acc 0.9844', 'Discriminator loss 0.5918', 'Discriminator accuracy 0.6992', 'Total loss: 1.0200', 'for batch', 18)
('GAN loss 0.3586 ', 'GAN acc 0.9883', 'Discriminator loss 0.2634', 'Discriminator accuracy 0.9258', 'Total loss: 0.6220', 'for batch', 19)
('GAN loss 0.3039 ', 'GAN acc 0.9766', 'Discriminator loss 0.2305', 'Discriminator accuracy 0.9492', 'Total loss: 0.5343', 'for batch', 20)
('GAN loss 0.2917 ', 'GAN acc 0.9922', 'Discriminator loss 0.3996', 'Discriminator accuracy 0.8223', 'Total loss: 0.6914', 'for batch', 21)
('GAN loss 0.2607 ', 'GAN acc 0.9922', 'Discriminator loss 0.3769', 'Discriminator accuracy 0.8398', 'Total loss: 0.6375', 'for batch', 22)
('GAN loss 0.2743 ', 'GAN acc 0.9922', 'Discriminator loss 0.3644', 'Discriminator accuracy 0.8535', 'Total loss: 0.6387', 'for batch', 23)
('GAN loss 0.3032 ', 'GAN acc 0.9883', 'Discriminator loss 0.2887', 'Discriminator accuracy 0.9160', 'Total loss: 0.5920', 'for batch', 24)
('GAN loss 0.2376 ', 'GAN acc 0.9922', 'Discriminator loss 0.2095', 'Discriminator accuracy 0.9688', 'Total loss: 0.4471', 'for batch', 25)
('GAN loss 0.1916 ', 'GAN acc 0.9961', 'Discriminator loss 0.2703', 'Discriminator accuracy 0.8887', 'Total loss: 0.4620', 'for batch', 26)
('GAN loss 0.1939 ', 'GAN acc 0.9922', 'Discriminator loss 0.2969', 'Discriminator accuracy 0.8848', 'Total loss: 0.4908', 'for batch', 27)
('GAN loss 0.2189 ', 'GAN acc 0.9883', 'Discriminator loss 0.4183', 'Discriminator accuracy 0.8164', 'Total loss: 0.6372', 'for batch', 28)
('GAN loss 0.2991 ', 'GAN acc 0.9844', 'Discriminator loss 0.4117', 'Discriminator accuracy 0.7793', 'Total loss: 0.7107', 'for batch', 29)
('GAN loss 0.1809 ', 'GAN acc 0.9961', 'Discriminator loss 0.5286', 'Discriminator accuracy 0.6816', 'Total loss: 0.7095', 'for batch', 30)
('GAN loss 0.1938 ', 'GAN acc 0.9961', 'Discriminator loss 0.5222', 'Discriminator accuracy 0.7617', 'Total loss: 0.7159', 'for batch', 31)
('GAN loss 0.1936 ', 'GAN acc 0.9961', 'Discriminator loss 0.1794', 'Discriminator accuracy 0.9395', 'Total loss: 0.3730', 'for batch', 32)
('GAN loss 0.1945 ', 'GAN acc 0.9961', 'Discriminator loss 0.2937', 'Discriminator accuracy 0.8770', 'Total loss: 0.4882', 'for batch', 33)
('GAN loss 0.2050 ', 'GAN acc 0.9961', 'Discriminator loss 0.3102', 'Discriminator accuracy 0.8770', 'Total loss: 0.5152', 'for batch', 34)
('GAN loss 0.2112 ', 'GAN acc 0.9922', 'Discriminator loss 0.3208', 'Discriminator accuracy 0.8770', 'Total loss: 0.5319', 'for batch', 35)
('GAN loss 0.2513 ', 'GAN acc 0.9922', 'Discriminator loss 0.4590', 'Discriminator accuracy 0.7617', 'Total loss: 0.7103', 'for batch', 36)
('GAN loss 0.2279 ', 'GAN acc 0.9961', 'Discriminator loss 0.2298', 'Discriminator accuracy 0.9355', 'Total loss: 0.4577', 'for batch', 37)
('GAN loss 0.2416 ', 'GAN acc 0.9883', 'Discriminator loss 0.1805', 'Discriminator accuracy 0.9492', 'Total loss: 0.4221', 'for batch', 38)
('GAN loss 0.2612 ', 'GAN acc 0.9844', 'Discriminator loss 0.2411', 'Discriminator accuracy 0.9355', 'Total loss: 0.5023', 'for batch', 39)
('GAN loss 0.2242 ', 'GAN acc 0.9922', 'Discriminator loss 0.3051', 'Discriminator accuracy 0.8770', 'Total loss: 0.5293', 'for batch', 40)
('GAN loss 0.1944 ', 'GAN acc 0.9922', 'Discriminator loss 0.1476', 'Discriminator accuracy 0.9941', 'Total loss: 0.3419', 'for batch', 41)
('GAN loss 0.2162 ', 'GAN acc 0.9883', 'Discriminator loss 0.5308', 'Discriminator accuracy 0.7559', 'Total loss: 0.7470', 'for batch', 42)
('GAN loss 0.2218 ', 'GAN acc 0.9922', 'Discriminator loss 0.3154', 'Discriminator accuracy 0.8770', 'Total loss: 0.5371', 'for batch', 43)
('GAN loss 0.2630 ', 'GAN acc 0.9844', 'Discriminator loss 0.5664', 'Discriminator accuracy 0.7441', 'Total loss: 0.8293', 'for batch', 44)
('GAN loss 0.2335 ', 'GAN acc 0.9961', 'Discriminator loss 0.3789', 'Discriminator accuracy 0.8496', 'Total loss: 0.6124', 'for batch', 45)
('GAN loss 0.2189 ', 'GAN acc 0.9961', 'Discriminator loss 0.2116', 'Discriminator accuracy 0.9375', 'Total loss: 0.4305', 'for batch', 46)
('GAN loss 0.2165 ', 'GAN acc 0.9961', 'Discriminator loss 0.2667', 'Discriminator accuracy 0.8906', 'Total loss: 0.4831', 'for batch', 47)
('GAN loss 0.2351 ', 'GAN acc 0.9922', 'Discriminator loss 0.3030', 'Discriminator accuracy 0.8789', 'Total loss: 0.5382', 'for batch', 48)
('GAN loss 0.2172 ', 'GAN acc 0.9922', 'Discriminator loss 0.1840', 'Discriminator accuracy 0.9395', 'Total loss: 0.4012', 'for batch', 49)
('GAN loss 0.2301 ', 'GAN acc 0.9922', 'Discriminator loss 0.5202', 'Discriminator accuracy 0.7539', 'Total loss: 0.7502', 'for batch', 50)
('GAN loss 0.2362 ', 'GAN acc 0.9922', 'Discriminator loss 0.2953', 'Discriminator accuracy 0.8711', 'Total loss: 0.5315', 'for batch', 51)
('GAN loss 0.2207 ', 'GAN acc 0.9922', 'Discriminator loss 0.1565', 'Discriminator accuracy 0.9707', 'Total loss: 0.3771', 'for batch', 52)
('GAN loss 0.2020 ', 'GAN acc 0.9922', 'Discriminator loss 0.1214', 'Discriminator accuracy 0.9961', 'Total loss: 0.3234', 'for batch', 53)
('GAN loss 0.1723 ', 'GAN acc 0.9961', 'Discriminator loss 0.0982', 'Discriminator accuracy 0.9961', 'Total loss: 0.2705', 'for batch', 54)
('GAN loss 0.1552 ', 'GAN acc 0.9961', 'Discriminator loss 0.0794', 'Discriminator accuracy 1.0000', 'Total loss: 0.2345', 'for batch', 55)
('GAN loss 0.1585 ', 'GAN acc 0.9961', 'Discriminator loss 0.4409', 'Discriminator accuracy 0.8145', 'Total loss: 0.5994', 'for batch', 56)
('GAN loss 0.1685 ', 'GAN acc 0.9922', 'Discriminator loss 0.1611', 'Discriminator accuracy 0.9414', 'Total loss: 0.3296', 'for batch', 57)
('GAN loss 0.1570 ', 'GAN acc 0.9961', 'Discriminator loss 0.2052', 'Discriminator accuracy 0.9375', 'Total loss: 0.3622', 'for batch', 58)
('GAN loss 0.1413 ', 'GAN acc 1.0000', 'Discriminator loss 0.0784', 'Discriminator accuracy 0.9961', 'Total loss: 0.2197', 'for batch', 59)
('GAN loss 0.1580 ', 'GAN acc 0.9922', 'Discriminator loss 0.2761', 'Discriminator accuracy 0.8828', 'Total loss: 0.4341', 'for batch', 60)
('GAN loss 0.1779 ', 'GAN acc 0.9883', 'Discriminator loss 0.3370', 'Discriminator accuracy 0.8555', 'Total loss: 0.5148', 'for batch', 61)
('GAN loss 0.1731 ', 'GAN acc 0.9883', 'Discriminator loss 0.4307', 'Discriminator accuracy 0.8086', 'Total loss: 0.6038', 'for batch', 62)
('GAN loss 0.1614 ', 'GAN acc 0.9883', 'Discriminator loss 0.1230', 'Discriminator accuracy 0.9746', 'Total loss: 0.2844', 'for batch', 63)
('GAN loss 0.1681 ', 'GAN acc 0.9922', 'Discriminator loss 0.3751', 'Discriminator accuracy 0.8203', 'Total loss: 0.5432', 'for batch', 64)
('GAN loss 0.1597 ', 'GAN acc 0.9961', 'Discriminator loss 0.2220', 'Discriminator accuracy 0.9277', 'Total loss: 0.3817', 'for batch', 65)
('GAN loss 0.1595 ', 'GAN acc 0.9961', 'Discriminator loss 0.2734', 'Discriminator accuracy 0.8789', 'Total loss: 0.4329', 'for batch', 66)
('GAN loss 0.1567 ', 'GAN acc 0.9922', 'Discriminator loss 0.2387', 'Discriminator accuracy 0.9297', 'Total loss: 0.3954', 'for batch', 67)
('GAN loss 0.1396 ', 'GAN acc 0.9961', 'Discriminator loss 0.0817', 'Discriminator accuracy 0.9980', 'Total loss: 0.2213', 'for batch', 68)
('GAN loss 0.1558 ', 'GAN acc 0.9922', 'Discriminator loss 0.4618', 'Discriminator accuracy 0.8145', 'Total loss: 0.6176', 'for batch', 69)
('GAN loss 0.1677 ', 'GAN acc 0.9922', 'Discriminator loss 0.2764', 'Discriminator accuracy 0.8848', 'Total loss: 0.4441', 'for batch', 70)
('GAN loss 0.1787 ', 'GAN acc 0.9883', 'Discriminator loss 0.0937', 'Discriminator accuracy 0.9941', 'Total loss: 0.2724', 'for batch', 71)
('GAN loss 0.1744 ', 'GAN acc 0.9922', 'Discriminator loss 0.3177', 'Discriminator accuracy 0.8789', 'Total loss: 0.4921', 'for batch', 72)
('GAN loss 0.1955 ', 'GAN acc 0.9922', 'Discriminator loss 0.4265', 'Discriminator accuracy 0.8184', 'Total loss: 0.6220', 'for batch', 73)
('GAN loss 0.1900 ', 'GAN acc 0.9922', 'Discriminator loss 0.2390', 'Discriminator accuracy 0.9297', 'Total loss: 0.4290', 'for batch', 74)
('GAN loss 0.1812 ', 'GAN acc 0.9883', 'Discriminator loss 0.1516', 'Discriminator accuracy 0.9453', 'Total loss: 0.3328', 'for batch', 75)
('GAN loss 0.1542 ', 'GAN acc 0.9961', 'Discriminator loss 0.0964', 'Discriminator accuracy 0.9961', 'Total loss: 0.2506', 'for batch', 76)
('GAN loss 0.1343 ', 'GAN acc 0.9961', 'Discriminator loss 0.0720', 'Discriminator accuracy 0.9980', 'Total loss: 0.2063', 'for batch', 77)
('GAN loss 0.1297 ', 'GAN acc 0.9961', 'Discriminator loss 0.2679', 'Discriminator accuracy 0.8828', 'Total loss: 0.3976', 'for batch', 78)
('GAN loss 0.1352 ', 'GAN acc 0.9922', 'Discriminator loss 0.3393', 'Discriminator accuracy 0.8750', 'Total loss: 0.4745', 'for batch', 79)
('GAN loss 0.1419 ', 'GAN acc 0.9922', 'Discriminator loss 0.2302', 'Discriminator accuracy 0.9297', 'Total loss: 0.3721', 'for batch', 80)
('GAN loss 0.1477 ', 'GAN acc 0.9961', 'Discriminator loss 0.1919', 'Discriminator accuracy 0.9375', 'Total loss: 0.3397', 'for batch', 81)
('GAN loss 0.2146 ', 'GAN acc 0.9883', 'Discriminator loss 0.3297', 'Discriminator accuracy 0.8223', 'Total loss: 0.5443', 'for batch', 82)
('GAN loss 0.1262 ', 'GAN acc 1.0000', 'Discriminator loss 0.5291', 'Discriminator accuracy 0.6680', 'Total loss: 0.6553', 'for batch', 83)
('GAN loss 0.1361 ', 'GAN acc 1.0000', 'Discriminator loss 0.3331', 'Discriminator accuracy 0.8828', 'Total loss: 0.4692', 'for batch', 84)
('GAN loss 0.1861 ', 'GAN acc 1.0000', 'Discriminator loss 0.8267', 'Discriminator accuracy 0.6680', 'Total loss: 1.0129', 'for batch', 85)
('GAN loss 0.2389 ', 'GAN acc 0.9922', 'Discriminator loss 0.4424', 'Discriminator accuracy 0.8184', 'Total loss: 0.6813', 'for batch', 86)
('GAN loss 0.2645 ', 'GAN acc 0.9883', 'Discriminator loss 0.3337', 'Discriminator accuracy 0.8730', 'Total loss: 0.5982', 'for batch', 87)
('GAN loss 0.2911 ', 'GAN acc 0.9922', 'Discriminator loss 0.5130', 'Discriminator accuracy 0.7461', 'Total loss: 0.8041', 'for batch', 88)
('GAN loss 0.3184 ', 'GAN acc 0.9883', 'Discriminator loss 0.3086', 'Discriminator accuracy 0.8789', 'Total loss: 0.6270', 'for batch', 89)
('GAN loss 0.2950 ', 'GAN acc 0.9922', 'Discriminator loss 0.2009', 'Discriminator accuracy 0.9766', 'Total loss: 0.4959', 'for batch', 90)
('GAN loss 0.2444 ', 'GAN acc 0.9961', 'Discriminator loss 0.2593', 'Discriminator accuracy 0.9277', 'Total loss: 0.5038', 'for batch', 91)
('GAN loss 0.2220 ', 'GAN acc 0.9922', 'Discriminator loss 0.4110', 'Discriminator accuracy 0.8105', 'Total loss: 0.6330', 'for batch', 92)
('GAN loss 0.2133 ', 'GAN acc 0.9922', 'Discriminator loss 0.4050', 'Discriminator accuracy 0.8145', 'Total loss: 0.6182', 'for batch', 93)
('GAN loss 0.2083 ', 'GAN acc 1.0000', 'Discriminator loss 0.3149', 'Discriminator accuracy 0.8770', 'Total loss: 0.5232', 'for batch', 94)
('GAN loss 0.2672 ', 'GAN acc 0.9922', 'Discriminator loss 0.6228', 'Discriminator accuracy 0.6738', 'Total loss: 0.8900', 'for batch', 95)
('GAN loss 0.2522 ', 'GAN acc 0.9961', 'Discriminator loss 0.2690', 'Discriminator accuracy 0.9277', 'Total loss: 0.5212', 'for batch', 96)
('GAN loss 0.2552 ', 'GAN acc 0.9883', 'Discriminator loss 0.2440', 'Discriminator accuracy 0.9395', 'Total loss: 0.4992', 'for batch', 97)
('GAN loss 0.2436 ', 'GAN acc 0.9883', 'Discriminator loss 0.4246', 'Discriminator accuracy 0.8066', 'Total loss: 0.6682', 'for batch', 98)
('GAN loss 0.2637 ', 'GAN acc 0.9922', 'Discriminator loss 0.2689', 'Discriminator accuracy 0.9082', 'Total loss: 0.5326', 'for batch', 99)
('GAN loss 0.2415 ', 'GAN acc 0.9961', 'Discriminator loss 0.3460', 'Discriminator accuracy 0.8789', 'Total loss: 0.5875', 'for batch', 100)
('GAN loss 0.2116 ', 'GAN acc 0.9922', 'Discriminator loss 0.4647', 'Discriminator accuracy 0.7715', 'Total loss: 0.6763', 'for batch', 101)
('GAN loss 0.1997 ', 'GAN acc 0.9883', 'Discriminator loss 0.1656', 'Discriminator accuracy 0.9707', 'Total loss: 0.3653', 'for batch', 102)
('GAN loss 0.1932 ', 'GAN acc 0.9922', 'Discriminator loss 0.3755', 'Discriminator accuracy 0.8301', 'Total loss: 0.5687', 'for batch', 103)
('GAN loss 0.1958 ', 'GAN acc 0.9961', 'Discriminator loss 0.4140', 'Discriminator accuracy 0.8164', 'Total loss: 0.6098', 'for batch', 104)
('GAN loss 0.2014 ', 'GAN acc 0.9922', 'Discriminator loss 0.1693', 'Discriminator accuracy 0.9766', 'Total loss: 0.3707', 'for batch', 105)
('GAN loss 0.1926 ', 'GAN acc 1.0000', 'Discriminator loss 0.3225', 'Discriminator accuracy 0.8809', 'Total loss: 0.5152', 'for batch', 106)
('GAN loss 0.2102 ', 'GAN acc 0.9922', 'Discriminator loss 0.3893', 'Discriminator accuracy 0.8242', 'Total loss: 0.5995', 'for batch', 107)
('GAN loss 0.2044 ', 'GAN acc 0.9961', 'Discriminator loss 0.4355', 'Discriminator accuracy 0.8066', 'Total loss: 0.6399', 'for batch', 108)
('GAN loss 0.1956 ', 'GAN acc 1.0000', 'Discriminator loss 0.3246', 'Discriminator accuracy 0.8691', 'Total loss: 0.5202', 'for batch', 109)
('GAN loss 0.2111 ', 'GAN acc 0.9922', 'Discriminator loss 0.3160', 'Discriminator accuracy 0.8789', 'Total loss: 0.5271', 'for batch', 110)
('GAN loss 0.2164 ', 'GAN acc 0.9922', 'Discriminator loss 0.3420', 'Discriminator accuracy 0.8477', 'Total loss: 0.5584', 'for batch', 111)
('GAN loss 0.2149 ', 'GAN acc 0.9922', 'Discriminator loss 0.2378', 'Discriminator accuracy 0.9336', 'Total loss: 0.4527', 'for batch', 112)
('GAN loss 0.2099 ', 'GAN acc 0.9922', 'Discriminator loss 0.3070', 'Discriminator accuracy 0.8730', 'Total loss: 0.5169', 'for batch', 113)
('GAN loss 0.1925 ', 'GAN acc 0.9961', 'Discriminator loss 0.1175', 'Discriminator accuracy 0.9980', 'Total loss: 0.3100', 'for batch', 114)
('GAN loss 0.2188 ', 'GAN acc 0.9883', 'Discriminator loss 0.5780', 'Discriminator accuracy 0.7148', 'Total loss: 0.7969', 'for batch', 115)
('GAN loss 0.2048 ', 'GAN acc 0.9961', 'Discriminator loss 0.2199', 'Discriminator accuracy 0.9316', 'Total loss: 0.4246', 'for batch', 116)
('GAN loss 0.2057 ', 'GAN acc 0.9922', 'Discriminator loss 0.3040', 'Discriminator accuracy 0.8789', 'Total loss: 0.5096', 'for batch', 117)
('GAN loss 0.2049 ', 'GAN acc 0.9961', 'Discriminator loss 0.2061', 'Discriminator accuracy 0.9375', 'Total loss: 0.4110', 'for batch', 118)
('GAN loss 0.2160 ', 'GAN acc 0.9922', 'Discriminator loss 0.4162', 'Discriminator accuracy 0.8164', 'Total loss: 0.6321', 'for batch', 119)
('GAN loss 0.2160 ', 'GAN acc 0.9922', 'Discriminator loss 0.1971', 'Discriminator accuracy 0.9395', 'Total loss: 0.4131', 'for batch', 120)
('GAN loss 0.2079 ', 'GAN acc 0.9922', 'Discriminator loss 0.1738', 'Discriminator accuracy 0.9434', 'Total loss: 0.3817', 'for batch', 121)
('GAN loss 0.2167 ', 'GAN acc 0.9883', 'Discriminator loss 0.2247', 'Discriminator accuracy 0.9277', 'Total loss: 0.4414', 'for batch', 122)
('GAN loss 0.1821 ', 'GAN acc 0.9961', 'Discriminator loss 0.2158', 'Discriminator accuracy 0.9297', 'Total loss: 0.3979', 'for batch', 123)
('GAN loss 0.1628 ', 'GAN acc 0.9922', 'Discriminator loss 0.1157', 'Discriminator accuracy 0.9902', 'Total loss: 0.2786', 'for batch', 124)
('GAN loss 0.1471 ', 'GAN acc 1.0000', 'Discriminator loss 0.1976', 'Discriminator accuracy 0.9375', 'Total loss: 0.3447', 'for batch', 125)
('GAN loss 0.1874 ', 'GAN acc 0.9922', 'Discriminator loss 0.7252', 'Discriminator accuracy 0.6504', 'Total loss: 0.9126', 'for batch', 126)
('GAN loss 0.2166 ', 'GAN acc 0.9922', 'Discriminator loss 0.1107', 'Discriminator accuracy 0.9922', 'Total loss: 0.3273', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.80038834)
('DISCRIMINATOR_Imagem FAKE=', 0.08289133)
('Discriminator trained', 1, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.276858')
----------------------------------
('Epoch', 39, 'of', 50)
('Number of batches', 128)
('GAN loss 0.2196 ', 'GAN acc 0.9883', 'Discriminator loss 0.2576', 'Discriminator accuracy 0.8906', 'Total loss: 0.4772', 'for batch', 0)
('GAN loss 0.1940 ', 'GAN acc 0.9922', 'Discriminator loss 0.3513', 'Discriminator accuracy 0.8516', 'Total loss: 0.5453', 'for batch', 1)
('GAN loss 0.2048 ', 'GAN acc 0.9883', 'Discriminator loss 0.3746', 'Discriminator accuracy 0.8340', 'Total loss: 0.5793', 'for batch', 2)
('GAN loss 0.2148 ', 'GAN acc 0.9922', 'Discriminator loss 0.3722', 'Discriminator accuracy 0.8203', 'Total loss: 0.5869', 'for batch', 3)
('GAN loss 0.2301 ', 'GAN acc 0.9883', 'Discriminator loss 0.3274', 'Discriminator accuracy 0.8711', 'Total loss: 0.5575', 'for batch', 4)
('GAN loss 0.2144 ', 'GAN acc 0.9961', 'Discriminator loss 0.3197', 'Discriminator accuracy 0.8770', 'Total loss: 0.5341', 'for batch', 5)
('GAN loss 0.2259 ', 'GAN acc 0.9922', 'Discriminator loss 0.3231', 'Discriminator accuracy 0.8750', 'Total loss: 0.5490', 'for batch', 6)
('GAN loss 0.2020 ', 'GAN acc 1.0000', 'Discriminator loss 0.1083', 'Discriminator accuracy 0.9961', 'Total loss: 0.3102', 'for batch', 7)
('GAN loss 0.2020 ', 'GAN acc 0.9922', 'Discriminator loss 0.1821', 'Discriminator accuracy 0.9453', 'Total loss: 0.3840', 'for batch', 8)
('GAN loss 0.1828 ', 'GAN acc 0.9922', 'Discriminator loss 0.1991', 'Discriminator accuracy 0.9375', 'Total loss: 0.3819', 'for batch', 9)
('GAN loss 0.1760 ', 'GAN acc 0.9922', 'Discriminator loss 0.1854', 'Discriminator accuracy 0.9395', 'Total loss: 0.3613', 'for batch', 10)
('GAN loss 0.1748 ', 'GAN acc 0.9922', 'Discriminator loss 0.1502', 'Discriminator accuracy 0.9551', 'Total loss: 0.3250', 'for batch', 11)
('GAN loss 0.1862 ', 'GAN acc 0.9883', 'Discriminator loss 0.4773', 'Discriminator accuracy 0.7988', 'Total loss: 0.6635', 'for batch', 12)
('GAN loss 0.2041 ', 'GAN acc 0.9844', 'Discriminator loss 0.2066', 'Discriminator accuracy 0.9336', 'Total loss: 0.4107', 'for batch', 13)
('GAN loss 0.1816 ', 'GAN acc 0.9883', 'Discriminator loss 0.1479', 'Discriminator accuracy 0.9824', 'Total loss: 0.3295', 'for batch', 14)
('GAN loss 0.1570 ', 'GAN acc 0.9961', 'Discriminator loss 0.2279', 'Discriminator accuracy 0.9277', 'Total loss: 0.3849', 'for batch', 15)
('GAN loss 0.1476 ', 'GAN acc 0.9922', 'Discriminator loss 0.1594', 'Discriminator accuracy 0.9473', 'Total loss: 0.3071', 'for batch', 16)
('GAN loss 0.1465 ', 'GAN acc 0.9961', 'Discriminator loss 0.2202', 'Discriminator accuracy 0.9336', 'Total loss: 0.3667', 'for batch', 17)
('GAN loss 0.1916 ', 'GAN acc 0.9844', 'Discriminator loss 0.5925', 'Discriminator accuracy 0.7539', 'Total loss: 0.7842', 'for batch', 18)
('GAN loss 0.2207 ', 'GAN acc 0.9883', 'Discriminator loss 0.4031', 'Discriminator accuracy 0.8184', 'Total loss: 0.6238', 'for batch', 19)
('GAN loss 0.1866 ', 'GAN acc 0.9961', 'Discriminator loss 0.3039', 'Discriminator accuracy 0.8965', 'Total loss: 0.4905', 'for batch', 20)
('GAN loss 0.2173 ', 'GAN acc 0.9922', 'Discriminator loss 0.5082', 'Discriminator accuracy 0.7637', 'Total loss: 0.7255', 'for batch', 21)
('GAN loss 0.2253 ', 'GAN acc 0.9961', 'Discriminator loss 0.2977', 'Discriminator accuracy 0.8750', 'Total loss: 0.5230', 'for batch', 22)
('GAN loss 0.2232 ', 'GAN acc 0.9961', 'Discriminator loss 0.3086', 'Discriminator accuracy 0.8789', 'Total loss: 0.5319', 'for batch', 23)
('GAN loss 0.2292 ', 'GAN acc 0.9883', 'Discriminator loss 0.1178', 'Discriminator accuracy 0.9980', 'Total loss: 0.3470', 'for batch', 24)
('GAN loss 0.2273 ', 'GAN acc 0.9844', 'Discriminator loss 0.1408', 'Discriminator accuracy 0.9902', 'Total loss: 0.3681', 'for batch', 25)
('GAN loss 0.1940 ', 'GAN acc 0.9961', 'Discriminator loss 0.1538', 'Discriminator accuracy 0.9746', 'Total loss: 0.3478', 'for batch', 26)
('GAN loss 0.1682 ', 'GAN acc 1.0000', 'Discriminator loss 0.2226', 'Discriminator accuracy 0.9297', 'Total loss: 0.3908', 'for batch', 27)
('GAN loss 0.2295 ', 'GAN acc 0.9844', 'Discriminator loss 0.6237', 'Discriminator accuracy 0.7012', 'Total loss: 0.8532', 'for batch', 28)
('GAN loss 0.2605 ', 'GAN acc 0.9844', 'Discriminator loss 0.4039', 'Discriminator accuracy 0.8223', 'Total loss: 0.6645', 'for batch', 29)
('GAN loss 0.1900 ', 'GAN acc 0.9961', 'Discriminator loss 0.3621', 'Discriminator accuracy 0.8496', 'Total loss: 0.5521', 'for batch', 30)
('GAN loss 0.1981 ', 'GAN acc 0.9883', 'Discriminator loss 0.3951', 'Discriminator accuracy 0.8184', 'Total loss: 0.5932', 'for batch', 31)
('GAN loss 0.1819 ', 'GAN acc 0.9961', 'Discriminator loss 0.0876', 'Discriminator accuracy 1.0000', 'Total loss: 0.2695', 'for batch', 32)
('GAN loss 0.1799 ', 'GAN acc 0.9961', 'Discriminator loss 0.2330', 'Discriminator accuracy 0.9180', 'Total loss: 0.4129', 'for batch', 33)
('GAN loss 0.1940 ', 'GAN acc 0.9922', 'Discriminator loss 0.4119', 'Discriminator accuracy 0.8145', 'Total loss: 0.6059', 'for batch', 34)
('GAN loss 0.2219 ', 'GAN acc 0.9961', 'Discriminator loss 0.3261', 'Discriminator accuracy 0.8613', 'Total loss: 0.5480', 'for batch', 35)
('GAN loss 0.2384 ', 'GAN acc 0.9922', 'Discriminator loss 0.3468', 'Discriminator accuracy 0.8633', 'Total loss: 0.5852', 'for batch', 36)
('GAN loss 0.2391 ', 'GAN acc 0.9961', 'Discriminator loss 0.4202', 'Discriminator accuracy 0.8047', 'Total loss: 0.6593', 'for batch', 37)
('GAN loss 0.2273 ', 'GAN acc 0.9883', 'Discriminator loss 0.1637', 'Discriminator accuracy 0.9863', 'Total loss: 0.3910', 'for batch', 38)
('GAN loss 0.1915 ', 'GAN acc 0.9922', 'Discriminator loss 0.1062', 'Discriminator accuracy 1.0000', 'Total loss: 0.2976', 'for batch', 39)
('GAN loss 0.1823 ', 'GAN acc 0.9922', 'Discriminator loss 0.2116', 'Discriminator accuracy 0.9375', 'Total loss: 0.3939', 'for batch', 40)
('GAN loss 0.1751 ', 'GAN acc 0.9922', 'Discriminator loss 0.2168', 'Discriminator accuracy 0.9199', 'Total loss: 0.3919', 'for batch', 41)
('GAN loss 0.2186 ', 'GAN acc 0.9922', 'Discriminator loss 0.4750', 'Discriminator accuracy 0.7949', 'Total loss: 0.6936', 'for batch', 42)
('GAN loss 0.2341 ', 'GAN acc 0.9883', 'Discriminator loss 0.2363', 'Discriminator accuracy 0.9316', 'Total loss: 0.4704', 'for batch', 43)
('GAN loss 0.2500 ', 'GAN acc 0.9844', 'Discriminator loss 0.5460', 'Discriminator accuracy 0.7539', 'Total loss: 0.7960', 'for batch', 44)
('GAN loss 0.2264 ', 'GAN acc 0.9961', 'Discriminator loss 0.3964', 'Discriminator accuracy 0.8301', 'Total loss: 0.6228', 'for batch', 45)
('GAN loss 0.2374 ', 'GAN acc 0.9922', 'Discriminator loss 0.3940', 'Discriminator accuracy 0.8145', 'Total loss: 0.6314', 'for batch', 46)
('GAN loss 0.2404 ', 'GAN acc 0.9961', 'Discriminator loss 0.3556', 'Discriminator accuracy 0.8652', 'Total loss: 0.5960', 'for batch', 47)
('GAN loss 0.2571 ', 'GAN acc 0.9922', 'Discriminator loss 0.4035', 'Discriminator accuracy 0.8164', 'Total loss: 0.6606', 'for batch', 48)
('GAN loss 0.2459 ', 'GAN acc 0.9922', 'Discriminator loss 0.3809', 'Discriminator accuracy 0.8164', 'Total loss: 0.6268', 'for batch', 49)
('GAN loss 0.2898 ', 'GAN acc 0.9922', 'Discriminator loss 0.6850', 'Discriminator accuracy 0.6328', 'Total loss: 0.9748', 'for batch', 50)
('GAN loss 0.2964 ', 'GAN acc 0.9922', 'Discriminator loss 0.4910', 'Discriminator accuracy 0.7520', 'Total loss: 0.7874', 'for batch', 51)
('GAN loss 0.3149 ', 'GAN acc 0.9922', 'Discriminator loss 0.3259', 'Discriminator accuracy 0.8789', 'Total loss: 0.6408', 'for batch', 52)
('GAN loss 0.2945 ', 'GAN acc 0.9922', 'Discriminator loss 0.2589', 'Discriminator accuracy 0.9316', 'Total loss: 0.5534', 'for batch', 53)
('GAN loss 0.2489 ', 'GAN acc 0.9961', 'Discriminator loss 0.1755', 'Discriminator accuracy 0.9922', 'Total loss: 0.4244', 'for batch', 54)
('GAN loss 0.2322 ', 'GAN acc 0.9961', 'Discriminator loss 0.2164', 'Discriminator accuracy 0.9375', 'Total loss: 0.4485', 'for batch', 55)
('GAN loss 0.2476 ', 'GAN acc 0.9922', 'Discriminator loss 0.6384', 'Discriminator accuracy 0.6660', 'Total loss: 0.8860', 'for batch', 56)
('GAN loss 0.2488 ', 'GAN acc 0.9961', 'Discriminator loss 0.3350', 'Discriminator accuracy 0.8672', 'Total loss: 0.5837', 'for batch', 57)
('GAN loss 0.2403 ', 'GAN acc 0.9961', 'Discriminator loss 0.2537', 'Discriminator accuracy 0.9238', 'Total loss: 0.4940', 'for batch', 58)
('GAN loss 0.2337 ', 'GAN acc 0.9961', 'Discriminator loss 0.2476', 'Discriminator accuracy 0.9180', 'Total loss: 0.4812', 'for batch', 59)
('GAN loss 0.2433 ', 'GAN acc 0.9922', 'Discriminator loss 0.3159', 'Discriminator accuracy 0.8750', 'Total loss: 0.5593', 'for batch', 60)
('GAN loss 0.2352 ', 'GAN acc 0.9883', 'Discriminator loss 0.4104', 'Discriminator accuracy 0.8164', 'Total loss: 0.6456', 'for batch', 61)
('GAN loss 0.2840 ', 'GAN acc 0.9844', 'Discriminator loss 0.5191', 'Discriminator accuracy 0.7578', 'Total loss: 0.8031', 'for batch', 62)
('GAN loss 0.2796 ', 'GAN acc 0.9883', 'Discriminator loss 0.3092', 'Discriminator accuracy 0.8789', 'Total loss: 0.5888', 'for batch', 63)
('GAN loss 0.2931 ', 'GAN acc 0.9922', 'Discriminator loss 0.3998', 'Discriminator accuracy 0.8086', 'Total loss: 0.6928', 'for batch', 64)
('GAN loss 0.2737 ', 'GAN acc 0.9961', 'Discriminator loss 0.2371', 'Discriminator accuracy 0.9180', 'Total loss: 0.5108', 'for batch', 65)
('GAN loss 0.2466 ', 'GAN acc 0.9961', 'Discriminator loss 0.2709', 'Discriminator accuracy 0.8926', 'Total loss: 0.5175', 'for batch', 66)
('GAN loss 0.2398 ', 'GAN acc 0.9922', 'Discriminator loss 0.2403', 'Discriminator accuracy 0.9316', 'Total loss: 0.4802', 'for batch', 67)
('GAN loss 0.2136 ', 'GAN acc 0.9805', 'Discriminator loss 0.0971', 'Discriminator accuracy 0.9961', 'Total loss: 0.3107', 'for batch', 68)
('GAN loss 0.2315 ', 'GAN acc 0.9883', 'Discriminator loss 0.4126', 'Discriminator accuracy 0.8184', 'Total loss: 0.6440', 'for batch', 69)
('GAN loss 0.2040 ', 'GAN acc 0.9922', 'Discriminator loss 0.2174', 'Discriminator accuracy 0.9277', 'Total loss: 0.4214', 'for batch', 70)
('GAN loss 0.2151 ', 'GAN acc 0.9883', 'Discriminator loss 0.1794', 'Discriminator accuracy 0.9395', 'Total loss: 0.3946', 'for batch', 71)
('GAN loss 0.2019 ', 'GAN acc 0.9922', 'Discriminator loss 0.3204', 'Discriminator accuracy 0.8770', 'Total loss: 0.5223', 'for batch', 72)
('GAN loss 0.2147 ', 'GAN acc 0.9922', 'Discriminator loss 0.3135', 'Discriminator accuracy 0.8730', 'Total loss: 0.5282', 'for batch', 73)
('GAN loss 0.2078 ', 'GAN acc 0.9922', 'Discriminator loss 0.3339', 'Discriminator accuracy 0.8691', 'Total loss: 0.5417', 'for batch', 74)
('GAN loss 0.2110 ', 'GAN acc 0.9805', 'Discriminator loss 0.3008', 'Discriminator accuracy 0.8730', 'Total loss: 0.5117', 'for batch', 75)
('GAN loss 0.1805 ', 'GAN acc 0.9961', 'Discriminator loss 0.1993', 'Discriminator accuracy 0.9531', 'Total loss: 0.3798', 'for batch', 76)
('GAN loss 0.1604 ', 'GAN acc 0.9883', 'Discriminator loss 0.1318', 'Discriminator accuracy 0.9688', 'Total loss: 0.2922', 'for batch', 77)
('GAN loss 0.1611 ', 'GAN acc 0.9922', 'Discriminator loss 0.3441', 'Discriminator accuracy 0.8730', 'Total loss: 0.5052', 'for batch', 78)
('GAN loss 0.1843 ', 'GAN acc 0.9922', 'Discriminator loss 0.4653', 'Discriminator accuracy 0.8164', 'Total loss: 0.6495', 'for batch', 79)
('GAN loss 0.1932 ', 'GAN acc 0.9961', 'Discriminator loss 0.3647', 'Discriminator accuracy 0.8613', 'Total loss: 0.5579', 'for batch', 80)
('GAN loss 0.2396 ', 'GAN acc 0.9922', 'Discriminator loss 0.4991', 'Discriminator accuracy 0.7578', 'Total loss: 0.7387', 'for batch', 81)
('GAN loss 0.2676 ', 'GAN acc 0.9883', 'Discriminator loss 0.4620', 'Discriminator accuracy 0.7539', 'Total loss: 0.7296', 'for batch', 82)
('GAN loss 0.2153 ', 'GAN acc 0.9961', 'Discriminator loss 0.3858', 'Discriminator accuracy 0.8262', 'Total loss: 0.6010', 'for batch', 83)
('GAN loss 0.2227 ', 'GAN acc 0.9961', 'Discriminator loss 0.3180', 'Discriminator accuracy 0.8770', 'Total loss: 0.5407', 'for batch', 84)
('GAN loss 0.2362 ', 'GAN acc 0.9922', 'Discriminator loss 0.4168', 'Discriminator accuracy 0.8184', 'Total loss: 0.6530', 'for batch', 85)
('GAN loss 0.2374 ', 'GAN acc 0.9922', 'Discriminator loss 0.3113', 'Discriminator accuracy 0.8789', 'Total loss: 0.5487', 'for batch', 86)
('GAN loss 0.2345 ', 'GAN acc 0.9922', 'Discriminator loss 0.2238', 'Discriminator accuracy 0.9375', 'Total loss: 0.4582', 'for batch', 87)
('GAN loss 0.2429 ', 'GAN acc 0.9922', 'Discriminator loss 0.4102', 'Discriminator accuracy 0.8184', 'Total loss: 0.6531', 'for batch', 88)
('GAN loss 0.2579 ', 'GAN acc 0.9961', 'Discriminator loss 0.4046', 'Discriminator accuracy 0.8184', 'Total loss: 0.6625', 'for batch', 89)
('GAN loss 0.2637 ', 'GAN acc 0.9922', 'Discriminator loss 0.2123', 'Discriminator accuracy 0.9375', 'Total loss: 0.4761', 'for batch', 90)
('GAN loss 0.2667 ', 'GAN acc 0.9922', 'Discriminator loss 0.2840', 'Discriminator accuracy 0.8828', 'Total loss: 0.5507', 'for batch', 91)
('GAN loss 0.2575 ', 'GAN acc 0.9961', 'Discriminator loss 0.3446', 'Discriminator accuracy 0.8594', 'Total loss: 0.6021', 'for batch', 92)
('GAN loss 0.2514 ', 'GAN acc 0.9922', 'Discriminator loss 0.3404', 'Discriminator accuracy 0.8555', 'Total loss: 0.5918', 'for batch', 93)
('GAN loss 0.2244 ', 'GAN acc 0.9961', 'Discriminator loss 0.2539', 'Discriminator accuracy 0.9160', 'Total loss: 0.4783', 'for batch', 94)
('GAN loss 0.2509 ', 'GAN acc 0.9883', 'Discriminator loss 0.2995', 'Discriminator accuracy 0.8770', 'Total loss: 0.5504', 'for batch', 95)
('GAN loss 0.2089 ', 'GAN acc 0.9961', 'Discriminator loss 0.2869', 'Discriminator accuracy 0.8945', 'Total loss: 0.4958', 'for batch', 96)
('GAN loss 0.2257 ', 'GAN acc 0.9883', 'Discriminator loss 0.4990', 'Discriminator accuracy 0.7578', 'Total loss: 0.7247', 'for batch', 97)
('GAN loss 0.2259 ', 'GAN acc 0.9922', 'Discriminator loss 0.3279', 'Discriminator accuracy 0.8711', 'Total loss: 0.5539', 'for batch', 98)
('GAN loss 0.2186 ', 'GAN acc 0.9883', 'Discriminator loss 0.2680', 'Discriminator accuracy 0.9355', 'Total loss: 0.4866', 'for batch', 99)
('GAN loss 0.2082 ', 'GAN acc 0.9961', 'Discriminator loss 0.2147', 'Discriminator accuracy 0.9355', 'Total loss: 0.4229', 'for batch', 100)
('GAN loss 0.2157 ', 'GAN acc 0.9922', 'Discriminator loss 0.5240', 'Discriminator accuracy 0.7578', 'Total loss: 0.7396', 'for batch', 101)
('GAN loss 0.2344 ', 'GAN acc 0.9844', 'Discriminator loss 0.2151', 'Discriminator accuracy 0.9375', 'Total loss: 0.4495', 'for batch', 102)
('GAN loss 0.2339 ', 'GAN acc 0.9883', 'Discriminator loss 0.4125', 'Discriminator accuracy 0.8184', 'Total loss: 0.6464', 'for batch', 103)
('GAN loss 0.2527 ', 'GAN acc 0.9922', 'Discriminator loss 0.3699', 'Discriminator accuracy 0.8262', 'Total loss: 0.6226', 'for batch', 104)
('GAN loss 0.2386 ', 'GAN acc 0.9922', 'Discriminator loss 0.2208', 'Discriminator accuracy 0.9258', 'Total loss: 0.4594', 'for batch', 105)
('GAN loss 0.2148 ', 'GAN acc 0.9961', 'Discriminator loss 0.2606', 'Discriminator accuracy 0.9004', 'Total loss: 0.4754', 'for batch', 106)
('GAN loss 0.2309 ', 'GAN acc 0.9883', 'Discriminator loss 0.3417', 'Discriminator accuracy 0.8281', 'Total loss: 0.5725', 'for batch', 107)
('GAN loss 0.2189 ', 'GAN acc 0.9922', 'Discriminator loss 0.2654', 'Discriminator accuracy 0.9160', 'Total loss: 0.4843', 'for batch', 108)
('GAN loss 0.2063 ', 'GAN acc 0.9961', 'Discriminator loss 0.2719', 'Discriminator accuracy 0.8789', 'Total loss: 0.4782', 'for batch', 109)
('GAN loss 0.2016 ', 'GAN acc 0.9922', 'Discriminator loss 0.2639', 'Discriminator accuracy 0.9238', 'Total loss: 0.4655', 'for batch', 110)
('GAN loss 0.2068 ', 'GAN acc 0.9922', 'Discriminator loss 0.2896', 'Discriminator accuracy 0.8770', 'Total loss: 0.4964', 'for batch', 111)
('GAN loss 0.1923 ', 'GAN acc 0.9922', 'Discriminator loss 0.2432', 'Discriminator accuracy 0.9277', 'Total loss: 0.4355', 'for batch', 112)
('GAN loss 0.1901 ', 'GAN acc 0.9922', 'Discriminator loss 0.2931', 'Discriminator accuracy 0.8691', 'Total loss: 0.4832', 'for batch', 113)
('GAN loss 0.1730 ', 'GAN acc 0.9961', 'Discriminator loss 0.1707', 'Discriminator accuracy 0.9707', 'Total loss: 0.3437', 'for batch', 114)
('GAN loss 0.1719 ', 'GAN acc 0.9922', 'Discriminator loss 0.3233', 'Discriminator accuracy 0.8750', 'Total loss: 0.4952', 'for batch', 115)
('GAN loss 0.1677 ', 'GAN acc 0.9961', 'Discriminator loss 0.2544', 'Discriminator accuracy 0.8887', 'Total loss: 0.4221', 'for batch', 116)
('GAN loss 0.1966 ', 'GAN acc 0.9922', 'Discriminator loss 0.0892', 'Discriminator accuracy 0.9961', 'Total loss: 0.2859', 'for batch', 117)
('GAN loss 0.1572 ', 'GAN acc 0.9961', 'Discriminator loss 0.2354', 'Discriminator accuracy 0.9297', 'Total loss: 0.3926', 'for batch', 118)
('GAN loss 0.1789 ', 'GAN acc 0.9922', 'Discriminator loss 0.4283', 'Discriminator accuracy 0.8184', 'Total loss: 0.6072', 'for batch', 119)
('GAN loss 0.2084 ', 'GAN acc 0.9883', 'Discriminator loss 0.3905', 'Discriminator accuracy 0.8438', 'Total loss: 0.5989', 'for batch', 120)
('GAN loss 0.1770 ', 'GAN acc 0.9961', 'Discriminator loss 0.4618', 'Discriminator accuracy 0.7754', 'Total loss: 0.6389', 'for batch', 121)
('GAN loss 0.1877 ', 'GAN acc 0.9883', 'Discriminator loss 0.2823', 'Discriminator accuracy 0.8965', 'Total loss: 0.4699', 'for batch', 122)
('GAN loss 0.1759 ', 'GAN acc 0.9922', 'Discriminator loss 0.3282', 'Discriminator accuracy 0.8750', 'Total loss: 0.5041', 'for batch', 123)
('GAN loss 0.1792 ', 'GAN acc 0.9883', 'Discriminator loss 0.1565', 'Discriminator accuracy 0.9531', 'Total loss: 0.3357', 'for batch', 124)
('GAN loss 0.1761 ', 'GAN acc 0.9922', 'Discriminator loss 0.3052', 'Discriminator accuracy 0.8789', 'Total loss: 0.4813', 'for batch', 125)
('GAN loss 0.1937 ', 'GAN acc 0.9922', 'Discriminator loss 0.5151', 'Discriminator accuracy 0.7715', 'Total loss: 0.7088', 'for batch', 126)
('GAN loss 0.1817 ', 'GAN acc 0.9922', 'Discriminator loss 0.2430', 'Discriminator accuracy 0.9395', 'Total loss: 0.4247', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.82254827)
('DISCRIMINATOR_Imagem FAKE=', 0.095151596)
('Discriminator trained', 1, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.310895')
----------------------------------
('Epoch', 40, 'of', 50)
('Number of batches', 128)
('GAN loss 0.1936 ', 'GAN acc 0.9883', 'Discriminator loss 0.2124', 'Discriminator accuracy 0.9336', 'Total loss: 0.4060', 'for batch', 0)
('GAN loss 0.1844 ', 'GAN acc 0.9922', 'Discriminator loss 0.2587', 'Discriminator accuracy 0.8906', 'Total loss: 0.4431', 'for batch', 1)
('GAN loss 0.1777 ', 'GAN acc 0.9883', 'Discriminator loss 0.3128', 'Discriminator accuracy 0.8691', 'Total loss: 0.4905', 'for batch', 2)
('GAN loss 0.1553 ', 'GAN acc 0.9961', 'Discriminator loss 0.2174', 'Discriminator accuracy 0.9316', 'Total loss: 0.3727', 'for batch', 3)
('GAN loss 0.1701 ', 'GAN acc 0.9883', 'Discriminator loss 0.3151', 'Discriminator accuracy 0.8770', 'Total loss: 0.4852', 'for batch', 4)
('GAN loss 0.1584 ', 'GAN acc 0.9961', 'Discriminator loss 0.2003', 'Discriminator accuracy 0.9375', 'Total loss: 0.3587', 'for batch', 5)
('GAN loss 0.1484 ', 'GAN acc 0.9961', 'Discriminator loss 0.1795', 'Discriminator accuracy 0.9355', 'Total loss: 0.3279', 'for batch', 6)
('GAN loss 0.1361 ', 'GAN acc 0.9961', 'Discriminator loss 0.0869', 'Discriminator accuracy 0.9980', 'Total loss: 0.2230', 'for batch', 7)
('GAN loss 0.1277 ', 'GAN acc 0.9961', 'Discriminator loss 0.0761', 'Discriminator accuracy 1.0000', 'Total loss: 0.2038', 'for batch', 8)
('GAN loss 0.1313 ', 'GAN acc 0.9922', 'Discriminator loss 0.1902', 'Discriminator accuracy 0.9395', 'Total loss: 0.3216', 'for batch', 9)
('GAN loss 0.1127 ', 'GAN acc 0.9922', 'Discriminator loss 0.0616', 'Discriminator accuracy 1.0000', 'Total loss: 0.1743', 'for batch', 10)
('GAN loss 0.1190 ', 'GAN acc 0.9961', 'Discriminator loss 0.3271', 'Discriminator accuracy 0.8730', 'Total loss: 0.4461', 'for batch', 11)
('GAN loss 0.1386 ', 'GAN acc 1.0000', 'Discriminator loss 0.2203', 'Discriminator accuracy 0.9199', 'Total loss: 0.3590', 'for batch', 12)
('GAN loss 0.1388 ', 'GAN acc 0.9883', 'Discriminator loss 0.2786', 'Discriminator accuracy 0.8926', 'Total loss: 0.4174', 'for batch', 13)
('GAN loss 0.1096 ', 'GAN acc 0.9961', 'Discriminator loss 0.1459', 'Discriminator accuracy 0.9434', 'Total loss: 0.2555', 'for batch', 14)
('GAN loss 0.1105 ', 'GAN acc 0.9961', 'Discriminator loss 0.1747', 'Discriminator accuracy 0.9336', 'Total loss: 0.2852', 'for batch', 15)
('GAN loss 0.1124 ', 'GAN acc 0.9922', 'Discriminator loss 0.1405', 'Discriminator accuracy 0.9453', 'Total loss: 0.2529', 'for batch', 16)
('GAN loss 0.1044 ', 'GAN acc 0.9961', 'Discriminator loss 0.2214', 'Discriminator accuracy 0.9238', 'Total loss: 0.3259', 'for batch', 17)
('GAN loss 0.1632 ', 'GAN acc 0.9844', 'Discriminator loss 0.6357', 'Discriminator accuracy 0.7070', 'Total loss: 0.7989', 'for batch', 18)
('GAN loss 0.1193 ', 'GAN acc 0.9961', 'Discriminator loss 0.3705', 'Discriminator accuracy 0.8105', 'Total loss: 0.4898', 'for batch', 19)
('GAN loss 0.1165 ', 'GAN acc 0.9922', 'Discriminator loss 0.0542', 'Discriminator accuracy 1.0000', 'Total loss: 0.1707', 'for batch', 20)
('GAN loss 0.1181 ', 'GAN acc 0.9961', 'Discriminator loss 0.3456', 'Discriminator accuracy 0.8711', 'Total loss: 0.4637', 'for batch', 21)
('GAN loss 0.1232 ', 'GAN acc 0.9961', 'Discriminator loss 0.2381', 'Discriminator accuracy 0.9121', 'Total loss: 0.3613', 'for batch', 22)
('GAN loss 0.1408 ', 'GAN acc 0.9922', 'Discriminator loss 0.4099', 'Discriminator accuracy 0.8262', 'Total loss: 0.5507', 'for batch', 23)
('GAN loss 0.1629 ', 'GAN acc 0.9883', 'Discriminator loss 0.2528', 'Discriminator accuracy 0.8984', 'Total loss: 0.4156', 'for batch', 24)
('GAN loss 0.2250 ', 'GAN acc 0.9844', 'Discriminator loss 0.1735', 'Discriminator accuracy 0.9355', 'Total loss: 0.3985', 'for batch', 25)
('GAN loss 0.1755 ', 'GAN acc 0.9922', 'Discriminator loss 0.2229', 'Discriminator accuracy 0.9160', 'Total loss: 0.3984', 'for batch', 26)
('GAN loss 0.1850 ', 'GAN acc 0.9922', 'Discriminator loss 0.2845', 'Discriminator accuracy 0.8984', 'Total loss: 0.4695', 'for batch', 27)
('GAN loss 0.1713 ', 'GAN acc 0.9883', 'Discriminator loss 0.2214', 'Discriminator accuracy 0.9277', 'Total loss: 0.3927', 'for batch', 28)
('GAN loss 0.1479 ', 'GAN acc 0.9844', 'Discriminator loss 0.3025', 'Discriminator accuracy 0.8770', 'Total loss: 0.4504', 'for batch', 29)
('GAN loss 0.1447 ', 'GAN acc 0.9961', 'Discriminator loss 0.3285', 'Discriminator accuracy 0.8770', 'Total loss: 0.4732', 'for batch', 30)
('GAN loss 0.1729 ', 'GAN acc 0.9883', 'Discriminator loss 0.4578', 'Discriminator accuracy 0.8066', 'Total loss: 0.6307', 'for batch', 31)
('GAN loss 0.1536 ', 'GAN acc 0.9961', 'Discriminator loss 0.1979', 'Discriminator accuracy 0.9434', 'Total loss: 0.3515', 'for batch', 32)
('GAN loss 0.1571 ', 'GAN acc 0.9922', 'Discriminator loss 0.1903', 'Discriminator accuracy 0.9355', 'Total loss: 0.3474', 'for batch', 33)
('GAN loss 0.1581 ', 'GAN acc 0.9883', 'Discriminator loss 0.2120', 'Discriminator accuracy 0.9355', 'Total loss: 0.3701', 'for batch', 34)
('GAN loss 0.1523 ', 'GAN acc 0.9922', 'Discriminator loss 0.0755', 'Discriminator accuracy 0.9980', 'Total loss: 0.2278', 'for batch', 35)
('GAN loss 0.1515 ', 'GAN acc 0.9922', 'Discriminator loss 0.1606', 'Discriminator accuracy 0.9375', 'Total loss: 0.3121', 'for batch', 36)
('GAN loss 0.1509 ', 'GAN acc 0.9961', 'Discriminator loss 0.0767', 'Discriminator accuracy 0.9961', 'Total loss: 0.2275', 'for batch', 37)
('GAN loss 0.1580 ', 'GAN acc 0.9883', 'Discriminator loss 0.0681', 'Discriminator accuracy 0.9961', 'Total loss: 0.2262', 'for batch', 38)
('GAN loss 0.1565 ', 'GAN acc 0.9844', 'Discriminator loss 0.0537', 'Discriminator accuracy 1.0000', 'Total loss: 0.2102', 'for batch', 39)
('GAN loss 0.0999 ', 'GAN acc 0.9922', 'Discriminator loss 0.0813', 'Discriminator accuracy 0.9863', 'Total loss: 0.1813', 'for batch', 40)
('GAN loss 0.1038 ', 'GAN acc 0.9922', 'Discriminator loss 0.0580', 'Discriminator accuracy 0.9961', 'Total loss: 0.1618', 'for batch', 41)
('GAN loss 0.1121 ', 'GAN acc 0.9922', 'Discriminator loss 0.3158', 'Discriminator accuracy 0.8770', 'Total loss: 0.4279', 'for batch', 42)
('GAN loss 0.0952 ', 'GAN acc 0.9922', 'Discriminator loss 0.1099', 'Discriminator accuracy 0.9824', 'Total loss: 0.2051', 'for batch', 43)
('GAN loss 0.1520 ', 'GAN acc 0.9844', 'Discriminator loss 0.6322', 'Discriminator accuracy 0.7559', 'Total loss: 0.7842', 'for batch', 44)
('GAN loss 0.1265 ', 'GAN acc 0.9961', 'Discriminator loss 0.3143', 'Discriminator accuracy 0.8945', 'Total loss: 0.4408', 'for batch', 45)
('GAN loss 0.1098 ', 'GAN acc 0.9922', 'Discriminator loss 0.1122', 'Discriminator accuracy 0.9922', 'Total loss: 0.2220', 'for batch', 46)
('GAN loss 0.1040 ', 'GAN acc 0.9961', 'Discriminator loss 0.1770', 'Discriminator accuracy 0.9375', 'Total loss: 0.2809', 'for batch', 47)
('GAN loss 0.1031 ', 'GAN acc 0.9961', 'Discriminator loss 0.2028', 'Discriminator accuracy 0.8945', 'Total loss: 0.3059', 'for batch', 48)
('GAN loss 0.1033 ', 'GAN acc 0.9922', 'Discriminator loss 0.0679', 'Discriminator accuracy 0.9922', 'Total loss: 0.1711', 'for batch', 49)
('GAN loss 0.1143 ', 'GAN acc 0.9922', 'Discriminator loss 0.2822', 'Discriminator accuracy 0.8516', 'Total loss: 0.3965', 'for batch', 50)
('GAN loss 0.0966 ', 'GAN acc 0.9961', 'Discriminator loss 0.2901', 'Discriminator accuracy 0.8477', 'Total loss: 0.3867', 'for batch', 51)
('GAN loss 0.0995 ', 'GAN acc 0.9922', 'Discriminator loss 0.0396', 'Discriminator accuracy 1.0000', 'Total loss: 0.1391', 'for batch', 52)
('GAN loss 0.0903 ', 'GAN acc 0.9922', 'Discriminator loss 0.0878', 'Discriminator accuracy 0.9590', 'Total loss: 0.1780', 'for batch', 53)
('GAN loss 0.0817 ', 'GAN acc 0.9922', 'Discriminator loss 0.0371', 'Discriminator accuracy 1.0000', 'Total loss: 0.1188', 'for batch', 54)
('GAN loss 0.0670 ', 'GAN acc 0.9961', 'Discriminator loss 0.0334', 'Discriminator accuracy 1.0000', 'Total loss: 0.1004', 'for batch', 55)
('GAN loss 0.0789 ', 'GAN acc 0.9961', 'Discriminator loss 0.3824', 'Discriminator accuracy 0.8789', 'Total loss: 0.4613', 'for batch', 56)
('GAN loss 0.0791 ', 'GAN acc 0.9961', 'Discriminator loss 0.0317', 'Discriminator accuracy 1.0000', 'Total loss: 0.1108', 'for batch', 57)
('GAN loss 0.0665 ', 'GAN acc 1.0000', 'Discriminator loss 0.0320', 'Discriminator accuracy 1.0000', 'Total loss: 0.0985', 'for batch', 58)
('GAN loss 0.1048 ', 'GAN acc 0.9883', 'Discriminator loss 0.0381', 'Discriminator accuracy 0.9961', 'Total loss: 0.1429', 'for batch', 59)
('GAN loss 0.0788 ', 'GAN acc 0.9961', 'Discriminator loss 0.3907', 'Discriminator accuracy 0.8789', 'Total loss: 0.4695', 'for batch', 60)
('GAN loss 0.1176 ', 'GAN acc 0.9883', 'Discriminator loss 0.5585', 'Discriminator accuracy 0.8164', 'Total loss: 0.6761', 'for batch', 61)
('GAN loss 0.1418 ', 'GAN acc 0.9844', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.7578', 'Total loss: 0.8176', 'for batch', 62)
('GAN loss 0.1902 ', 'GAN acc 0.9883', 'Discriminator loss 0.4623', 'Discriminator accuracy 0.8184', 'Total loss: 0.6525', 'for batch', 63)
('GAN loss 0.2243 ', 'GAN acc 0.9922', 'Discriminator loss 0.1825', 'Discriminator accuracy 0.9297', 'Total loss: 0.4068', 'for batch', 64)
('GAN loss 0.2098 ', 'GAN acc 0.9883', 'Discriminator loss 0.1983', 'Discriminator accuracy 0.9355', 'Total loss: 0.4081', 'for batch', 65)
('GAN loss 0.1966 ', 'GAN acc 0.9922', 'Discriminator loss 0.1344', 'Discriminator accuracy 0.9844', 'Total loss: 0.3310', 'for batch', 66)
('GAN loss 0.1879 ', 'GAN acc 0.9883', 'Discriminator loss 0.1636', 'Discriminator accuracy 0.9707', 'Total loss: 0.3515', 'for batch', 67)
('GAN loss 0.1526 ', 'GAN acc 0.9922', 'Discriminator loss 0.0858', 'Discriminator accuracy 1.0000', 'Total loss: 0.2384', 'for batch', 68)
('GAN loss 0.1509 ', 'GAN acc 0.9922', 'Discriminator loss 0.4202', 'Discriminator accuracy 0.8184', 'Total loss: 0.5711', 'for batch', 69)
('GAN loss 0.1516 ', 'GAN acc 0.9922', 'Discriminator loss 0.1080', 'Discriminator accuracy 0.9961', 'Total loss: 0.2596', 'for batch', 70)
('GAN loss 0.1455 ', 'GAN acc 0.9883', 'Discriminator loss 0.0866', 'Discriminator accuracy 0.9980', 'Total loss: 0.2321', 'for batch', 71)
('GAN loss 0.1436 ', 'GAN acc 0.9922', 'Discriminator loss 0.1574', 'Discriminator accuracy 0.9355', 'Total loss: 0.3011', 'for batch', 72)
('GAN loss 0.1523 ', 'GAN acc 0.9922', 'Discriminator loss 0.1740', 'Discriminator accuracy 0.9395', 'Total loss: 0.3263', 'for batch', 73)
('GAN loss 0.1253 ', 'GAN acc 0.9922', 'Discriminator loss 0.1844', 'Discriminator accuracy 0.9512', 'Total loss: 0.3097', 'for batch', 74)
('GAN loss 0.1157 ', 'GAN acc 0.9883', 'Discriminator loss 0.1202', 'Discriminator accuracy 0.9844', 'Total loss: 0.2360', 'for batch', 75)
('GAN loss 0.1044 ', 'GAN acc 0.9961', 'Discriminator loss 0.0637', 'Discriminator accuracy 0.9980', 'Total loss: 0.1681', 'for batch', 76)
('GAN loss 0.1016 ', 'GAN acc 0.9961', 'Discriminator loss 0.0501', 'Discriminator accuracy 0.9980', 'Total loss: 0.1517', 'for batch', 77)
('GAN loss 0.0932 ', 'GAN acc 0.9922', 'Discriminator loss 0.1959', 'Discriminator accuracy 0.9395', 'Total loss: 0.2891', 'for batch', 78)
('GAN loss 0.0976 ', 'GAN acc 0.9922', 'Discriminator loss 0.3504', 'Discriminator accuracy 0.8789', 'Total loss: 0.4480', 'for batch', 79)
('GAN loss 0.0922 ', 'GAN acc 0.9961', 'Discriminator loss 0.0627', 'Discriminator accuracy 0.9922', 'Total loss: 0.1550', 'for batch', 80)
('GAN loss 0.0999 ', 'GAN acc 0.9961', 'Discriminator loss 0.1922', 'Discriminator accuracy 0.9062', 'Total loss: 0.2921', 'for batch', 81)
('GAN loss 0.1260 ', 'GAN acc 0.9883', 'Discriminator loss 0.1108', 'Discriminator accuracy 0.9941', 'Total loss: 0.2368', 'for batch', 82)
('GAN loss 0.0967 ', 'GAN acc 0.9922', 'Discriminator loss 0.1460', 'Discriminator accuracy 0.9727', 'Total loss: 0.2427', 'for batch', 83)
('GAN loss 0.0863 ', 'GAN acc 0.9961', 'Discriminator loss 0.2102', 'Discriminator accuracy 0.9375', 'Total loss: 0.2965', 'for batch', 84)
('GAN loss 0.0981 ', 'GAN acc 0.9883', 'Discriminator loss 0.2230', 'Discriminator accuracy 0.9277', 'Total loss: 0.3211', 'for batch', 85)
('GAN loss 0.0966 ', 'GAN acc 0.9961', 'Discriminator loss 0.0450', 'Discriminator accuracy 1.0000', 'Total loss: 0.1416', 'for batch', 86)
('GAN loss 0.0934 ', 'GAN acc 0.9922', 'Discriminator loss 0.0450', 'Discriminator accuracy 1.0000', 'Total loss: 0.1385', 'for batch', 87)
('GAN loss 0.0938 ', 'GAN acc 0.9922', 'Discriminator loss 0.1354', 'Discriminator accuracy 0.9395', 'Total loss: 0.2292', 'for batch', 88)
('GAN loss 0.1008 ', 'GAN acc 0.9883', 'Discriminator loss 0.0490', 'Discriminator accuracy 0.9980', 'Total loss: 0.1498', 'for batch', 89)
('GAN loss 0.0897 ', 'GAN acc 0.9922', 'Discriminator loss 0.0494', 'Discriminator accuracy 0.9961', 'Total loss: 0.1391', 'for batch', 90)
('GAN loss 0.0657 ', 'GAN acc 1.0000', 'Discriminator loss 0.0789', 'Discriminator accuracy 0.9766', 'Total loss: 0.1446', 'for batch', 91)
('GAN loss 0.0700 ', 'GAN acc 0.9961', 'Discriminator loss 0.0915', 'Discriminator accuracy 0.9707', 'Total loss: 0.1615', 'for batch', 92)
('GAN loss 0.0783 ', 'GAN acc 0.9922', 'Discriminator loss 0.0547', 'Discriminator accuracy 0.9961', 'Total loss: 0.1330', 'for batch', 93)
('GAN loss 0.0663 ', 'GAN acc 0.9961', 'Discriminator loss 0.0452', 'Discriminator accuracy 0.9941', 'Total loss: 0.1115', 'for batch', 94)
('GAN loss 0.0616 ', 'GAN acc 0.9922', 'Discriminator loss 0.0381', 'Discriminator accuracy 0.9961', 'Total loss: 0.0997', 'for batch', 95)
('GAN loss 0.0585 ', 'GAN acc 0.9961', 'Discriminator loss 0.1814', 'Discriminator accuracy 0.9375', 'Total loss: 0.2399', 'for batch', 96)
('GAN loss 0.0757 ', 'GAN acc 0.9883', 'Discriminator loss 0.0293', 'Discriminator accuracy 1.0000', 'Total loss: 0.1050', 'for batch', 97)
('GAN loss 0.0619 ', 'GAN acc 0.9922', 'Discriminator loss 0.0318', 'Discriminator accuracy 1.0000', 'Total loss: 0.0938', 'for batch', 98)
('GAN loss 0.0581 ', 'GAN acc 0.9922', 'Discriminator loss 0.0275', 'Discriminator accuracy 1.0000', 'Total loss: 0.0856', 'for batch', 99)
('GAN loss 0.0539 ', 'GAN acc 0.9961', 'Discriminator loss 0.1892', 'Discriminator accuracy 0.9395', 'Total loss: 0.2432', 'for batch', 100)
('GAN loss 0.1036 ', 'GAN acc 0.9922', 'Discriminator loss 0.2072', 'Discriminator accuracy 0.9375', 'Total loss: 0.3108', 'for batch', 101)
('GAN loss 0.1531 ', 'GAN acc 0.9844', 'Discriminator loss 0.3813', 'Discriminator accuracy 0.8613', 'Total loss: 0.5344', 'for batch', 102)
('GAN loss 0.1092 ', 'GAN acc 0.9883', 'Discriminator loss 1.0148', 'Discriminator accuracy 0.5430', 'Total loss: 1.1240', 'for batch', 103)
('GAN loss 0.1120 ', 'GAN acc 0.9922', 'Discriminator loss 0.8122', 'Discriminator accuracy 0.7090', 'Total loss: 0.9242', 'for batch', 104)
('GAN loss 0.1484 ', 'GAN acc 0.9922', 'Discriminator loss 0.8031', 'Discriminator accuracy 0.6973', 'Total loss: 0.9515', 'for batch', 105)
('GAN loss 0.2146 ', 'GAN acc 0.9883', 'Discriminator loss 0.7210', 'Discriminator accuracy 0.6914', 'Total loss: 0.9356', 'for batch', 106)
('GAN loss 0.3008 ', 'GAN acc 0.9844', 'Discriminator loss 0.6160', 'Discriminator accuracy 0.7070', 'Total loss: 0.9168', 'for batch', 107)
('GAN loss 0.3527 ', 'GAN acc 0.9922', 'Discriminator loss 0.4277', 'Discriminator accuracy 0.7930', 'Total loss: 0.7804', 'for batch', 108)
('GAN loss 0.3456 ', 'GAN acc 0.9922', 'Discriminator loss 0.3134', 'Discriminator accuracy 0.8711', 'Total loss: 0.6590', 'for batch', 109)
('GAN loss 0.4710 ', 'GAN acc 0.9805', 'Discriminator loss 0.5550', 'Discriminator accuracy 0.6953', 'Total loss: 1.0260', 'for batch', 110)
('GAN loss 0.4707 ', 'GAN acc 0.9883', 'Discriminator loss 0.6451', 'Discriminator accuracy 0.6250', 'Total loss: 1.1158', 'for batch', 111)
('GAN loss 0.3901 ', 'GAN acc 0.9922', 'Discriminator loss 0.5774', 'Discriminator accuracy 0.6836', 'Total loss: 0.9675', 'for batch', 112)
('GAN loss 0.3708 ', 'GAN acc 0.9922', 'Discriminator loss 0.3470', 'Discriminator accuracy 0.8691', 'Total loss: 0.7177', 'for batch', 113)
('GAN loss 0.3463 ', 'GAN acc 0.9961', 'Discriminator loss 0.3891', 'Discriminator accuracy 0.8223', 'Total loss: 0.7354', 'for batch', 114)
('GAN loss 0.3510 ', 'GAN acc 0.9844', 'Discriminator loss 0.3765', 'Discriminator accuracy 0.8320', 'Total loss: 0.7275', 'for batch', 115)
('GAN loss 0.3152 ', 'GAN acc 0.9961', 'Discriminator loss 0.3303', 'Discriminator accuracy 0.8652', 'Total loss: 0.6454', 'for batch', 116)
('GAN loss 0.3035 ', 'GAN acc 0.9883', 'Discriminator loss 0.2702', 'Discriminator accuracy 0.9219', 'Total loss: 0.5737', 'for batch', 117)
('GAN loss 0.2885 ', 'GAN acc 0.9961', 'Discriminator loss 0.2683', 'Discriminator accuracy 0.9160', 'Total loss: 0.5568', 'for batch', 118)
('GAN loss 0.3152 ', 'GAN acc 0.9922', 'Discriminator loss 0.3184', 'Discriminator accuracy 0.8750', 'Total loss: 0.6336', 'for batch', 119)
('GAN loss 0.3077 ', 'GAN acc 0.9883', 'Discriminator loss 0.1509', 'Discriminator accuracy 0.9805', 'Total loss: 0.4585', 'for batch', 120)
('GAN loss 0.2644 ', 'GAN acc 0.9922', 'Discriminator loss 0.2569', 'Discriminator accuracy 0.8926', 'Total loss: 0.5213', 'for batch', 121)
('GAN loss 0.3061 ', 'GAN acc 0.9844', 'Discriminator loss 0.1363', 'Discriminator accuracy 0.9922', 'Total loss: 0.4424', 'for batch', 122)
('GAN loss 0.2045 ', 'GAN acc 0.9961', 'Discriminator loss 0.1265', 'Discriminator accuracy 1.0000', 'Total loss: 0.3310', 'for batch', 123)
('GAN loss 0.2355 ', 'GAN acc 0.9883', 'Discriminator loss 0.0985', 'Discriminator accuracy 0.9961', 'Total loss: 0.3340', 'for batch', 124)
('GAN loss 0.2154 ', 'GAN acc 0.9883', 'Discriminator loss 0.3089', 'Discriminator accuracy 0.8789', 'Total loss: 0.5243', 'for batch', 125)
('GAN loss 0.2469 ', 'GAN acc 0.9922', 'Discriminator loss 0.6683', 'Discriminator accuracy 0.6953', 'Total loss: 0.9152', 'for batch', 126)
('GAN loss 0.2725 ', 'GAN acc 0.9922', 'Discriminator loss 0.5287', 'Discriminator accuracy 0.7578', 'Total loss: 0.8011', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.82011318)
('DISCRIMINATOR_Imagem FAKE=', 0.47897306)
('Discriminator trained', 2, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.986675')
----------------------------------
('Epoch', 41, 'of', 50)
('Number of batches', 128)
('GAN loss 0.3359 ', 'GAN acc 0.9883', 'Discriminator loss 0.6194', 'Discriminator accuracy 0.6895', 'Total loss: 0.9553', 'for batch', 0)
('GAN loss 0.3292 ', 'GAN acc 0.9883', 'Discriminator loss 0.5269', 'Discriminator accuracy 0.7266', 'Total loss: 0.8561', 'for batch', 1)
('GAN loss 0.3882 ', 'GAN acc 0.9883', 'Discriminator loss 0.5355', 'Discriminator accuracy 0.6973', 'Total loss: 0.9236', 'for batch', 2)
('GAN loss 0.4067 ', 'GAN acc 0.9883', 'Discriminator loss 0.4273', 'Discriminator accuracy 0.8145', 'Total loss: 0.8341', 'for batch', 3)
('GAN loss 0.3816 ', 'GAN acc 0.9883', 'Discriminator loss 0.5537', 'Discriminator accuracy 0.6660', 'Total loss: 0.9353', 'for batch', 4)
('GAN loss 0.3549 ', 'GAN acc 0.9961', 'Discriminator loss 0.2815', 'Discriminator accuracy 0.9062', 'Total loss: 0.6364', 'for batch', 5)
('GAN loss 0.3350 ', 'GAN acc 0.9922', 'Discriminator loss 0.3324', 'Discriminator accuracy 0.8691', 'Total loss: 0.6674', 'for batch', 6)
('GAN loss 0.3134 ', 'GAN acc 0.9922', 'Discriminator loss 0.3396', 'Discriminator accuracy 0.8711', 'Total loss: 0.6530', 'for batch', 7)
('GAN loss 0.3061 ', 'GAN acc 0.9961', 'Discriminator loss 0.3179', 'Discriminator accuracy 0.8789', 'Total loss: 0.6240', 'for batch', 8)
('GAN loss 0.3153 ', 'GAN acc 0.9883', 'Discriminator loss 0.5173', 'Discriminator accuracy 0.7480', 'Total loss: 0.8326', 'for batch', 9)
('GAN loss 0.3397 ', 'GAN acc 0.9883', 'Discriminator loss 0.4188', 'Discriminator accuracy 0.8047', 'Total loss: 0.7584', 'for batch', 10)
('GAN loss 0.3470 ', 'GAN acc 0.9883', 'Discriminator loss 0.6239', 'Discriminator accuracy 0.6719', 'Total loss: 0.9709', 'for batch', 11)
('GAN loss 0.3515 ', 'GAN acc 0.9922', 'Discriminator loss 0.6844', 'Discriminator accuracy 0.5996', 'Total loss: 1.0359', 'for batch', 12)
('GAN loss 0.3590 ', 'GAN acc 0.9883', 'Discriminator loss 0.4434', 'Discriminator accuracy 0.7695', 'Total loss: 0.8024', 'for batch', 13)
('GAN loss 0.3478 ', 'GAN acc 0.9922', 'Discriminator loss 0.4495', 'Discriminator accuracy 0.7617', 'Total loss: 0.7973', 'for batch', 14)
('GAN loss 0.3413 ', 'GAN acc 1.0000', 'Discriminator loss 0.4056', 'Discriminator accuracy 0.8008', 'Total loss: 0.7469', 'for batch', 15)
('GAN loss 0.3277 ', 'GAN acc 0.9961', 'Discriminator loss 0.3855', 'Discriminator accuracy 0.8223', 'Total loss: 0.7132', 'for batch', 16)
('GAN loss 0.3215 ', 'GAN acc 0.9961', 'Discriminator loss 0.4281', 'Discriminator accuracy 0.8066', 'Total loss: 0.7496', 'for batch', 17)
('GAN loss 0.3430 ', 'GAN acc 0.9844', 'Discriminator loss 0.5551', 'Discriminator accuracy 0.6777', 'Total loss: 0.8981', 'for batch', 18)
('GAN loss 0.3286 ', 'GAN acc 0.9922', 'Discriminator loss 0.3982', 'Discriminator accuracy 0.8027', 'Total loss: 0.7268', 'for batch', 19)
('GAN loss 0.3100 ', 'GAN acc 0.9922', 'Discriminator loss 0.2482', 'Discriminator accuracy 0.9336', 'Total loss: 0.5582', 'for batch', 20)
('GAN loss 0.2900 ', 'GAN acc 0.9922', 'Discriminator loss 0.4219', 'Discriminator accuracy 0.7969', 'Total loss: 0.7119', 'for batch', 21)
('GAN loss 0.2898 ', 'GAN acc 0.9961', 'Discriminator loss 0.4508', 'Discriminator accuracy 0.7637', 'Total loss: 0.7405', 'for batch', 22)
('GAN loss 0.3156 ', 'GAN acc 0.9883', 'Discriminator loss 0.4408', 'Discriminator accuracy 0.7988', 'Total loss: 0.7564', 'for batch', 23)
('GAN loss 0.4006 ', 'GAN acc 0.9883', 'Discriminator loss 0.5189', 'Discriminator accuracy 0.6953', 'Total loss: 0.9195', 'for batch', 24)
('GAN loss 0.3223 ', 'GAN acc 0.9922', 'Discriminator loss 0.6367', 'Discriminator accuracy 0.6074', 'Total loss: 0.9590', 'for batch', 25)
('GAN loss 0.3358 ', 'GAN acc 0.9922', 'Discriminator loss 0.4438', 'Discriminator accuracy 0.7695', 'Total loss: 0.7796', 'for batch', 26)
('GAN loss 0.3545 ', 'GAN acc 0.9922', 'Discriminator loss 0.3802', 'Discriminator accuracy 0.8203', 'Total loss: 0.7347', 'for batch', 27)
('GAN loss 0.4265 ', 'GAN acc 0.9844', 'Discriminator loss 0.5554', 'Discriminator accuracy 0.6816', 'Total loss: 0.9819', 'for batch', 28)
('GAN loss 0.4530 ', 'GAN acc 0.9844', 'Discriminator loss 0.5170', 'Discriminator accuracy 0.7012', 'Total loss: 0.9700', 'for batch', 29)
('GAN loss 0.4701 ', 'GAN acc 0.9922', 'Discriminator loss 0.6441', 'Discriminator accuracy 0.6016', 'Total loss: 1.1142', 'for batch', 30)
('GAN loss 0.5013 ', 'GAN acc 0.9883', 'Discriminator loss 0.5783', 'Discriminator accuracy 0.6699', 'Total loss: 1.0796', 'for batch', 31)
('GAN loss 0.5020 ', 'GAN acc 0.9922', 'Discriminator loss 0.6504', 'Discriminator accuracy 0.5898', 'Total loss: 1.1524', 'for batch', 32)
('GAN loss 0.5128 ', 'GAN acc 0.9883', 'Discriminator loss 0.6167', 'Discriminator accuracy 0.6230', 'Total loss: 1.1295', 'for batch', 33)
('GAN loss 0.4739 ', 'GAN acc 0.9883', 'Discriminator loss 0.5436', 'Discriminator accuracy 0.7051', 'Total loss: 1.0175', 'for batch', 34)
('GAN loss 0.4626 ', 'GAN acc 0.9922', 'Discriminator loss 0.5487', 'Discriminator accuracy 0.6934', 'Total loss: 1.0113', 'for batch', 35)
('GAN loss 0.4609 ', 'GAN acc 0.9883', 'Discriminator loss 0.5408', 'Discriminator accuracy 0.7090', 'Total loss: 1.0018', 'for batch', 36)
('GAN loss 0.4274 ', 'GAN acc 0.9961', 'Discriminator loss 0.3076', 'Discriminator accuracy 0.9277', 'Total loss: 0.7350', 'for batch', 37)
('GAN loss 0.4297 ', 'GAN acc 0.9844', 'Discriminator loss 0.4649', 'Discriminator accuracy 0.7520', 'Total loss: 0.8947', 'for batch', 38)
('GAN loss 0.4104 ', 'GAN acc 0.9844', 'Discriminator loss 0.3543', 'Discriminator accuracy 0.8535', 'Total loss: 0.7647', 'for batch', 39)
('GAN loss 0.4083 ', 'GAN acc 0.9922', 'Discriminator loss 0.4208', 'Discriminator accuracy 0.7949', 'Total loss: 0.8291', 'for batch', 40)
('GAN loss 0.3804 ', 'GAN acc 0.9922', 'Discriminator loss 0.3175', 'Discriminator accuracy 0.8613', 'Total loss: 0.6980', 'for batch', 41)
('GAN loss 0.4058 ', 'GAN acc 0.9883', 'Discriminator loss 0.5063', 'Discriminator accuracy 0.7363', 'Total loss: 0.9121', 'for batch', 42)
('GAN loss 0.4160 ', 'GAN acc 0.9883', 'Discriminator loss 0.5064', 'Discriminator accuracy 0.7441', 'Total loss: 0.9224', 'for batch', 43)
('GAN loss 0.4261 ', 'GAN acc 0.9844', 'Discriminator loss 0.5389', 'Discriminator accuracy 0.7207', 'Total loss: 0.9650', 'for batch', 44)
('GAN loss 0.4071 ', 'GAN acc 0.9961', 'Discriminator loss 0.4645', 'Discriminator accuracy 0.7637', 'Total loss: 0.8716', 'for batch', 45)
('GAN loss 0.4281 ', 'GAN acc 0.9922', 'Discriminator loss 0.4105', 'Discriminator accuracy 0.8145', 'Total loss: 0.8387', 'for batch', 46)
('GAN loss 0.4307 ', 'GAN acc 0.9922', 'Discriminator loss 0.6026', 'Discriminator accuracy 0.6699', 'Total loss: 1.0333', 'for batch', 47)
('GAN loss 0.4248 ', 'GAN acc 0.9922', 'Discriminator loss 0.3921', 'Discriminator accuracy 0.8223', 'Total loss: 0.8169', 'for batch', 48)
('GAN loss 0.3978 ', 'GAN acc 0.9922', 'Discriminator loss 0.3163', 'Discriminator accuracy 0.8906', 'Total loss: 0.7141', 'for batch', 49)
('GAN loss 0.4005 ', 'GAN acc 0.9922', 'Discriminator loss 0.5925', 'Discriminator accuracy 0.6484', 'Total loss: 0.9930', 'for batch', 50)
('GAN loss 0.3601 ', 'GAN acc 0.9961', 'Discriminator loss 0.4704', 'Discriminator accuracy 0.7500', 'Total loss: 0.8305', 'for batch', 51)
('GAN loss 0.3442 ', 'GAN acc 0.9922', 'Discriminator loss 0.3955', 'Discriminator accuracy 0.8164', 'Total loss: 0.7397', 'for batch', 52)
('GAN loss 0.3137 ', 'GAN acc 0.9922', 'Discriminator loss 0.2247', 'Discriminator accuracy 0.9473', 'Total loss: 0.5384', 'for batch', 53)
('GAN loss 0.2822 ', 'GAN acc 0.9922', 'Discriminator loss 0.2655', 'Discriminator accuracy 0.8965', 'Total loss: 0.5477', 'for batch', 54)
('GAN loss 0.2605 ', 'GAN acc 0.9922', 'Discriminator loss 0.2052', 'Discriminator accuracy 0.9668', 'Total loss: 0.4656', 'for batch', 55)
('GAN loss 0.6514 ', 'GAN acc 0.6758', 'Discriminator loss 0.5601', 'Discriminator accuracy 0.6484', 'Total loss: 1.2115', 'for batch', 56)
('GAN loss 0.4015 ', 'GAN acc 0.9922', 'Discriminator loss 0.7922', 'Discriminator accuracy 0.5312', 'Total loss: 1.1937', 'for batch', 57)
('GAN loss 0.4908 ', 'GAN acc 0.9688', 'Discriminator loss 0.4654', 'Discriminator accuracy 0.7539', 'Total loss: 0.9562', 'for batch', 58)
('GAN loss 0.5511 ', 'GAN acc 0.9414', 'Discriminator loss 0.4049', 'Discriminator accuracy 0.8105', 'Total loss: 0.9560', 'for batch', 59)
('GAN loss 0.5571 ', 'GAN acc 0.9609', 'Discriminator loss 0.3592', 'Discriminator accuracy 0.8223', 'Total loss: 0.9164', 'for batch', 60)
('GAN loss 0.5222 ', 'GAN acc 0.9883', 'Discriminator loss 0.3681', 'Discriminator accuracy 0.8105', 'Total loss: 0.8903', 'for batch', 61)
('GAN loss 0.4912 ', 'GAN acc 0.9844', 'Discriminator loss 0.4154', 'Discriminator accuracy 0.7559', 'Total loss: 0.9066', 'for batch', 62)
('GAN loss 0.4954 ', 'GAN acc 0.9883', 'Discriminator loss 0.3948', 'Discriminator accuracy 0.7832', 'Total loss: 0.8902', 'for batch', 63)
('GAN loss 0.5829 ', 'GAN acc 0.9648', 'Discriminator loss 0.4244', 'Discriminator accuracy 0.7773', 'Total loss: 1.0073', 'for batch', 64)
('GAN loss 0.3744 ', 'GAN acc 0.9922', 'Discriminator loss 0.4064', 'Discriminator accuracy 0.8340', 'Total loss: 0.7807', 'for batch', 65)
('GAN loss 0.3423 ', 'GAN acc 0.9883', 'Discriminator loss 0.4388', 'Discriminator accuracy 0.7773', 'Total loss: 0.7811', 'for batch', 66)
('GAN loss 0.3206 ', 'GAN acc 0.9922', 'Discriminator loss 0.2929', 'Discriminator accuracy 0.8770', 'Total loss: 0.6135', 'for batch', 67)
('GAN loss 0.3240 ', 'GAN acc 0.9883', 'Discriminator loss 0.1853', 'Discriminator accuracy 0.9395', 'Total loss: 0.5093', 'for batch', 68)
('GAN loss 0.3410 ', 'GAN acc 0.9883', 'Discriminator loss 0.4378', 'Discriminator accuracy 0.7773', 'Total loss: 0.7788', 'for batch', 69)
('GAN loss 0.3378 ', 'GAN acc 0.9922', 'Discriminator loss 0.2712', 'Discriminator accuracy 0.8809', 'Total loss: 0.6089', 'for batch', 70)
('GAN loss 0.3231 ', 'GAN acc 0.9883', 'Discriminator loss 0.1437', 'Discriminator accuracy 0.9902', 'Total loss: 0.4668', 'for batch', 71)
('GAN loss 0.2926 ', 'GAN acc 0.9922', 'Discriminator loss 0.3209', 'Discriminator accuracy 0.8711', 'Total loss: 0.6135', 'for batch', 72)
('GAN loss 0.3061 ', 'GAN acc 0.9922', 'Discriminator loss 0.4004', 'Discriminator accuracy 0.8164', 'Total loss: 0.7065', 'for batch', 73)
('GAN loss 0.3202 ', 'GAN acc 0.9922', 'Discriminator loss 0.3371', 'Discriminator accuracy 0.8613', 'Total loss: 0.6572', 'for batch', 74)
('GAN loss 0.3342 ', 'GAN acc 0.9844', 'Discriminator loss 0.2037', 'Discriminator accuracy 0.9336', 'Total loss: 0.5378', 'for batch', 75)
('GAN loss 0.2675 ', 'GAN acc 0.9961', 'Discriminator loss 0.1833', 'Discriminator accuracy 0.9375', 'Total loss: 0.4507', 'for batch', 76)
('GAN loss 0.2272 ', 'GAN acc 0.9922', 'Discriminator loss 0.1126', 'Discriminator accuracy 0.9922', 'Total loss: 0.3398', 'for batch', 77)
('GAN loss 0.2055 ', 'GAN acc 0.9922', 'Discriminator loss 0.3066', 'Discriminator accuracy 0.8750', 'Total loss: 0.5122', 'for batch', 78)
('GAN loss 0.2126 ', 'GAN acc 0.9922', 'Discriminator loss 0.4275', 'Discriminator accuracy 0.8184', 'Total loss: 0.6402', 'for batch', 79)
('GAN loss 0.2263 ', 'GAN acc 0.9961', 'Discriminator loss 0.2552', 'Discriminator accuracy 0.8848', 'Total loss: 0.4814', 'for batch', 80)
('GAN loss 0.2173 ', 'GAN acc 0.9961', 'Discriminator loss 0.3258', 'Discriminator accuracy 0.8652', 'Total loss: 0.5431', 'for batch', 81)
('GAN loss 0.2560 ', 'GAN acc 0.9922', 'Discriminator loss 0.4361', 'Discriminator accuracy 0.7773', 'Total loss: 0.6921', 'for batch', 82)
('GAN loss 0.1901 ', 'GAN acc 0.9922', 'Discriminator loss 0.3371', 'Discriminator accuracy 0.8652', 'Total loss: 0.5272', 'for batch', 83)
('GAN loss 0.2085 ', 'GAN acc 0.9961', 'Discriminator loss 0.2308', 'Discriminator accuracy 0.9336', 'Total loss: 0.4393', 'for batch', 84)
('GAN loss 0.2255 ', 'GAN acc 0.9922', 'Discriminator loss 0.5585', 'Discriminator accuracy 0.7578', 'Total loss: 0.7840', 'for batch', 85)
('GAN loss 0.2306 ', 'GAN acc 0.9961', 'Discriminator loss 0.2446', 'Discriminator accuracy 0.8926', 'Total loss: 0.4752', 'for batch', 86)
('GAN loss 0.2098 ', 'GAN acc 0.9922', 'Discriminator loss 0.0974', 'Discriminator accuracy 0.9961', 'Total loss: 0.3072', 'for batch', 87)
('GAN loss 0.2046 ', 'GAN acc 0.9922', 'Discriminator loss 0.2396', 'Discriminator accuracy 0.8984', 'Total loss: 0.4443', 'for batch', 88)
('GAN loss 0.1773 ', 'GAN acc 0.9961', 'Discriminator loss 0.1195', 'Discriminator accuracy 0.9922', 'Total loss: 0.2967', 'for batch', 89)
('GAN loss 0.1631 ', 'GAN acc 0.9961', 'Discriminator loss 0.0786', 'Discriminator accuracy 0.9961', 'Total loss: 0.2417', 'for batch', 90)
('GAN loss 0.1470 ', 'GAN acc 0.9961', 'Discriminator loss 0.1670', 'Discriminator accuracy 0.9375', 'Total loss: 0.3141', 'for batch', 91)
('GAN loss 0.1617 ', 'GAN acc 0.9961', 'Discriminator loss 0.2062', 'Discriminator accuracy 0.8887', 'Total loss: 0.3679', 'for batch', 92)
('GAN loss 0.2045 ', 'GAN acc 0.9961', 'Discriminator loss 0.2417', 'Discriminator accuracy 0.8828', 'Total loss: 0.4463', 'for batch', 93)
('GAN loss 0.1496 ', 'GAN acc 1.0000', 'Discriminator loss 0.3734', 'Discriminator accuracy 0.7949', 'Total loss: 0.5230', 'for batch', 94)
('GAN loss 0.1708 ', 'GAN acc 0.9922', 'Discriminator loss 0.5633', 'Discriminator accuracy 0.7695', 'Total loss: 0.7341', 'for batch', 95)
('GAN loss 0.2081 ', 'GAN acc 0.9961', 'Discriminator loss 0.3175', 'Discriminator accuracy 0.8770', 'Total loss: 0.5256', 'for batch', 96)
('GAN loss 0.2251 ', 'GAN acc 0.9961', 'Discriminator loss 0.5841', 'Discriminator accuracy 0.7578', 'Total loss: 0.8092', 'for batch', 97)
('GAN loss 0.2536 ', 'GAN acc 0.9961', 'Discriminator loss 0.4105', 'Discriminator accuracy 0.8164', 'Total loss: 0.6641', 'for batch', 98)
('GAN loss 0.2721 ', 'GAN acc 0.9922', 'Discriminator loss 0.3895', 'Discriminator accuracy 0.8203', 'Total loss: 0.6616', 'for batch', 99)
('GAN loss 0.2841 ', 'GAN acc 0.9961', 'Discriminator loss 0.2672', 'Discriminator accuracy 0.9082', 'Total loss: 0.5513', 'for batch', 100)
('GAN loss 0.3316 ', 'GAN acc 0.9961', 'Discriminator loss 0.5014', 'Discriminator accuracy 0.7266', 'Total loss: 0.8330', 'for batch', 101)
('GAN loss 0.2532 ', 'GAN acc 0.9844', 'Discriminator loss 0.3091', 'Discriminator accuracy 0.8555', 'Total loss: 0.5623', 'for batch', 102)
('GAN loss 0.2662 ', 'GAN acc 0.9883', 'Discriminator loss 0.5213', 'Discriminator accuracy 0.7559', 'Total loss: 0.7875', 'for batch', 103)
('GAN loss 0.2890 ', 'GAN acc 0.9922', 'Discriminator loss 0.4221', 'Discriminator accuracy 0.8184', 'Total loss: 0.7111', 'for batch', 104)
('GAN loss 0.2735 ', 'GAN acc 0.9922', 'Discriminator loss 0.2387', 'Discriminator accuracy 0.9316', 'Total loss: 0.5123', 'for batch', 105)
('GAN loss 0.2567 ', 'GAN acc 0.9961', 'Discriminator loss 0.2138', 'Discriminator accuracy 0.9395', 'Total loss: 0.4705', 'for batch', 106)
('GAN loss 0.2526 ', 'GAN acc 0.9883', 'Discriminator loss 0.4449', 'Discriminator accuracy 0.8008', 'Total loss: 0.6975', 'for batch', 107)
('GAN loss 0.2564 ', 'GAN acc 0.9922', 'Discriminator loss 0.3021', 'Discriminator accuracy 0.8789', 'Total loss: 0.5586', 'for batch', 108)
('GAN loss 0.2507 ', 'GAN acc 0.9961', 'Discriminator loss 0.2430', 'Discriminator accuracy 0.9258', 'Total loss: 0.4938', 'for batch', 109)
('GAN loss 0.2362 ', 'GAN acc 0.9961', 'Discriminator loss 0.2313', 'Discriminator accuracy 0.9355', 'Total loss: 0.4675', 'for batch', 110)
('GAN loss 0.2494 ', 'GAN acc 0.9922', 'Discriminator loss 0.2314', 'Discriminator accuracy 0.9023', 'Total loss: 0.4808', 'for batch', 111)
('GAN loss 0.2369 ', 'GAN acc 0.9922', 'Discriminator loss 0.2483', 'Discriminator accuracy 0.9238', 'Total loss: 0.4852', 'for batch', 112)
('GAN loss 0.2121 ', 'GAN acc 0.9922', 'Discriminator loss 0.2236', 'Discriminator accuracy 0.9219', 'Total loss: 0.4357', 'for batch', 113)
('GAN loss 0.1885 ', 'GAN acc 0.9961', 'Discriminator loss 0.1759', 'Discriminator accuracy 0.9570', 'Total loss: 0.3644', 'for batch', 114)
('GAN loss 0.2064 ', 'GAN acc 0.9883', 'Discriminator loss 0.2134', 'Discriminator accuracy 0.9199', 'Total loss: 0.4198', 'for batch', 115)
('GAN loss 0.1802 ', 'GAN acc 0.9961', 'Discriminator loss 0.2454', 'Discriminator accuracy 0.9160', 'Total loss: 0.4256', 'for batch', 116)
('GAN loss 0.1698 ', 'GAN acc 0.9922', 'Discriminator loss 0.1508', 'Discriminator accuracy 0.9863', 'Total loss: 0.3206', 'for batch', 117)
('GAN loss 0.1665 ', 'GAN acc 0.9961', 'Discriminator loss 0.2004', 'Discriminator accuracy 0.9336', 'Total loss: 0.3670', 'for batch', 118)
('GAN loss 0.1636 ', 'GAN acc 0.9922', 'Discriminator loss 0.3208', 'Discriminator accuracy 0.8770', 'Total loss: 0.4844', 'for batch', 119)
('GAN loss 0.1637 ', 'GAN acc 0.9883', 'Discriminator loss 0.0880', 'Discriminator accuracy 0.9961', 'Total loss: 0.2517', 'for batch', 120)
('GAN loss 0.1540 ', 'GAN acc 0.9922', 'Discriminator loss 0.2185', 'Discriminator accuracy 0.9258', 'Total loss: 0.3724', 'for batch', 121)
('GAN loss 0.1671 ', 'GAN acc 0.9883', 'Discriminator loss 0.2068', 'Discriminator accuracy 0.9219', 'Total loss: 0.3739', 'for batch', 122)
('GAN loss 0.1361 ', 'GAN acc 0.9961', 'Discriminator loss 0.3034', 'Discriminator accuracy 0.8594', 'Total loss: 0.4395', 'for batch', 123)
('GAN loss 0.1301 ', 'GAN acc 0.9922', 'Discriminator loss 0.1401', 'Discriminator accuracy 0.9824', 'Total loss: 0.2702', 'for batch', 124)
('GAN loss 0.1342 ', 'GAN acc 0.9883', 'Discriminator loss 0.3275', 'Discriminator accuracy 0.8789', 'Total loss: 0.4617', 'for batch', 125)
('GAN loss 0.1599 ', 'GAN acc 0.9922', 'Discriminator loss 0.7662', 'Discriminator accuracy 0.6934', 'Total loss: 0.9261', 'for batch', 126)
('GAN loss 0.1837 ', 'GAN acc 0.9922', 'Discriminator loss 0.3451', 'Discriminator accuracy 0.8691', 'Total loss: 0.5288', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.83528769)
('DISCRIMINATOR_Imagem FAKE=', 0.23710032)
('Discriminator trained', 8, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.181508')
----------------------------------
('Epoch', 42, 'of', 50)
('Number of batches', 128)
('GAN loss 0.2631 ', 'GAN acc 0.9883', 'Discriminator loss 0.4149', 'Discriminator accuracy 0.8145', 'Total loss: 0.6780', 'for batch', 0)
('GAN loss 0.2835 ', 'GAN acc 0.9883', 'Discriminator loss 0.4733', 'Discriminator accuracy 0.7363', 'Total loss: 0.7567', 'for batch', 1)
('GAN loss 0.2366 ', 'GAN acc 0.9922', 'Discriminator loss 0.5099', 'Discriminator accuracy 0.7168', 'Total loss: 0.7465', 'for batch', 2)
('GAN loss 0.2472 ', 'GAN acc 0.9883', 'Discriminator loss 0.3270', 'Discriminator accuracy 0.8750', 'Total loss: 0.5742', 'for batch', 3)
('GAN loss 0.2647 ', 'GAN acc 0.9883', 'Discriminator loss 0.5095', 'Discriminator accuracy 0.7559', 'Total loss: 0.7742', 'for batch', 4)
('GAN loss 0.2639 ', 'GAN acc 0.9961', 'Discriminator loss 0.3619', 'Discriminator accuracy 0.8359', 'Total loss: 0.6258', 'for batch', 5)
('GAN loss 0.2781 ', 'GAN acc 0.9922', 'Discriminator loss 0.3894', 'Discriminator accuracy 0.8184', 'Total loss: 0.6675', 'for batch', 6)
('GAN loss 0.2639 ', 'GAN acc 0.9922', 'Discriminator loss 0.1297', 'Discriminator accuracy 0.9941', 'Total loss: 0.3937', 'for batch', 7)
('GAN loss 0.2343 ', 'GAN acc 0.9961', 'Discriminator loss 0.1211', 'Discriminator accuracy 0.9980', 'Total loss: 0.3554', 'for batch', 8)
('GAN loss 0.2121 ', 'GAN acc 0.9961', 'Discriminator loss 0.2074', 'Discriminator accuracy 0.9395', 'Total loss: 0.4195', 'for batch', 9)
('GAN loss 0.2083 ', 'GAN acc 0.9883', 'Discriminator loss 0.1681', 'Discriminator accuracy 0.9453', 'Total loss: 0.3764', 'for batch', 10)
('GAN loss 0.2288 ', 'GAN acc 0.9883', 'Discriminator loss 0.3292', 'Discriminator accuracy 0.8555', 'Total loss: 0.5580', 'for batch', 11)
('GAN loss 0.1942 ', 'GAN acc 0.9922', 'Discriminator loss 0.2800', 'Discriminator accuracy 0.9121', 'Total loss: 0.4742', 'for batch', 12)
('GAN loss 0.1764 ', 'GAN acc 0.9922', 'Discriminator loss 0.1604', 'Discriminator accuracy 0.9805', 'Total loss: 0.3368', 'for batch', 13)
('GAN loss 0.1522 ', 'GAN acc 1.0000', 'Discriminator loss 0.1035', 'Discriminator accuracy 0.9941', 'Total loss: 0.2557', 'for batch', 14)
('GAN loss 0.1444 ', 'GAN acc 0.9922', 'Discriminator loss 0.0778', 'Discriminator accuracy 0.9980', 'Total loss: 0.2222', 'for batch', 15)
('GAN loss 0.1283 ', 'GAN acc 0.9961', 'Discriminator loss 0.0679', 'Discriminator accuracy 1.0000', 'Total loss: 0.1961', 'for batch', 16)
('GAN loss 0.1262 ', 'GAN acc 0.9961', 'Discriminator loss 0.1922', 'Discriminator accuracy 0.9375', 'Total loss: 0.3184', 'for batch', 17)
('GAN loss 0.1286 ', 'GAN acc 0.9961', 'Discriminator loss 0.4588', 'Discriminator accuracy 0.8145', 'Total loss: 0.5874', 'for batch', 18)
('GAN loss 0.1292 ', 'GAN acc 1.0000', 'Discriminator loss 0.1876', 'Discriminator accuracy 0.9395', 'Total loss: 0.3169', 'for batch', 19)
('GAN loss 0.1481 ', 'GAN acc 0.9922', 'Discriminator loss 0.0753', 'Discriminator accuracy 0.9980', 'Total loss: 0.2234', 'for batch', 20)
('GAN loss 0.1264 ', 'GAN acc 0.9922', 'Discriminator loss 0.1012', 'Discriminator accuracy 0.9941', 'Total loss: 0.2276', 'for batch', 21)
('GAN loss 0.1242 ', 'GAN acc 0.9961', 'Discriminator loss 0.1508', 'Discriminator accuracy 0.9453', 'Total loss: 0.2751', 'for batch', 22)
('GAN loss 0.1391 ', 'GAN acc 0.9922', 'Discriminator loss 0.1925', 'Discriminator accuracy 0.9180', 'Total loss: 0.3317', 'for batch', 23)
('GAN loss 0.1175 ', 'GAN acc 0.9961', 'Discriminator loss 0.1392', 'Discriminator accuracy 0.9805', 'Total loss: 0.2566', 'for batch', 24)
('GAN loss 0.1061 ', 'GAN acc 0.9922', 'Discriminator loss 0.0712', 'Discriminator accuracy 0.9980', 'Total loss: 0.1774', 'for batch', 25)
('GAN loss 0.0928 ', 'GAN acc 0.9961', 'Discriminator loss 0.0552', 'Discriminator accuracy 0.9961', 'Total loss: 0.1479', 'for batch', 26)
('GAN loss 0.0862 ', 'GAN acc 0.9961', 'Discriminator loss 0.1547', 'Discriminator accuracy 0.9375', 'Total loss: 0.2409', 'for batch', 27)
('GAN loss 0.1843 ', 'GAN acc 0.9883', 'Discriminator loss 0.2138', 'Discriminator accuracy 0.8828', 'Total loss: 0.3981', 'for batch', 28)
('GAN loss 0.3112 ', 'GAN acc 0.9844', 'Discriminator loss 1.0353', 'Discriminator accuracy 0.5664', 'Total loss: 1.3464', 'for batch', 29)
('GAN loss 0.2159 ', 'GAN acc 0.9922', 'Discriminator loss 0.8214', 'Discriminator accuracy 0.6367', 'Total loss: 1.0374', 'for batch', 30)
('GAN loss 0.3581 ', 'GAN acc 0.9844', 'Discriminator loss 0.8170', 'Discriminator accuracy 0.5801', 'Total loss: 1.1751', 'for batch', 31)
('GAN loss 0.4560 ', 'GAN acc 0.9844', 'Discriminator loss 0.4712', 'Discriminator accuracy 0.7500', 'Total loss: 0.9272', 'for batch', 32)
('GAN loss 0.5314 ', 'GAN acc 0.9961', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5801', 'Total loss: 1.2017', 'for batch', 33)
('GAN loss 0.6221 ', 'GAN acc 0.9688', 'Discriminator loss 0.5476', 'Discriminator accuracy 0.6465', 'Total loss: 1.1697', 'for batch', 34)
('GAN loss 0.6427 ', 'GAN acc 0.9375', 'Discriminator loss 0.5521', 'Discriminator accuracy 0.6426', 'Total loss: 1.1948', 'for batch', 35)
('GAN loss 0.6504 ', 'GAN acc 0.9062', 'Discriminator loss 0.5766', 'Discriminator accuracy 0.6367', 'Total loss: 1.2270', 'for batch', 36)
('GAN loss 0.6062 ', 'GAN acc 0.9844', 'Discriminator loss 0.5764', 'Discriminator accuracy 0.6445', 'Total loss: 1.1826', 'for batch', 37)
('GAN loss 0.5858 ', 'GAN acc 0.9883', 'Discriminator loss 0.5349', 'Discriminator accuracy 0.7012', 'Total loss: 1.1207', 'for batch', 38)
('GAN loss 0.5466 ', 'GAN acc 0.9883', 'Discriminator loss 0.5412', 'Discriminator accuracy 0.6992', 'Total loss: 1.0878', 'for batch', 39)
('GAN loss 0.5102 ', 'GAN acc 0.9961', 'Discriminator loss 0.5963', 'Discriminator accuracy 0.6543', 'Total loss: 1.1065', 'for batch', 40)
('GAN loss 0.5376 ', 'GAN acc 0.9922', 'Discriminator loss 0.6871', 'Discriminator accuracy 0.5781', 'Total loss: 1.2247', 'for batch', 41)
('GAN loss 0.5517 ', 'GAN acc 0.9883', 'Discriminator loss 0.6191', 'Discriminator accuracy 0.6230', 'Total loss: 1.1708', 'for batch', 42)
('GAN loss 0.5264 ', 'GAN acc 0.9883', 'Discriminator loss 0.5258', 'Discriminator accuracy 0.7500', 'Total loss: 1.0522', 'for batch', 43)
('GAN loss 0.5131 ', 'GAN acc 0.9805', 'Discriminator loss 0.4899', 'Discriminator accuracy 0.7539', 'Total loss: 1.0029', 'for batch', 44)
('GAN loss 0.4967 ', 'GAN acc 0.9961', 'Discriminator loss 0.5404', 'Discriminator accuracy 0.7266', 'Total loss: 1.0371', 'for batch', 45)
('GAN loss 0.6804 ', 'GAN acc 0.7734', 'Discriminator loss 0.4795', 'Discriminator accuracy 0.7617', 'Total loss: 1.1599', 'for batch', 46)
('GAN loss 0.4093 ', 'GAN acc 0.9961', 'Discriminator loss 0.4237', 'Discriminator accuracy 0.8047', 'Total loss: 0.8330', 'for batch', 47)
('GAN loss 0.3748 ', 'GAN acc 0.9961', 'Discriminator loss 0.3552', 'Discriminator accuracy 0.8672', 'Total loss: 0.7300', 'for batch', 48)
('GAN loss 0.3659 ', 'GAN acc 0.9883', 'Discriminator loss 0.4043', 'Discriminator accuracy 0.8125', 'Total loss: 0.7703', 'for batch', 49)
('GAN loss 0.4030 ', 'GAN acc 0.9922', 'Discriminator loss 0.6250', 'Discriminator accuracy 0.6426', 'Total loss: 1.0280', 'for batch', 50)
('GAN loss 0.4076 ', 'GAN acc 0.9922', 'Discriminator loss 0.4741', 'Discriminator accuracy 0.7539', 'Total loss: 0.8817', 'for batch', 51)
('GAN loss 0.4179 ', 'GAN acc 0.9922', 'Discriminator loss 0.4172', 'Discriminator accuracy 0.8047', 'Total loss: 0.8351', 'for batch', 52)
('GAN loss 0.3734 ', 'GAN acc 0.9883', 'Discriminator loss 0.2776', 'Discriminator accuracy 0.9199', 'Total loss: 0.6510', 'for batch', 53)
('GAN loss 0.3183 ', 'GAN acc 0.9883', 'Discriminator loss 0.2163', 'Discriminator accuracy 0.9766', 'Total loss: 0.5346', 'for batch', 54)
('GAN loss 0.3206 ', 'GAN acc 0.9883', 'Discriminator loss 0.3559', 'Discriminator accuracy 0.8418', 'Total loss: 0.6765', 'for batch', 55)
('GAN loss 0.3756 ', 'GAN acc 0.9883', 'Discriminator loss 0.5174', 'Discriminator accuracy 0.7422', 'Total loss: 0.8930', 'for batch', 56)
('GAN loss 0.2765 ', 'GAN acc 0.9922', 'Discriminator loss 0.4261', 'Discriminator accuracy 0.7578', 'Total loss: 0.7026', 'for batch', 57)
('GAN loss 0.2537 ', 'GAN acc 0.9961', 'Discriminator loss 0.2148', 'Discriminator accuracy 0.9355', 'Total loss: 0.4686', 'for batch', 58)
('GAN loss 0.3071 ', 'GAN acc 0.9883', 'Discriminator loss 0.4238', 'Discriminator accuracy 0.8145', 'Total loss: 0.7309', 'for batch', 59)
('GAN loss 0.2965 ', 'GAN acc 0.9922', 'Discriminator loss 0.3059', 'Discriminator accuracy 0.8789', 'Total loss: 0.6023', 'for batch', 60)
('GAN loss 0.3492 ', 'GAN acc 0.9883', 'Discriminator loss 0.5034', 'Discriminator accuracy 0.7598', 'Total loss: 0.8527', 'for batch', 61)
('GAN loss 0.3726 ', 'GAN acc 0.9883', 'Discriminator loss 0.4972', 'Discriminator accuracy 0.7578', 'Total loss: 0.8698', 'for batch', 62)
('GAN loss 0.3747 ', 'GAN acc 0.9922', 'Discriminator loss 0.3955', 'Discriminator accuracy 0.8164', 'Total loss: 0.7702', 'for batch', 63)
('GAN loss 0.4132 ', 'GAN acc 0.9922', 'Discriminator loss 0.4115', 'Discriminator accuracy 0.8145', 'Total loss: 0.8246', 'for batch', 64)
('GAN loss 0.3741 ', 'GAN acc 0.9883', 'Discriminator loss 0.2379', 'Discriminator accuracy 0.9395', 'Total loss: 0.6121', 'for batch', 65)
('GAN loss 0.3394 ', 'GAN acc 0.9922', 'Discriminator loss 0.2548', 'Discriminator accuracy 0.9375', 'Total loss: 0.5942', 'for batch', 66)
('GAN loss 0.3121 ', 'GAN acc 0.9922', 'Discriminator loss 0.2459', 'Discriminator accuracy 0.9316', 'Total loss: 0.5580', 'for batch', 67)
('GAN loss 0.3014 ', 'GAN acc 0.9805', 'Discriminator loss 0.1349', 'Discriminator accuracy 0.9980', 'Total loss: 0.4364', 'for batch', 68)
('GAN loss 0.2750 ', 'GAN acc 0.9883', 'Discriminator loss 0.4172', 'Discriminator accuracy 0.8184', 'Total loss: 0.6922', 'for batch', 69)
('GAN loss 0.2452 ', 'GAN acc 0.9922', 'Discriminator loss 0.2146', 'Discriminator accuracy 0.9395', 'Total loss: 0.4598', 'for batch', 70)
('GAN loss 0.2514 ', 'GAN acc 0.9883', 'Discriminator loss 0.3229', 'Discriminator accuracy 0.8789', 'Total loss: 0.5744', 'for batch', 71)
('GAN loss 0.2462 ', 'GAN acc 0.9922', 'Discriminator loss 0.3857', 'Discriminator accuracy 0.8223', 'Total loss: 0.6319', 'for batch', 72)
('GAN loss 0.2727 ', 'GAN acc 0.9922', 'Discriminator loss 0.3424', 'Discriminator accuracy 0.8652', 'Total loss: 0.6151', 'for batch', 73)
('GAN loss 0.2438 ', 'GAN acc 0.9922', 'Discriminator loss 0.3506', 'Discriminator accuracy 0.8535', 'Total loss: 0.5944', 'for batch', 74)
('GAN loss 0.2958 ', 'GAN acc 0.9844', 'Discriminator loss 0.3962', 'Discriminator accuracy 0.8145', 'Total loss: 0.6920', 'for batch', 75)
('GAN loss 0.2339 ', 'GAN acc 0.9961', 'Discriminator loss 0.1608', 'Discriminator accuracy 0.9844', 'Total loss: 0.3948', 'for batch', 76)
('GAN loss 0.2154 ', 'GAN acc 0.9883', 'Discriminator loss 0.1081', 'Discriminator accuracy 0.9980', 'Total loss: 0.3235', 'for batch', 77)
('GAN loss 0.2348 ', 'GAN acc 0.9883', 'Discriminator loss 0.4364', 'Discriminator accuracy 0.8184', 'Total loss: 0.6712', 'for batch', 78)
('GAN loss 0.2481 ', 'GAN acc 0.9922', 'Discriminator loss 0.4335', 'Discriminator accuracy 0.8184', 'Total loss: 0.6816', 'for batch', 79)
('GAN loss 0.2553 ', 'GAN acc 0.9922', 'Discriminator loss 0.4233', 'Discriminator accuracy 0.8164', 'Total loss: 0.6785', 'for batch', 80)
('GAN loss 0.2599 ', 'GAN acc 0.9922', 'Discriminator loss 0.3822', 'Discriminator accuracy 0.8301', 'Total loss: 0.6421', 'for batch', 81)
('GAN loss 1.4472 ', 'GAN acc 0.0273', 'Discriminator loss 0.4555', 'Discriminator accuracy 0.7266', 'Total loss: 1.9027', 'for batch', 82)
('GAN loss 0.4642 ', 'GAN acc 0.9844', 'Discriminator loss 0.3405', 'Discriminator accuracy 0.8613', 'Total loss: 0.8048', 'for batch', 83)
('GAN loss 0.5101 ', 'GAN acc 0.9922', 'Discriminator loss 0.4746', 'Discriminator accuracy 0.7285', 'Total loss: 0.9847', 'for batch', 84)
('GAN loss 0.5803 ', 'GAN acc 0.9648', 'Discriminator loss 0.5229', 'Discriminator accuracy 0.6797', 'Total loss: 1.1032', 'for batch', 85)
('GAN loss 0.5511 ', 'GAN acc 0.9844', 'Discriminator loss 0.3110', 'Discriminator accuracy 0.8828', 'Total loss: 0.8620', 'for batch', 86)
('GAN loss 0.5214 ', 'GAN acc 0.9805', 'Discriminator loss 0.3560', 'Discriminator accuracy 0.8340', 'Total loss: 0.8774', 'for batch', 87)
('GAN loss 0.4375 ', 'GAN acc 0.9922', 'Discriminator loss 0.3278', 'Discriminator accuracy 0.8457', 'Total loss: 0.7653', 'for batch', 88)
('GAN loss 0.3650 ', 'GAN acc 0.9883', 'Discriminator loss 0.2896', 'Discriminator accuracy 0.8770', 'Total loss: 0.6546', 'for batch', 89)
('GAN loss 0.2977 ', 'GAN acc 0.9922', 'Discriminator loss 0.2467', 'Discriminator accuracy 0.8945', 'Total loss: 0.5445', 'for batch', 90)
('GAN loss 0.2466 ', 'GAN acc 0.9961', 'Discriminator loss 0.2247', 'Discriminator accuracy 0.9023', 'Total loss: 0.4714', 'for batch', 91)
('GAN loss 0.3326 ', 'GAN acc 0.9922', 'Discriminator loss 0.4569', 'Discriminator accuracy 0.7559', 'Total loss: 0.7895', 'for batch', 92)
('GAN loss 0.3901 ', 'GAN acc 0.9922', 'Discriminator loss 0.2932', 'Discriminator accuracy 0.8750', 'Total loss: 0.6833', 'for batch', 93)
('GAN loss 0.3576 ', 'GAN acc 0.9961', 'Discriminator loss 0.2879', 'Discriminator accuracy 0.8730', 'Total loss: 0.6455', 'for batch', 94)
('GAN loss 0.4144 ', 'GAN acc 0.9922', 'Discriminator loss 0.3634', 'Discriminator accuracy 0.8047', 'Total loss: 0.7778', 'for batch', 95)
('GAN loss 0.4440 ', 'GAN acc 0.9922', 'Discriminator loss 0.3514', 'Discriminator accuracy 0.8223', 'Total loss: 0.7954', 'for batch', 96)
('GAN loss 0.3537 ', 'GAN acc 0.9844', 'Discriminator loss 0.2745', 'Discriminator accuracy 0.8926', 'Total loss: 0.6283', 'for batch', 97)
('GAN loss 0.2732 ', 'GAN acc 0.9961', 'Discriminator loss 0.2918', 'Discriminator accuracy 0.8770', 'Total loss: 0.5649', 'for batch', 98)
('GAN loss 0.2123 ', 'GAN acc 0.9922', 'Discriminator loss 0.1883', 'Discriminator accuracy 0.9434', 'Total loss: 0.4006', 'for batch', 99)
('GAN loss 0.1682 ', 'GAN acc 0.9961', 'Discriminator loss 0.1929', 'Discriminator accuracy 0.9395', 'Total loss: 0.3611', 'for batch', 100)
('GAN loss 0.2370 ', 'GAN acc 0.9922', 'Discriminator loss 0.4594', 'Discriminator accuracy 0.8164', 'Total loss: 0.6964', 'for batch', 101)
('GAN loss 0.2892 ', 'GAN acc 0.9883', 'Discriminator loss 0.2478', 'Discriminator accuracy 0.9004', 'Total loss: 0.5370', 'for batch', 102)
('GAN loss 0.4764 ', 'GAN acc 0.9766', 'Discriminator loss 0.4145', 'Discriminator accuracy 0.8125', 'Total loss: 0.8909', 'for batch', 103)
('GAN loss 0.3569 ', 'GAN acc 0.9922', 'Discriminator loss 0.3352', 'Discriminator accuracy 0.8633', 'Total loss: 0.6921', 'for batch', 104)
('GAN loss 0.2475 ', 'GAN acc 0.9883', 'Discriminator loss 0.1698', 'Discriminator accuracy 0.9863', 'Total loss: 0.4173', 'for batch', 105)
('GAN loss 0.1795 ', 'GAN acc 0.9961', 'Discriminator loss 0.2058', 'Discriminator accuracy 0.9355', 'Total loss: 0.3853', 'for batch', 106)
('GAN loss 0.1911 ', 'GAN acc 0.9883', 'Discriminator loss 0.4447', 'Discriminator accuracy 0.8184', 'Total loss: 0.6358', 'for batch', 107)
('GAN loss 0.2240 ', 'GAN acc 0.9961', 'Discriminator loss 0.3239', 'Discriminator accuracy 0.8770', 'Total loss: 0.5479', 'for batch', 108)
('GAN loss 0.2164 ', 'GAN acc 0.9961', 'Discriminator loss 0.2074', 'Discriminator accuracy 0.9316', 'Total loss: 0.4238', 'for batch', 109)
('GAN loss 0.2266 ', 'GAN acc 0.9922', 'Discriminator loss 0.3105', 'Discriminator accuracy 0.8750', 'Total loss: 0.5371', 'for batch', 110)
('GAN loss 0.3872 ', 'GAN acc 0.9844', 'Discriminator loss 0.2727', 'Discriminator accuracy 0.8984', 'Total loss: 0.6599', 'for batch', 111)
('GAN loss 0.2027 ', 'GAN acc 0.9961', 'Discriminator loss 0.3634', 'Discriminator accuracy 0.8125', 'Total loss: 0.5662', 'for batch', 112)
('GAN loss 0.2066 ', 'GAN acc 1.0000', 'Discriminator loss 0.1980', 'Discriminator accuracy 0.9375', 'Total loss: 0.4047', 'for batch', 113)
('GAN loss 0.1948 ', 'GAN acc 1.0000', 'Discriminator loss 0.2144', 'Discriminator accuracy 0.9082', 'Total loss: 0.4092', 'for batch', 114)
('GAN loss 0.2135 ', 'GAN acc 1.0000', 'Discriminator loss 0.5530', 'Discriminator accuracy 0.7539', 'Total loss: 0.7666', 'for batch', 115)
('GAN loss 0.2337 ', 'GAN acc 1.0000', 'Discriminator loss 0.3289', 'Discriminator accuracy 0.8535', 'Total loss: 0.5626', 'for batch', 116)
('GAN loss 0.2290 ', 'GAN acc 1.0000', 'Discriminator loss 0.2009', 'Discriminator accuracy 0.9395', 'Total loss: 0.4299', 'for batch', 117)
('GAN loss 0.2190 ', 'GAN acc 1.0000', 'Discriminator loss 0.2029', 'Discriminator accuracy 0.9355', 'Total loss: 0.4219', 'for batch', 118)
('GAN loss 0.2352 ', 'GAN acc 1.0000', 'Discriminator loss 0.3674', 'Discriminator accuracy 0.8184', 'Total loss: 0.6027', 'for batch', 119)
('GAN loss 0.2407 ', 'GAN acc 1.0000', 'Discriminator loss 0.2777', 'Discriminator accuracy 0.8770', 'Total loss: 0.5184', 'for batch', 120)
('GAN loss 0.2137 ', 'GAN acc 1.0000', 'Discriminator loss 0.1600', 'Discriminator accuracy 0.9883', 'Total loss: 0.3737', 'for batch', 121)
('GAN loss 0.1975 ', 'GAN acc 1.0000', 'Discriminator loss 0.2449', 'Discriminator accuracy 0.9004', 'Total loss: 0.4424', 'for batch', 122)
('GAN loss 0.2054 ', 'GAN acc 1.0000', 'Discriminator loss 0.3365', 'Discriminator accuracy 0.8301', 'Total loss: 0.5419', 'for batch', 123)
('GAN loss 0.1817 ', 'GAN acc 0.9961', 'Discriminator loss 0.1362', 'Discriminator accuracy 0.9941', 'Total loss: 0.3178', 'for batch', 124)
('GAN loss 0.1531 ', 'GAN acc 1.0000', 'Discriminator loss 0.2213', 'Discriminator accuracy 0.9375', 'Total loss: 0.3744', 'for batch', 125)
('GAN loss 0.1841 ', 'GAN acc 1.0000', 'Discriminator loss 0.6482', 'Discriminator accuracy 0.6875', 'Total loss: 0.8323', 'for batch', 126)
('GAN loss 0.1923 ', 'GAN acc 1.0000', 'Discriminator loss 0.2068', 'Discriminator accuracy 0.9355', 'Total loss: 0.3991', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.81810158)
('DISCRIMINATOR_Imagem FAKE=', 0.15219943)
('Discriminator trained', 11, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.432219')
----------------------------------
('Epoch', 43, 'of', 50)
('Number of batches', 128)
('GAN loss 0.1976 ', 'GAN acc 0.9883', 'Discriminator loss 0.2244', 'Discriminator accuracy 0.9316', 'Total loss: 0.4220', 'for batch', 0)
('GAN loss 0.2059 ', 'GAN acc 0.9961', 'Discriminator loss 0.3666', 'Discriminator accuracy 0.8438', 'Total loss: 0.5725', 'for batch', 1)
('GAN loss 0.2061 ', 'GAN acc 0.9922', 'Discriminator loss 0.2082', 'Discriminator accuracy 0.9395', 'Total loss: 0.4144', 'for batch', 2)
('GAN loss 0.2008 ', 'GAN acc 0.9961', 'Discriminator loss 0.2480', 'Discriminator accuracy 0.9121', 'Total loss: 0.4488', 'for batch', 3)
('GAN loss 0.1999 ', 'GAN acc 0.9922', 'Discriminator loss 0.3124', 'Discriminator accuracy 0.8789', 'Total loss: 0.5123', 'for batch', 4)
('GAN loss 0.2077 ', 'GAN acc 0.9961', 'Discriminator loss 0.3079', 'Discriminator accuracy 0.8789', 'Total loss: 0.5157', 'for batch', 5)
('GAN loss 0.2360 ', 'GAN acc 0.9922', 'Discriminator loss 0.3802', 'Discriminator accuracy 0.8164', 'Total loss: 0.6162', 'for batch', 6)
('GAN loss 0.2307 ', 'GAN acc 0.9961', 'Discriminator loss 0.3065', 'Discriminator accuracy 0.8730', 'Total loss: 0.5373', 'for batch', 7)
('GAN loss 0.1975 ', 'GAN acc 0.9961', 'Discriminator loss 0.1336', 'Discriminator accuracy 1.0000', 'Total loss: 0.3311', 'for batch', 8)
('GAN loss 0.1898 ', 'GAN acc 0.9961', 'Discriminator loss 0.2401', 'Discriminator accuracy 0.9043', 'Total loss: 0.4299', 'for batch', 9)
('GAN loss 0.1806 ', 'GAN acc 0.9922', 'Discriminator loss 0.1963', 'Discriminator accuracy 0.9395', 'Total loss: 0.3769', 'for batch', 10)
('GAN loss 0.2021 ', 'GAN acc 0.9922', 'Discriminator loss 0.5405', 'Discriminator accuracy 0.7559', 'Total loss: 0.7425', 'for batch', 11)
('GAN loss 0.2457 ', 'GAN acc 0.9922', 'Discriminator loss 0.5405', 'Discriminator accuracy 0.7559', 'Total loss: 0.7862', 'for batch', 12)
('GAN loss 0.2743 ', 'GAN acc 0.9922', 'Discriminator loss 0.2966', 'Discriminator accuracy 0.8789', 'Total loss: 0.5709', 'for batch', 13)
('GAN loss 0.2728 ', 'GAN acc 0.9961', 'Discriminator loss 0.2495', 'Discriminator accuracy 0.9180', 'Total loss: 0.5224', 'for batch', 14)
('GAN loss 0.2440 ', 'GAN acc 0.9961', 'Discriminator loss 0.2337', 'Discriminator accuracy 0.9297', 'Total loss: 0.4777', 'for batch', 15)
('GAN loss 0.2212 ', 'GAN acc 0.9922', 'Discriminator loss 0.1162', 'Discriminator accuracy 1.0000', 'Total loss: 0.3374', 'for batch', 16)
('GAN loss 0.2090 ', 'GAN acc 0.9961', 'Discriminator loss 0.1961', 'Discriminator accuracy 0.9395', 'Total loss: 0.4050', 'for batch', 17)
('GAN loss 0.2115 ', 'GAN acc 0.9883', 'Discriminator loss 0.4209', 'Discriminator accuracy 0.8184', 'Total loss: 0.6324', 'for batch', 18)
('GAN loss 0.2174 ', 'GAN acc 0.9961', 'Discriminator loss 0.2705', 'Discriminator accuracy 0.8887', 'Total loss: 0.4879', 'for batch', 19)
('GAN loss 0.1952 ', 'GAN acc 0.9961', 'Discriminator loss 0.1077', 'Discriminator accuracy 0.9980', 'Total loss: 0.3029', 'for batch', 20)
('GAN loss 0.2125 ', 'GAN acc 0.9922', 'Discriminator loss 0.3980', 'Discriminator accuracy 0.8164', 'Total loss: 0.6105', 'for batch', 21)
('GAN loss 0.2226 ', 'GAN acc 0.9922', 'Discriminator loss 0.3515', 'Discriminator accuracy 0.8262', 'Total loss: 0.5741', 'for batch', 22)
('GAN loss 0.2146 ', 'GAN acc 0.9922', 'Discriminator loss 0.3233', 'Discriminator accuracy 0.8574', 'Total loss: 0.5379', 'for batch', 23)
('GAN loss 0.1972 ', 'GAN acc 0.9883', 'Discriminator loss 0.1378', 'Discriminator accuracy 0.9941', 'Total loss: 0.3350', 'for batch', 24)
('GAN loss 0.1921 ', 'GAN acc 0.9922', 'Discriminator loss 0.0870', 'Discriminator accuracy 0.9980', 'Total loss: 0.2791', 'for batch', 25)
('GAN loss 0.1711 ', 'GAN acc 0.9961', 'Discriminator loss 0.0795', 'Discriminator accuracy 0.9980', 'Total loss: 0.2506', 'for batch', 26)
('GAN loss 0.1760 ', 'GAN acc 0.9922', 'Discriminator loss 0.3261', 'Discriminator accuracy 0.8789', 'Total loss: 0.5020', 'for batch', 27)
('GAN loss 0.2189 ', 'GAN acc 0.9922', 'Discriminator loss 0.7201', 'Discriminator accuracy 0.6973', 'Total loss: 0.9391', 'for batch', 28)
('GAN loss 0.2582 ', 'GAN acc 0.9844', 'Discriminator loss 0.5834', 'Discriminator accuracy 0.7266', 'Total loss: 0.8416', 'for batch', 29)
('GAN loss 0.2696 ', 'GAN acc 0.9961', 'Discriminator loss 0.2036', 'Discriminator accuracy 0.9395', 'Total loss: 0.4732', 'for batch', 30)
('GAN loss 0.2930 ', 'GAN acc 0.9883', 'Discriminator loss 0.2912', 'Discriminator accuracy 0.8789', 'Total loss: 0.5842', 'for batch', 31)
('GAN loss 0.2628 ', 'GAN acc 0.9961', 'Discriminator loss 0.1149', 'Discriminator accuracy 1.0000', 'Total loss: 0.3777', 'for batch', 32)
('GAN loss 0.2375 ', 'GAN acc 0.9961', 'Discriminator loss 0.1083', 'Discriminator accuracy 1.0000', 'Total loss: 0.3457', 'for batch', 33)
('GAN loss 0.2166 ', 'GAN acc 0.9922', 'Discriminator loss 0.2182', 'Discriminator accuracy 0.9316', 'Total loss: 0.4348', 'for batch', 34)
('GAN loss 0.1981 ', 'GAN acc 0.9961', 'Discriminator loss 0.1743', 'Discriminator accuracy 0.9395', 'Total loss: 0.3724', 'for batch', 35)
('GAN loss 0.1794 ', 'GAN acc 0.9961', 'Discriminator loss 0.1138', 'Discriminator accuracy 0.9980', 'Total loss: 0.2932', 'for batch', 36)
('GAN loss 0.1583 ', 'GAN acc 0.9961', 'Discriminator loss 0.0952', 'Discriminator accuracy 0.9961', 'Total loss: 0.2535', 'for batch', 37)
('GAN loss 0.1433 ', 'GAN acc 0.9961', 'Discriminator loss 0.0705', 'Discriminator accuracy 1.0000', 'Total loss: 0.2138', 'for batch', 38)
('GAN loss 0.1316 ', 'GAN acc 0.9922', 'Discriminator loss 0.0626', 'Discriminator accuracy 1.0000', 'Total loss: 0.1941', 'for batch', 39)
('GAN loss 0.1170 ', 'GAN acc 0.9961', 'Discriminator loss 0.0636', 'Discriminator accuracy 0.9961', 'Total loss: 0.1806', 'for batch', 40)
('GAN loss 0.1030 ', 'GAN acc 0.9961', 'Discriminator loss 0.0497', 'Discriminator accuracy 1.0000', 'Total loss: 0.1527', 'for batch', 41)
('GAN loss 0.1238 ', 'GAN acc 0.9922', 'Discriminator loss 0.2678', 'Discriminator accuracy 0.8477', 'Total loss: 0.3915', 'for batch', 42)
('GAN loss 1.5613 ', 'GAN acc 0.0625', 'Discriminator loss 0.0754', 'Discriminator accuracy 0.9980', 'Total loss: 1.6367', 'for batch', 43)
('GAN loss 0.7515 ', 'GAN acc 0.9570', 'Discriminator loss 1.1905', 'Discriminator accuracy 0.5195', 'Total loss: 1.9420', 'for batch', 44)
('GAN loss 0.8760 ', 'GAN acc 0.9570', 'Discriminator loss 0.9037', 'Discriminator accuracy 0.5430', 'Total loss: 1.7797', 'for batch', 45)
('GAN loss 1.2921 ', 'GAN acc 0.9062', 'Discriminator loss 0.6863', 'Discriminator accuracy 0.5352', 'Total loss: 1.9784', 'for batch', 46)
('GAN loss 1.2941 ', 'GAN acc 0.4570', 'Discriminator loss 0.5753', 'Discriminator accuracy 0.5352', 'Total loss: 1.8694', 'for batch', 47)
('GAN loss 1.3929 ', 'GAN acc 0.1484', 'Discriminator loss 0.5526', 'Discriminator accuracy 0.6016', 'Total loss: 1.9455', 'for batch', 48)
('GAN loss 1.3558 ', 'GAN acc 0.2031', 'Discriminator loss 0.5902', 'Discriminator accuracy 0.7207', 'Total loss: 1.9460', 'for batch', 49)
('GAN loss 1.2112 ', 'GAN acc 0.3828', 'Discriminator loss 0.5946', 'Discriminator accuracy 0.6660', 'Total loss: 1.8058', 'for batch', 50)
('GAN loss 1.6095 ', 'GAN acc 0.5859', 'Discriminator loss 0.6192', 'Discriminator accuracy 0.5684', 'Total loss: 2.2288', 'for batch', 51)
('GAN loss 1.4046 ', 'GAN acc 0.5742', 'Discriminator loss 0.6306', 'Discriminator accuracy 0.5449', 'Total loss: 2.0352', 'for batch', 52)
('GAN loss 1.3888 ', 'GAN acc 0.4414', 'Discriminator loss 0.6449', 'Discriminator accuracy 0.5352', 'Total loss: 2.0336', 'for batch', 53)
('GAN loss 1.5501 ', 'GAN acc 0.4414', 'Discriminator loss 0.6687', 'Discriminator accuracy 0.5273', 'Total loss: 2.2189', 'for batch', 54)
('GAN loss 1.6464 ', 'GAN acc 0.0156', 'Discriminator loss 0.6039', 'Discriminator accuracy 0.6758', 'Total loss: 2.2503', 'for batch', 55)
('GAN loss 1.2211 ', 'GAN acc 0.3555', 'Discriminator loss 0.6405', 'Discriminator accuracy 0.5605', 'Total loss: 1.8616', 'for batch', 56)
('GAN loss 1.2563 ', 'GAN acc 0.2773', 'Discriminator loss 0.6937', 'Discriminator accuracy 0.5098', 'Total loss: 1.9499', 'for batch', 57)
('GAN loss 1.2626 ', 'GAN acc 0.0469', 'Discriminator loss 0.6605', 'Discriminator accuracy 0.5977', 'Total loss: 1.9230', 'for batch', 58)
('GAN loss 1.2301 ', 'GAN acc 0.0586', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5449', 'Total loss: 1.9014', 'for batch', 59)
('GAN loss 1.2533 ', 'GAN acc 0.0898', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5684', 'Total loss: 1.9242', 'for batch', 60)
('GAN loss 0.9959 ', 'GAN acc 0.1836', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.5957', 'Total loss: 1.6591', 'for batch', 61)
('GAN loss 0.9977 ', 'GAN acc 0.3359', 'Discriminator loss 0.6317', 'Discriminator accuracy 0.6621', 'Total loss: 1.6294', 'for batch', 62)
('GAN loss 0.9846 ', 'GAN acc 0.4531', 'Discriminator loss 0.6441', 'Discriminator accuracy 0.5957', 'Total loss: 1.6287', 'for batch', 63)
('GAN loss 1.2033 ', 'GAN acc 0.1719', 'Discriminator loss 0.6244', 'Discriminator accuracy 0.6406', 'Total loss: 1.8277', 'for batch', 64)
('GAN loss 1.2136 ', 'GAN acc 0.0078', 'Discriminator loss 0.5558', 'Discriminator accuracy 0.7812', 'Total loss: 1.7694', 'for batch', 65)
('GAN loss 1.3380 ', 'GAN acc 0.0000', 'Discriminator loss 0.5104', 'Discriminator accuracy 0.9531', 'Total loss: 1.8484', 'for batch', 66)
('GAN loss 1.1123 ', 'GAN acc 0.0430', 'Discriminator loss 0.5513', 'Discriminator accuracy 0.8359', 'Total loss: 1.6636', 'for batch', 67)
('GAN loss 0.9573 ', 'GAN acc 0.2266', 'Discriminator loss 0.6490', 'Discriminator accuracy 0.5195', 'Total loss: 1.6063', 'for batch', 68)
('GAN loss 1.1244 ', 'GAN acc 0.0117', 'Discriminator loss 0.6574', 'Discriminator accuracy 0.5918', 'Total loss: 1.7818', 'for batch', 69)
('GAN loss 1.2106 ', 'GAN acc 0.0234', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.5352', 'Total loss: 1.8752', 'for batch', 70)
('GAN loss 1.2492 ', 'GAN acc 0.0117', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.4941', 'Total loss: 1.9237', 'for batch', 71)
('GAN loss 0.9492 ', 'GAN acc 0.1797', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.4863', 'Total loss: 1.6373', 'for batch', 72)
('GAN loss 1.0567 ', 'GAN acc 0.0352', 'Discriminator loss 0.6206', 'Discriminator accuracy 0.6836', 'Total loss: 1.6773', 'for batch', 73)
('GAN loss 1.0727 ', 'GAN acc 0.0742', 'Discriminator loss 0.6176', 'Discriminator accuracy 0.7051', 'Total loss: 1.6903', 'for batch', 74)
('GAN loss 0.8542 ', 'GAN acc 0.7148', 'Discriminator loss 0.6802', 'Discriminator accuracy 0.5020', 'Total loss: 1.5344', 'for batch', 75)
('GAN loss 0.8778 ', 'GAN acc 0.7344', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.5996', 'Total loss: 1.5409', 'for batch', 76)
('GAN loss 0.7803 ', 'GAN acc 0.6367', 'Discriminator loss 0.7056', 'Discriminator accuracy 0.5312', 'Total loss: 1.4859', 'for batch', 77)
('GAN loss 0.8734 ', 'GAN acc 0.5547', 'Discriminator loss 0.6924', 'Discriminator accuracy 0.5449', 'Total loss: 1.5658', 'for batch', 78)
('GAN loss 0.9007 ', 'GAN acc 0.4688', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5664', 'Total loss: 1.5786', 'for batch', 79)
('GAN loss 0.9012 ', 'GAN acc 0.4805', 'Discriminator loss 0.6715', 'Discriminator accuracy 0.5625', 'Total loss: 1.5728', 'for batch', 80)
('GAN loss 0.8917 ', 'GAN acc 0.3789', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5293', 'Total loss: 1.5744', 'for batch', 81)
('GAN loss 0.8894 ', 'GAN acc 0.3242', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.5352', 'Total loss: 1.5712', 'for batch', 82)
('GAN loss 0.9075 ', 'GAN acc 0.1602', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.5918', 'Total loss: 1.5642', 'for batch', 83)
('GAN loss 0.7955 ', 'GAN acc 0.4180', 'Discriminator loss 0.6635', 'Discriminator accuracy 0.5312', 'Total loss: 1.4591', 'for batch', 84)
('GAN loss 0.8807 ', 'GAN acc 0.6758', 'Discriminator loss 0.6813', 'Discriminator accuracy 0.4805', 'Total loss: 1.5620', 'for batch', 85)
('GAN loss 0.8690 ', 'GAN acc 0.1602', 'Discriminator loss 0.6487', 'Discriminator accuracy 0.5859', 'Total loss: 1.5176', 'for batch', 86)
('GAN loss 0.8949 ', 'GAN acc 0.2773', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.5801', 'Total loss: 1.5501', 'for batch', 87)
('GAN loss 0.8432 ', 'GAN acc 0.3008', 'Discriminator loss 0.6585', 'Discriminator accuracy 0.5527', 'Total loss: 1.5018', 'for batch', 88)
('GAN loss 0.8940 ', 'GAN acc 0.1328', 'Discriminator loss 0.6522', 'Discriminator accuracy 0.5977', 'Total loss: 1.5462', 'for batch', 89)
('GAN loss 0.8573 ', 'GAN acc 0.1562', 'Discriminator loss 0.6286', 'Discriminator accuracy 0.6641', 'Total loss: 1.4859', 'for batch', 90)
('GAN loss 0.7923 ', 'GAN acc 0.3477', 'Discriminator loss 0.6599', 'Discriminator accuracy 0.5977', 'Total loss: 1.4522', 'for batch', 91)
('GAN loss 0.7907 ', 'GAN acc 0.5430', 'Discriminator loss 0.6921', 'Discriminator accuracy 0.5254', 'Total loss: 1.4828', 'for batch', 92)
('GAN loss 0.7932 ', 'GAN acc 0.4961', 'Discriminator loss 0.6595', 'Discriminator accuracy 0.5625', 'Total loss: 1.4527', 'for batch', 93)
('GAN loss 0.7864 ', 'GAN acc 0.3906', 'Discriminator loss 0.6617', 'Discriminator accuracy 0.5078', 'Total loss: 1.4480', 'for batch', 94)
('GAN loss 0.8337 ', 'GAN acc 0.3906', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.5332', 'Total loss: 1.4860', 'for batch', 95)
('GAN loss 0.8586 ', 'GAN acc 0.2539', 'Discriminator loss 0.6590', 'Discriminator accuracy 0.5273', 'Total loss: 1.5176', 'for batch', 96)
('GAN loss 0.9184 ', 'GAN acc 0.2383', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.5137', 'Total loss: 1.6012', 'for batch', 97)
('GAN loss 0.8538 ', 'GAN acc 0.2617', 'Discriminator loss 0.6698', 'Discriminator accuracy 0.5410', 'Total loss: 1.5236', 'for batch', 98)
('GAN loss 0.9395 ', 'GAN acc 0.1680', 'Discriminator loss 0.6689', 'Discriminator accuracy 0.5352', 'Total loss: 1.6084', 'for batch', 99)
('GAN loss 0.8012 ', 'GAN acc 0.4102', 'Discriminator loss 0.6630', 'Discriminator accuracy 0.5352', 'Total loss: 1.4642', 'for batch', 100)
('GAN loss 0.7833 ', 'GAN acc 0.6406', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5352', 'Total loss: 1.4569', 'for batch', 101)
('GAN loss 0.8861 ', 'GAN acc 0.6250', 'Discriminator loss 0.6694', 'Discriminator accuracy 0.5605', 'Total loss: 1.5555', 'for batch', 102)
('GAN loss 0.8373 ', 'GAN acc 0.6055', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5488', 'Total loss: 1.5051', 'for batch', 103)
('GAN loss 0.8670 ', 'GAN acc 0.5039', 'Discriminator loss 0.6553', 'Discriminator accuracy 0.5820', 'Total loss: 1.5224', 'for batch', 104)
('GAN loss 0.8949 ', 'GAN acc 0.4414', 'Discriminator loss 0.6604', 'Discriminator accuracy 0.5645', 'Total loss: 1.5553', 'for batch', 105)
('GAN loss 0.7972 ', 'GAN acc 0.4727', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5957', 'Total loss: 1.4611', 'for batch', 106)
('GAN loss 0.7938 ', 'GAN acc 0.5117', 'Discriminator loss 0.6785', 'Discriminator accuracy 0.5078', 'Total loss: 1.4723', 'for batch', 107)
('GAN loss 0.8446 ', 'GAN acc 0.4883', 'Discriminator loss 0.6720', 'Discriminator accuracy 0.5215', 'Total loss: 1.5166', 'for batch', 108)
('GAN loss 0.8319 ', 'GAN acc 0.6250', 'Discriminator loss 0.6845', 'Discriminator accuracy 0.4941', 'Total loss: 1.5164', 'for batch', 109)
('GAN loss 1.0869 ', 'GAN acc 0.6133', 'Discriminator loss 0.6828', 'Discriminator accuracy 0.4922', 'Total loss: 1.7696', 'for batch', 110)
('GAN loss 1.0455 ', 'GAN acc 0.2773', 'Discriminator loss 0.6695', 'Discriminator accuracy 0.5156', 'Total loss: 1.7150', 'for batch', 111)
('GAN loss 0.8913 ', 'GAN acc 0.4766', 'Discriminator loss 0.6637', 'Discriminator accuracy 0.5449', 'Total loss: 1.5550', 'for batch', 112)
('GAN loss 0.8300 ', 'GAN acc 0.6211', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.4824', 'Total loss: 1.5156', 'for batch', 113)
('GAN loss 0.8201 ', 'GAN acc 0.5469', 'Discriminator loss 0.6526', 'Discriminator accuracy 0.5312', 'Total loss: 1.4727', 'for batch', 114)
('GAN loss 0.8159 ', 'GAN acc 0.3828', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5039', 'Total loss: 1.4812', 'for batch', 115)
('GAN loss 0.8121 ', 'GAN acc 0.3320', 'Discriminator loss 0.6647', 'Discriminator accuracy 0.5273', 'Total loss: 1.4769', 'for batch', 116)
('GAN loss 0.8409 ', 'GAN acc 0.2852', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.5684', 'Total loss: 1.4955', 'for batch', 117)
('GAN loss 0.8386 ', 'GAN acc 0.2227', 'Discriminator loss 0.6731', 'Discriminator accuracy 0.5020', 'Total loss: 1.5117', 'for batch', 118)
('GAN loss 0.8091 ', 'GAN acc 0.1992', 'Discriminator loss 0.6614', 'Discriminator accuracy 0.5488', 'Total loss: 1.4705', 'for batch', 119)
('GAN loss 0.8640 ', 'GAN acc 0.2031', 'Discriminator loss 0.6698', 'Discriminator accuracy 0.5195', 'Total loss: 1.5337', 'for batch', 120)
('GAN loss 0.8281 ', 'GAN acc 0.3398', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.4922', 'Total loss: 1.5210', 'for batch', 121)
('GAN loss 0.7946 ', 'GAN acc 0.4453', 'Discriminator loss 0.6688', 'Discriminator accuracy 0.5449', 'Total loss: 1.4634', 'for batch', 122)
('GAN loss 0.8006 ', 'GAN acc 0.6602', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.4902', 'Total loss: 1.4638', 'for batch', 123)
('GAN loss 0.8329 ', 'GAN acc 0.6367', 'Discriminator loss 0.6566', 'Discriminator accuracy 0.5547', 'Total loss: 1.4895', 'for batch', 124)
('GAN loss 0.8398 ', 'GAN acc 0.6758', 'Discriminator loss 0.6463', 'Discriminator accuracy 0.5801', 'Total loss: 1.4860', 'for batch', 125)
('GAN loss 0.7573 ', 'GAN acc 0.7148', 'Discriminator loss 0.6695', 'Discriminator accuracy 0.5293', 'Total loss: 1.4267', 'for batch', 126)
('GAN loss 0.8002 ', 'GAN acc 0.7969', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.5234', 'Total loss: 1.4735', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.55540437)
('DISCRIMINATOR_Imagem FAKE=', 0.51371849)
('Discriminator trained', 73, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.319925')
----------------------------------
('Epoch', 44, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7810 ', 'GAN acc 0.7109', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.4863', 'Total loss: 1.4623', 'for batch', 0)
('GAN loss 0.8318 ', 'GAN acc 0.3359', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.5234', 'Total loss: 1.4966', 'for batch', 1)
('GAN loss 0.8566 ', 'GAN acc 0.2773', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.5020', 'Total loss: 1.5184', 'for batch', 2)
('GAN loss 0.8316 ', 'GAN acc 0.3359', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.5156', 'Total loss: 1.4965', 'for batch', 3)
('GAN loss 0.8443 ', 'GAN acc 0.3008', 'Discriminator loss 0.6730', 'Discriminator accuracy 0.5117', 'Total loss: 1.5173', 'for batch', 4)
('GAN loss 0.8301 ', 'GAN acc 0.2344', 'Discriminator loss 0.6622', 'Discriminator accuracy 0.5684', 'Total loss: 1.4923', 'for batch', 5)
('GAN loss 0.8486 ', 'GAN acc 0.2500', 'Discriminator loss 0.6638', 'Discriminator accuracy 0.5547', 'Total loss: 1.5124', 'for batch', 6)
('GAN loss 0.8458 ', 'GAN acc 0.3359', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5547', 'Total loss: 1.5259', 'for batch', 7)
('GAN loss 0.8415 ', 'GAN acc 0.3828', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.5254', 'Total loss: 1.5197', 'for batch', 8)
('GAN loss 0.8484 ', 'GAN acc 0.2734', 'Discriminator loss 0.6823', 'Discriminator accuracy 0.5273', 'Total loss: 1.5307', 'for batch', 9)
('GAN loss 0.8261 ', 'GAN acc 0.3164', 'Discriminator loss 0.6825', 'Discriminator accuracy 0.5078', 'Total loss: 1.5085', 'for batch', 10)
('GAN loss 0.8696 ', 'GAN acc 0.2773', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5273', 'Total loss: 1.5422', 'for batch', 11)
('GAN loss 0.8823 ', 'GAN acc 0.3555', 'Discriminator loss 0.6875', 'Discriminator accuracy 0.4863', 'Total loss: 1.5698', 'for batch', 12)
('GAN loss 0.8350 ', 'GAN acc 0.3477', 'Discriminator loss 0.6840', 'Discriminator accuracy 0.5273', 'Total loss: 1.5190', 'for batch', 13)
('GAN loss 0.8594 ', 'GAN acc 0.4531', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.5957', 'Total loss: 1.5260', 'for batch', 14)
('GAN loss 0.8503 ', 'GAN acc 0.3516', 'Discriminator loss 0.6566', 'Discriminator accuracy 0.6387', 'Total loss: 1.5069', 'for batch', 15)
('GAN loss 0.8569 ', 'GAN acc 0.4180', 'Discriminator loss 0.6446', 'Discriminator accuracy 0.6875', 'Total loss: 1.5015', 'for batch', 16)
('GAN loss 0.8115 ', 'GAN acc 0.5039', 'Discriminator loss 0.6511', 'Discriminator accuracy 0.6621', 'Total loss: 1.4626', 'for batch', 17)
('GAN loss 0.8362 ', 'GAN acc 0.4570', 'Discriminator loss 0.6398', 'Discriminator accuracy 0.6543', 'Total loss: 1.4760', 'for batch', 18)
('GAN loss 0.8341 ', 'GAN acc 0.6641', 'Discriminator loss 0.6609', 'Discriminator accuracy 0.5879', 'Total loss: 1.4950', 'for batch', 19)
('GAN loss 0.8434 ', 'GAN acc 0.7734', 'Discriminator loss 0.6975', 'Discriminator accuracy 0.4824', 'Total loss: 1.5408', 'for batch', 20)
('GAN loss 0.8248 ', 'GAN acc 0.7383', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.4902', 'Total loss: 1.5137', 'for batch', 21)
('GAN loss 0.8697 ', 'GAN acc 0.4648', 'Discriminator loss 0.6786', 'Discriminator accuracy 0.5449', 'Total loss: 1.5483', 'for batch', 22)
('GAN loss 0.8224 ', 'GAN acc 0.5781', 'Discriminator loss 0.6748', 'Discriminator accuracy 0.5215', 'Total loss: 1.4972', 'for batch', 23)
('GAN loss 0.9259 ', 'GAN acc 0.3125', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5469', 'Total loss: 1.5911', 'for batch', 24)
('GAN loss 0.8570 ', 'GAN acc 0.5938', 'Discriminator loss 0.6986', 'Discriminator accuracy 0.5156', 'Total loss: 1.5557', 'for batch', 25)
('GAN loss 0.8086 ', 'GAN acc 0.5977', 'Discriminator loss 0.6796', 'Discriminator accuracy 0.4922', 'Total loss: 1.4883', 'for batch', 26)
('GAN loss 0.7831 ', 'GAN acc 0.6055', 'Discriminator loss 0.6714', 'Discriminator accuracy 0.5391', 'Total loss: 1.4545', 'for batch', 27)
('GAN loss 0.7648 ', 'GAN acc 0.6211', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5723', 'Total loss: 1.4393', 'for batch', 28)
('GAN loss 0.7638 ', 'GAN acc 0.5352', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.5547', 'Total loss: 1.4339', 'for batch', 29)
('GAN loss 0.7943 ', 'GAN acc 0.4961', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5137', 'Total loss: 1.4708', 'for batch', 30)
('GAN loss 0.8180 ', 'GAN acc 0.4805', 'Discriminator loss 0.6746', 'Discriminator accuracy 0.5625', 'Total loss: 1.4925', 'for batch', 31)
('GAN loss 0.8072 ', 'GAN acc 0.3789', 'Discriminator loss 0.6671', 'Discriminator accuracy 0.5645', 'Total loss: 1.4743', 'for batch', 32)
('GAN loss 0.8011 ', 'GAN acc 0.3242', 'Discriminator loss 0.6666', 'Discriminator accuracy 0.5820', 'Total loss: 1.4676', 'for batch', 33)
('GAN loss 0.8221 ', 'GAN acc 0.3711', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5938', 'Total loss: 1.4845', 'for batch', 34)
('GAN loss 0.8299 ', 'GAN acc 0.3594', 'Discriminator loss 0.6683', 'Discriminator accuracy 0.5391', 'Total loss: 1.4981', 'for batch', 35)
('GAN loss 0.8139 ', 'GAN acc 0.3711', 'Discriminator loss 0.6705', 'Discriminator accuracy 0.5215', 'Total loss: 1.4844', 'for batch', 36)
('GAN loss 0.8742 ', 'GAN acc 0.4844', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5117', 'Total loss: 1.5396', 'for batch', 37)
('GAN loss 0.7761 ', 'GAN acc 0.6406', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.4941', 'Total loss: 1.4468', 'for batch', 38)
('GAN loss 0.8272 ', 'GAN acc 0.7031', 'Discriminator loss 0.6788', 'Discriminator accuracy 0.4844', 'Total loss: 1.5060', 'for batch', 39)
('GAN loss 0.7821 ', 'GAN acc 0.7656', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5176', 'Total loss: 1.4524', 'for batch', 40)
('GAN loss 0.7413 ', 'GAN acc 0.7031', 'Discriminator loss 0.6697', 'Discriminator accuracy 0.5488', 'Total loss: 1.4110', 'for batch', 41)
('GAN loss 0.7675 ', 'GAN acc 0.6328', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.5176', 'Total loss: 1.4494', 'for batch', 42)
('GAN loss 0.7746 ', 'GAN acc 0.6289', 'Discriminator loss 0.6561', 'Discriminator accuracy 0.5879', 'Total loss: 1.4307', 'for batch', 43)
('GAN loss 0.7792 ', 'GAN acc 0.6289', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.5508', 'Total loss: 1.4526', 'for batch', 44)
('GAN loss 0.7850 ', 'GAN acc 0.6875', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.5410', 'Total loss: 1.4496', 'for batch', 45)
('GAN loss 0.8171 ', 'GAN acc 0.6172', 'Discriminator loss 0.6641', 'Discriminator accuracy 0.5977', 'Total loss: 1.4812', 'for batch', 46)
('GAN loss 0.7846 ', 'GAN acc 0.6875', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5332', 'Total loss: 1.4688', 'for batch', 47)
('GAN loss 0.7441 ', 'GAN acc 0.7266', 'Discriminator loss 0.6252', 'Discriminator accuracy 0.6660', 'Total loss: 1.3693', 'for batch', 48)
('GAN loss 0.8318 ', 'GAN acc 0.6484', 'Discriminator loss 0.6763', 'Discriminator accuracy 0.5410', 'Total loss: 1.5082', 'for batch', 49)
('GAN loss 0.7595 ', 'GAN acc 0.7695', 'Discriminator loss 0.6881', 'Discriminator accuracy 0.5195', 'Total loss: 1.4475', 'for batch', 50)
('GAN loss 0.7488 ', 'GAN acc 0.8086', 'Discriminator loss 0.6843', 'Discriminator accuracy 0.5039', 'Total loss: 1.4331', 'for batch', 51)
('GAN loss 0.8010 ', 'GAN acc 0.7383', 'Discriminator loss 0.6728', 'Discriminator accuracy 0.5371', 'Total loss: 1.4738', 'for batch', 52)
('GAN loss 0.7613 ', 'GAN acc 0.7500', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5312', 'Total loss: 1.4385', 'for batch', 53)
('GAN loss 0.9052 ', 'GAN acc 0.6172', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5840', 'Total loss: 1.5759', 'for batch', 54)
('GAN loss 1.1183 ', 'GAN acc 0.5586', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.4863', 'Total loss: 1.8044', 'for batch', 55)
('GAN loss 0.8963 ', 'GAN acc 0.6914', 'Discriminator loss 0.6782', 'Discriminator accuracy 0.4980', 'Total loss: 1.5745', 'for batch', 56)
('GAN loss 0.8384 ', 'GAN acc 0.6250', 'Discriminator loss 0.6784', 'Discriminator accuracy 0.4980', 'Total loss: 1.5168', 'for batch', 57)
('GAN loss 0.8555 ', 'GAN acc 0.6289', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5039', 'Total loss: 1.5279', 'for batch', 58)
('GAN loss 0.8480 ', 'GAN acc 0.6797', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.4902', 'Total loss: 1.5243', 'for batch', 59)
('GAN loss 0.8076 ', 'GAN acc 0.6055', 'Discriminator loss 0.6759', 'Discriminator accuracy 0.5117', 'Total loss: 1.4835', 'for batch', 60)
('GAN loss 0.8246 ', 'GAN acc 0.5469', 'Discriminator loss 0.6734', 'Discriminator accuracy 0.5156', 'Total loss: 1.4980', 'for batch', 61)
('GAN loss 0.8314 ', 'GAN acc 0.5664', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.5059', 'Total loss: 1.5072', 'for batch', 62)
('GAN loss 0.7742 ', 'GAN acc 0.5703', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.4980', 'Total loss: 1.4604', 'for batch', 63)
('GAN loss 0.8002 ', 'GAN acc 0.4844', 'Discriminator loss 0.6665', 'Discriminator accuracy 0.5605', 'Total loss: 1.4667', 'for batch', 64)
('GAN loss 0.7952 ', 'GAN acc 0.3867', 'Discriminator loss 0.6707', 'Discriminator accuracy 0.5801', 'Total loss: 1.4659', 'for batch', 65)
('GAN loss 0.7835 ', 'GAN acc 0.4570', 'Discriminator loss 0.6744', 'Discriminator accuracy 0.5684', 'Total loss: 1.4579', 'for batch', 66)
('GAN loss 0.8711 ', 'GAN acc 0.5156', 'Discriminator loss 0.6804', 'Discriminator accuracy 0.5547', 'Total loss: 1.5515', 'for batch', 67)
('GAN loss 0.7838 ', 'GAN acc 0.6094', 'Discriminator loss 0.6916', 'Discriminator accuracy 0.5273', 'Total loss: 1.4755', 'for batch', 68)
('GAN loss 0.7258 ', 'GAN acc 0.7930', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5137', 'Total loss: 1.4010', 'for batch', 69)
('GAN loss 0.7482 ', 'GAN acc 0.7383', 'Discriminator loss 0.6704', 'Discriminator accuracy 0.5527', 'Total loss: 1.4186', 'for batch', 70)
('GAN loss 0.7598 ', 'GAN acc 0.7305', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5488', 'Total loss: 1.4307', 'for batch', 71)
('GAN loss 0.7438 ', 'GAN acc 0.6992', 'Discriminator loss 0.6815', 'Discriminator accuracy 0.5234', 'Total loss: 1.4253', 'for batch', 72)
('GAN loss 0.7189 ', 'GAN acc 0.7227', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5293', 'Total loss: 1.3949', 'for batch', 73)
('GAN loss 0.7540 ', 'GAN acc 0.6641', 'Discriminator loss 0.6826', 'Discriminator accuracy 0.5156', 'Total loss: 1.4366', 'for batch', 74)
('GAN loss 0.7407 ', 'GAN acc 0.6992', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5391', 'Total loss: 1.4176', 'for batch', 75)
('GAN loss 0.7379 ', 'GAN acc 0.6680', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5527', 'Total loss: 1.4157', 'for batch', 76)
('GAN loss 0.7814 ', 'GAN acc 0.6797', 'Discriminator loss 0.6906', 'Discriminator accuracy 0.5234', 'Total loss: 1.4720', 'for batch', 77)
('GAN loss 0.7630 ', 'GAN acc 0.5898', 'Discriminator loss 0.6867', 'Discriminator accuracy 0.5293', 'Total loss: 1.4497', 'for batch', 78)
('GAN loss 0.7743 ', 'GAN acc 0.6133', 'Discriminator loss 0.6763', 'Discriminator accuracy 0.5273', 'Total loss: 1.4506', 'for batch', 79)
('GAN loss 0.8638 ', 'GAN acc 0.5625', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5371', 'Total loss: 1.5412', 'for batch', 80)
('GAN loss 0.7828 ', 'GAN acc 0.5938', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.5566', 'Total loss: 1.4505', 'for batch', 81)
('GAN loss 0.7705 ', 'GAN acc 0.6367', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.5703', 'Total loss: 1.4378', 'for batch', 82)
('GAN loss 0.7888 ', 'GAN acc 0.6914', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.4863', 'Total loss: 1.4786', 'for batch', 83)
('GAN loss 0.7535 ', 'GAN acc 0.7773', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.5234', 'Total loss: 1.4346', 'for batch', 84)
('GAN loss 0.7471 ', 'GAN acc 0.7383', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.4961', 'Total loss: 1.4365', 'for batch', 85)
('GAN loss 0.7452 ', 'GAN acc 0.7656', 'Discriminator loss 0.6831', 'Discriminator accuracy 0.5176', 'Total loss: 1.4283', 'for batch', 86)
('GAN loss 0.7357 ', 'GAN acc 0.7383', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.4883', 'Total loss: 1.4251', 'for batch', 87)
('GAN loss 0.8022 ', 'GAN acc 0.6328', 'Discriminator loss 0.6807', 'Discriminator accuracy 0.5098', 'Total loss: 1.4829', 'for batch', 88)
('GAN loss 0.8538 ', 'GAN acc 0.6758', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5039', 'Total loss: 1.5373', 'for batch', 89)
('GAN loss 0.7576 ', 'GAN acc 0.7031', 'Discriminator loss 0.6786', 'Discriminator accuracy 0.4883', 'Total loss: 1.4362', 'for batch', 90)
('GAN loss 0.7803 ', 'GAN acc 0.7070', 'Discriminator loss 0.6887', 'Discriminator accuracy 0.5137', 'Total loss: 1.4690', 'for batch', 91)
('GAN loss 0.8017 ', 'GAN acc 0.6992', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5195', 'Total loss: 1.4756', 'for batch', 92)
('GAN loss 0.7978 ', 'GAN acc 0.7227', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.5098', 'Total loss: 1.4767', 'for batch', 93)
('GAN loss 0.7675 ', 'GAN acc 0.8008', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.4844', 'Total loss: 1.4428', 'for batch', 94)
('GAN loss 0.7385 ', 'GAN acc 0.7773', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5293', 'Total loss: 1.4132', 'for batch', 95)
('GAN loss 0.7211 ', 'GAN acc 0.8320', 'Discriminator loss 0.6884', 'Discriminator accuracy 0.4883', 'Total loss: 1.4095', 'for batch', 96)
('GAN loss 0.7001 ', 'GAN acc 0.8555', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5000', 'Total loss: 1.3850', 'for batch', 97)
('GAN loss 0.7120 ', 'GAN acc 0.8281', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5078', 'Total loss: 1.3937', 'for batch', 98)
('GAN loss 0.7364 ', 'GAN acc 0.7734', 'Discriminator loss 0.6698', 'Discriminator accuracy 0.5840', 'Total loss: 1.4062', 'for batch', 99)
('GAN loss 0.7105 ', 'GAN acc 0.8086', 'Discriminator loss 0.6601', 'Discriminator accuracy 0.5508', 'Total loss: 1.3706', 'for batch', 100)
('GAN loss 0.7363 ', 'GAN acc 0.7852', 'Discriminator loss 0.6696', 'Discriminator accuracy 0.5117', 'Total loss: 1.4058', 'for batch', 101)
('GAN loss 0.7995 ', 'GAN acc 0.7695', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5254', 'Total loss: 1.4731', 'for batch', 102)
('GAN loss 0.7868 ', 'GAN acc 0.8867', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.4902', 'Total loss: 1.4656', 'for batch', 103)
('GAN loss 0.7537 ', 'GAN acc 0.8711', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5000', 'Total loss: 1.4263', 'for batch', 104)
('GAN loss 0.7326 ', 'GAN acc 0.8242', 'Discriminator loss 0.6713', 'Discriminator accuracy 0.5195', 'Total loss: 1.4039', 'for batch', 105)
('GAN loss 0.7711 ', 'GAN acc 0.7188', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5254', 'Total loss: 1.4489', 'for batch', 106)
('GAN loss 0.7787 ', 'GAN acc 0.6797', 'Discriminator loss 0.6708', 'Discriminator accuracy 0.5098', 'Total loss: 1.4495', 'for batch', 107)
('GAN loss 0.7525 ', 'GAN acc 0.4961', 'Discriminator loss 0.6804', 'Discriminator accuracy 0.4922', 'Total loss: 1.4329', 'for batch', 108)
('GAN loss 0.7782 ', 'GAN acc 0.3281', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5527', 'Total loss: 1.4569', 'for batch', 109)
('GAN loss 0.7896 ', 'GAN acc 0.3750', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.5137', 'Total loss: 1.4757', 'for batch', 110)
('GAN loss 0.7812 ', 'GAN acc 0.3633', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.5605', 'Total loss: 1.4543', 'for batch', 111)
('GAN loss 0.7697 ', 'GAN acc 0.3906', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.6094', 'Total loss: 1.4429', 'for batch', 112)
('GAN loss 0.7792 ', 'GAN acc 0.3945', 'Discriminator loss 0.6859', 'Discriminator accuracy 0.5391', 'Total loss: 1.4650', 'for batch', 113)
('GAN loss 0.7734 ', 'GAN acc 0.3906', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.6055', 'Total loss: 1.4328', 'for batch', 114)
('GAN loss 0.7457 ', 'GAN acc 0.4375', 'Discriminator loss 0.6582', 'Discriminator accuracy 0.6250', 'Total loss: 1.4039', 'for batch', 115)
('GAN loss 0.7387 ', 'GAN acc 0.4961', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.6230', 'Total loss: 1.4036', 'for batch', 116)
('GAN loss 0.7505 ', 'GAN acc 0.5820', 'Discriminator loss 0.6468', 'Discriminator accuracy 0.6484', 'Total loss: 1.3972', 'for batch', 117)
('GAN loss 0.7484 ', 'GAN acc 0.6055', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5469', 'Total loss: 1.4253', 'for batch', 118)
('GAN loss 0.7403 ', 'GAN acc 0.6562', 'Discriminator loss 0.6768', 'Discriminator accuracy 0.5312', 'Total loss: 1.4172', 'for batch', 119)
('GAN loss 0.7224 ', 'GAN acc 0.6797', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5762', 'Total loss: 1.3950', 'for batch', 120)
('GAN loss 0.7267 ', 'GAN acc 0.6562', 'Discriminator loss 0.6854', 'Discriminator accuracy 0.4863', 'Total loss: 1.4122', 'for batch', 121)
('GAN loss 0.7701 ', 'GAN acc 0.6367', 'Discriminator loss 0.6503', 'Discriminator accuracy 0.5078', 'Total loss: 1.4204', 'for batch', 122)
('GAN loss 0.7558 ', 'GAN acc 0.7422', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5098', 'Total loss: 1.4281', 'for batch', 123)
('GAN loss 0.8184 ', 'GAN acc 0.5430', 'Discriminator loss 0.6736', 'Discriminator accuracy 0.5293', 'Total loss: 1.4920', 'for batch', 124)
('GAN loss 0.8370 ', 'GAN acc 0.7891', 'Discriminator loss 0.6662', 'Discriminator accuracy 0.5371', 'Total loss: 1.5032', 'for batch', 125)
('GAN loss 0.7489 ', 'GAN acc 0.7812', 'Discriminator loss 0.6789', 'Discriminator accuracy 0.5273', 'Total loss: 1.4278', 'for batch', 126)
('GAN loss 0.7750 ', 'GAN acc 0.7148', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.4941', 'Total loss: 1.4494', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54150778)
('DISCRIMINATOR_Imagem FAKE=', 0.50007707)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.756881')
----------------------------------
('Epoch', 45, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7639 ', 'GAN acc 0.6211', 'Discriminator loss 0.6663', 'Discriminator accuracy 0.5059', 'Total loss: 1.4302', 'for batch', 0)
('GAN loss 0.7318 ', 'GAN acc 0.5508', 'Discriminator loss 0.6686', 'Discriminator accuracy 0.5312', 'Total loss: 1.4004', 'for batch', 1)
('GAN loss 0.7825 ', 'GAN acc 0.5352', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.5352', 'Total loss: 1.4533', 'for batch', 2)
('GAN loss 0.7640 ', 'GAN acc 0.4414', 'Discriminator loss 0.6727', 'Discriminator accuracy 0.4844', 'Total loss: 1.4366', 'for batch', 3)
('GAN loss 0.7661 ', 'GAN acc 0.3398', 'Discriminator loss 0.6733', 'Discriminator accuracy 0.5254', 'Total loss: 1.4395', 'for batch', 4)
('GAN loss 0.7449 ', 'GAN acc 0.2500', 'Discriminator loss 0.6649', 'Discriminator accuracy 0.5078', 'Total loss: 1.4099', 'for batch', 5)
('GAN loss 0.7899 ', 'GAN acc 0.2734', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.5273', 'Total loss: 1.4584', 'for batch', 6)
('GAN loss 0.8138 ', 'GAN acc 0.2148', 'Discriminator loss 0.6800', 'Discriminator accuracy 0.5156', 'Total loss: 1.4938', 'for batch', 7)
('GAN loss 0.8134 ', 'GAN acc 0.2461', 'Discriminator loss 0.6709', 'Discriminator accuracy 0.4941', 'Total loss: 1.4842', 'for batch', 8)
('GAN loss 0.7745 ', 'GAN acc 0.3594', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.5469', 'Total loss: 1.4448', 'for batch', 9)
('GAN loss 0.7468 ', 'GAN acc 0.6133', 'Discriminator loss 0.6720', 'Discriminator accuracy 0.5312', 'Total loss: 1.4187', 'for batch', 10)
('GAN loss 0.7563 ', 'GAN acc 0.7305', 'Discriminator loss 0.6637', 'Discriminator accuracy 0.5293', 'Total loss: 1.4200', 'for batch', 11)
('GAN loss 0.7904 ', 'GAN acc 0.6680', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.5938', 'Total loss: 1.4450', 'for batch', 12)
('GAN loss 0.7602 ', 'GAN acc 0.7773', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.5059', 'Total loss: 1.4356', 'for batch', 13)
('GAN loss 0.7578 ', 'GAN acc 0.7109', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.5742', 'Total loss: 1.4226', 'for batch', 14)
('GAN loss 0.7272 ', 'GAN acc 0.7344', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5078', 'Total loss: 1.4029', 'for batch', 15)
('GAN loss 0.6979 ', 'GAN acc 0.7422', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.5039', 'Total loss: 1.3859', 'for batch', 16)
('GAN loss 0.6928 ', 'GAN acc 0.6328', 'Discriminator loss 0.6919', 'Discriminator accuracy 0.5020', 'Total loss: 1.3847', 'for batch', 17)
('GAN loss 0.7199 ', 'GAN acc 0.6250', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5273', 'Total loss: 1.4090', 'for batch', 18)
('GAN loss 0.7404 ', 'GAN acc 0.4961', 'Discriminator loss 0.6891', 'Discriminator accuracy 0.5293', 'Total loss: 1.4295', 'for batch', 19)
('GAN loss 0.7953 ', 'GAN acc 0.2266', 'Discriminator loss 0.6793', 'Discriminator accuracy 0.5703', 'Total loss: 1.4747', 'for batch', 20)
('GAN loss 0.7861 ', 'GAN acc 0.1953', 'Discriminator loss 0.6646', 'Discriminator accuracy 0.6133', 'Total loss: 1.4508', 'for batch', 21)
('GAN loss 0.8051 ', 'GAN acc 0.1680', 'Discriminator loss 0.6519', 'Discriminator accuracy 0.6914', 'Total loss: 1.4570', 'for batch', 22)
('GAN loss 0.8132 ', 'GAN acc 0.2344', 'Discriminator loss 0.6449', 'Discriminator accuracy 0.7090', 'Total loss: 1.4581', 'for batch', 23)
('GAN loss 0.8373 ', 'GAN acc 0.3516', 'Discriminator loss 0.6316', 'Discriminator accuracy 0.7207', 'Total loss: 1.4689', 'for batch', 24)
('GAN loss 0.7797 ', 'GAN acc 0.4805', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.6172', 'Total loss: 1.4543', 'for batch', 25)
('GAN loss 0.7080 ', 'GAN acc 0.7852', 'Discriminator loss 0.6977', 'Discriminator accuracy 0.4922', 'Total loss: 1.4057', 'for batch', 26)
('GAN loss 0.7277 ', 'GAN acc 0.7500', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.4844', 'Total loss: 1.4132', 'for batch', 27)
('GAN loss 0.7388 ', 'GAN acc 0.6836', 'Discriminator loss 0.6935', 'Discriminator accuracy 0.5117', 'Total loss: 1.4322', 'for batch', 28)
('GAN loss 0.7247 ', 'GAN acc 0.7148', 'Discriminator loss 0.6770', 'Discriminator accuracy 0.5195', 'Total loss: 1.4016', 'for batch', 29)
('GAN loss 0.7265 ', 'GAN acc 0.7031', 'Discriminator loss 0.6818', 'Discriminator accuracy 0.5059', 'Total loss: 1.4083', 'for batch', 30)
('GAN loss 0.7332 ', 'GAN acc 0.5469', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5176', 'Total loss: 1.4164', 'for batch', 31)
('GAN loss 0.7471 ', 'GAN acc 0.5039', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5410', 'Total loss: 1.4223', 'for batch', 32)
('GAN loss 0.7408 ', 'GAN acc 0.5547', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.5156', 'Total loss: 1.4186', 'for batch', 33)
('GAN loss 0.7866 ', 'GAN acc 0.4258', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.5488', 'Total loss: 1.4507', 'for batch', 34)
('GAN loss 0.7286 ', 'GAN acc 0.5664', 'Discriminator loss 0.6681', 'Discriminator accuracy 0.5195', 'Total loss: 1.3968', 'for batch', 35)
('GAN loss 0.7177 ', 'GAN acc 0.7383', 'Discriminator loss 0.6632', 'Discriminator accuracy 0.5234', 'Total loss: 1.3809', 'for batch', 36)
('GAN loss 0.6919 ', 'GAN acc 0.8711', 'Discriminator loss 0.6546', 'Discriminator accuracy 0.5000', 'Total loss: 1.3465', 'for batch', 37)
('GAN loss 0.7615 ', 'GAN acc 0.5469', 'Discriminator loss 0.6560', 'Discriminator accuracy 0.5352', 'Total loss: 1.4175', 'for batch', 38)
('GAN loss 0.8021 ', 'GAN acc 0.4922', 'Discriminator loss 0.6311', 'Discriminator accuracy 0.5645', 'Total loss: 1.4332', 'for batch', 39)
('GAN loss 0.7524 ', 'GAN acc 0.5664', 'Discriminator loss 0.6533', 'Discriminator accuracy 0.5352', 'Total loss: 1.4057', 'for batch', 40)
('GAN loss 0.7626 ', 'GAN acc 0.4375', 'Discriminator loss 0.6860', 'Discriminator accuracy 0.5098', 'Total loss: 1.4486', 'for batch', 41)
('GAN loss 0.7475 ', 'GAN acc 0.4609', 'Discriminator loss 0.6750', 'Discriminator accuracy 0.4941', 'Total loss: 1.4225', 'for batch', 42)
('GAN loss 0.7344 ', 'GAN acc 0.4258', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5078', 'Total loss: 1.4018', 'for batch', 43)
('GAN loss 0.7821 ', 'GAN acc 0.5039', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.5020', 'Total loss: 1.4629', 'for batch', 44)
('GAN loss 0.7577 ', 'GAN acc 0.6016', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5098', 'Total loss: 1.4349', 'for batch', 45)
('GAN loss 0.7533 ', 'GAN acc 0.5742', 'Discriminator loss 0.6725', 'Discriminator accuracy 0.5352', 'Total loss: 1.4257', 'for batch', 46)
('GAN loss 0.7055 ', 'GAN acc 0.6836', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5215', 'Total loss: 1.3913', 'for batch', 47)
('GAN loss 0.7343 ', 'GAN acc 0.6719', 'Discriminator loss 0.6571', 'Discriminator accuracy 0.5898', 'Total loss: 1.3915', 'for batch', 48)
('GAN loss 0.7516 ', 'GAN acc 0.6719', 'Discriminator loss 0.6811', 'Discriminator accuracy 0.5176', 'Total loss: 1.4327', 'for batch', 49)
('GAN loss 0.7047 ', 'GAN acc 0.6914', 'Discriminator loss 0.6803', 'Discriminator accuracy 0.5371', 'Total loss: 1.3850', 'for batch', 50)
('GAN loss 0.6973 ', 'GAN acc 0.7188', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5234', 'Total loss: 1.3836', 'for batch', 51)
('GAN loss 0.7109 ', 'GAN acc 0.6875', 'Discriminator loss 0.6497', 'Discriminator accuracy 0.5977', 'Total loss: 1.3606', 'for batch', 52)
('GAN loss 0.7063 ', 'GAN acc 0.6992', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.5469', 'Total loss: 1.3620', 'for batch', 53)
('GAN loss 0.7126 ', 'GAN acc 0.7461', 'Discriminator loss 0.6589', 'Discriminator accuracy 0.5742', 'Total loss: 1.3715', 'for batch', 54)
('GAN loss 0.7429 ', 'GAN acc 0.8359', 'Discriminator loss 0.6995', 'Discriminator accuracy 0.5098', 'Total loss: 1.4423', 'for batch', 55)
('GAN loss 0.6607 ', 'GAN acc 0.8906', 'Discriminator loss 0.6863', 'Discriminator accuracy 0.5332', 'Total loss: 1.3470', 'for batch', 56)
('GAN loss 0.6812 ', 'GAN acc 0.8711', 'Discriminator loss 0.6697', 'Discriminator accuracy 0.5508', 'Total loss: 1.3510', 'for batch', 57)
('GAN loss 0.7117 ', 'GAN acc 0.7969', 'Discriminator loss 0.6762', 'Discriminator accuracy 0.5547', 'Total loss: 1.3879', 'for batch', 58)
('GAN loss 0.7497 ', 'GAN acc 0.7539', 'Discriminator loss 0.6765', 'Discriminator accuracy 0.5664', 'Total loss: 1.4262', 'for batch', 59)
('GAN loss 0.7249 ', 'GAN acc 0.7422', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.5371', 'Total loss: 1.4059', 'for batch', 60)
('GAN loss 0.7538 ', 'GAN acc 0.7344', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5215', 'Total loss: 1.4244', 'for batch', 61)
('GAN loss 0.7502 ', 'GAN acc 0.7656', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5547', 'Total loss: 1.4274', 'for batch', 62)
('GAN loss 0.7794 ', 'GAN acc 0.7344', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5352', 'Total loss: 1.4571', 'for batch', 63)
('GAN loss 0.7465 ', 'GAN acc 0.7383', 'Discriminator loss 0.6730', 'Discriminator accuracy 0.5352', 'Total loss: 1.4195', 'for batch', 64)
('GAN loss 0.7262 ', 'GAN acc 0.7617', 'Discriminator loss 0.6723', 'Discriminator accuracy 0.5215', 'Total loss: 1.3985', 'for batch', 65)
('GAN loss 0.7389 ', 'GAN acc 0.7266', 'Discriminator loss 0.6754', 'Discriminator accuracy 0.5117', 'Total loss: 1.4143', 'for batch', 66)
('GAN loss 0.7668 ', 'GAN acc 0.7734', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.5508', 'Total loss: 1.4386', 'for batch', 67)
('GAN loss 0.7787 ', 'GAN acc 0.6797', 'Discriminator loss 0.6675', 'Discriminator accuracy 0.5488', 'Total loss: 1.4462', 'for batch', 68)
('GAN loss 0.7355 ', 'GAN acc 0.7461', 'Discriminator loss 0.6766', 'Discriminator accuracy 0.5000', 'Total loss: 1.4121', 'for batch', 69)
('GAN loss 0.7819 ', 'GAN acc 0.7695', 'Discriminator loss 0.6735', 'Discriminator accuracy 0.5195', 'Total loss: 1.4554', 'for batch', 70)
('GAN loss 0.7683 ', 'GAN acc 0.7305', 'Discriminator loss 0.6455', 'Discriminator accuracy 0.5488', 'Total loss: 1.4138', 'for batch', 71)
('GAN loss 0.7415 ', 'GAN acc 0.8438', 'Discriminator loss 0.6797', 'Discriminator accuracy 0.5176', 'Total loss: 1.4212', 'for batch', 72)
('GAN loss 0.7060 ', 'GAN acc 0.8672', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.5547', 'Total loss: 1.3596', 'for batch', 73)
('GAN loss 0.7334 ', 'GAN acc 0.9023', 'Discriminator loss 0.6638', 'Discriminator accuracy 0.5859', 'Total loss: 1.3972', 'for batch', 74)
('GAN loss 0.7376 ', 'GAN acc 0.8633', 'Discriminator loss 0.6673', 'Discriminator accuracy 0.5156', 'Total loss: 1.4049', 'for batch', 75)
('GAN loss 0.7205 ', 'GAN acc 0.9141', 'Discriminator loss 0.6470', 'Discriminator accuracy 0.5293', 'Total loss: 1.3675', 'for batch', 76)
('GAN loss 0.7324 ', 'GAN acc 0.9141', 'Discriminator loss 0.6528', 'Discriminator accuracy 0.6016', 'Total loss: 1.3852', 'for batch', 77)
('GAN loss 0.6985 ', 'GAN acc 0.9023', 'Discriminator loss 0.6625', 'Discriminator accuracy 0.5801', 'Total loss: 1.3610', 'for batch', 78)
('GAN loss 0.6535 ', 'GAN acc 0.9531', 'Discriminator loss 0.6257', 'Discriminator accuracy 0.5938', 'Total loss: 1.2792', 'for batch', 79)
('GAN loss 0.6735 ', 'GAN acc 0.9258', 'Discriminator loss 0.6618', 'Discriminator accuracy 0.6055', 'Total loss: 1.3352', 'for batch', 80)
('GAN loss 0.6953 ', 'GAN acc 0.8906', 'Discriminator loss 0.6157', 'Discriminator accuracy 0.6719', 'Total loss: 1.3111', 'for batch', 81)
('GAN loss 0.6156 ', 'GAN acc 0.9883', 'Discriminator loss 0.6956', 'Discriminator accuracy 0.5293', 'Total loss: 1.3112', 'for batch', 82)
('GAN loss 0.6121 ', 'GAN acc 0.9766', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.5117', 'Total loss: 1.3016', 'for batch', 83)
('GAN loss 0.6164 ', 'GAN acc 0.9531', 'Discriminator loss 0.6831', 'Discriminator accuracy 0.5371', 'Total loss: 1.2994', 'for batch', 84)
('GAN loss 0.6817 ', 'GAN acc 0.8086', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.5039', 'Total loss: 1.3711', 'for batch', 85)
('GAN loss 0.6901 ', 'GAN acc 0.7500', 'Discriminator loss 0.6835', 'Discriminator accuracy 0.5430', 'Total loss: 1.3736', 'for batch', 86)
('GAN loss 0.7070 ', 'GAN acc 0.6914', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5234', 'Total loss: 1.3942', 'for batch', 87)
('GAN loss 0.7060 ', 'GAN acc 0.6758', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5195', 'Total loss: 1.3908', 'for batch', 88)
('GAN loss 0.7292 ', 'GAN acc 0.6523', 'Discriminator loss 0.6776', 'Discriminator accuracy 0.5195', 'Total loss: 1.4068', 'for batch', 89)
('GAN loss 0.7020 ', 'GAN acc 0.6914', 'Discriminator loss 0.6681', 'Discriminator accuracy 0.5645', 'Total loss: 1.3701', 'for batch', 90)
('GAN loss 0.6948 ', 'GAN acc 0.7930', 'Discriminator loss 0.6833', 'Discriminator accuracy 0.5020', 'Total loss: 1.3781', 'for batch', 91)
('GAN loss 0.6887 ', 'GAN acc 0.8359', 'Discriminator loss 0.6630', 'Discriminator accuracy 0.5703', 'Total loss: 1.3517', 'for batch', 92)
('GAN loss 0.6998 ', 'GAN acc 0.8555', 'Discriminator loss 0.6677', 'Discriminator accuracy 0.5566', 'Total loss: 1.3675', 'for batch', 93)
('GAN loss 0.6485 ', 'GAN acc 0.9570', 'Discriminator loss 0.6491', 'Discriminator accuracy 0.5156', 'Total loss: 1.2976', 'for batch', 94)
('GAN loss 0.6793 ', 'GAN acc 0.9570', 'Discriminator loss 0.6737', 'Discriminator accuracy 0.5176', 'Total loss: 1.3530', 'for batch', 95)
('GAN loss 0.6409 ', 'GAN acc 0.9570', 'Discriminator loss 0.6409', 'Discriminator accuracy 0.5723', 'Total loss: 1.2818', 'for batch', 96)
('GAN loss 0.6746 ', 'GAN acc 0.9609', 'Discriminator loss 0.6671', 'Discriminator accuracy 0.5586', 'Total loss: 1.3417', 'for batch', 97)
('GAN loss 0.7784 ', 'GAN acc 0.8867', 'Discriminator loss 0.6777', 'Discriminator accuracy 0.5273', 'Total loss: 1.4561', 'for batch', 98)
('GAN loss 0.7240 ', 'GAN acc 0.8906', 'Discriminator loss 0.5964', 'Discriminator accuracy 0.7148', 'Total loss: 1.3204', 'for batch', 99)
('GAN loss 0.6633 ', 'GAN acc 0.9531', 'Discriminator loss 0.6356', 'Discriminator accuracy 0.5801', 'Total loss: 1.2989', 'for batch', 100)
('GAN loss 0.6691 ', 'GAN acc 0.9766', 'Discriminator loss 0.6122', 'Discriminator accuracy 0.5273', 'Total loss: 1.2812', 'for batch', 101)
('GAN loss 0.6901 ', 'GAN acc 0.9531', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5508', 'Total loss: 1.3535', 'for batch', 102)
('GAN loss 0.6535 ', 'GAN acc 0.9805', 'Discriminator loss 0.6514', 'Discriminator accuracy 0.5488', 'Total loss: 1.3049', 'for batch', 103)
('GAN loss 0.6462 ', 'GAN acc 0.9727', 'Discriminator loss 0.6919', 'Discriminator accuracy 0.5059', 'Total loss: 1.3381', 'for batch', 104)
('GAN loss 0.6686 ', 'GAN acc 0.9648', 'Discriminator loss 0.6276', 'Discriminator accuracy 0.6504', 'Total loss: 1.2962', 'for batch', 105)
('GAN loss 0.7292 ', 'GAN acc 0.9688', 'Discriminator loss 0.6645', 'Discriminator accuracy 0.5566', 'Total loss: 1.3937', 'for batch', 106)
('GAN loss 0.6965 ', 'GAN acc 0.9688', 'Discriminator loss 0.5488', 'Discriminator accuracy 0.6621', 'Total loss: 1.2453', 'for batch', 107)
('GAN loss 0.6113 ', 'GAN acc 0.9844', 'Discriminator loss 0.6742', 'Discriminator accuracy 0.5195', 'Total loss: 1.2855', 'for batch', 108)
('GAN loss 0.6400 ', 'GAN acc 0.9727', 'Discriminator loss 0.6850', 'Discriminator accuracy 0.5332', 'Total loss: 1.3250', 'for batch', 109)
('GAN loss 0.7906 ', 'GAN acc 0.8359', 'Discriminator loss 0.6863', 'Discriminator accuracy 0.5352', 'Total loss: 1.4769', 'for batch', 110)
('GAN loss 0.7001 ', 'GAN acc 0.7734', 'Discriminator loss 0.6472', 'Discriminator accuracy 0.6172', 'Total loss: 1.3474', 'for batch', 111)
('GAN loss 0.7618 ', 'GAN acc 0.6836', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.6172', 'Total loss: 1.4170', 'for batch', 112)
('GAN loss 0.7511 ', 'GAN acc 0.6562', 'Discriminator loss 0.6923', 'Discriminator accuracy 0.5684', 'Total loss: 1.4435', 'for batch', 113)
('GAN loss 0.7650 ', 'GAN acc 0.5508', 'Discriminator loss 0.6324', 'Discriminator accuracy 0.6875', 'Total loss: 1.3974', 'for batch', 114)
('GAN loss 0.8072 ', 'GAN acc 0.5391', 'Discriminator loss 0.6079', 'Discriminator accuracy 0.5508', 'Total loss: 1.4151', 'for batch', 115)
('GAN loss 0.7138 ', 'GAN acc 0.8008', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.4824', 'Total loss: 1.4032', 'for batch', 116)
('GAN loss 0.6988 ', 'GAN acc 0.8789', 'Discriminator loss 0.6165', 'Discriminator accuracy 0.6172', 'Total loss: 1.3153', 'for batch', 117)
('GAN loss 0.6498 ', 'GAN acc 0.9375', 'Discriminator loss 0.6896', 'Discriminator accuracy 0.4980', 'Total loss: 1.3394', 'for batch', 118)
('GAN loss 0.6642 ', 'GAN acc 0.9688', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5020', 'Total loss: 1.3466', 'for batch', 119)
('GAN loss 0.6854 ', 'GAN acc 0.9531', 'Discriminator loss 0.6493', 'Discriminator accuracy 0.5723', 'Total loss: 1.3347', 'for batch', 120)
('GAN loss 0.6606 ', 'GAN acc 0.9648', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.5703', 'Total loss: 1.3129', 'for batch', 121)
('GAN loss 0.7091 ', 'GAN acc 0.9648', 'Discriminator loss 0.6280', 'Discriminator accuracy 0.5762', 'Total loss: 1.3371', 'for batch', 122)
('GAN loss 0.7033 ', 'GAN acc 0.9688', 'Discriminator loss 0.6123', 'Discriminator accuracy 0.6230', 'Total loss: 1.3157', 'for batch', 123)
('GAN loss 0.6974 ', 'GAN acc 0.9609', 'Discriminator loss 0.6121', 'Discriminator accuracy 0.5684', 'Total loss: 1.3095', 'for batch', 124)
('GAN loss 0.6092 ', 'GAN acc 0.9766', 'Discriminator loss 0.5883', 'Discriminator accuracy 0.6328', 'Total loss: 1.1974', 'for batch', 125)
('GAN loss 0.5903 ', 'GAN acc 0.9883', 'Discriminator loss 0.6957', 'Discriminator accuracy 0.5312', 'Total loss: 1.2860', 'for batch', 126)
('GAN loss 0.5966 ', 'GAN acc 0.9844', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.5078', 'Total loss: 1.2925', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.56946743)
('DISCRIMINATOR_Imagem FAKE=', 0.48027569)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.041927')
----------------------------------
('Epoch', 46, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6140 ', 'GAN acc 0.9844', 'Discriminator loss 0.6390', 'Discriminator accuracy 0.5781', 'Total loss: 1.2530', 'for batch', 0)
('GAN loss 0.6193 ', 'GAN acc 0.9883', 'Discriminator loss 0.6517', 'Discriminator accuracy 0.5762', 'Total loss: 1.2710', 'for batch', 1)
('GAN loss 0.6543 ', 'GAN acc 0.9844', 'Discriminator loss 0.6407', 'Discriminator accuracy 0.5684', 'Total loss: 1.2950', 'for batch', 2)
('GAN loss 0.6563 ', 'GAN acc 0.9766', 'Discriminator loss 0.5539', 'Discriminator accuracy 0.7012', 'Total loss: 1.2102', 'for batch', 3)
('GAN loss 0.6564 ', 'GAN acc 0.9805', 'Discriminator loss 0.6434', 'Discriminator accuracy 0.5996', 'Total loss: 1.2998', 'for batch', 4)
('GAN loss 0.5971 ', 'GAN acc 0.9961', 'Discriminator loss 0.5417', 'Discriminator accuracy 0.7305', 'Total loss: 1.1388', 'for batch', 5)
('GAN loss 0.5762 ', 'GAN acc 0.9883', 'Discriminator loss 0.5114', 'Discriminator accuracy 0.7344', 'Total loss: 1.0876', 'for batch', 6)
('GAN loss 0.5478 ', 'GAN acc 0.9805', 'Discriminator loss 0.5410', 'Discriminator accuracy 0.6875', 'Total loss: 1.0888', 'for batch', 7)
('GAN loss 1.1278 ', 'GAN acc 0.1328', 'Discriminator loss 0.5554', 'Discriminator accuracy 0.7324', 'Total loss: 1.6832', 'for batch', 8)
('GAN loss 4.5608 ', 'GAN acc 0.0000', 'Discriminator loss 0.3713', 'Discriminator accuracy 0.7949', 'Total loss: 4.9321', 'for batch', 9)
('GAN loss 0.6176 ', 'GAN acc 0.9688', 'Discriminator loss 0.6932', 'Discriminator accuracy 0.5000', 'Total loss: 1.3108', 'for batch', 10)
('GAN loss 0.6505 ', 'GAN acc 0.9258', 'Discriminator loss 0.6734', 'Discriminator accuracy 0.5215', 'Total loss: 1.3239', 'for batch', 11)
('GAN loss 0.6773 ', 'GAN acc 0.7227', 'Discriminator loss 0.6440', 'Discriminator accuracy 0.5430', 'Total loss: 1.3214', 'for batch', 12)
('GAN loss 0.7112 ', 'GAN acc 0.5391', 'Discriminator loss 0.6200', 'Discriminator accuracy 0.6152', 'Total loss: 1.3312', 'for batch', 13)
('GAN loss 0.7461 ', 'GAN acc 0.2812', 'Discriminator loss 0.5948', 'Discriminator accuracy 0.6914', 'Total loss: 1.3409', 'for batch', 14)
('GAN loss 0.7678 ', 'GAN acc 0.1875', 'Discriminator loss 0.5583', 'Discriminator accuracy 0.7070', 'Total loss: 1.3261', 'for batch', 15)
('GAN loss 0.8425 ', 'GAN acc 0.0625', 'Discriminator loss 0.5203', 'Discriminator accuracy 0.7715', 'Total loss: 1.3628', 'for batch', 16)
('GAN loss 0.9657 ', 'GAN acc 0.0156', 'Discriminator loss 0.4784', 'Discriminator accuracy 0.8398', 'Total loss: 1.4440', 'for batch', 17)
('GAN loss 1.0522 ', 'GAN acc 0.0156', 'Discriminator loss 0.4500', 'Discriminator accuracy 0.8789', 'Total loss: 1.5023', 'for batch', 18)
('GAN loss 1.2260 ', 'GAN acc 0.0117', 'Discriminator loss 0.4123', 'Discriminator accuracy 0.9199', 'Total loss: 1.6383', 'for batch', 19)
('GAN loss 1.2657 ', 'GAN acc 0.0469', 'Discriminator loss 0.3733', 'Discriminator accuracy 0.9473', 'Total loss: 1.6389', 'for batch', 20)
('GAN loss 1.7838 ', 'GAN acc 0.0078', 'Discriminator loss 0.4294', 'Discriminator accuracy 0.8672', 'Total loss: 2.2132', 'for batch', 21)
('GAN loss 1.1579 ', 'GAN acc 0.1641', 'Discriminator loss 0.4802', 'Discriminator accuracy 0.8027', 'Total loss: 1.6381', 'for batch', 22)
('GAN loss 2.1069 ', 'GAN acc 0.0000', 'Discriminator loss 0.7419', 'Discriminator accuracy 0.5742', 'Total loss: 2.8488', 'for batch', 23)
('GAN loss 1.1006 ', 'GAN acc 0.1602', 'Discriminator loss 0.7024', 'Discriminator accuracy 0.5273', 'Total loss: 1.8030', 'for batch', 24)
('GAN loss 0.7963 ', 'GAN acc 0.4453', 'Discriminator loss 0.6816', 'Discriminator accuracy 0.5781', 'Total loss: 1.4779', 'for batch', 25)
('GAN loss 0.8599 ', 'GAN acc 0.1719', 'Discriminator loss 0.7039', 'Discriminator accuracy 0.5332', 'Total loss: 1.5638', 'for batch', 26)
('GAN loss 1.5003 ', 'GAN acc 0.0312', 'Discriminator loss 0.5526', 'Discriminator accuracy 0.7461', 'Total loss: 2.0529', 'for batch', 27)
('GAN loss 1.3969 ', 'GAN acc 0.0000', 'Discriminator loss 0.7132', 'Discriminator accuracy 0.5312', 'Total loss: 2.1101', 'for batch', 28)
('GAN loss 1.1155 ', 'GAN acc 0.0078', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5293', 'Total loss: 1.8001', 'for batch', 29)
('GAN loss 0.9193 ', 'GAN acc 0.0117', 'Discriminator loss 0.5747', 'Discriminator accuracy 0.7695', 'Total loss: 1.4940', 'for batch', 30)
('GAN loss 0.8625 ', 'GAN acc 0.0703', 'Discriminator loss 0.6000', 'Discriminator accuracy 0.6680', 'Total loss: 1.4624', 'for batch', 31)
('GAN loss 1.1190 ', 'GAN acc 0.0156', 'Discriminator loss 0.6644', 'Discriminator accuracy 0.5488', 'Total loss: 1.7834', 'for batch', 32)
('GAN loss 1.1679 ', 'GAN acc 0.0312', 'Discriminator loss 0.6419', 'Discriminator accuracy 0.7305', 'Total loss: 1.8098', 'for batch', 33)
('GAN loss 0.9729 ', 'GAN acc 0.0273', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.6113', 'Total loss: 1.6265', 'for batch', 34)
('GAN loss 0.9157 ', 'GAN acc 0.2930', 'Discriminator loss 0.6285', 'Discriminator accuracy 0.6250', 'Total loss: 1.5441', 'for batch', 35)
('GAN loss 1.0685 ', 'GAN acc 0.0977', 'Discriminator loss 0.5354', 'Discriminator accuracy 0.7891', 'Total loss: 1.6038', 'for batch', 36)
('GAN loss 0.7496 ', 'GAN acc 0.6289', 'Discriminator loss 0.5953', 'Discriminator accuracy 0.6641', 'Total loss: 1.3449', 'for batch', 37)
('GAN loss 0.7129 ', 'GAN acc 0.6289', 'Discriminator loss 0.6628', 'Discriminator accuracy 0.5625', 'Total loss: 1.3757', 'for batch', 38)
('GAN loss 0.7771 ', 'GAN acc 0.3633', 'Discriminator loss 0.5991', 'Discriminator accuracy 0.6504', 'Total loss: 1.3763', 'for batch', 39)
('GAN loss 0.8193 ', 'GAN acc 0.1250', 'Discriminator loss 0.6242', 'Discriminator accuracy 0.6172', 'Total loss: 1.4435', 'for batch', 40)
('GAN loss 0.8531 ', 'GAN acc 0.0430', 'Discriminator loss 0.6143', 'Discriminator accuracy 0.7539', 'Total loss: 1.4674', 'for batch', 41)
('GAN loss 0.8351 ', 'GAN acc 0.1289', 'Discriminator loss 0.6025', 'Discriminator accuracy 0.7520', 'Total loss: 1.4377', 'for batch', 42)
('GAN loss 0.8515 ', 'GAN acc 0.0859', 'Discriminator loss 0.5930', 'Discriminator accuracy 0.7227', 'Total loss: 1.4445', 'for batch', 43)
('GAN loss 0.9016 ', 'GAN acc 0.1289', 'Discriminator loss 0.5961', 'Discriminator accuracy 0.7305', 'Total loss: 1.4977', 'for batch', 44)
('GAN loss 0.7956 ', 'GAN acc 0.2422', 'Discriminator loss 0.6067', 'Discriminator accuracy 0.7090', 'Total loss: 1.4023', 'for batch', 45)
('GAN loss 0.7038 ', 'GAN acc 0.5273', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.6113', 'Total loss: 1.3594', 'for batch', 46)
('GAN loss 0.7097 ', 'GAN acc 0.5430', 'Discriminator loss 0.6732', 'Discriminator accuracy 0.5469', 'Total loss: 1.3829', 'for batch', 47)
('GAN loss 0.5757 ', 'GAN acc 0.8086', 'Discriminator loss 0.6699', 'Discriminator accuracy 0.5332', 'Total loss: 1.2456', 'for batch', 48)
('GAN loss 0.8413 ', 'GAN acc 0.1836', 'Discriminator loss 0.6809', 'Discriminator accuracy 0.5449', 'Total loss: 1.5223', 'for batch', 49)
('GAN loss 0.8432 ', 'GAN acc 0.0977', 'Discriminator loss 0.6143', 'Discriminator accuracy 0.6953', 'Total loss: 1.4575', 'for batch', 50)
('GAN loss 0.9109 ', 'GAN acc 0.0469', 'Discriminator loss 0.5970', 'Discriminator accuracy 0.7324', 'Total loss: 1.5079', 'for batch', 51)
('GAN loss 0.7803 ', 'GAN acc 0.3711', 'Discriminator loss 0.5747', 'Discriminator accuracy 0.6953', 'Total loss: 1.3550', 'for batch', 52)
('GAN loss 0.6588 ', 'GAN acc 0.6445', 'Discriminator loss 0.6255', 'Discriminator accuracy 0.6328', 'Total loss: 1.2843', 'for batch', 53)
('GAN loss 0.7362 ', 'GAN acc 0.4570', 'Discriminator loss 0.6914', 'Discriminator accuracy 0.5332', 'Total loss: 1.4276', 'for batch', 54)
('GAN loss 0.8334 ', 'GAN acc 0.2383', 'Discriminator loss 0.6892', 'Discriminator accuracy 0.5352', 'Total loss: 1.5226', 'for batch', 55)
('GAN loss 0.8442 ', 'GAN acc 0.1367', 'Discriminator loss 0.6829', 'Discriminator accuracy 0.5332', 'Total loss: 1.5271', 'for batch', 56)
('GAN loss 0.8882 ', 'GAN acc 0.1094', 'Discriminator loss 0.6722', 'Discriminator accuracy 0.5625', 'Total loss: 1.5603', 'for batch', 57)
('GAN loss 0.9204 ', 'GAN acc 0.1016', 'Discriminator loss 0.6624', 'Discriminator accuracy 0.5879', 'Total loss: 1.5827', 'for batch', 58)
('GAN loss 0.9873 ', 'GAN acc 0.1211', 'Discriminator loss 0.6319', 'Discriminator accuracy 0.6172', 'Total loss: 1.6192', 'for batch', 59)
('GAN loss 0.7520 ', 'GAN acc 0.4883', 'Discriminator loss 0.6926', 'Discriminator accuracy 0.5137', 'Total loss: 1.4446', 'for batch', 60)
('GAN loss 0.7696 ', 'GAN acc 0.3047', 'Discriminator loss 0.6701', 'Discriminator accuracy 0.5703', 'Total loss: 1.4397', 'for batch', 61)
('GAN loss 0.8661 ', 'GAN acc 0.1914', 'Discriminator loss 0.6492', 'Discriminator accuracy 0.6582', 'Total loss: 1.5153', 'for batch', 62)
('GAN loss 0.7542 ', 'GAN acc 0.4570', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.6074', 'Total loss: 1.4040', 'for batch', 63)
('GAN loss 0.7551 ', 'GAN acc 0.5117', 'Discriminator loss 0.6167', 'Discriminator accuracy 0.6719', 'Total loss: 1.3718', 'for batch', 64)
('GAN loss 0.7950 ', 'GAN acc 0.5273', 'Discriminator loss 0.6072', 'Discriminator accuracy 0.6855', 'Total loss: 1.4022', 'for batch', 65)
('GAN loss 0.6041 ', 'GAN acc 0.9258', 'Discriminator loss 0.6972', 'Discriminator accuracy 0.5566', 'Total loss: 1.3013', 'for batch', 66)
('GAN loss 0.6307 ', 'GAN acc 0.8594', 'Discriminator loss 0.6087', 'Discriminator accuracy 0.6523', 'Total loss: 1.2394', 'for batch', 67)
('GAN loss 0.7828 ', 'GAN acc 0.4844', 'Discriminator loss 0.6167', 'Discriminator accuracy 0.6367', 'Total loss: 1.3995', 'for batch', 68)
('GAN loss 0.6426 ', 'GAN acc 0.8594', 'Discriminator loss 0.7024', 'Discriminator accuracy 0.4844', 'Total loss: 1.3450', 'for batch', 69)
('GAN loss 0.6786 ', 'GAN acc 0.6523', 'Discriminator loss 0.6864', 'Discriminator accuracy 0.5586', 'Total loss: 1.3650', 'for batch', 70)
('GAN loss 0.6980 ', 'GAN acc 0.8125', 'Discriminator loss 0.5805', 'Discriminator accuracy 0.6445', 'Total loss: 1.2784', 'for batch', 71)
('GAN loss 0.7116 ', 'GAN acc 0.6523', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5449', 'Total loss: 1.3872', 'for batch', 72)
('GAN loss 0.6951 ', 'GAN acc 0.5312', 'Discriminator loss 0.6136', 'Discriminator accuracy 0.6328', 'Total loss: 1.3087', 'for batch', 73)
('GAN loss 0.5811 ', 'GAN acc 0.9414', 'Discriminator loss 0.5338', 'Discriminator accuracy 0.7344', 'Total loss: 1.1150', 'for batch', 74)
('GAN loss 0.6431 ', 'GAN acc 0.7891', 'Discriminator loss 0.5163', 'Discriminator accuracy 0.8145', 'Total loss: 1.1593', 'for batch', 75)
('GAN loss 0.5223 ', 'GAN acc 0.9805', 'Discriminator loss 0.6591', 'Discriminator accuracy 0.5430', 'Total loss: 1.1814', 'for batch', 76)
('GAN loss 0.5420 ', 'GAN acc 0.9531', 'Discriminator loss 0.6640', 'Discriminator accuracy 0.6016', 'Total loss: 1.2060', 'for batch', 77)
('GAN loss 0.6526 ', 'GAN acc 0.7852', 'Discriminator loss 0.7042', 'Discriminator accuracy 0.5508', 'Total loss: 1.3568', 'for batch', 78)
('GAN loss 0.7261 ', 'GAN acc 0.4414', 'Discriminator loss 0.6313', 'Discriminator accuracy 0.5977', 'Total loss: 1.3573', 'for batch', 79)
('GAN loss 0.7569 ', 'GAN acc 0.2852', 'Discriminator loss 0.6404', 'Discriminator accuracy 0.6113', 'Total loss: 1.3974', 'for batch', 80)
('GAN loss 0.7211 ', 'GAN acc 0.4922', 'Discriminator loss 0.5768', 'Discriminator accuracy 0.6816', 'Total loss: 1.2980', 'for batch', 81)
('GAN loss 0.5750 ', 'GAN acc 0.9453', 'Discriminator loss 0.6098', 'Discriminator accuracy 0.6211', 'Total loss: 1.1848', 'for batch', 82)
('GAN loss 0.4829 ', 'GAN acc 0.9766', 'Discriminator loss 0.5847', 'Discriminator accuracy 0.6699', 'Total loss: 1.0675', 'for batch', 83)
('GAN loss 0.4934 ', 'GAN acc 0.9766', 'Discriminator loss 0.5934', 'Discriminator accuracy 0.7051', 'Total loss: 1.0868', 'for batch', 84)
('GAN loss 0.5062 ', 'GAN acc 0.9531', 'Discriminator loss 0.6987', 'Discriminator accuracy 0.5332', 'Total loss: 1.2049', 'for batch', 85)
('GAN loss 0.4739 ', 'GAN acc 0.9805', 'Discriminator loss 0.7010', 'Discriminator accuracy 0.5371', 'Total loss: 1.1749', 'for batch', 86)
('GAN loss 0.5756 ', 'GAN acc 0.9570', 'Discriminator loss 0.7630', 'Discriminator accuracy 0.4922', 'Total loss: 1.3386', 'for batch', 87)
('GAN loss 0.7243 ', 'GAN acc 0.3750', 'Discriminator loss 0.7156', 'Discriminator accuracy 0.4941', 'Total loss: 1.4399', 'for batch', 88)
('GAN loss 0.8060 ', 'GAN acc 0.0820', 'Discriminator loss 0.6870', 'Discriminator accuracy 0.5293', 'Total loss: 1.4930', 'for batch', 89)
('GAN loss 0.8254 ', 'GAN acc 0.0430', 'Discriminator loss 0.6524', 'Discriminator accuracy 0.5723', 'Total loss: 1.4779', 'for batch', 90)
('GAN loss 0.7898 ', 'GAN acc 0.1523', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.5293', 'Total loss: 1.4421', 'for batch', 91)
('GAN loss 0.7496 ', 'GAN acc 0.4258', 'Discriminator loss 0.5807', 'Discriminator accuracy 0.6270', 'Total loss: 1.3303', 'for batch', 92)
('GAN loss 0.6663 ', 'GAN acc 0.7539', 'Discriminator loss 0.5718', 'Discriminator accuracy 0.6875', 'Total loss: 1.2381', 'for batch', 93)
('GAN loss 0.5183 ', 'GAN acc 0.9805', 'Discriminator loss 0.6216', 'Discriminator accuracy 0.6797', 'Total loss: 1.1399', 'for batch', 94)
('GAN loss 0.4834 ', 'GAN acc 0.9883', 'Discriminator loss 0.6274', 'Discriminator accuracy 0.6562', 'Total loss: 1.1108', 'for batch', 95)
('GAN loss 0.4569 ', 'GAN acc 0.9844', 'Discriminator loss 0.5765', 'Discriminator accuracy 0.6895', 'Total loss: 1.0334', 'for batch', 96)
('GAN loss 0.5580 ', 'GAN acc 0.9766', 'Discriminator loss 0.6462', 'Discriminator accuracy 0.6211', 'Total loss: 1.2041', 'for batch', 97)
('GAN loss 0.5663 ', 'GAN acc 0.9805', 'Discriminator loss 0.7282', 'Discriminator accuracy 0.5078', 'Total loss: 1.2945', 'for batch', 98)
('GAN loss 0.5897 ', 'GAN acc 0.9688', 'Discriminator loss 0.5677', 'Discriminator accuracy 0.6953', 'Total loss: 1.1573', 'for batch', 99)
('GAN loss 0.5911 ', 'GAN acc 0.9727', 'Discriminator loss 0.6072', 'Discriminator accuracy 0.6270', 'Total loss: 1.1983', 'for batch', 100)
('GAN loss 0.5771 ', 'GAN acc 0.9805', 'Discriminator loss 0.6194', 'Discriminator accuracy 0.5352', 'Total loss: 1.1965', 'for batch', 101)
('GAN loss 0.6056 ', 'GAN acc 0.9766', 'Discriminator loss 0.6346', 'Discriminator accuracy 0.5938', 'Total loss: 1.2401', 'for batch', 102)
('GAN loss 0.5571 ', 'GAN acc 0.9844', 'Discriminator loss 0.6059', 'Discriminator accuracy 0.6309', 'Total loss: 1.1630', 'for batch', 103)
('GAN loss 0.6174 ', 'GAN acc 0.9219', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5723', 'Total loss: 1.2946', 'for batch', 104)
('GAN loss 0.6151 ', 'GAN acc 0.9766', 'Discriminator loss 0.5623', 'Discriminator accuracy 0.6836', 'Total loss: 1.1774', 'for batch', 105)
('GAN loss 0.6150 ', 'GAN acc 0.9414', 'Discriminator loss 0.5891', 'Discriminator accuracy 0.6895', 'Total loss: 1.2041', 'for batch', 106)
('GAN loss 0.5145 ', 'GAN acc 0.9805', 'Discriminator loss 0.5104', 'Discriminator accuracy 0.7344', 'Total loss: 1.0249', 'for batch', 107)
('GAN loss 0.5321 ', 'GAN acc 0.9922', 'Discriminator loss 0.6726', 'Discriminator accuracy 0.5586', 'Total loss: 1.2047', 'for batch', 108)
('GAN loss 0.5711 ', 'GAN acc 0.9844', 'Discriminator loss 0.6080', 'Discriminator accuracy 0.6699', 'Total loss: 1.1791', 'for batch', 109)
('GAN loss 0.5951 ', 'GAN acc 0.9648', 'Discriminator loss 0.6180', 'Discriminator accuracy 0.6133', 'Total loss: 1.2132', 'for batch', 110)
('GAN loss 0.5987 ', 'GAN acc 0.9805', 'Discriminator loss 0.5532', 'Discriminator accuracy 0.6914', 'Total loss: 1.1519', 'for batch', 111)
('GAN loss 0.5548 ', 'GAN acc 0.9805', 'Discriminator loss 0.5735', 'Discriminator accuracy 0.6680', 'Total loss: 1.1283', 'for batch', 112)
('GAN loss 0.6175 ', 'GAN acc 0.9414', 'Discriminator loss 0.6971', 'Discriminator accuracy 0.5391', 'Total loss: 1.3145', 'for batch', 113)
('GAN loss 0.5637 ', 'GAN acc 0.9805', 'Discriminator loss 0.5685', 'Discriminator accuracy 0.6035', 'Total loss: 1.1322', 'for batch', 114)
('GAN loss 0.6087 ', 'GAN acc 0.9766', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5898', 'Total loss: 1.2765', 'for batch', 115)
('GAN loss 0.6608 ', 'GAN acc 0.8320', 'Discriminator loss 0.7388', 'Discriminator accuracy 0.5195', 'Total loss: 1.3996', 'for batch', 116)
('GAN loss 0.7044 ', 'GAN acc 0.7188', 'Discriminator loss 0.6635', 'Discriminator accuracy 0.5703', 'Total loss: 1.3679', 'for batch', 117)
('GAN loss 0.7676 ', 'GAN acc 0.2930', 'Discriminator loss 0.6986', 'Discriminator accuracy 0.5137', 'Total loss: 1.4662', 'for batch', 118)
('GAN loss 0.7924 ', 'GAN acc 0.1797', 'Discriminator loss 0.6694', 'Discriminator accuracy 0.5410', 'Total loss: 1.4619', 'for batch', 119)
('GAN loss 0.8485 ', 'GAN acc 0.1133', 'Discriminator loss 0.5641', 'Discriminator accuracy 0.6484', 'Total loss: 1.4127', 'for batch', 120)
('GAN loss 0.7662 ', 'GAN acc 0.3945', 'Discriminator loss 0.5323', 'Discriminator accuracy 0.6094', 'Total loss: 1.2985', 'for batch', 121)
('GAN loss 0.5897 ', 'GAN acc 0.9766', 'Discriminator loss 0.5450', 'Discriminator accuracy 0.5840', 'Total loss: 1.1347', 'for batch', 122)
('GAN loss 0.5271 ', 'GAN acc 0.9805', 'Discriminator loss 0.5529', 'Discriminator accuracy 0.6992', 'Total loss: 1.0800', 'for batch', 123)
('GAN loss 0.5994 ', 'GAN acc 0.9727', 'Discriminator loss 0.5451', 'Discriminator accuracy 0.7363', 'Total loss: 1.1445', 'for batch', 124)
('GAN loss 0.4758 ', 'GAN acc 0.9883', 'Discriminator loss 0.5316', 'Discriminator accuracy 0.7109', 'Total loss: 1.0073', 'for batch', 125)
('GAN loss 0.6039 ', 'GAN acc 0.9609', 'Discriminator loss 0.7203', 'Discriminator accuracy 0.5137', 'Total loss: 1.3242', 'for batch', 126)
('GAN loss 0.6547 ', 'GAN acc 0.8945', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5117', 'Total loss: 1.3370', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.59101772)
('DISCRIMINATOR_Imagem FAKE=', 0.50223625)
('Discriminator trained', 75, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.262676')
----------------------------------
('Epoch', 47, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6862 ', 'GAN acc 0.8047', 'Discriminator loss 0.6222', 'Discriminator accuracy 0.5781', 'Total loss: 1.3085', 'for batch', 0)
('GAN loss 0.6909 ', 'GAN acc 0.6719', 'Discriminator loss 0.6448', 'Discriminator accuracy 0.5977', 'Total loss: 1.3356', 'for batch', 1)
('GAN loss 0.7245 ', 'GAN acc 0.7148', 'Discriminator loss 0.6437', 'Discriminator accuracy 0.6230', 'Total loss: 1.3683', 'for batch', 2)
('GAN loss 0.7104 ', 'GAN acc 0.7695', 'Discriminator loss 0.5919', 'Discriminator accuracy 0.6816', 'Total loss: 1.3023', 'for batch', 3)
('GAN loss 0.6718 ', 'GAN acc 0.7930', 'Discriminator loss 0.6505', 'Discriminator accuracy 0.6426', 'Total loss: 1.3223', 'for batch', 4)
('GAN loss 0.6142 ', 'GAN acc 0.9727', 'Discriminator loss 0.5221', 'Discriminator accuracy 0.7246', 'Total loss: 1.1363', 'for batch', 5)
('GAN loss 0.5403 ', 'GAN acc 0.9883', 'Discriminator loss 0.5078', 'Discriminator accuracy 0.7207', 'Total loss: 1.0482', 'for batch', 6)
('GAN loss 0.5065 ', 'GAN acc 0.9844', 'Discriminator loss 0.5392', 'Discriminator accuracy 0.6719', 'Total loss: 1.0457', 'for batch', 7)
('GAN loss 0.5081 ', 'GAN acc 0.9805', 'Discriminator loss 0.5355', 'Discriminator accuracy 0.7344', 'Total loss: 1.0436', 'for batch', 8)
('GAN loss 0.4477 ', 'GAN acc 0.9883', 'Discriminator loss 0.5066', 'Discriminator accuracy 0.7383', 'Total loss: 0.9542', 'for batch', 9)
('GAN loss 0.5123 ', 'GAN acc 0.9844', 'Discriminator loss 0.5874', 'Discriminator accuracy 0.6797', 'Total loss: 1.0997', 'for batch', 10)
('GAN loss 0.4365 ', 'GAN acc 0.9883', 'Discriminator loss 0.6442', 'Discriminator accuracy 0.5645', 'Total loss: 1.0807', 'for batch', 11)
('GAN loss 0.4231 ', 'GAN acc 0.9883', 'Discriminator loss 0.5664', 'Discriminator accuracy 0.6777', 'Total loss: 0.9896', 'for batch', 12)
('GAN loss 0.4674 ', 'GAN acc 0.9805', 'Discriminator loss 0.6168', 'Discriminator accuracy 0.6348', 'Total loss: 1.0842', 'for batch', 13)
('GAN loss 0.5069 ', 'GAN acc 0.9883', 'Discriminator loss 0.5540', 'Discriminator accuracy 0.6836', 'Total loss: 1.0608', 'for batch', 14)
('GAN loss 0.5646 ', 'GAN acc 0.9648', 'Discriminator loss 0.5517', 'Discriminator accuracy 0.7461', 'Total loss: 1.1164', 'for batch', 15)
('GAN loss 0.5186 ', 'GAN acc 0.9922', 'Discriminator loss 0.5418', 'Discriminator accuracy 0.6953', 'Total loss: 1.0604', 'for batch', 16)
('GAN loss 0.5444 ', 'GAN acc 0.9922', 'Discriminator loss 0.6988', 'Discriminator accuracy 0.5195', 'Total loss: 1.2432', 'for batch', 17)
('GAN loss 0.5796 ', 'GAN acc 0.9805', 'Discriminator loss 0.5628', 'Discriminator accuracy 0.6914', 'Total loss: 1.1423', 'for batch', 18)
('GAN loss 0.5757 ', 'GAN acc 0.9883', 'Discriminator loss 0.5989', 'Discriminator accuracy 0.6699', 'Total loss: 1.1746', 'for batch', 19)
('GAN loss 0.6247 ', 'GAN acc 0.9805', 'Discriminator loss 0.6465', 'Discriminator accuracy 0.5840', 'Total loss: 1.2712', 'for batch', 20)
('GAN loss 0.5812 ', 'GAN acc 0.9844', 'Discriminator loss 0.6358', 'Discriminator accuracy 0.5781', 'Total loss: 1.2170', 'for batch', 21)
('GAN loss 0.5521 ', 'GAN acc 0.9922', 'Discriminator loss 0.5908', 'Discriminator accuracy 0.6777', 'Total loss: 1.1429', 'for batch', 22)
('GAN loss 0.5615 ', 'GAN acc 0.9883', 'Discriminator loss 0.5574', 'Discriminator accuracy 0.6836', 'Total loss: 1.1189', 'for batch', 23)
('GAN loss 0.6140 ', 'GAN acc 0.9648', 'Discriminator loss 0.4216', 'Discriminator accuracy 0.8809', 'Total loss: 1.0356', 'for batch', 24)
('GAN loss 0.5205 ', 'GAN acc 0.9805', 'Discriminator loss 0.4816', 'Discriminator accuracy 0.7578', 'Total loss: 1.0022', 'for batch', 25)
('GAN loss 0.4693 ', 'GAN acc 0.9883', 'Discriminator loss 0.5621', 'Discriminator accuracy 0.6855', 'Total loss: 1.0314', 'for batch', 26)
('GAN loss 0.4757 ', 'GAN acc 0.9922', 'Discriminator loss 0.6453', 'Discriminator accuracy 0.5801', 'Total loss: 1.1209', 'for batch', 27)
('GAN loss 0.5328 ', 'GAN acc 0.9844', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.5527', 'Total loss: 1.2179', 'for batch', 28)
('GAN loss 0.5363 ', 'GAN acc 0.9805', 'Discriminator loss 0.5124', 'Discriminator accuracy 0.7539', 'Total loss: 1.0487', 'for batch', 29)
('GAN loss 0.5378 ', 'GAN acc 0.9922', 'Discriminator loss 0.6888', 'Discriminator accuracy 0.4824', 'Total loss: 1.2266', 'for batch', 30)
('GAN loss 0.5665 ', 'GAN acc 0.9883', 'Discriminator loss 0.6085', 'Discriminator accuracy 0.5957', 'Total loss: 1.1750', 'for batch', 31)
('GAN loss 0.5703 ', 'GAN acc 0.9883', 'Discriminator loss 0.6691', 'Discriminator accuracy 0.5703', 'Total loss: 1.2394', 'for batch', 32)
('GAN loss 0.6222 ', 'GAN acc 0.9766', 'Discriminator loss 0.6499', 'Discriminator accuracy 0.5918', 'Total loss: 1.2721', 'for batch', 33)
('GAN loss 0.6321 ', 'GAN acc 0.9414', 'Discriminator loss 0.6255', 'Discriminator accuracy 0.6035', 'Total loss: 1.2575', 'for batch', 34)
('GAN loss 0.5958 ', 'GAN acc 0.9766', 'Discriminator loss 0.5581', 'Discriminator accuracy 0.6621', 'Total loss: 1.1539', 'for batch', 35)
('GAN loss 0.5650 ', 'GAN acc 0.9766', 'Discriminator loss 0.4834', 'Discriminator accuracy 0.7852', 'Total loss: 1.0483', 'for batch', 36)
('GAN loss 0.5516 ', 'GAN acc 0.9766', 'Discriminator loss 0.6049', 'Discriminator accuracy 0.6230', 'Total loss: 1.1565', 'for batch', 37)
('GAN loss 0.5366 ', 'GAN acc 0.9883', 'Discriminator loss 0.5130', 'Discriminator accuracy 0.7656', 'Total loss: 1.0495', 'for batch', 38)
('GAN loss 0.4757 ', 'GAN acc 0.9844', 'Discriminator loss 0.4940', 'Discriminator accuracy 0.7383', 'Total loss: 0.9697', 'for batch', 39)
('GAN loss 0.4600 ', 'GAN acc 0.9922', 'Discriminator loss 0.4863', 'Discriminator accuracy 0.7578', 'Total loss: 0.9463', 'for batch', 40)
('GAN loss 0.4953 ', 'GAN acc 0.9570', 'Discriminator loss 0.5154', 'Discriminator accuracy 0.7461', 'Total loss: 1.0107', 'for batch', 41)
('GAN loss 0.4145 ', 'GAN acc 0.9883', 'Discriminator loss 0.5666', 'Discriminator accuracy 0.6934', 'Total loss: 0.9811', 'for batch', 42)
('GAN loss 0.4693 ', 'GAN acc 0.9922', 'Discriminator loss 0.6610', 'Discriminator accuracy 0.5801', 'Total loss: 1.1303', 'for batch', 43)
('GAN loss 0.4995 ', 'GAN acc 0.9805', 'Discriminator loss 0.5253', 'Discriminator accuracy 0.7324', 'Total loss: 1.0247', 'for batch', 44)
('GAN loss 0.5204 ', 'GAN acc 0.9883', 'Discriminator loss 0.5603', 'Discriminator accuracy 0.6621', 'Total loss: 1.0807', 'for batch', 45)
('GAN loss 0.4728 ', 'GAN acc 0.9883', 'Discriminator loss 0.5589', 'Discriminator accuracy 0.7246', 'Total loss: 1.0317', 'for batch', 46)
('GAN loss 0.4392 ', 'GAN acc 0.9883', 'Discriminator loss 0.5083', 'Discriminator accuracy 0.7734', 'Total loss: 0.9475', 'for batch', 47)
('GAN loss 0.4001 ', 'GAN acc 0.9922', 'Discriminator loss 0.4637', 'Discriminator accuracy 0.7656', 'Total loss: 0.8638', 'for batch', 48)
('GAN loss 0.5948 ', 'GAN acc 0.8633', 'Discriminator loss 0.6025', 'Discriminator accuracy 0.6406', 'Total loss: 1.1973', 'for batch', 49)
('GAN loss 0.5521 ', 'GAN acc 0.9883', 'Discriminator loss 0.7049', 'Discriminator accuracy 0.5273', 'Total loss: 1.2569', 'for batch', 50)
('GAN loss 0.6521 ', 'GAN acc 0.9531', 'Discriminator loss 0.6751', 'Discriminator accuracy 0.5195', 'Total loss: 1.3272', 'for batch', 51)
('GAN loss 0.6842 ', 'GAN acc 0.8086', 'Discriminator loss 0.6324', 'Discriminator accuracy 0.5703', 'Total loss: 1.3166', 'for batch', 52)
('GAN loss 0.6849 ', 'GAN acc 0.7383', 'Discriminator loss 0.5894', 'Discriminator accuracy 0.6348', 'Total loss: 1.2743', 'for batch', 53)
('GAN loss 0.6915 ', 'GAN acc 0.7383', 'Discriminator loss 0.6231', 'Discriminator accuracy 0.5840', 'Total loss: 1.3146', 'for batch', 54)
('GAN loss 0.7031 ', 'GAN acc 0.7578', 'Discriminator loss 0.6619', 'Discriminator accuracy 0.5254', 'Total loss: 1.3650', 'for batch', 55)
('GAN loss 0.7128 ', 'GAN acc 0.7148', 'Discriminator loss 0.6531', 'Discriminator accuracy 0.5195', 'Total loss: 1.3659', 'for batch', 56)
('GAN loss 0.7136 ', 'GAN acc 0.6328', 'Discriminator loss 0.6435', 'Discriminator accuracy 0.5781', 'Total loss: 1.3571', 'for batch', 57)
('GAN loss 0.7276 ', 'GAN acc 0.6953', 'Discriminator loss 0.6476', 'Discriminator accuracy 0.5566', 'Total loss: 1.3751', 'for batch', 58)
('GAN loss 0.7184 ', 'GAN acc 0.6523', 'Discriminator loss 0.6655', 'Discriminator accuracy 0.5625', 'Total loss: 1.3839', 'for batch', 59)
('GAN loss 0.7551 ', 'GAN acc 0.5430', 'Discriminator loss 0.6685', 'Discriminator accuracy 0.5234', 'Total loss: 1.4236', 'for batch', 60)
('GAN loss 0.7212 ', 'GAN acc 0.6602', 'Discriminator loss 0.5665', 'Discriminator accuracy 0.6953', 'Total loss: 1.2877', 'for batch', 61)
('GAN loss 0.7133 ', 'GAN acc 0.6758', 'Discriminator loss 0.5813', 'Discriminator accuracy 0.6602', 'Total loss: 1.2946', 'for batch', 62)
('GAN loss 0.6580 ', 'GAN acc 0.8867', 'Discriminator loss 0.6426', 'Discriminator accuracy 0.6016', 'Total loss: 1.3006', 'for batch', 63)
('GAN loss 0.6306 ', 'GAN acc 0.9414', 'Discriminator loss 0.6070', 'Discriminator accuracy 0.6309', 'Total loss: 1.2376', 'for batch', 64)
('GAN loss 0.6171 ', 'GAN acc 0.9219', 'Discriminator loss 0.6326', 'Discriminator accuracy 0.6289', 'Total loss: 1.2496', 'for batch', 65)
('GAN loss 0.6908 ', 'GAN acc 0.7148', 'Discriminator loss 0.6447', 'Discriminator accuracy 0.6348', 'Total loss: 1.3354', 'for batch', 66)
('GAN loss 0.6036 ', 'GAN acc 0.9414', 'Discriminator loss 0.6912', 'Discriminator accuracy 0.5547', 'Total loss: 1.2948', 'for batch', 67)
('GAN loss 0.6187 ', 'GAN acc 0.9258', 'Discriminator loss 0.6492', 'Discriminator accuracy 0.5879', 'Total loss: 1.2679', 'for batch', 68)
('GAN loss 0.6418 ', 'GAN acc 0.8867', 'Discriminator loss 0.6536', 'Discriminator accuracy 0.5996', 'Total loss: 1.2954', 'for batch', 69)
('GAN loss 0.6914 ', 'GAN acc 0.7109', 'Discriminator loss 0.6467', 'Discriminator accuracy 0.6152', 'Total loss: 1.3381', 'for batch', 70)
('GAN loss 0.6169 ', 'GAN acc 0.9297', 'Discriminator loss 0.6147', 'Discriminator accuracy 0.5801', 'Total loss: 1.2316', 'for batch', 71)
('GAN loss 0.5993 ', 'GAN acc 0.9570', 'Discriminator loss 0.6564', 'Discriminator accuracy 0.6016', 'Total loss: 1.2557', 'for batch', 72)
('GAN loss 0.6127 ', 'GAN acc 0.9688', 'Discriminator loss 0.6281', 'Discriminator accuracy 0.6016', 'Total loss: 1.2407', 'for batch', 73)
('GAN loss 0.6319 ', 'GAN acc 0.8945', 'Discriminator loss 0.6305', 'Discriminator accuracy 0.6406', 'Total loss: 1.2624', 'for batch', 74)
('GAN loss 0.6543 ', 'GAN acc 0.8164', 'Discriminator loss 0.5695', 'Discriminator accuracy 0.6836', 'Total loss: 1.2238', 'for batch', 75)
('GAN loss 0.6360 ', 'GAN acc 0.9570', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.5273', 'Total loss: 1.3124', 'for batch', 76)
('GAN loss 0.6026 ', 'GAN acc 0.9688', 'Discriminator loss 0.5891', 'Discriminator accuracy 0.6660', 'Total loss: 1.1918', 'for batch', 77)
('GAN loss 0.6214 ', 'GAN acc 0.9844', 'Discriminator loss 0.6747', 'Discriminator accuracy 0.5684', 'Total loss: 1.2962', 'for batch', 78)
('GAN loss 0.6134 ', 'GAN acc 0.9648', 'Discriminator loss 0.6314', 'Discriminator accuracy 0.5996', 'Total loss: 1.2449', 'for batch', 79)
('GAN loss 0.6301 ', 'GAN acc 0.9336', 'Discriminator loss 0.5767', 'Discriminator accuracy 0.7207', 'Total loss: 1.2068', 'for batch', 80)
('GAN loss 0.5670 ', 'GAN acc 0.9883', 'Discriminator loss 0.5237', 'Discriminator accuracy 0.6250', 'Total loss: 1.0907', 'for batch', 81)
('GAN loss 0.5847 ', 'GAN acc 0.9805', 'Discriminator loss 0.6334', 'Discriminator accuracy 0.6777', 'Total loss: 1.2181', 'for batch', 82)
('GAN loss 0.5510 ', 'GAN acc 0.9883', 'Discriminator loss 0.5409', 'Discriminator accuracy 0.7051', 'Total loss: 1.0919', 'for batch', 83)
('GAN loss 0.5044 ', 'GAN acc 0.9922', 'Discriminator loss 0.5792', 'Discriminator accuracy 0.6777', 'Total loss: 1.0836', 'for batch', 84)
('GAN loss 0.5773 ', 'GAN acc 0.9805', 'Discriminator loss 0.5733', 'Discriminator accuracy 0.7109', 'Total loss: 1.1506', 'for batch', 85)
('GAN loss 0.5077 ', 'GAN acc 0.9883', 'Discriminator loss 0.5284', 'Discriminator accuracy 0.7793', 'Total loss: 1.0361', 'for batch', 86)
('GAN loss 0.5089 ', 'GAN acc 0.9883', 'Discriminator loss 0.6441', 'Discriminator accuracy 0.5918', 'Total loss: 1.1530', 'for batch', 87)
('GAN loss 0.5601 ', 'GAN acc 0.9883', 'Discriminator loss 0.6883', 'Discriminator accuracy 0.5469', 'Total loss: 1.2484', 'for batch', 88)
('GAN loss 0.5551 ', 'GAN acc 0.9883', 'Discriminator loss 0.4709', 'Discriminator accuracy 0.7637', 'Total loss: 1.0260', 'for batch', 89)
('GAN loss 0.4789 ', 'GAN acc 0.9922', 'Discriminator loss 0.4568', 'Discriminator accuracy 0.8418', 'Total loss: 0.9356', 'for batch', 90)
('GAN loss 0.4756 ', 'GAN acc 0.9922', 'Discriminator loss 0.5735', 'Discriminator accuracy 0.6543', 'Total loss: 1.0490', 'for batch', 91)
('GAN loss 0.4413 ', 'GAN acc 0.9922', 'Discriminator loss 0.4824', 'Discriminator accuracy 0.7461', 'Total loss: 0.9237', 'for batch', 92)
('GAN loss 0.5549 ', 'GAN acc 0.9492', 'Discriminator loss 0.4026', 'Discriminator accuracy 0.8477', 'Total loss: 0.9575', 'for batch', 93)
('GAN loss 0.3518 ', 'GAN acc 0.9961', 'Discriminator loss 0.5750', 'Discriminator accuracy 0.6484', 'Total loss: 0.9268', 'for batch', 94)
('GAN loss 0.5099 ', 'GAN acc 0.9883', 'Discriminator loss 0.7530', 'Discriminator accuracy 0.5312', 'Total loss: 1.2628', 'for batch', 95)
('GAN loss 0.5811 ', 'GAN acc 0.9805', 'Discriminator loss 0.6295', 'Discriminator accuracy 0.5898', 'Total loss: 1.2106', 'for batch', 96)
('GAN loss 0.6648 ', 'GAN acc 0.9414', 'Discriminator loss 0.6505', 'Discriminator accuracy 0.5723', 'Total loss: 1.3153', 'for batch', 97)
('GAN loss 0.6672 ', 'GAN acc 0.9258', 'Discriminator loss 0.5894', 'Discriminator accuracy 0.6426', 'Total loss: 1.2566', 'for batch', 98)
('GAN loss 0.6185 ', 'GAN acc 0.9844', 'Discriminator loss 0.4993', 'Discriminator accuracy 0.8184', 'Total loss: 1.1178', 'for batch', 99)
('GAN loss 0.5915 ', 'GAN acc 0.9922', 'Discriminator loss 0.6112', 'Discriminator accuracy 0.7188', 'Total loss: 1.2027', 'for batch', 100)
('GAN loss 0.5239 ', 'GAN acc 0.9922', 'Discriminator loss 0.5938', 'Discriminator accuracy 0.5918', 'Total loss: 1.1177', 'for batch', 101)
('GAN loss 0.5369 ', 'GAN acc 0.9766', 'Discriminator loss 0.5559', 'Discriminator accuracy 0.6836', 'Total loss: 1.0928', 'for batch', 102)
('GAN loss 0.5124 ', 'GAN acc 0.9883', 'Discriminator loss 0.5692', 'Discriminator accuracy 0.6973', 'Total loss: 1.0816', 'for batch', 103)
('GAN loss 0.5234 ', 'GAN acc 0.9844', 'Discriminator loss 0.6607', 'Discriminator accuracy 0.5664', 'Total loss: 1.1840', 'for batch', 104)
('GAN loss 0.4915 ', 'GAN acc 0.9922', 'Discriminator loss 0.4595', 'Discriminator accuracy 0.8027', 'Total loss: 0.9510', 'for batch', 105)
('GAN loss 0.4850 ', 'GAN acc 0.9883', 'Discriminator loss 0.4724', 'Discriminator accuracy 0.7793', 'Total loss: 0.9573', 'for batch', 106)
('GAN loss 0.4101 ', 'GAN acc 0.9844', 'Discriminator loss 0.4759', 'Discriminator accuracy 0.7324', 'Total loss: 0.8860', 'for batch', 107)
('GAN loss 0.4302 ', 'GAN acc 0.9922', 'Discriminator loss 0.7402', 'Discriminator accuracy 0.5039', 'Total loss: 1.1704', 'for batch', 108)
('GAN loss 0.4599 ', 'GAN acc 0.9922', 'Discriminator loss 0.5480', 'Discriminator accuracy 0.7266', 'Total loss: 1.0079', 'for batch', 109)
('GAN loss 0.5189 ', 'GAN acc 0.9766', 'Discriminator loss 0.5733', 'Discriminator accuracy 0.6523', 'Total loss: 1.0923', 'for batch', 110)
('GAN loss 0.4779 ', 'GAN acc 0.9805', 'Discriminator loss 0.4639', 'Discriminator accuracy 0.7383', 'Total loss: 0.9418', 'for batch', 111)
('GAN loss 0.4503 ', 'GAN acc 0.9844', 'Discriminator loss 0.4905', 'Discriminator accuracy 0.7344', 'Total loss: 0.9408', 'for batch', 112)
('GAN loss 0.4717 ', 'GAN acc 0.9844', 'Discriminator loss 0.5677', 'Discriminator accuracy 0.7188', 'Total loss: 1.0395', 'for batch', 113)
('GAN loss 0.4316 ', 'GAN acc 0.9922', 'Discriminator loss 0.5000', 'Discriminator accuracy 0.7246', 'Total loss: 0.9316', 'for batch', 114)
('GAN loss 0.4199 ', 'GAN acc 0.9844', 'Discriminator loss 0.5548', 'Discriminator accuracy 0.7148', 'Total loss: 0.9747', 'for batch', 115)
('GAN loss 0.4585 ', 'GAN acc 0.9922', 'Discriminator loss 0.6331', 'Discriminator accuracy 0.6348', 'Total loss: 1.0916', 'for batch', 116)
('GAN loss 0.4623 ', 'GAN acc 0.9844', 'Discriminator loss 0.5456', 'Discriminator accuracy 0.7012', 'Total loss: 1.0079', 'for batch', 117)
('GAN loss 0.4792 ', 'GAN acc 0.9883', 'Discriminator loss 0.5571', 'Discriminator accuracy 0.6992', 'Total loss: 1.0363', 'for batch', 118)
('GAN loss 0.5303 ', 'GAN acc 0.9727', 'Discriminator loss 0.5658', 'Discriminator accuracy 0.6602', 'Total loss: 1.0961', 'for batch', 119)
('GAN loss 0.5102 ', 'GAN acc 0.9844', 'Discriminator loss 0.4330', 'Discriminator accuracy 0.8438', 'Total loss: 0.9433', 'for batch', 120)
('GAN loss 0.4035 ', 'GAN acc 0.9922', 'Discriminator loss 0.3970', 'Discriminator accuracy 0.8496', 'Total loss: 0.8005', 'for batch', 121)
('GAN loss 0.3928 ', 'GAN acc 0.9844', 'Discriminator loss 0.4634', 'Discriminator accuracy 0.7617', 'Total loss: 0.8562', 'for batch', 122)
('GAN loss 0.3631 ', 'GAN acc 0.9844', 'Discriminator loss 0.3508', 'Discriminator accuracy 0.8730', 'Total loss: 0.7139', 'for batch', 123)
('GAN loss 0.3857 ', 'GAN acc 0.9844', 'Discriminator loss 0.3805', 'Discriminator accuracy 0.8008', 'Total loss: 0.7662', 'for batch', 124)
('GAN loss 0.3303 ', 'GAN acc 0.9883', 'Discriminator loss 0.3969', 'Discriminator accuracy 0.8340', 'Total loss: 0.7272', 'for batch', 125)
('GAN loss 0.3636 ', 'GAN acc 0.9883', 'Discriminator loss 0.7329', 'Discriminator accuracy 0.5918', 'Total loss: 1.0965', 'for batch', 126)
('GAN loss 0.4731 ', 'GAN acc 0.9883', 'Discriminator loss 0.6668', 'Discriminator accuracy 0.5801', 'Total loss: 1.1399', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.43451056)
('DISCRIMINATOR_Imagem FAKE=', 0.30180901)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.381407')
----------------------------------
('Epoch', 48, 'of', 50)
('Number of batches', 128)
('GAN loss 0.4039 ', 'GAN acc 0.9883', 'Discriminator loss 0.7096', 'Discriminator accuracy 0.5645', 'Total loss: 1.1135', 'for batch', 0)
('GAN loss 0.4233 ', 'GAN acc 0.9922', 'Discriminator loss 0.5724', 'Discriminator accuracy 0.6836', 'Total loss: 0.9957', 'for batch', 1)
('GAN loss 0.4512 ', 'GAN acc 0.9844', 'Discriminator loss 0.6017', 'Discriminator accuracy 0.6328', 'Total loss: 1.0529', 'for batch', 2)
('GAN loss 0.4797 ', 'GAN acc 0.9922', 'Discriminator loss 0.5474', 'Discriminator accuracy 0.6973', 'Total loss: 1.0271', 'for batch', 3)
('GAN loss 0.4977 ', 'GAN acc 0.9883', 'Discriminator loss 0.5128', 'Discriminator accuracy 0.7500', 'Total loss: 1.0106', 'for batch', 4)
('GAN loss 0.4850 ', 'GAN acc 0.9961', 'Discriminator loss 0.4529', 'Discriminator accuracy 0.7480', 'Total loss: 0.9379', 'for batch', 5)
('GAN loss 0.4509 ', 'GAN acc 0.9883', 'Discriminator loss 0.4216', 'Discriminator accuracy 0.8457', 'Total loss: 0.8724', 'for batch', 6)
('GAN loss 0.4252 ', 'GAN acc 0.9922', 'Discriminator loss 0.4729', 'Discriminator accuracy 0.7871', 'Total loss: 0.8981', 'for batch', 7)
('GAN loss 0.4295 ', 'GAN acc 0.9883', 'Discriminator loss 0.4791', 'Discriminator accuracy 0.7852', 'Total loss: 0.9086', 'for batch', 8)
('GAN loss 0.3968 ', 'GAN acc 0.9883', 'Discriminator loss 0.4316', 'Discriminator accuracy 0.8066', 'Total loss: 0.8284', 'for batch', 9)
('GAN loss 0.3937 ', 'GAN acc 0.9844', 'Discriminator loss 0.4936', 'Discriminator accuracy 0.7676', 'Total loss: 0.8873', 'for batch', 10)
('GAN loss 0.3727 ', 'GAN acc 0.9883', 'Discriminator loss 0.4511', 'Discriminator accuracy 0.7988', 'Total loss: 0.8238', 'for batch', 11)
('GAN loss 0.3760 ', 'GAN acc 0.9844', 'Discriminator loss 0.4833', 'Discriminator accuracy 0.7383', 'Total loss: 0.8593', 'for batch', 12)
('GAN loss 0.3975 ', 'GAN acc 0.9805', 'Discriminator loss 0.4571', 'Discriminator accuracy 0.7598', 'Total loss: 0.8546', 'for batch', 13)
('GAN loss 0.4115 ', 'GAN acc 0.9922', 'Discriminator loss 0.4584', 'Discriminator accuracy 0.7363', 'Total loss: 0.8699', 'for batch', 14)
('GAN loss 0.3900 ', 'GAN acc 0.9844', 'Discriminator loss 0.4478', 'Discriminator accuracy 0.7910', 'Total loss: 0.8378', 'for batch', 15)
('GAN loss 0.3512 ', 'GAN acc 0.9922', 'Discriminator loss 0.5357', 'Discriminator accuracy 0.7090', 'Total loss: 0.8869', 'for batch', 16)
('GAN loss 0.3609 ', 'GAN acc 0.9961', 'Discriminator loss 0.4885', 'Discriminator accuracy 0.7227', 'Total loss: 0.8494', 'for batch', 17)
('GAN loss 0.3971 ', 'GAN acc 0.9844', 'Discriminator loss 0.5415', 'Discriminator accuracy 0.7188', 'Total loss: 0.9386', 'for batch', 18)
('GAN loss 0.3587 ', 'GAN acc 0.9883', 'Discriminator loss 0.4528', 'Discriminator accuracy 0.7852', 'Total loss: 0.8115', 'for batch', 19)
('GAN loss 0.3784 ', 'GAN acc 0.9844', 'Discriminator loss 0.5555', 'Discriminator accuracy 0.7207', 'Total loss: 0.9339', 'for batch', 20)
('GAN loss 0.4109 ', 'GAN acc 0.9805', 'Discriminator loss 0.4714', 'Discriminator accuracy 0.7793', 'Total loss: 0.8823', 'for batch', 21)
('GAN loss 0.3786 ', 'GAN acc 0.9922', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.6016', 'Total loss: 1.0745', 'for batch', 22)
('GAN loss 0.3842 ', 'GAN acc 0.9961', 'Discriminator loss 0.5375', 'Discriminator accuracy 0.6895', 'Total loss: 0.9217', 'for batch', 23)
('GAN loss 0.4481 ', 'GAN acc 0.9766', 'Discriminator loss 0.5028', 'Discriminator accuracy 0.7500', 'Total loss: 0.9509', 'for batch', 24)
('GAN loss 0.4299 ', 'GAN acc 0.9883', 'Discriminator loss 0.4583', 'Discriminator accuracy 0.7871', 'Total loss: 0.8882', 'for batch', 25)
('GAN loss 0.4185 ', 'GAN acc 0.9883', 'Discriminator loss 0.4996', 'Discriminator accuracy 0.7402', 'Total loss: 0.9181', 'for batch', 26)
('GAN loss 0.3840 ', 'GAN acc 0.9922', 'Discriminator loss 0.5347', 'Discriminator accuracy 0.6855', 'Total loss: 0.9187', 'for batch', 27)
('GAN loss 0.4362 ', 'GAN acc 0.9844', 'Discriminator loss 0.6467', 'Discriminator accuracy 0.6191', 'Total loss: 1.0829', 'for batch', 28)
('GAN loss 0.4209 ', 'GAN acc 0.9844', 'Discriminator loss 0.3801', 'Discriminator accuracy 0.8145', 'Total loss: 0.8010', 'for batch', 29)
('GAN loss 0.4337 ', 'GAN acc 0.9922', 'Discriminator loss 0.5636', 'Discriminator accuracy 0.6719', 'Total loss: 0.9973', 'for batch', 30)
('GAN loss 0.5145 ', 'GAN acc 0.9688', 'Discriminator loss 0.4905', 'Discriminator accuracy 0.8027', 'Total loss: 1.0050', 'for batch', 31)
('GAN loss 0.3992 ', 'GAN acc 0.9922', 'Discriminator loss 0.5565', 'Discriminator accuracy 0.6777', 'Total loss: 0.9558', 'for batch', 32)
('GAN loss 0.4283 ', 'GAN acc 0.9922', 'Discriminator loss 0.6110', 'Discriminator accuracy 0.6309', 'Total loss: 1.0393', 'for batch', 33)
('GAN loss 0.4531 ', 'GAN acc 0.9961', 'Discriminator loss 0.6049', 'Discriminator accuracy 0.6367', 'Total loss: 1.0580', 'for batch', 34)
('GAN loss 0.4918 ', 'GAN acc 0.9922', 'Discriminator loss 0.5916', 'Discriminator accuracy 0.6406', 'Total loss: 1.0835', 'for batch', 35)
('GAN loss 0.4782 ', 'GAN acc 0.9922', 'Discriminator loss 0.4391', 'Discriminator accuracy 0.8125', 'Total loss: 0.9173', 'for batch', 36)
('GAN loss 0.4826 ', 'GAN acc 0.9961', 'Discriminator loss 0.5972', 'Discriminator accuracy 0.6387', 'Total loss: 1.0798', 'for batch', 37)
('GAN loss 0.4806 ', 'GAN acc 0.9883', 'Discriminator loss 0.5296', 'Discriminator accuracy 0.7754', 'Total loss: 1.0102', 'for batch', 38)
('GAN loss 0.5298 ', 'GAN acc 0.9844', 'Discriminator loss 0.4395', 'Discriminator accuracy 0.7988', 'Total loss: 0.9692', 'for batch', 39)
('GAN loss 0.4003 ', 'GAN acc 0.9922', 'Discriminator loss 0.3769', 'Discriminator accuracy 0.8691', 'Total loss: 0.7773', 'for batch', 40)
('GAN loss 0.3800 ', 'GAN acc 0.9883', 'Discriminator loss 0.4943', 'Discriminator accuracy 0.7402', 'Total loss: 0.8744', 'for batch', 41)
('GAN loss 0.3650 ', 'GAN acc 0.9883', 'Discriminator loss 0.4360', 'Discriminator accuracy 0.8066', 'Total loss: 0.8011', 'for batch', 42)
('GAN loss 0.3906 ', 'GAN acc 0.9922', 'Discriminator loss 0.4866', 'Discriminator accuracy 0.7598', 'Total loss: 0.8771', 'for batch', 43)
('GAN loss 0.3988 ', 'GAN acc 0.9844', 'Discriminator loss 0.5516', 'Discriminator accuracy 0.6719', 'Total loss: 0.9504', 'for batch', 44)
('GAN loss 0.3778 ', 'GAN acc 0.9961', 'Discriminator loss 0.5813', 'Discriminator accuracy 0.6699', 'Total loss: 0.9591', 'for batch', 45)
('GAN loss 0.3902 ', 'GAN acc 0.9922', 'Discriminator loss 0.5701', 'Discriminator accuracy 0.6836', 'Total loss: 0.9603', 'for batch', 46)
('GAN loss 0.4099 ', 'GAN acc 0.9883', 'Discriminator loss 0.4844', 'Discriminator accuracy 0.7383', 'Total loss: 0.8943', 'for batch', 47)
('GAN loss 0.3991 ', 'GAN acc 0.9922', 'Discriminator loss 0.4812', 'Discriminator accuracy 0.7480', 'Total loss: 0.8802', 'for batch', 48)
('GAN loss 0.4411 ', 'GAN acc 0.9883', 'Discriminator loss 0.6162', 'Discriminator accuracy 0.6211', 'Total loss: 1.0573', 'for batch', 49)
('GAN loss 0.4116 ', 'GAN acc 0.9961', 'Discriminator loss 0.3575', 'Discriminator accuracy 0.8672', 'Total loss: 0.7691', 'for batch', 50)
('GAN loss 0.4149 ', 'GAN acc 0.9922', 'Discriminator loss 0.4679', 'Discriminator accuracy 0.7676', 'Total loss: 0.8829', 'for batch', 51)
('GAN loss 0.3971 ', 'GAN acc 0.9883', 'Discriminator loss 0.3705', 'Discriminator accuracy 0.8574', 'Total loss: 0.7676', 'for batch', 52)
('GAN loss 0.3812 ', 'GAN acc 0.9883', 'Discriminator loss 0.3888', 'Discriminator accuracy 0.8184', 'Total loss: 0.7700', 'for batch', 53)
('GAN loss 0.3389 ', 'GAN acc 0.9883', 'Discriminator loss 0.2967', 'Discriminator accuracy 0.9238', 'Total loss: 0.6356', 'for batch', 54)
('GAN loss 0.3413 ', 'GAN acc 0.9883', 'Discriminator loss 0.3875', 'Discriminator accuracy 0.8398', 'Total loss: 0.7288', 'for batch', 55)
('GAN loss 0.3185 ', 'GAN acc 0.9883', 'Discriminator loss 0.4392', 'Discriminator accuracy 0.7930', 'Total loss: 0.7577', 'for batch', 56)
('GAN loss 0.2964 ', 'GAN acc 0.9922', 'Discriminator loss 0.3435', 'Discriminator accuracy 0.8809', 'Total loss: 0.6399', 'for batch', 57)
('GAN loss 0.2938 ', 'GAN acc 0.9922', 'Discriminator loss 0.3469', 'Discriminator accuracy 0.8633', 'Total loss: 0.6407', 'for batch', 58)
('GAN loss 0.2706 ', 'GAN acc 0.9922', 'Discriminator loss 0.2737', 'Discriminator accuracy 0.9160', 'Total loss: 0.5444', 'for batch', 59)
('GAN loss 0.2640 ', 'GAN acc 0.9883', 'Discriminator loss 0.3474', 'Discriminator accuracy 0.8750', 'Total loss: 0.6114', 'for batch', 60)
('GAN loss 0.2525 ', 'GAN acc 0.9922', 'Discriminator loss 0.3393', 'Discriminator accuracy 0.8555', 'Total loss: 0.5918', 'for batch', 61)
('GAN loss 0.2662 ', 'GAN acc 0.9883', 'Discriminator loss 0.4231', 'Discriminator accuracy 0.7617', 'Total loss: 0.6893', 'for batch', 62)
('GAN loss 0.2480 ', 'GAN acc 0.9883', 'Discriminator loss 0.3007', 'Discriminator accuracy 0.9023', 'Total loss: 0.5487', 'for batch', 63)
('GAN loss 0.2548 ', 'GAN acc 0.9922', 'Discriminator loss 0.4491', 'Discriminator accuracy 0.7656', 'Total loss: 0.7039', 'for batch', 64)
('GAN loss 0.2408 ', 'GAN acc 0.9922', 'Discriminator loss 0.5932', 'Discriminator accuracy 0.6152', 'Total loss: 0.8340', 'for batch', 65)
('GAN loss 0.2606 ', 'GAN acc 0.9883', 'Discriminator loss 0.4752', 'Discriminator accuracy 0.7539', 'Total loss: 0.7358', 'for batch', 66)
('GAN loss 0.3014 ', 'GAN acc 0.9844', 'Discriminator loss 0.4006', 'Discriminator accuracy 0.8359', 'Total loss: 0.7019', 'for batch', 67)
('GAN loss 0.2487 ', 'GAN acc 0.9883', 'Discriminator loss 0.4657', 'Discriminator accuracy 0.7559', 'Total loss: 0.7144', 'for batch', 68)
('GAN loss 0.2726 ', 'GAN acc 0.9883', 'Discriminator loss 0.4533', 'Discriminator accuracy 0.7656', 'Total loss: 0.7259', 'for batch', 69)
('GAN loss 0.2728 ', 'GAN acc 0.9922', 'Discriminator loss 0.3384', 'Discriminator accuracy 0.8750', 'Total loss: 0.6111', 'for batch', 70)
('GAN loss 0.2622 ', 'GAN acc 0.9883', 'Discriminator loss 0.3616', 'Discriminator accuracy 0.8535', 'Total loss: 0.6237', 'for batch', 71)
('GAN loss 0.2666 ', 'GAN acc 0.9922', 'Discriminator loss 0.5997', 'Discriminator accuracy 0.7012', 'Total loss: 0.8662', 'for batch', 72)
('GAN loss 0.3023 ', 'GAN acc 0.9922', 'Discriminator loss 0.5269', 'Discriminator accuracy 0.7461', 'Total loss: 0.8292', 'for batch', 73)
('GAN loss 0.3172 ', 'GAN acc 0.9922', 'Discriminator loss 0.3325', 'Discriminator accuracy 0.8672', 'Total loss: 0.6498', 'for batch', 74)
('GAN loss 0.4284 ', 'GAN acc 0.9844', 'Discriminator loss 0.5242', 'Discriminator accuracy 0.6914', 'Total loss: 0.9526', 'for batch', 75)
('GAN loss 0.3598 ', 'GAN acc 0.9883', 'Discriminator loss 0.6224', 'Discriminator accuracy 0.6309', 'Total loss: 0.9821', 'for batch', 76)
('GAN loss 0.3230 ', 'GAN acc 0.9883', 'Discriminator loss 0.2823', 'Discriminator accuracy 0.9199', 'Total loss: 0.6053', 'for batch', 77)
('GAN loss 0.3008 ', 'GAN acc 0.9922', 'Discriminator loss 0.4937', 'Discriminator accuracy 0.7539', 'Total loss: 0.7945', 'for batch', 78)
('GAN loss 0.3194 ', 'GAN acc 0.9922', 'Discriminator loss 0.5066', 'Discriminator accuracy 0.7500', 'Total loss: 0.8259', 'for batch', 79)
('GAN loss 0.3397 ', 'GAN acc 0.9961', 'Discriminator loss 0.4616', 'Discriminator accuracy 0.7598', 'Total loss: 0.8014', 'for batch', 80)
('GAN loss 0.3542 ', 'GAN acc 0.9883', 'Discriminator loss 0.3658', 'Discriminator accuracy 0.8203', 'Total loss: 0.7200', 'for batch', 81)
('GAN loss 0.3534 ', 'GAN acc 0.9883', 'Discriminator loss 0.3935', 'Discriminator accuracy 0.8047', 'Total loss: 0.7469', 'for batch', 82)
('GAN loss 0.3540 ', 'GAN acc 0.9883', 'Discriminator loss 0.3618', 'Discriminator accuracy 0.8301', 'Total loss: 0.7158', 'for batch', 83)
('GAN loss 0.2935 ', 'GAN acc 0.9961', 'Discriminator loss 0.3782', 'Discriminator accuracy 0.8301', 'Total loss: 0.6716', 'for batch', 84)
('GAN loss 0.3494 ', 'GAN acc 0.9844', 'Discriminator loss 0.4848', 'Discriminator accuracy 0.7305', 'Total loss: 0.8342', 'for batch', 85)
('GAN loss 0.2986 ', 'GAN acc 0.9922', 'Discriminator loss 0.2932', 'Discriminator accuracy 0.8770', 'Total loss: 0.5918', 'for batch', 86)
('GAN loss 0.2913 ', 'GAN acc 0.9883', 'Discriminator loss 0.4985', 'Discriminator accuracy 0.7539', 'Total loss: 0.7898', 'for batch', 87)
('GAN loss 0.3467 ', 'GAN acc 0.9922', 'Discriminator loss 0.8352', 'Discriminator accuracy 0.5176', 'Total loss: 1.1819', 'for batch', 88)
('GAN loss 0.4014 ', 'GAN acc 0.9844', 'Discriminator loss 0.3054', 'Discriminator accuracy 0.8770', 'Total loss: 0.7069', 'for batch', 89)
('GAN loss 0.3920 ', 'GAN acc 0.9922', 'Discriminator loss 0.4555', 'Discriminator accuracy 0.7832', 'Total loss: 0.8475', 'for batch', 90)
('GAN loss 0.3744 ', 'GAN acc 0.9922', 'Discriminator loss 0.4585', 'Discriminator accuracy 0.7793', 'Total loss: 0.8329', 'for batch', 91)
('GAN loss 0.3540 ', 'GAN acc 0.9922', 'Discriminator loss 0.3903', 'Discriminator accuracy 0.8008', 'Total loss: 0.7444', 'for batch', 92)
('GAN loss 0.3306 ', 'GAN acc 0.9883', 'Discriminator loss 0.2757', 'Discriminator accuracy 0.9473', 'Total loss: 0.6064', 'for batch', 93)
('GAN loss 0.2871 ', 'GAN acc 0.9961', 'Discriminator loss 0.1930', 'Discriminator accuracy 0.9883', 'Total loss: 0.4802', 'for batch', 94)
('GAN loss 0.2710 ', 'GAN acc 0.9883', 'Discriminator loss 0.4374', 'Discriminator accuracy 0.7793', 'Total loss: 0.7084', 'for batch', 95)
('GAN loss 0.2515 ', 'GAN acc 0.9961', 'Discriminator loss 0.2480', 'Discriminator accuracy 0.9180', 'Total loss: 0.4995', 'for batch', 96)
('GAN loss 0.2404 ', 'GAN acc 0.9883', 'Discriminator loss 0.2433', 'Discriminator accuracy 0.9277', 'Total loss: 0.4837', 'for batch', 97)
('GAN loss 0.2718 ', 'GAN acc 0.9883', 'Discriminator loss 0.3925', 'Discriminator accuracy 0.8359', 'Total loss: 0.6643', 'for batch', 98)
('GAN loss 0.2194 ', 'GAN acc 0.9922', 'Discriminator loss 0.1846', 'Discriminator accuracy 0.9766', 'Total loss: 0.4041', 'for batch', 99)
('GAN loss 0.2174 ', 'GAN acc 0.9961', 'Discriminator loss 0.3485', 'Discriminator accuracy 0.8340', 'Total loss: 0.5660', 'for batch', 100)
('GAN loss 0.2459 ', 'GAN acc 0.9922', 'Discriminator loss 0.4079', 'Discriminator accuracy 0.8164', 'Total loss: 0.6538', 'for batch', 101)
('GAN loss 0.2404 ', 'GAN acc 0.9844', 'Discriminator loss 0.3771', 'Discriminator accuracy 0.8438', 'Total loss: 0.6175', 'for batch', 102)
('GAN loss 0.2455 ', 'GAN acc 0.9883', 'Discriminator loss 0.5250', 'Discriminator accuracy 0.7500', 'Total loss: 0.7704', 'for batch', 103)
('GAN loss 0.3439 ', 'GAN acc 0.9883', 'Discriminator loss 0.7184', 'Discriminator accuracy 0.5859', 'Total loss: 1.0624', 'for batch', 104)
('GAN loss 0.3221 ', 'GAN acc 0.9922', 'Discriminator loss 0.3990', 'Discriminator accuracy 0.8125', 'Total loss: 0.7210', 'for batch', 105)
('GAN loss 0.2788 ', 'GAN acc 0.9883', 'Discriminator loss 0.2762', 'Discriminator accuracy 0.9316', 'Total loss: 0.5550', 'for batch', 106)
('GAN loss 0.2867 ', 'GAN acc 0.9883', 'Discriminator loss 0.3805', 'Discriminator accuracy 0.8125', 'Total loss: 0.6672', 'for batch', 107)
('GAN loss 0.3330 ', 'GAN acc 0.9922', 'Discriminator loss 0.5598', 'Discriminator accuracy 0.7246', 'Total loss: 0.8928', 'for batch', 108)
('GAN loss 0.2976 ', 'GAN acc 0.9961', 'Discriminator loss 0.5987', 'Discriminator accuracy 0.5840', 'Total loss: 0.8963', 'for batch', 109)
('GAN loss 0.3383 ', 'GAN acc 0.9805', 'Discriminator loss 0.5490', 'Discriminator accuracy 0.7227', 'Total loss: 0.8873', 'for batch', 110)
('GAN loss 0.3592 ', 'GAN acc 0.9805', 'Discriminator loss 0.4465', 'Discriminator accuracy 0.7773', 'Total loss: 0.8057', 'for batch', 111)
('GAN loss 0.3658 ', 'GAN acc 0.9883', 'Discriminator loss 0.4760', 'Discriminator accuracy 0.7520', 'Total loss: 0.8418', 'for batch', 112)
('GAN loss 0.3933 ', 'GAN acc 0.9922', 'Discriminator loss 0.5552', 'Discriminator accuracy 0.6895', 'Total loss: 0.9486', 'for batch', 113)
('GAN loss 0.3701 ', 'GAN acc 0.9961', 'Discriminator loss 0.2981', 'Discriminator accuracy 0.9180', 'Total loss: 0.6681', 'for batch', 114)
('GAN loss 0.4175 ', 'GAN acc 0.9844', 'Discriminator loss 0.5247', 'Discriminator accuracy 0.6953', 'Total loss: 0.9423', 'for batch', 115)
('GAN loss 0.3745 ', 'GAN acc 0.9922', 'Discriminator loss 0.5152', 'Discriminator accuracy 0.7344', 'Total loss: 0.8896', 'for batch', 116)
('GAN loss 0.3432 ', 'GAN acc 0.9883', 'Discriminator loss 0.5074', 'Discriminator accuracy 0.7168', 'Total loss: 0.8505', 'for batch', 117)
('GAN loss 0.2944 ', 'GAN acc 0.9961', 'Discriminator loss 0.3184', 'Discriminator accuracy 0.8945', 'Total loss: 0.6128', 'for batch', 118)
('GAN loss 0.3410 ', 'GAN acc 0.9883', 'Discriminator loss 0.4996', 'Discriminator accuracy 0.7383', 'Total loss: 0.8407', 'for batch', 119)
('GAN loss 0.2946 ', 'GAN acc 0.9883', 'Discriminator loss 0.4682', 'Discriminator accuracy 0.7598', 'Total loss: 0.7628', 'for batch', 120)
('GAN loss 0.2896 ', 'GAN acc 0.9922', 'Discriminator loss 0.2932', 'Discriminator accuracy 0.9121', 'Total loss: 0.5828', 'for batch', 121)
('GAN loss 0.2840 ', 'GAN acc 0.9883', 'Discriminator loss 0.3923', 'Discriminator accuracy 0.8203', 'Total loss: 0.6762', 'for batch', 122)
('GAN loss 0.2505 ', 'GAN acc 0.9883', 'Discriminator loss 0.1857', 'Discriminator accuracy 0.9922', 'Total loss: 0.4362', 'for batch', 123)
('GAN loss 0.2673 ', 'GAN acc 0.9844', 'Discriminator loss 0.3828', 'Discriminator accuracy 0.8203', 'Total loss: 0.6501', 'for batch', 124)
('GAN loss 0.2424 ', 'GAN acc 0.9922', 'Discriminator loss 0.3466', 'Discriminator accuracy 0.8516', 'Total loss: 0.5890', 'for batch', 125)
('GAN loss 0.2285 ', 'GAN acc 0.9922', 'Discriminator loss 0.4111', 'Discriminator accuracy 0.7988', 'Total loss: 0.6396', 'for batch', 126)
('GAN loss 0.2528 ', 'GAN acc 0.9883', 'Discriminator loss 0.3039', 'Discriminator accuracy 0.8730', 'Total loss: 0.5567', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.74074554)
('DISCRIMINATOR_Imagem FAKE=', 0.22153203)
('Discriminator trained', 128, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.411311')
----------------------------------
('Epoch', 49, 'of', 50)
('Number of batches', 128)
('GAN loss 0.2339 ', 'GAN acc 0.9883', 'Discriminator loss 0.3235', 'Discriminator accuracy 0.9023', 'Total loss: 0.5574', 'for batch', 0)
('GAN loss 0.2067 ', 'GAN acc 0.9922', 'Discriminator loss 0.3318', 'Discriminator accuracy 0.8730', 'Total loss: 0.5384', 'for batch', 1)
('GAN loss 0.2058 ', 'GAN acc 0.9922', 'Discriminator loss 0.2943', 'Discriminator accuracy 0.8848', 'Total loss: 0.5002', 'for batch', 2)
('GAN loss 0.2148 ', 'GAN acc 0.9922', 'Discriminator loss 0.2916', 'Discriminator accuracy 0.8828', 'Total loss: 0.5064', 'for batch', 3)
('GAN loss 0.2017 ', 'GAN acc 0.9922', 'Discriminator loss 0.2936', 'Discriminator accuracy 0.8711', 'Total loss: 0.4953', 'for batch', 4)
('GAN loss 0.2101 ', 'GAN acc 0.9961', 'Discriminator loss 0.4222', 'Discriminator accuracy 0.8164', 'Total loss: 0.6323', 'for batch', 5)
('GAN loss 0.1890 ', 'GAN acc 0.9883', 'Discriminator loss 0.1431', 'Discriminator accuracy 0.9785', 'Total loss: 0.3321', 'for batch', 6)
('GAN loss 0.1771 ', 'GAN acc 0.9961', 'Discriminator loss 0.2284', 'Discriminator accuracy 0.9277', 'Total loss: 0.4055', 'for batch', 7)
('GAN loss 0.1804 ', 'GAN acc 0.9922', 'Discriminator loss 0.2518', 'Discriminator accuracy 0.9258', 'Total loss: 0.4322', 'for batch', 8)
('GAN loss 0.1721 ', 'GAN acc 0.9883', 'Discriminator loss 0.1686', 'Discriminator accuracy 0.9863', 'Total loss: 0.3408', 'for batch', 9)
('GAN loss 0.1912 ', 'GAN acc 0.9922', 'Discriminator loss 0.3242', 'Discriminator accuracy 0.8691', 'Total loss: 0.5154', 'for batch', 10)
('GAN loss 0.1688 ', 'GAN acc 0.9922', 'Discriminator loss 0.3541', 'Discriminator accuracy 0.8711', 'Total loss: 0.5229', 'for batch', 11)
('GAN loss 0.1876 ', 'GAN acc 0.9883', 'Discriminator loss 0.5520', 'Discriminator accuracy 0.7539', 'Total loss: 0.7396', 'for batch', 12)
('GAN loss 0.2423 ', 'GAN acc 0.9883', 'Discriminator loss 0.3207', 'Discriminator accuracy 0.8730', 'Total loss: 0.5630', 'for batch', 13)
('GAN loss 0.1836 ', 'GAN acc 0.9922', 'Discriminator loss 0.1757', 'Discriminator accuracy 0.9863', 'Total loss: 0.3593', 'for batch', 14)
('GAN loss 0.1649 ', 'GAN acc 0.9961', 'Discriminator loss 0.2207', 'Discriminator accuracy 0.9297', 'Total loss: 0.3856', 'for batch', 15)
('GAN loss 0.1755 ', 'GAN acc 0.9961', 'Discriminator loss 0.4390', 'Discriminator accuracy 0.8164', 'Total loss: 0.6145', 'for batch', 16)
('GAN loss 0.1739 ', 'GAN acc 0.9961', 'Discriminator loss 0.1582', 'Discriminator accuracy 0.9824', 'Total loss: 0.3320', 'for batch', 17)
('GAN loss 0.3275 ', 'GAN acc 0.9844', 'Discriminator loss 0.4328', 'Discriminator accuracy 0.7891', 'Total loss: 0.7603', 'for batch', 18)
('GAN loss 0.2020 ', 'GAN acc 0.9922', 'Discriminator loss 0.6403', 'Discriminator accuracy 0.5957', 'Total loss: 0.8423', 'for batch', 19)
('GAN loss 0.2495 ', 'GAN acc 0.9922', 'Discriminator loss 0.6131', 'Discriminator accuracy 0.7129', 'Total loss: 0.8626', 'for batch', 20)
('GAN loss 0.3320 ', 'GAN acc 0.9883', 'Discriminator loss 0.6582', 'Discriminator accuracy 0.6387', 'Total loss: 0.9902', 'for batch', 21)
('GAN loss 0.3997 ', 'GAN acc 0.9961', 'Discriminator loss 0.7099', 'Discriminator accuracy 0.5762', 'Total loss: 1.1096', 'for batch', 22)
('GAN loss 0.4514 ', 'GAN acc 0.9883', 'Discriminator loss 0.5296', 'Discriminator accuracy 0.6953', 'Total loss: 0.9810', 'for batch', 23)
('GAN loss 0.4791 ', 'GAN acc 0.9844', 'Discriminator loss 0.5063', 'Discriminator accuracy 0.7363', 'Total loss: 0.9854', 'for batch', 24)
('GAN loss 0.3681 ', 'GAN acc 0.9883', 'Discriminator loss 0.3219', 'Discriminator accuracy 0.9453', 'Total loss: 0.6900', 'for batch', 25)
('GAN loss 0.3016 ', 'GAN acc 0.9922', 'Discriminator loss 0.3974', 'Discriminator accuracy 0.8008', 'Total loss: 0.6990', 'for batch', 26)
('GAN loss 0.3110 ', 'GAN acc 0.9922', 'Discriminator loss 0.4779', 'Discriminator accuracy 0.7500', 'Total loss: 0.7888', 'for batch', 27)
('GAN loss 0.3358 ', 'GAN acc 0.9844', 'Discriminator loss 0.4944', 'Discriminator accuracy 0.7773', 'Total loss: 0.8301', 'for batch', 28)
('GAN loss 0.3217 ', 'GAN acc 0.9844', 'Discriminator loss 0.2509', 'Discriminator accuracy 0.9336', 'Total loss: 0.5726', 'for batch', 29)
('GAN loss 0.2944 ', 'GAN acc 0.9961', 'Discriminator loss 0.3787', 'Discriminator accuracy 0.8145', 'Total loss: 0.6731', 'for batch', 30)
('GAN loss 0.3045 ', 'GAN acc 0.9883', 'Discriminator loss 0.3037', 'Discriminator accuracy 0.8711', 'Total loss: 0.6083', 'for batch', 31)
('GAN loss 0.2747 ', 'GAN acc 0.9922', 'Discriminator loss 0.2346', 'Discriminator accuracy 0.9316', 'Total loss: 0.5093', 'for batch', 32)
('GAN loss 0.2633 ', 'GAN acc 0.9883', 'Discriminator loss 0.3947', 'Discriminator accuracy 0.8105', 'Total loss: 0.6580', 'for batch', 33)
('GAN loss 0.4572 ', 'GAN acc 0.9766', 'Discriminator loss 0.4677', 'Discriminator accuracy 0.7480', 'Total loss: 0.9249', 'for batch', 34)
('GAN loss 0.3849 ', 'GAN acc 0.9961', 'Discriminator loss 0.6809', 'Discriminator accuracy 0.6348', 'Total loss: 1.0658', 'for batch', 35)
('GAN loss 0.4468 ', 'GAN acc 0.9922', 'Discriminator loss 0.4752', 'Discriminator accuracy 0.7520', 'Total loss: 0.9221', 'for batch', 36)
('GAN loss 0.5238 ', 'GAN acc 0.9961', 'Discriminator loss 0.6573', 'Discriminator accuracy 0.5781', 'Total loss: 1.1811', 'for batch', 37)
('GAN loss 0.5814 ', 'GAN acc 0.9844', 'Discriminator loss 0.5896', 'Discriminator accuracy 0.6211', 'Total loss: 1.1710', 'for batch', 38)
('GAN loss 0.6205 ', 'GAN acc 0.9805', 'Discriminator loss 0.4489', 'Discriminator accuracy 0.7812', 'Total loss: 1.0695', 'for batch', 39)
('GAN loss 0.5308 ', 'GAN acc 0.9922', 'Discriminator loss 0.4397', 'Discriminator accuracy 0.8203', 'Total loss: 0.9706', 'for batch', 40)
('GAN loss 0.4804 ', 'GAN acc 0.9883', 'Discriminator loss 0.4846', 'Discriminator accuracy 0.7461', 'Total loss: 0.9651', 'for batch', 41)
('GAN loss 0.4342 ', 'GAN acc 0.9922', 'Discriminator loss 0.4254', 'Discriminator accuracy 0.8086', 'Total loss: 0.8596', 'for batch', 42)
('GAN loss 0.4257 ', 'GAN acc 0.9922', 'Discriminator loss 0.4643', 'Discriminator accuracy 0.7676', 'Total loss: 0.8900', 'for batch', 43)
('GAN loss 0.4809 ', 'GAN acc 0.9844', 'Discriminator loss 0.4861', 'Discriminator accuracy 0.7695', 'Total loss: 0.9670', 'for batch', 44)
('GAN loss 0.3993 ', 'GAN acc 0.9961', 'Discriminator loss 0.5423', 'Discriminator accuracy 0.7051', 'Total loss: 0.9416', 'for batch', 45)
('GAN loss 0.3786 ', 'GAN acc 0.9961', 'Discriminator loss 0.4753', 'Discriminator accuracy 0.7578', 'Total loss: 0.8539', 'for batch', 46)
('GAN loss 0.4041 ', 'GAN acc 0.9883', 'Discriminator loss 0.4390', 'Discriminator accuracy 0.7812', 'Total loss: 0.8431', 'for batch', 47)
('GAN loss 0.3613 ', 'GAN acc 0.9922', 'Discriminator loss 0.3802', 'Discriminator accuracy 0.8555', 'Total loss: 0.7415', 'for batch', 48)
('GAN loss 0.4158 ', 'GAN acc 0.9922', 'Discriminator loss 0.5467', 'Discriminator accuracy 0.6797', 'Total loss: 0.9625', 'for batch', 49)
('GAN loss 0.3543 ', 'GAN acc 0.9961', 'Discriminator loss 0.3689', 'Discriminator accuracy 0.8516', 'Total loss: 0.7232', 'for batch', 50)
('GAN loss 0.3384 ', 'GAN acc 0.9922', 'Discriminator loss 0.3550', 'Discriminator accuracy 0.8574', 'Total loss: 0.6935', 'for batch', 51)
('GAN loss 0.3078 ', 'GAN acc 0.9922', 'Discriminator loss 0.2970', 'Discriminator accuracy 0.8770', 'Total loss: 0.6048', 'for batch', 52)
('GAN loss 0.2867 ', 'GAN acc 0.9922', 'Discriminator loss 0.2681', 'Discriminator accuracy 0.9238', 'Total loss: 0.5548', 'for batch', 53)
('GAN loss 0.2801 ', 'GAN acc 0.9922', 'Discriminator loss 0.2740', 'Discriminator accuracy 0.9102', 'Total loss: 0.5541', 'for batch', 54)
('GAN loss 0.2561 ', 'GAN acc 0.9922', 'Discriminator loss 0.2923', 'Discriminator accuracy 0.8945', 'Total loss: 0.5484', 'for batch', 55)
('GAN loss 0.2140 ', 'GAN acc 0.9883', 'Discriminator loss 0.4776', 'Discriminator accuracy 0.7344', 'Total loss: 0.6915', 'for batch', 56)
('GAN loss 0.1849 ', 'GAN acc 0.9922', 'Discriminator loss 0.2196', 'Discriminator accuracy 0.9395', 'Total loss: 0.4045', 'for batch', 57)
('GAN loss 0.1914 ', 'GAN acc 0.9922', 'Discriminator loss 0.3655', 'Discriminator accuracy 0.8652', 'Total loss: 0.5569', 'for batch', 58)
('GAN loss 0.1774 ', 'GAN acc 0.9922', 'Discriminator loss 0.1719', 'Discriminator accuracy 0.9375', 'Total loss: 0.3493', 'for batch', 59)
('GAN loss 0.2790 ', 'GAN acc 0.9883', 'Discriminator loss 0.2488', 'Discriminator accuracy 0.9121', 'Total loss: 0.5279', 'for batch', 60)
('GAN loss 0.1725 ', 'GAN acc 0.9922', 'Discriminator loss 0.4678', 'Discriminator accuracy 0.7285', 'Total loss: 0.6404', 'for batch', 61)
('GAN loss 0.2110 ', 'GAN acc 0.9922', 'Discriminator loss 0.5817', 'Discriminator accuracy 0.7520', 'Total loss: 0.7927', 'for batch', 62)
('GAN loss 0.2565 ', 'GAN acc 0.9883', 'Discriminator loss 0.6642', 'Discriminator accuracy 0.6855', 'Total loss: 0.9206', 'for batch', 63)
('GAN loss 0.3151 ', 'GAN acc 0.9922', 'Discriminator loss 0.6663', 'Discriminator accuracy 0.6641', 'Total loss: 0.9814', 'for batch', 64)
('GAN loss 0.3523 ', 'GAN acc 0.9922', 'Discriminator loss 0.5150', 'Discriminator accuracy 0.7383', 'Total loss: 0.8673', 'for batch', 65)
('GAN loss 0.4051 ', 'GAN acc 0.9883', 'Discriminator loss 0.5337', 'Discriminator accuracy 0.7070', 'Total loss: 0.9388', 'for batch', 66)
('GAN loss 0.4441 ', 'GAN acc 0.9844', 'Discriminator loss 0.5084', 'Discriminator accuracy 0.7383', 'Total loss: 0.9524', 'for batch', 67)
('GAN loss 0.4621 ', 'GAN acc 0.9883', 'Discriminator loss 0.5371', 'Discriminator accuracy 0.7168', 'Total loss: 0.9992', 'for batch', 68)
('GAN loss 0.4559 ', 'GAN acc 0.9883', 'Discriminator loss 0.4813', 'Discriminator accuracy 0.7227', 'Total loss: 0.9372', 'for batch', 69)
('GAN loss 0.3939 ', 'GAN acc 0.9922', 'Discriminator loss 0.3661', 'Discriminator accuracy 0.8906', 'Total loss: 0.7599', 'for batch', 70)
('GAN loss 0.3658 ', 'GAN acc 0.9883', 'Discriminator loss 0.3193', 'Discriminator accuracy 0.9062', 'Total loss: 0.6851', 'for batch', 71)
('GAN loss 0.3505 ', 'GAN acc 0.9922', 'Discriminator loss 0.5625', 'Discriminator accuracy 0.6953', 'Total loss: 0.9130', 'for batch', 72)
('GAN loss 0.3423 ', 'GAN acc 0.9922', 'Discriminator loss 0.4554', 'Discriminator accuracy 0.7637', 'Total loss: 0.7977', 'for batch', 73)
('GAN loss 0.3373 ', 'GAN acc 0.9922', 'Discriminator loss 0.2668', 'Discriminator accuracy 0.9258', 'Total loss: 0.6041', 'for batch', 74)
('GAN loss 0.4248 ', 'GAN acc 0.9844', 'Discriminator loss 0.4311', 'Discriminator accuracy 0.8066', 'Total loss: 0.8559', 'for batch', 75)
('GAN loss 0.3422 ', 'GAN acc 0.9922', 'Discriminator loss 0.6473', 'Discriminator accuracy 0.5723', 'Total loss: 0.9894', 'for batch', 76)
('GAN loss 0.3296 ', 'GAN acc 0.9961', 'Discriminator loss 0.2913', 'Discriminator accuracy 0.8984', 'Total loss: 0.6210', 'for batch', 77)
('GAN loss 0.3323 ', 'GAN acc 0.9922', 'Discriminator loss 0.5194', 'Discriminator accuracy 0.7344', 'Total loss: 0.8517', 'for batch', 78)
('GAN loss 0.3465 ', 'GAN acc 0.9922', 'Discriminator loss 0.4792', 'Discriminator accuracy 0.7578', 'Total loss: 0.8257', 'for batch', 79)
('GAN loss 0.3557 ', 'GAN acc 0.9961', 'Discriminator loss 0.4205', 'Discriminator accuracy 0.8047', 'Total loss: 0.7762', 'for batch', 80)
('GAN loss 0.3474 ', 'GAN acc 0.9922', 'Discriminator loss 0.3137', 'Discriminator accuracy 0.8770', 'Total loss: 0.6611', 'for batch', 81)
('GAN loss 0.3426 ', 'GAN acc 0.9922', 'Discriminator loss 0.4315', 'Discriminator accuracy 0.8008', 'Total loss: 0.7741', 'for batch', 82)
('GAN loss 0.3646 ', 'GAN acc 0.9922', 'Discriminator loss 0.4363', 'Discriminator accuracy 0.8164', 'Total loss: 0.8009', 'for batch', 83)
('GAN loss 0.3224 ', 'GAN acc 0.9961', 'Discriminator loss 0.4200', 'Discriminator accuracy 0.7832', 'Total loss: 0.7424', 'for batch', 84)
('GAN loss 0.3227 ', 'GAN acc 0.9883', 'Discriminator loss 0.4024', 'Discriminator accuracy 0.8086', 'Total loss: 0.7252', 'for batch', 85)
('GAN loss 0.3017 ', 'GAN acc 0.9883', 'Discriminator loss 0.1881', 'Discriminator accuracy 0.9629', 'Total loss: 0.4898', 'for batch', 86)
('GAN loss 0.2795 ', 'GAN acc 0.9883', 'Discriminator loss 0.3135', 'Discriminator accuracy 0.8691', 'Total loss: 0.5929', 'for batch', 87)
('GAN loss 0.2890 ', 'GAN acc 0.9883', 'Discriminator loss 0.5367', 'Discriminator accuracy 0.7188', 'Total loss: 0.8258', 'for batch', 88)
('GAN loss 0.2777 ', 'GAN acc 0.9922', 'Discriminator loss 0.2253', 'Discriminator accuracy 0.9531', 'Total loss: 0.5030', 'for batch', 89)
('GAN loss 0.2804 ', 'GAN acc 0.9922', 'Discriminator loss 0.3742', 'Discriminator accuracy 0.8145', 'Total loss: 0.6546', 'for batch', 90)
('GAN loss 0.2634 ', 'GAN acc 0.9961', 'Discriminator loss 0.4016', 'Discriminator accuracy 0.8086', 'Total loss: 0.6650', 'for batch', 91)
('GAN loss 0.2652 ', 'GAN acc 0.9961', 'Discriminator loss 0.3510', 'Discriminator accuracy 0.8164', 'Total loss: 0.6162', 'for batch', 92)
('GAN loss 0.2608 ', 'GAN acc 0.9883', 'Discriminator loss 0.3032', 'Discriminator accuracy 0.8809', 'Total loss: 0.5640', 'for batch', 93)
('GAN loss 0.2335 ', 'GAN acc 0.9961', 'Discriminator loss 0.1417', 'Discriminator accuracy 0.9902', 'Total loss: 0.3752', 'for batch', 94)
('GAN loss 0.2172 ', 'GAN acc 0.9922', 'Discriminator loss 0.3491', 'Discriminator accuracy 0.8652', 'Total loss: 0.5663', 'for batch', 95)
('GAN loss 0.2143 ', 'GAN acc 0.9961', 'Discriminator loss 0.1572', 'Discriminator accuracy 0.9785', 'Total loss: 0.3714', 'for batch', 96)
('GAN loss 0.2054 ', 'GAN acc 0.9922', 'Discriminator loss 0.2193', 'Discriminator accuracy 0.9336', 'Total loss: 0.4248', 'for batch', 97)
('GAN loss 0.2157 ', 'GAN acc 0.9922', 'Discriminator loss 0.3094', 'Discriminator accuracy 0.8691', 'Total loss: 0.5251', 'for batch', 98)
('GAN loss 0.1916 ', 'GAN acc 0.9844', 'Discriminator loss 0.1428', 'Discriminator accuracy 0.9902', 'Total loss: 0.3344', 'for batch', 99)
('GAN loss 0.1832 ', 'GAN acc 0.9961', 'Discriminator loss 0.2618', 'Discriminator accuracy 0.8867', 'Total loss: 0.4450', 'for batch', 100)
('GAN loss 0.2098 ', 'GAN acc 0.9922', 'Discriminator loss 0.3584', 'Discriminator accuracy 0.8281', 'Total loss: 0.5682', 'for batch', 101)
('GAN loss 0.1833 ', 'GAN acc 0.9883', 'Discriminator loss 0.3238', 'Discriminator accuracy 0.8574', 'Total loss: 0.5070', 'for batch', 102)
('GAN loss 0.1982 ', 'GAN acc 0.9961', 'Discriminator loss 0.6192', 'Discriminator accuracy 0.7109', 'Total loss: 0.8174', 'for batch', 103)
('GAN loss 0.2348 ', 'GAN acc 0.9922', 'Discriminator loss 0.6277', 'Discriminator accuracy 0.7129', 'Total loss: 0.8624', 'for batch', 104)
('GAN loss 0.2694 ', 'GAN acc 0.9922', 'Discriminator loss 0.3018', 'Discriminator accuracy 0.8789', 'Total loss: 0.5712', 'for batch', 105)
('GAN loss 0.2647 ', 'GAN acc 0.9883', 'Discriminator loss 0.2205', 'Discriminator accuracy 0.9395', 'Total loss: 0.4852', 'for batch', 106)
('GAN loss 0.2486 ', 'GAN acc 0.9883', 'Discriminator loss 0.2909', 'Discriminator accuracy 0.8848', 'Total loss: 0.5396', 'for batch', 107)
('GAN loss 0.2738 ', 'GAN acc 0.9922', 'Discriminator loss 0.4971', 'Discriminator accuracy 0.7500', 'Total loss: 0.7709', 'for batch', 108)
('GAN loss 0.2529 ', 'GAN acc 0.9961', 'Discriminator loss 0.3694', 'Discriminator accuracy 0.8535', 'Total loss: 0.6222', 'for batch', 109)
('GAN loss 0.3146 ', 'GAN acc 0.9805', 'Discriminator loss 0.3755', 'Discriminator accuracy 0.8574', 'Total loss: 0.6902', 'for batch', 110)
('GAN loss 0.2499 ', 'GAN acc 0.9883', 'Discriminator loss 0.2686', 'Discriminator accuracy 0.9355', 'Total loss: 0.5185', 'for batch', 111)
('GAN loss 0.2422 ', 'GAN acc 0.9883', 'Discriminator loss 0.4545', 'Discriminator accuracy 0.7988', 'Total loss: 0.6967', 'for batch', 112)
('GAN loss 0.2393 ', 'GAN acc 0.9922', 'Discriminator loss 0.4165', 'Discriminator accuracy 0.8047', 'Total loss: 0.6558', 'for batch', 113)
('GAN loss 0.2179 ', 'GAN acc 0.9961', 'Discriminator loss 0.3039', 'Discriminator accuracy 0.8613', 'Total loss: 0.5218', 'for batch', 114)
('GAN loss 0.2997 ', 'GAN acc 0.9883', 'Discriminator loss 0.5289', 'Discriminator accuracy 0.7227', 'Total loss: 0.8286', 'for batch', 115)
('GAN loss 0.2977 ', 'GAN acc 0.9922', 'Discriminator loss 0.5959', 'Discriminator accuracy 0.6719', 'Total loss: 0.8937', 'for batch', 116)
('GAN loss 0.2958 ', 'GAN acc 0.9883', 'Discriminator loss 0.5645', 'Discriminator accuracy 0.6738', 'Total loss: 0.8603', 'for batch', 117)
('GAN loss 0.2726 ', 'GAN acc 0.9961', 'Discriminator loss 0.3658', 'Discriminator accuracy 0.8594', 'Total loss: 0.6384', 'for batch', 118)
('GAN loss 0.2919 ', 'GAN acc 0.9922', 'Discriminator loss 0.6758', 'Discriminator accuracy 0.6387', 'Total loss: 0.9677', 'for batch', 119)
('GAN loss 0.3336 ', 'GAN acc 0.9883', 'Discriminator loss 0.3621', 'Discriminator accuracy 0.8320', 'Total loss: 0.6957', 'for batch', 120)
('GAN loss 0.3291 ', 'GAN acc 0.9922', 'Discriminator loss 0.3706', 'Discriminator accuracy 0.8418', 'Total loss: 0.6998', 'for batch', 121)
('GAN loss 0.3460 ', 'GAN acc 0.9844', 'Discriminator loss 0.4952', 'Discriminator accuracy 0.7500', 'Total loss: 0.8412', 'for batch', 122)
('GAN loss 0.3023 ', 'GAN acc 0.9961', 'Discriminator loss 0.1792', 'Discriminator accuracy 0.9863', 'Total loss: 0.4815', 'for batch', 123)
('GAN loss 0.3580 ', 'GAN acc 0.9766', 'Discriminator loss 0.3152', 'Discriminator accuracy 0.8672', 'Total loss: 0.6732', 'for batch', 124)
('GAN loss 0.2909 ', 'GAN acc 0.9922', 'Discriminator loss 0.3198', 'Discriminator accuracy 0.8691', 'Total loss: 0.6107', 'for batch', 125)
('GAN loss 0.3075 ', 'GAN acc 0.9922', 'Discriminator loss 0.4662', 'Discriminator accuracy 0.7539', 'Total loss: 0.7736', 'for batch', 126)
('GAN loss 0.3209 ', 'GAN acc 0.9883', 'Discriminator loss 0.2288', 'Discriminator accuracy 0.9492', 'Total loss: 0.5497', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.73293829)
('DISCRIMINATOR_Imagem FAKE=', 0.16069148)
('Discriminator trained', 8, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:52.171132')
----------------------------------
('Epoch', 50, 'of', 50)
('Number of batches', 128)
('GAN loss 0.3095 ', 'GAN acc 0.9883', 'Discriminator loss 0.2717', 'Discriminator accuracy 0.9238', 'Total loss: 0.5812', 'for batch', 0)
('GAN loss 0.2246 ', 'GAN acc 0.9922', 'Discriminator loss 0.2223', 'Discriminator accuracy 0.9316', 'Total loss: 0.4469', 'for batch', 1)
('GAN loss 0.2422 ', 'GAN acc 0.9883', 'Discriminator loss 0.3013', 'Discriminator accuracy 0.8770', 'Total loss: 0.5436', 'for batch', 2)
('GAN loss 0.2431 ', 'GAN acc 0.9922', 'Discriminator loss 0.2129', 'Discriminator accuracy 0.9316', 'Total loss: 0.4560', 'for batch', 3)
('GAN loss 0.2252 ', 'GAN acc 0.9922', 'Discriminator loss 0.2160', 'Discriminator accuracy 0.9316', 'Total loss: 0.4412', 'for batch', 4)
('GAN loss 0.2038 ', 'GAN acc 0.9961', 'Discriminator loss 0.3309', 'Discriminator accuracy 0.8730', 'Total loss: 0.5347', 'for batch', 5)
('GAN loss 0.2164 ', 'GAN acc 0.9922', 'Discriminator loss 0.1972', 'Discriminator accuracy 0.9297', 'Total loss: 0.4136', 'for batch', 6)
('GAN loss 0.2197 ', 'GAN acc 0.9922', 'Discriminator loss 0.2139', 'Discriminator accuracy 0.9277', 'Total loss: 0.4336', 'for batch', 7)
('GAN loss 0.1860 ', 'GAN acc 0.9961', 'Discriminator loss 0.2360', 'Discriminator accuracy 0.9102', 'Total loss: 0.4220', 'for batch', 8)
('GAN loss 0.1953 ', 'GAN acc 0.9883', 'Discriminator loss 0.2710', 'Discriminator accuracy 0.9043', 'Total loss: 0.4662', 'for batch', 9)
('GAN loss 0.2024 ', 'GAN acc 0.9883', 'Discriminator loss 0.3446', 'Discriminator accuracy 0.8594', 'Total loss: 0.5469', 'for batch', 10)
('GAN loss 0.1894 ', 'GAN acc 0.9922', 'Discriminator loss 0.3940', 'Discriminator accuracy 0.8301', 'Total loss: 0.5833', 'for batch', 11)
('GAN loss 0.2263 ', 'GAN acc 0.9883', 'Discriminator loss 0.4888', 'Discriminator accuracy 0.7559', 'Total loss: 0.7150', 'for batch', 12)
('GAN loss 0.2102 ', 'GAN acc 0.9844', 'Discriminator loss 0.3504', 'Discriminator accuracy 0.8594', 'Total loss: 0.5605', 'for batch', 13)
('GAN loss 0.1745 ', 'GAN acc 0.9922', 'Discriminator loss 0.1924', 'Discriminator accuracy 0.9648', 'Total loss: 0.3669', 'for batch', 14)
('GAN loss 0.1835 ', 'GAN acc 0.9922', 'Discriminator loss 0.3058', 'Discriminator accuracy 0.8711', 'Total loss: 0.4893', 'for batch', 15)
('GAN loss 0.1790 ', 'GAN acc 0.9922', 'Discriminator loss 0.4278', 'Discriminator accuracy 0.8164', 'Total loss: 0.6068', 'for batch', 16)
('GAN loss 0.1784 ', 'GAN acc 0.9961', 'Discriminator loss 0.2125', 'Discriminator accuracy 0.9297', 'Total loss: 0.3909', 'for batch', 17)
('GAN loss 0.2561 ', 'GAN acc 0.9844', 'Discriminator loss 0.5202', 'Discriminator accuracy 0.7461', 'Total loss: 0.7763', 'for batch', 18)
('GAN loss 0.1653 ', 'GAN acc 0.9961', 'Discriminator loss 0.5844', 'Discriminator accuracy 0.6387', 'Total loss: 0.7498', 'for batch', 19)
('GAN loss 0.2123 ', 'GAN acc 0.9922', 'Discriminator loss 0.5405', 'Discriminator accuracy 0.7578', 'Total loss: 0.7528', 'for batch', 20)
('GAN loss 0.2590 ', 'GAN acc 0.9883', 'Discriminator loss 0.5745', 'Discriminator accuracy 0.7031', 'Total loss: 0.8335', 'for batch', 21)
('GAN loss 0.2890 ', 'GAN acc 0.9961', 'Discriminator loss 0.6620', 'Discriminator accuracy 0.6484', 'Total loss: 0.9511', 'for batch', 22)
('GAN loss 0.3270 ', 'GAN acc 0.9961', 'Discriminator loss 0.4079', 'Discriminator accuracy 0.7793', 'Total loss: 0.7349', 'for batch', 23)
('GAN loss 0.3714 ', 'GAN acc 0.9883', 'Discriminator loss 0.2810', 'Discriminator accuracy 0.9121', 'Total loss: 0.6523', 'for batch', 24)
('GAN loss 0.3246 ', 'GAN acc 0.9883', 'Discriminator loss 0.2620', 'Discriminator accuracy 0.9316', 'Total loss: 0.5867', 'for batch', 25)
('GAN loss 0.2734 ', 'GAN acc 0.9922', 'Discriminator loss 0.3366', 'Discriminator accuracy 0.8633', 'Total loss: 0.6100', 'for batch', 26)
('GAN loss 0.2781 ', 'GAN acc 0.9883', 'Discriminator loss 0.3431', 'Discriminator accuracy 0.8691', 'Total loss: 0.6212', 'for batch', 27)
('GAN loss 0.2861 ', 'GAN acc 0.9883', 'Discriminator loss 0.4761', 'Discriminator accuracy 0.7578', 'Total loss: 0.7622', 'for batch', 28)
('GAN loss 2.1645 ', 'GAN acc 0.0078', 'Discriminator loss 0.2123', 'Discriminator accuracy 0.9395', 'Total loss: 2.3767', 'for batch', 29)
('GAN loss 0.8310 ', 'GAN acc 0.9688', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5215', 'Total loss: 1.5192', 'for batch', 30)
('GAN loss 1.3573 ', 'GAN acc 0.4492', 'Discriminator loss 0.5458', 'Discriminator accuracy 0.5605', 'Total loss: 1.9031', 'for batch', 31)
('GAN loss 1.3796 ', 'GAN acc 0.0938', 'Discriminator loss 0.4819', 'Discriminator accuracy 0.7832', 'Total loss: 1.8615', 'for batch', 32)
('GAN loss 1.3364 ', 'GAN acc 0.0312', 'Discriminator loss 0.4285', 'Discriminator accuracy 0.9316', 'Total loss: 1.7649', 'for batch', 33)
('GAN loss 1.3804 ', 'GAN acc 0.0117', 'Discriminator loss 0.4116', 'Discriminator accuracy 0.9727', 'Total loss: 1.7920', 'for batch', 34)
('GAN loss 1.3322 ', 'GAN acc 0.0234', 'Discriminator loss 0.4137', 'Discriminator accuracy 0.9609', 'Total loss: 1.7460', 'for batch', 35)
('GAN loss 1.2559 ', 'GAN acc 0.0195', 'Discriminator loss 0.4358', 'Discriminator accuracy 0.9258', 'Total loss: 1.6917', 'for batch', 36)
('GAN loss 1.4370 ', 'GAN acc 0.0156', 'Discriminator loss 0.4699', 'Discriminator accuracy 0.8203', 'Total loss: 1.9070', 'for batch', 37)
('GAN loss 1.4866 ', 'GAN acc 0.0156', 'Discriminator loss 0.5037', 'Discriminator accuracy 0.7773', 'Total loss: 1.9903', 'for batch', 38)
('GAN loss 1.5992 ', 'GAN acc 0.0156', 'Discriminator loss 0.5297', 'Discriminator accuracy 0.7480', 'Total loss: 2.1288', 'for batch', 39)
('GAN loss 1.5544 ', 'GAN acc 0.0039', 'Discriminator loss 0.5973', 'Discriminator accuracy 0.6426', 'Total loss: 2.1517', 'for batch', 40)
('GAN loss 1.5793 ', 'GAN acc 0.0117', 'Discriminator loss 0.5919', 'Discriminator accuracy 0.6777', 'Total loss: 2.1712', 'for batch', 41)
('GAN loss 1.8492 ', 'GAN acc 0.0000', 'Discriminator loss 0.5519', 'Discriminator accuracy 0.7520', 'Total loss: 2.4012', 'for batch', 42)
('GAN loss 1.7077 ', 'GAN acc 0.0000', 'Discriminator loss 0.5742', 'Discriminator accuracy 0.6699', 'Total loss: 2.2819', 'for batch', 43)
('GAN loss 1.4827 ', 'GAN acc 0.0039', 'Discriminator loss 0.6395', 'Discriminator accuracy 0.6387', 'Total loss: 2.1223', 'for batch', 44)
('GAN loss 1.2849 ', 'GAN acc 0.0039', 'Discriminator loss 0.7189', 'Discriminator accuracy 0.4805', 'Total loss: 2.0038', 'for batch', 45)
('GAN loss 1.1973 ', 'GAN acc 0.0156', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.6055', 'Total loss: 1.8821', 'for batch', 46)
('GAN loss 1.1048 ', 'GAN acc 0.0391', 'Discriminator loss 0.6555', 'Discriminator accuracy 0.6738', 'Total loss: 1.7602', 'for batch', 47)
('GAN loss 1.3513 ', 'GAN acc 0.0430', 'Discriminator loss 0.6501', 'Discriminator accuracy 0.5488', 'Total loss: 2.0014', 'for batch', 48)
('GAN loss 1.8330 ', 'GAN acc 0.0039', 'Discriminator loss 0.5964', 'Discriminator accuracy 0.6250', 'Total loss: 2.4295', 'for batch', 49)
('GAN loss 1.0829 ', 'GAN acc 0.0039', 'Discriminator loss 0.5289', 'Discriminator accuracy 0.7441', 'Total loss: 1.6118', 'for batch', 50)
('GAN loss 1.3345 ', 'GAN acc 0.0000', 'Discriminator loss 0.4962', 'Discriminator accuracy 0.9512', 'Total loss: 1.8307', 'for batch', 51)
('GAN loss 1.2495 ', 'GAN acc 0.0117', 'Discriminator loss 0.4767', 'Discriminator accuracy 0.9590', 'Total loss: 1.7262', 'for batch', 52)
('GAN loss 1.1796 ', 'GAN acc 0.0078', 'Discriminator loss 0.4802', 'Discriminator accuracy 0.9062', 'Total loss: 1.6598', 'for batch', 53)
('GAN loss 1.3212 ', 'GAN acc 0.0078', 'Discriminator loss 0.5448', 'Discriminator accuracy 0.7129', 'Total loss: 1.8660', 'for batch', 54)
('GAN loss 1.0529 ', 'GAN acc 0.1641', 'Discriminator loss 0.6168', 'Discriminator accuracy 0.7070', 'Total loss: 1.6697', 'for batch', 55)
('GAN loss 0.9864 ', 'GAN acc 0.1719', 'Discriminator loss 0.6652', 'Discriminator accuracy 0.5801', 'Total loss: 1.6515', 'for batch', 56)
('GAN loss 1.1910 ', 'GAN acc 0.0117', 'Discriminator loss 0.6634', 'Discriminator accuracy 0.5449', 'Total loss: 1.8544', 'for batch', 57)
('GAN loss 1.1259 ', 'GAN acc 0.0625', 'Discriminator loss 0.6335', 'Discriminator accuracy 0.6758', 'Total loss: 1.7594', 'for batch', 58)
('GAN loss 1.2662 ', 'GAN acc 0.0273', 'Discriminator loss 0.6328', 'Discriminator accuracy 0.5527', 'Total loss: 1.8989', 'for batch', 59)
('GAN loss 1.2705 ', 'GAN acc 0.0234', 'Discriminator loss 0.6760', 'Discriminator accuracy 0.5059', 'Total loss: 1.9465', 'for batch', 60)
('GAN loss 1.0047 ', 'GAN acc 0.3086', 'Discriminator loss 0.6018', 'Discriminator accuracy 0.7109', 'Total loss: 1.6064', 'for batch', 61)
('GAN loss 1.2869 ', 'GAN acc 0.0312', 'Discriminator loss 0.6004', 'Discriminator accuracy 0.6230', 'Total loss: 1.8873', 'for batch', 62)
('GAN loss 1.0764 ', 'GAN acc 0.1836', 'Discriminator loss 0.6071', 'Discriminator accuracy 0.7363', 'Total loss: 1.6834', 'for batch', 63)
('GAN loss 1.1420 ', 'GAN acc 0.0234', 'Discriminator loss 0.6059', 'Discriminator accuracy 0.6270', 'Total loss: 1.7479', 'for batch', 64)
('GAN loss 1.1802 ', 'GAN acc 0.0391', 'Discriminator loss 0.6256', 'Discriminator accuracy 0.6719', 'Total loss: 1.8058', 'for batch', 65)
('GAN loss 1.1028 ', 'GAN acc 0.1055', 'Discriminator loss 0.6491', 'Discriminator accuracy 0.6074', 'Total loss: 1.7519', 'for batch', 66)
('GAN loss 1.1098 ', 'GAN acc 0.1016', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5332', 'Total loss: 1.7946', 'for batch', 67)
('GAN loss 1.1426 ', 'GAN acc 0.1211', 'Discriminator loss 0.6939', 'Discriminator accuracy 0.5156', 'Total loss: 1.8364', 'for batch', 68)
('GAN loss 0.9407 ', 'GAN acc 0.2383', 'Discriminator loss 0.6938', 'Discriminator accuracy 0.5234', 'Total loss: 1.6346', 'for batch', 69)
('GAN loss 0.9509 ', 'GAN acc 0.2891', 'Discriminator loss 0.6953', 'Discriminator accuracy 0.5176', 'Total loss: 1.6462', 'for batch', 70)
('GAN loss 1.0139 ', 'GAN acc 0.2227', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5059', 'Total loss: 1.7018', 'for batch', 71)
('GAN loss 0.7968 ', 'GAN acc 0.5273', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.5820', 'Total loss: 1.4575', 'for batch', 72)
('GAN loss 0.7661 ', 'GAN acc 0.6016', 'Discriminator loss 0.6989', 'Discriminator accuracy 0.5391', 'Total loss: 1.4650', 'for batch', 73)
('GAN loss 0.9171 ', 'GAN acc 0.2812', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5488', 'Total loss: 1.5909', 'for batch', 74)
('GAN loss 0.8013 ', 'GAN acc 0.4961', 'Discriminator loss 0.6621', 'Discriminator accuracy 0.5762', 'Total loss: 1.4634', 'for batch', 75)
('GAN loss 0.8504 ', 'GAN acc 0.2930', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.5488', 'Total loss: 1.5083', 'for batch', 76)
('GAN loss 0.9550 ', 'GAN acc 0.1094', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.5469', 'Total loss: 1.6079', 'for batch', 77)
('GAN loss 0.9204 ', 'GAN acc 0.1133', 'Discriminator loss 0.6544', 'Discriminator accuracy 0.6270', 'Total loss: 1.5748', 'for batch', 78)
('GAN loss 0.8904 ', 'GAN acc 0.0977', 'Discriminator loss 0.6767', 'Discriminator accuracy 0.4980', 'Total loss: 1.5671', 'for batch', 79)
('GAN loss 0.8597 ', 'GAN acc 0.2031', 'Discriminator loss 0.6784', 'Discriminator accuracy 0.5430', 'Total loss: 1.5382', 'for batch', 80)
('GAN loss 0.7736 ', 'GAN acc 0.4023', 'Discriminator loss 0.6739', 'Discriminator accuracy 0.5078', 'Total loss: 1.4474', 'for batch', 81)
('GAN loss 0.8168 ', 'GAN acc 0.3711', 'Discriminator loss 0.6678', 'Discriminator accuracy 0.5078', 'Total loss: 1.4846', 'for batch', 82)
('GAN loss 0.8626 ', 'GAN acc 0.2734', 'Discriminator loss 0.6453', 'Discriminator accuracy 0.5566', 'Total loss: 1.5079', 'for batch', 83)
('GAN loss 0.9264 ', 'GAN acc 0.0820', 'Discriminator loss 0.6370', 'Discriminator accuracy 0.6426', 'Total loss: 1.5634', 'for batch', 84)
('GAN loss 0.9169 ', 'GAN acc 0.3086', 'Discriminator loss 0.6594', 'Discriminator accuracy 0.5781', 'Total loss: 1.5763', 'for batch', 85)
('GAN loss 0.8877 ', 'GAN acc 0.3047', 'Discriminator loss 0.6575', 'Discriminator accuracy 0.5215', 'Total loss: 1.5452', 'for batch', 86)
('GAN loss 0.9261 ', 'GAN acc 0.2422', 'Discriminator loss 0.6718', 'Discriminator accuracy 0.4922', 'Total loss: 1.5979', 'for batch', 87)
('GAN loss 0.8810 ', 'GAN acc 0.2500', 'Discriminator loss 0.6500', 'Discriminator accuracy 0.5312', 'Total loss: 1.5310', 'for batch', 88)
('GAN loss 1.0014 ', 'GAN acc 0.1836', 'Discriminator loss 0.6836', 'Discriminator accuracy 0.5117', 'Total loss: 1.6849', 'for batch', 89)
('GAN loss 0.9048 ', 'GAN acc 0.2812', 'Discriminator loss 0.6930', 'Discriminator accuracy 0.5117', 'Total loss: 1.5978', 'for batch', 90)
('GAN loss 0.8978 ', 'GAN acc 0.3984', 'Discriminator loss 0.6979', 'Discriminator accuracy 0.5195', 'Total loss: 1.5957', 'for batch', 91)
('GAN loss 0.8263 ', 'GAN acc 0.6289', 'Discriminator loss 0.6572', 'Discriminator accuracy 0.5664', 'Total loss: 1.4835', 'for batch', 92)
('GAN loss 0.7670 ', 'GAN acc 0.5781', 'Discriminator loss 0.6711', 'Discriminator accuracy 0.5410', 'Total loss: 1.4380', 'for batch', 93)
('GAN loss 0.7983 ', 'GAN acc 0.5938', 'Discriminator loss 0.6661', 'Discriminator accuracy 0.5566', 'Total loss: 1.4645', 'for batch', 94)
('GAN loss 0.7971 ', 'GAN acc 0.5000', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5781', 'Total loss: 1.4610', 'for batch', 95)
('GAN loss 0.8335 ', 'GAN acc 0.4453', 'Discriminator loss 0.6776', 'Discriminator accuracy 0.5273', 'Total loss: 1.5111', 'for batch', 96)
('GAN loss 0.7938 ', 'GAN acc 0.5039', 'Discriminator loss 0.6774', 'Discriminator accuracy 0.5078', 'Total loss: 1.4712', 'for batch', 97)
('GAN loss 0.9398 ', 'GAN acc 0.3203', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5430', 'Total loss: 1.6149', 'for batch', 98)
('GAN loss 0.9995 ', 'GAN acc 0.3398', 'Discriminator loss 0.6523', 'Discriminator accuracy 0.5762', 'Total loss: 1.6519', 'for batch', 99)
('GAN loss 0.6565 ', 'GAN acc 0.8047', 'Discriminator loss 0.6856', 'Discriminator accuracy 0.5137', 'Total loss: 1.3421', 'for batch', 100)
('GAN loss 0.6943 ', 'GAN acc 0.7930', 'Discriminator loss 0.6894', 'Discriminator accuracy 0.5273', 'Total loss: 1.3837', 'for batch', 101)
('GAN loss 0.8016 ', 'GAN acc 0.7070', 'Discriminator loss 0.7137', 'Discriminator accuracy 0.4844', 'Total loss: 1.5153', 'for batch', 102)
('GAN loss 0.8047 ', 'GAN acc 0.4180', 'Discriminator loss 0.6819', 'Discriminator accuracy 0.4863', 'Total loss: 1.4866', 'for batch', 103)
('GAN loss 0.8029 ', 'GAN acc 0.3711', 'Discriminator loss 0.6801', 'Discriminator accuracy 0.5137', 'Total loss: 1.4830', 'for batch', 104)
('GAN loss 0.8305 ', 'GAN acc 0.3945', 'Discriminator loss 0.6861', 'Discriminator accuracy 0.4961', 'Total loss: 1.5166', 'for batch', 105)
('GAN loss 0.8272 ', 'GAN acc 0.3945', 'Discriminator loss 0.6717', 'Discriminator accuracy 0.5332', 'Total loss: 1.4989', 'for batch', 106)
('GAN loss 0.8174 ', 'GAN acc 0.2930', 'Discriminator loss 0.6628', 'Discriminator accuracy 0.5527', 'Total loss: 1.4801', 'for batch', 107)
('GAN loss 0.8363 ', 'GAN acc 0.2383', 'Discriminator loss 0.6615', 'Discriminator accuracy 0.6289', 'Total loss: 1.4978', 'for batch', 108)
('GAN loss 0.8868 ', 'GAN acc 0.2109', 'Discriminator loss 0.6473', 'Discriminator accuracy 0.6367', 'Total loss: 1.5341', 'for batch', 109)
('GAN loss 0.8869 ', 'GAN acc 0.2539', 'Discriminator loss 0.6471', 'Discriminator accuracy 0.6328', 'Total loss: 1.5339', 'for batch', 110)
('GAN loss 0.9186 ', 'GAN acc 0.2656', 'Discriminator loss 0.6529', 'Discriminator accuracy 0.6328', 'Total loss: 1.5715', 'for batch', 111)
('GAN loss 0.9181 ', 'GAN acc 0.2344', 'Discriminator loss 0.6582', 'Discriminator accuracy 0.6016', 'Total loss: 1.5762', 'for batch', 112)
('GAN loss 0.8614 ', 'GAN acc 0.3008', 'Discriminator loss 0.6882', 'Discriminator accuracy 0.5625', 'Total loss: 1.5496', 'for batch', 113)
('GAN loss 0.8021 ', 'GAN acc 0.2852', 'Discriminator loss 0.6825', 'Discriminator accuracy 0.5488', 'Total loss: 1.4846', 'for batch', 114)
('GAN loss 0.8177 ', 'GAN acc 0.4102', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5137', 'Total loss: 1.5039', 'for batch', 115)
('GAN loss 0.7997 ', 'GAN acc 0.6875', 'Discriminator loss 0.6612', 'Discriminator accuracy 0.5332', 'Total loss: 1.4609', 'for batch', 116)
('GAN loss 0.9176 ', 'GAN acc 0.3867', 'Discriminator loss 0.6577', 'Discriminator accuracy 0.5508', 'Total loss: 1.5753', 'for batch', 117)
('GAN loss 0.8368 ', 'GAN acc 0.7031', 'Discriminator loss 0.6817', 'Discriminator accuracy 0.5234', 'Total loss: 1.5184', 'for batch', 118)
('GAN loss 0.8524 ', 'GAN acc 0.7461', 'Discriminator loss 0.6741', 'Discriminator accuracy 0.5508', 'Total loss: 1.5265', 'for batch', 119)
('GAN loss 0.6772 ', 'GAN acc 0.9219', 'Discriminator loss 0.6816', 'Discriminator accuracy 0.5039', 'Total loss: 1.3587', 'for batch', 120)
('GAN loss 0.7659 ', 'GAN acc 0.8203', 'Discriminator loss 0.6716', 'Discriminator accuracy 0.5234', 'Total loss: 1.4375', 'for batch', 121)
('GAN loss 0.7650 ', 'GAN acc 0.7539', 'Discriminator loss 0.6666', 'Discriminator accuracy 0.5410', 'Total loss: 1.4316', 'for batch', 122)
('GAN loss 0.7491 ', 'GAN acc 0.6602', 'Discriminator loss 0.6636', 'Discriminator accuracy 0.5371', 'Total loss: 1.4127', 'for batch', 123)
('GAN loss 0.7741 ', 'GAN acc 0.5430', 'Discriminator loss 0.6752', 'Discriminator accuracy 0.5176', 'Total loss: 1.4492', 'for batch', 124)
('GAN loss 0.8049 ', 'GAN acc 0.5117', 'Discriminator loss 0.6555', 'Discriminator accuracy 0.6094', 'Total loss: 1.4604', 'for batch', 125)
('GAN loss 0.7874 ', 'GAN acc 0.4102', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.5801', 'Total loss: 1.4528', 'for batch', 126)
('GAN loss 0.8117 ', 'GAN acc 0.4336', 'Discriminator loss 0.6584', 'Discriminator accuracy 0.6191', 'Total loss: 1.4702', 'for batch', 127)
('DISCRIMINATOR_Imagem REAL=', 0.54201233)
('DISCRIMINATOR_Imagem FAKE=', 0.48117328)
('Discriminator trained', 77, 'times of', 128, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:51.697858')
----------------------------------
End of training
Saving histograms
----------------------------------
('Total samples = ', 32768, ' Batch size =', 256, ' Epochs = ', 50)
('Generator loss 0.8117 ', 'Discriminator loss 0.6584', 'Total: 1.4702')
----------------------------------
---DISCRIMINATOR---
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       leakyrelu_1[0][0]                
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       leakyrelu_2[0][0]                
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_2[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 512)           524800      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 512)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             513         dropout_3[0][0]                  
====================================================================================================
Total params: 913441
____________________________________________________________________________________________________
None
----------------------------------
---GENERATOR---
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_1 (InputLayer)             (None, 1, 32, 32)     0                                            
____________________________________________________________________________________________________
convolution2d_5 (Convolution2D)  (None, 128, 16, 16)   1280        input_1[0][0]                    
____________________________________________________________________________________________________
batchnormalization_1 (BatchNormal(None, 128, 16, 16)   256         convolution2d_5[0][0]            
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 128, 16, 16)   0           batchnormalization_1[0][0]       
____________________________________________________________________________________________________
convolution2d_6 (Convolution2D)  (None, 128, 8, 8)     147584      leakyrelu_6[0][0]                
____________________________________________________________________________________________________
batchnormalization_2 (BatchNormal(None, 128, 8, 8)     256         convolution2d_6[0][0]            
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 128, 8, 8)     0           batchnormalization_2[0][0]       
____________________________________________________________________________________________________
convolution2d_7 (Convolution2D)  (None, 128, 4, 4)     147584      leakyrelu_7[0][0]                
____________________________________________________________________________________________________
batchnormalization_3 (BatchNormal(None, 128, 4, 4)     256         convolution2d_7[0][0]            
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           batchnormalization_3[0][0]       
____________________________________________________________________________________________________
convolution2d_8 (Convolution2D)  (None, 128, 2, 2)     147584      leakyrelu_8[0][0]                
____________________________________________________________________________________________________
batchnormalization_4 (BatchNormal(None, 128, 2, 2)     256         convolution2d_8[0][0]            
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 128, 2, 2)     0           batchnormalization_4[0][0]       
____________________________________________________________________________________________________
convolution2d_9 (Convolution2D)  (None, 128, 1, 1)     147584      leakyrelu_9[0][0]                
____________________________________________________________________________________________________
batchnormalization_5 (BatchNormal(None, 128, 1, 1)     256         convolution2d_9[0][0]            
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 128, 1, 1)     0           batchnormalization_5[0][0]       
____________________________________________________________________________________________________
deconvolution2d_1 (Deconvolution2(None, 128, 2, 2)     147584      leakyrelu_10[0][0]               
____________________________________________________________________________________________________
batchnormalization_6 (BatchNormal(None, 128, 2, 2)     256         deconvolution2d_1[0][0]          
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 128, 2, 2)     0           batchnormalization_6[0][0]       
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 128, 2, 2)     0           activation_1[0][0]               
____________________________________________________________________________________________________
deconvolution2d_2 (Deconvolution2(None, 128, 4, 4)     147584      dropout_4[0][0]                  
____________________________________________________________________________________________________
batchnormalization_7 (BatchNormal(None, 128, 4, 4)     256         deconvolution2d_2[0][0]          
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 128, 4, 4)     0           batchnormalization_7[0][0]       
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128, 4, 4)     0           activation_2[0][0]               
____________________________________________________________________________________________________
merge_2 (Merge)                  (None, 256, 4, 4)     0           dropout_5[0][0]                  
                                                                   leakyrelu_8[0][0]                
____________________________________________________________________________________________________
deconvolution2d_3 (Deconvolution2(None, 128, 8, 8)     295040      merge_2[0][0]                    
____________________________________________________________________________________________________
batchnormalization_8 (BatchNormal(None, 128, 8, 8)     256         deconvolution2d_3[0][0]          
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 128, 8, 8)     0           batchnormalization_8[0][0]       
____________________________________________________________________________________________________
merge_3 (Merge)                  (None, 256, 8, 8)     0           activation_3[0][0]               
                                                                   leakyrelu_7[0][0]                
____________________________________________________________________________________________________
deconvolution2d_4 (Deconvolution2(None, 128, 16, 16)   295040      merge_3[0][0]                    
____________________________________________________________________________________________________
batchnormalization_9 (BatchNormal(None, 128, 16, 16)   256         deconvolution2d_4[0][0]          
____________________________________________________________________________________________________
activation_4 (Activation)        (None, 128, 16, 16)   0           batchnormalization_9[0][0]       
____________________________________________________________________________________________________
merge_4 (Merge)                  (None, 256, 16, 16)   0           activation_4[0][0]               
                                                                   leakyrelu_6[0][0]                
____________________________________________________________________________________________________
deconvolution2d_5 (Deconvolution2(None, 128, 32, 32)   295040      merge_4[0][0]                    
____________________________________________________________________________________________________
batchnormalization_10 (BatchNorma(None, 128, 32, 32)   256         deconvolution2d_5[0][0]          
____________________________________________________________________________________________________
activation_5 (Activation)        (None, 128, 32, 32)   0           batchnormalization_10[0][0]      
____________________________________________________________________________________________________
convolution2d_10 (Convolution2D) (None, 64, 32, 32)    73792       activation_5[0][0]               
____________________________________________________________________________________________________
batchnormalization_11 (BatchNorma(None, 64, 32, 32)    128         convolution2d_10[0][0]           
____________________________________________________________________________________________________
leakyrelu_11 (LeakyReLU)         (None, 64, 32, 32)    0           batchnormalization_11[0][0]      
____________________________________________________________________________________________________
convolution2d_11 (Convolution2D) (None, 32, 32, 32)    18464       leakyrelu_11[0][0]               
____________________________________________________________________________________________________
batchnormalization_12 (BatchNorma(None, 32, 32, 32)    64          convolution2d_11[0][0]           
____________________________________________________________________________________________________
leakyrelu_12 (LeakyReLU)         (None, 32, 32, 32)    0           batchnormalization_12[0][0]      
____________________________________________________________________________________________________
convolution2d_12 (Convolution2D) (None, 2, 32, 32)     578         leakyrelu_12[0][0]               
____________________________________________________________________________________________________
lambda_1 (Lambda)                (None, 2, 32, 32)     0           convolution2d_12[0][0]           
====================================================================================================
Total params: 1867490
____________________________________________________________________________________________________
None
----------------------------------
---GAN---
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_1 (Model)                  (None, 2, 32, 32)     1867490                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             913441      lambda_1[0][0]                   
====================================================================================================
Total params: 2780931
____________________________________________________________________________________________________
None
----------------------------------
('Loading with dataset based on class - ', 'all', 'with', 10000, 'samples')
----------------------------------
----------------------------------
('Loading with dataset based on class - ', 'all', 'with', 10000, 'samples')
----------------------------------

----------------------------------
('Training with dataset based on class - ', 'truck', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_8 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_7 (Sequential)        (None, 1)             0           lambda_3[0][0]                   
====================================================================================================
Total params: 1596531
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_27 (Convolution2D) (None, 16, 16, 16)    304         convolution2d_input_5[0][0]      
____________________________________________________________________________________________________
leakyrelu_27 (LeakyReLU)         (None, 16, 16, 16)    0           convolution2d_27[0][0]           
____________________________________________________________________________________________________
dropout_11 (Dropout)             (None, 16, 16, 16)    0           leakyrelu_27[0][0]               
____________________________________________________________________________________________________
convolution2d_28 (Convolution2D) (None, 32, 8, 8)      4640        dropout_11[0][0]                 
____________________________________________________________________________________________________
leakyrelu_28 (LeakyReLU)         (None, 32, 8, 8)      0           convolution2d_28[0][0]           
____________________________________________________________________________________________________
dropout_12 (Dropout)             (None, 32, 8, 8)      0           leakyrelu_28[0][0]               
____________________________________________________________________________________________________
convolution2d_29 (Convolution2D) (None, 64, 4, 4)      18496       dropout_12[0][0]                 
____________________________________________________________________________________________________
leakyrelu_29 (LeakyReLU)         (None, 64, 4, 4)      0           convolution2d_29[0][0]           
____________________________________________________________________________________________________
dropout_13 (Dropout)             (None, 64, 4, 4)      0           leakyrelu_29[0][0]               
____________________________________________________________________________________________________
convolution2d_30 (Convolution2D) (None, 128, 2, 2)     73856       dropout_13[0][0]                 
____________________________________________________________________________________________________
leakyrelu_30 (LeakyReLU)         (None, 128, 2, 2)     0           convolution2d_30[0][0]           
____________________________________________________________________________________________________
dropout_14 (Dropout)             (None, 128, 2, 2)     0           leakyrelu_30[0][0]               
____________________________________________________________________________________________________
flatten_3 (Flatten)              (None, 512)           0           dropout_14[0][0]                 
____________________________________________________________________________________________________
dense_5 (Dense)                  (None, 256)           131328      flatten_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_31 (LeakyReLU)         (None, 256)           0           dense_5[0][0]                    
____________________________________________________________________________________________________
dropout_15 (Dropout)             (None, 256)           0           leakyrelu_31[0][0]               
____________________________________________________________________________________________________
dense_6 (Dense)                  (None, 1)             257         dropout_15[0][0]                 
====================================================================================================
Total params: 228881
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5002 ', 'GAN acc 0.7617', 'Discriminator loss 0.8773', 'Discriminator accuracy 0.5312', 'Total loss: 1.3775', 'for batch', 0)
('GAN loss 0.5408 ', 'GAN acc 0.7344', 'Discriminator loss 0.9416', 'Discriminator accuracy 0.4883', 'Total loss: 1.4824', 'for batch', 1)
('GAN loss 0.6856 ', 'GAN acc 0.5781', 'Discriminator loss 0.9531', 'Discriminator accuracy 0.3926', 'Total loss: 1.6387', 'for batch', 2)
('GAN loss 0.8081 ', 'GAN acc 0.5039', 'Discriminator loss 0.9517', 'Discriminator accuracy 0.3555', 'Total loss: 1.7598', 'for batch', 3)
('GAN loss 0.8456 ', 'GAN acc 0.4844', 'Discriminator loss 0.8491', 'Discriminator accuracy 0.4199', 'Total loss: 1.6947', 'for batch', 4)
('GAN loss 0.8549 ', 'GAN acc 0.4727', 'Discriminator loss 0.8677', 'Discriminator accuracy 0.4297', 'Total loss: 1.7226', 'for batch', 5)
('GAN loss 0.7760 ', 'GAN acc 0.4883', 'Discriminator loss 0.7950', 'Discriminator accuracy 0.4961', 'Total loss: 1.5711', 'for batch', 6)
('GAN loss 0.8010 ', 'GAN acc 0.4766', 'Discriminator loss 0.7318', 'Discriminator accuracy 0.5605', 'Total loss: 1.5328', 'for batch', 7)
('GAN loss 0.8941 ', 'GAN acc 0.3984', 'Discriminator loss 0.7036', 'Discriminator accuracy 0.5781', 'Total loss: 1.5977', 'for batch', 8)
('GAN loss 0.9414 ', 'GAN acc 0.3711', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5918', 'Total loss: 1.6293', 'for batch', 9)
('GAN loss 1.0804 ', 'GAN acc 0.2734', 'Discriminator loss 0.6466', 'Discriminator accuracy 0.6289', 'Total loss: 1.7270', 'for batch', 10)
('GAN loss 0.9880 ', 'GAN acc 0.3125', 'Discriminator loss 0.6240', 'Discriminator accuracy 0.6406', 'Total loss: 1.6120', 'for batch', 11)
('GAN loss 0.9526 ', 'GAN acc 0.3555', 'Discriminator loss 0.6256', 'Discriminator accuracy 0.6348', 'Total loss: 1.5782', 'for batch', 12)
('GAN loss 0.9674 ', 'GAN acc 0.3164', 'Discriminator loss 0.6039', 'Discriminator accuracy 0.6699', 'Total loss: 1.5712', 'for batch', 13)
('GAN loss 1.0138 ', 'GAN acc 0.2891', 'Discriminator loss 0.6061', 'Discriminator accuracy 0.6719', 'Total loss: 1.6199', 'for batch', 14)
('GAN loss 1.1024 ', 'GAN acc 0.2344', 'Discriminator loss 0.5733', 'Discriminator accuracy 0.7109', 'Total loss: 1.6757', 'for batch', 15)
('GAN loss 1.1109 ', 'GAN acc 0.1914', 'Discriminator loss 0.5405', 'Discriminator accuracy 0.7441', 'Total loss: 1.6514', 'for batch', 16)
('GAN loss 0.9393 ', 'GAN acc 0.3281', 'Discriminator loss 0.5397', 'Discriminator accuracy 0.7344', 'Total loss: 1.4790', 'for batch', 17)
('GAN loss 0.9906 ', 'GAN acc 0.3047', 'Discriminator loss 0.5559', 'Discriminator accuracy 0.7383', 'Total loss: 1.5464', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.92109179)
('DISCRIMINATOR_Imagem FAKE=', 0.73487282)
('Discriminator trained', 14, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:45.377391')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.9819 ', 'GAN acc 0.2461', 'Discriminator loss 0.5591', 'Discriminator accuracy 0.7324', 'Total loss: 1.5410', 'for batch', 0)
('GAN loss 1.1028 ', 'GAN acc 0.2070', 'Discriminator loss 0.6076', 'Discriminator accuracy 0.6777', 'Total loss: 1.7104', 'for batch', 1)
('GAN loss 1.1683 ', 'GAN acc 0.1953', 'Discriminator loss 0.6165', 'Discriminator accuracy 0.6582', 'Total loss: 1.7847', 'for batch', 2)
('GAN loss 1.1415 ', 'GAN acc 0.1992', 'Discriminator loss 0.5847', 'Discriminator accuracy 0.7129', 'Total loss: 1.7262', 'for batch', 3)
('GAN loss 1.1772 ', 'GAN acc 0.2266', 'Discriminator loss 0.5887', 'Discriminator accuracy 0.7031', 'Total loss: 1.7658', 'for batch', 4)
('GAN loss 1.4513 ', 'GAN acc 0.1680', 'Discriminator loss 0.6184', 'Discriminator accuracy 0.6738', 'Total loss: 2.0696', 'for batch', 5)
('GAN loss 1.3838 ', 'GAN acc 0.1484', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.6074', 'Total loss: 2.0510', 'for batch', 6)
('GAN loss 1.1854 ', 'GAN acc 0.2656', 'Discriminator loss 0.5988', 'Discriminator accuracy 0.6504', 'Total loss: 1.7841', 'for batch', 7)
('GAN loss 1.2511 ', 'GAN acc 0.2578', 'Discriminator loss 0.6398', 'Discriminator accuracy 0.6602', 'Total loss: 1.8910', 'for batch', 8)
('GAN loss 1.3191 ', 'GAN acc 0.1875', 'Discriminator loss 0.6213', 'Discriminator accuracy 0.6582', 'Total loss: 1.9404', 'for batch', 9)
('GAN loss 1.0737 ', 'GAN acc 0.3242', 'Discriminator loss 0.6318', 'Discriminator accuracy 0.6328', 'Total loss: 1.7056', 'for batch', 10)
('GAN loss 1.0848 ', 'GAN acc 0.2852', 'Discriminator loss 0.5994', 'Discriminator accuracy 0.6680', 'Total loss: 1.6842', 'for batch', 11)
('GAN loss 1.1513 ', 'GAN acc 0.2734', 'Discriminator loss 0.6671', 'Discriminator accuracy 0.6074', 'Total loss: 1.8184', 'for batch', 12)
('GAN loss 1.1648 ', 'GAN acc 0.2773', 'Discriminator loss 0.6324', 'Discriminator accuracy 0.6523', 'Total loss: 1.7972', 'for batch', 13)
('GAN loss 1.1421 ', 'GAN acc 0.2734', 'Discriminator loss 0.6156', 'Discriminator accuracy 0.6543', 'Total loss: 1.7576', 'for batch', 14)
('GAN loss 1.0473 ', 'GAN acc 0.3477', 'Discriminator loss 0.6342', 'Discriminator accuracy 0.6348', 'Total loss: 1.6816', 'for batch', 15)
('GAN loss 0.9828 ', 'GAN acc 0.3906', 'Discriminator loss 0.6660', 'Discriminator accuracy 0.6191', 'Total loss: 1.6488', 'for batch', 16)
('GAN loss 1.0744 ', 'GAN acc 0.3164', 'Discriminator loss 0.6704', 'Discriminator accuracy 0.6387', 'Total loss: 1.7448', 'for batch', 17)
('GAN loss 1.0717 ', 'GAN acc 0.2578', 'Discriminator loss 0.6322', 'Discriminator accuracy 0.6484', 'Total loss: 1.7039', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.91886842)
('DISCRIMINATOR_Imagem FAKE=', 0.87138855)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.670863')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 0.9746 ', 'GAN acc 0.3750', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.6055', 'Total loss: 1.6244', 'for batch', 0)
('GAN loss 0.9501 ', 'GAN acc 0.3672', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5879', 'Total loss: 1.6288', 'for batch', 1)
('GAN loss 0.9104 ', 'GAN acc 0.3633', 'Discriminator loss 0.6996', 'Discriminator accuracy 0.5527', 'Total loss: 1.6100', 'for batch', 2)
('GAN loss 0.9404 ', 'GAN acc 0.3320', 'Discriminator loss 0.7084', 'Discriminator accuracy 0.5312', 'Total loss: 1.6488', 'for batch', 3)
('GAN loss 0.9504 ', 'GAN acc 0.3555', 'Discriminator loss 0.6274', 'Discriminator accuracy 0.6426', 'Total loss: 1.5779', 'for batch', 4)
('GAN loss 0.9810 ', 'GAN acc 0.2930', 'Discriminator loss 0.6472', 'Discriminator accuracy 0.6445', 'Total loss: 1.6283', 'for batch', 5)
('GAN loss 1.0957 ', 'GAN acc 0.2656', 'Discriminator loss 0.6893', 'Discriminator accuracy 0.5938', 'Total loss: 1.7851', 'for batch', 6)
('GAN loss 1.0296 ', 'GAN acc 0.2852', 'Discriminator loss 0.6722', 'Discriminator accuracy 0.5977', 'Total loss: 1.7018', 'for batch', 7)
('GAN loss 0.9548 ', 'GAN acc 0.3320', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5605', 'Total loss: 1.6372', 'for batch', 8)
('GAN loss 0.9291 ', 'GAN acc 0.3086', 'Discriminator loss 0.7087', 'Discriminator accuracy 0.5781', 'Total loss: 1.6378', 'for batch', 9)
('GAN loss 0.8480 ', 'GAN acc 0.4219', 'Discriminator loss 0.7123', 'Discriminator accuracy 0.5371', 'Total loss: 1.5603', 'for batch', 10)
('GAN loss 0.8346 ', 'GAN acc 0.3984', 'Discriminator loss 0.7183', 'Discriminator accuracy 0.5625', 'Total loss: 1.5529', 'for batch', 11)
('GAN loss 0.9003 ', 'GAN acc 0.3438', 'Discriminator loss 0.7118', 'Discriminator accuracy 0.5254', 'Total loss: 1.6121', 'for batch', 12)
('GAN loss 0.9113 ', 'GAN acc 0.3477', 'Discriminator loss 0.7052', 'Discriminator accuracy 0.5312', 'Total loss: 1.6165', 'for batch', 13)
('GAN loss 0.8982 ', 'GAN acc 0.3320', 'Discriminator loss 0.6693', 'Discriminator accuracy 0.5918', 'Total loss: 1.5676', 'for batch', 14)
('GAN loss 0.8638 ', 'GAN acc 0.3750', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.6074', 'Total loss: 1.5216', 'for batch', 15)
('GAN loss 0.9071 ', 'GAN acc 0.3359', 'Discriminator loss 0.6874', 'Discriminator accuracy 0.5840', 'Total loss: 1.5946', 'for batch', 16)
('GAN loss 0.8754 ', 'GAN acc 0.3164', 'Discriminator loss 0.7050', 'Discriminator accuracy 0.5156', 'Total loss: 1.5805', 'for batch', 17)
('GAN loss 0.8519 ', 'GAN acc 0.3281', 'Discriminator loss 0.6643', 'Discriminator accuracy 0.5859', 'Total loss: 1.5162', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.87808937)
('DISCRIMINATOR_Imagem FAKE=', 0.85575008)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.232079')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7950 ', 'GAN acc 0.4375', 'Discriminator loss 0.6938', 'Discriminator accuracy 0.5352', 'Total loss: 1.4889', 'for batch', 0)
('GAN loss 0.7675 ', 'GAN acc 0.4180', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5742', 'Total loss: 1.4515', 'for batch', 1)
('GAN loss 0.7515 ', 'GAN acc 0.4844', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5879', 'Total loss: 1.4295', 'for batch', 2)
('GAN loss 0.7515 ', 'GAN acc 0.4609', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5625', 'Total loss: 1.4364', 'for batch', 3)
('GAN loss 0.7257 ', 'GAN acc 0.4922', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5625', 'Total loss: 1.4002', 'for batch', 4)
('GAN loss 0.7438 ', 'GAN acc 0.4688', 'Discriminator loss 0.7075', 'Discriminator accuracy 0.5332', 'Total loss: 1.4513', 'for batch', 5)
('GAN loss 0.7296 ', 'GAN acc 0.4961', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5586', 'Total loss: 1.4111', 'for batch', 6)
('GAN loss 0.7021 ', 'GAN acc 0.5625', 'Discriminator loss 0.7060', 'Discriminator accuracy 0.5215', 'Total loss: 1.4080', 'for batch', 7)
('GAN loss 0.6722 ', 'GAN acc 0.5781', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5703', 'Total loss: 1.3564', 'for batch', 8)
('GAN loss 0.6798 ', 'GAN acc 0.5312', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5684', 'Total loss: 1.3588', 'for batch', 9)
('GAN loss 0.6395 ', 'GAN acc 0.6758', 'Discriminator loss 0.7387', 'Discriminator accuracy 0.4766', 'Total loss: 1.3782', 'for batch', 10)
('GAN loss 0.6434 ', 'GAN acc 0.6211', 'Discriminator loss 0.7238', 'Discriminator accuracy 0.5078', 'Total loss: 1.3672', 'for batch', 11)
('GAN loss 0.6601 ', 'GAN acc 0.6055', 'Discriminator loss 0.7311', 'Discriminator accuracy 0.4648', 'Total loss: 1.3912', 'for batch', 12)
('GAN loss 0.6530 ', 'GAN acc 0.5859', 'Discriminator loss 0.7390', 'Discriminator accuracy 0.4609', 'Total loss: 1.3919', 'for batch', 13)
('GAN loss 0.6319 ', 'GAN acc 0.6523', 'Discriminator loss 0.7471', 'Discriminator accuracy 0.4648', 'Total loss: 1.3790', 'for batch', 14)
('GAN loss 0.6178 ', 'GAN acc 0.6914', 'Discriminator loss 0.7246', 'Discriminator accuracy 0.4844', 'Total loss: 1.3424', 'for batch', 15)
('GAN loss 0.6790 ', 'GAN acc 0.5859', 'Discriminator loss 0.7108', 'Discriminator accuracy 0.5254', 'Total loss: 1.3898', 'for batch', 16)
('GAN loss 0.7080 ', 'GAN acc 0.4922', 'Discriminator loss 0.7128', 'Discriminator accuracy 0.4922', 'Total loss: 1.4208', 'for batch', 17)
('GAN loss 0.6909 ', 'GAN acc 0.5664', 'Discriminator loss 0.7038', 'Discriminator accuracy 0.5078', 'Total loss: 1.3947', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.8386327)
('DISCRIMINATOR_Imagem FAKE=', 0.79798573)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.732590')
----------------------------------
('Epoch', 5, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6781 ', 'GAN acc 0.5781', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.5723', 'Total loss: 1.3646', 'for batch', 0)
('GAN loss 0.6971 ', 'GAN acc 0.5391', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5605', 'Total loss: 1.3845', 'for batch', 1)
('GAN loss 0.7616 ', 'GAN acc 0.4141', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5645', 'Total loss: 1.4478', 'for batch', 2)
('GAN loss 0.8067 ', 'GAN acc 0.3477', 'Discriminator loss 0.6934', 'Discriminator accuracy 0.5488', 'Total loss: 1.5000', 'for batch', 3)
('GAN loss 0.7864 ', 'GAN acc 0.3867', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5684', 'Total loss: 1.4618', 'for batch', 4)
('GAN loss 0.7875 ', 'GAN acc 0.3984', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5859', 'Total loss: 1.4720', 'for batch', 5)
('GAN loss 0.7933 ', 'GAN acc 0.3867', 'Discriminator loss 0.6954', 'Discriminator accuracy 0.5488', 'Total loss: 1.4887', 'for batch', 6)
('GAN loss 0.8066 ', 'GAN acc 0.3750', 'Discriminator loss 0.7053', 'Discriminator accuracy 0.5293', 'Total loss: 1.5119', 'for batch', 7)
('GAN loss 0.8213 ', 'GAN acc 0.3398', 'Discriminator loss 0.6911', 'Discriminator accuracy 0.5625', 'Total loss: 1.5124', 'for batch', 8)
('GAN loss 0.8681 ', 'GAN acc 0.3125', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5488', 'Total loss: 1.5523', 'for batch', 9)
('GAN loss 0.8592 ', 'GAN acc 0.2852', 'Discriminator loss 0.6949', 'Discriminator accuracy 0.5625', 'Total loss: 1.5541', 'for batch', 10)
('GAN loss 0.8154 ', 'GAN acc 0.3633', 'Discriminator loss 0.7138', 'Discriminator accuracy 0.5273', 'Total loss: 1.5292', 'for batch', 11)
('GAN loss 0.8350 ', 'GAN acc 0.3594', 'Discriminator loss 0.7170', 'Discriminator accuracy 0.4941', 'Total loss: 1.5520', 'for batch', 12)
('GAN loss 0.7766 ', 'GAN acc 0.4297', 'Discriminator loss 0.7317', 'Discriminator accuracy 0.4785', 'Total loss: 1.5083', 'for batch', 13)
('GAN loss 0.8456 ', 'GAN acc 0.3008', 'Discriminator loss 0.7340', 'Discriminator accuracy 0.4492', 'Total loss: 1.5796', 'for batch', 14)
('GAN loss 0.7795 ', 'GAN acc 0.4062', 'Discriminator loss 0.7261', 'Discriminator accuracy 0.4727', 'Total loss: 1.5055', 'for batch', 15)
('GAN loss 0.7528 ', 'GAN acc 0.4219', 'Discriminator loss 0.7034', 'Discriminator accuracy 0.5293', 'Total loss: 1.4562', 'for batch', 16)
('GAN loss 0.7496 ', 'GAN acc 0.4258', 'Discriminator loss 0.7246', 'Discriminator accuracy 0.4609', 'Total loss: 1.4742', 'for batch', 17)
('GAN loss 0.7999 ', 'GAN acc 0.3594', 'Discriminator loss 0.7009', 'Discriminator accuracy 0.5176', 'Total loss: 1.5008', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.7782557)
('DISCRIMINATOR_Imagem FAKE=', 0.78877878)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.320988')
----------------------------------
('Epoch', 6, 'of', 50)
('Numbe
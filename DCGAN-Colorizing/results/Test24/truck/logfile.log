----------------------------------
('Training with dataset based on class - ', 'truck', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_8 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_7 (Sequential)        (None, 1)             0           lambda_3[0][0]                   
====================================================================================================
Total params: 1596531
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_27 (Convolution2D) (None, 16, 16, 16)    304         convolution2d_input_5[0][0]      
____________________________________________________________________________________________________
leakyrelu_27 (LeakyReLU)         (None, 16, 16, 16)    0           convolution2d_27[0][0]           
____________________________________________________________________________________________________
dropout_11 (Dropout)             (None, 16, 16, 16)    0           leakyrelu_27[0][0]               
____________________________________________________________________________________________________
convolution2d_28 (Convolution2D) (None, 32, 8, 8)      4640        dropout_11[0][0]                 
____________________________________________________________________________________________________
leakyrelu_28 (LeakyReLU)         (None, 32, 8, 8)      0           convolution2d_28[0][0]           
____________________________________________________________________________________________________
dropout_12 (Dropout)             (None, 32, 8, 8)      0           leakyrelu_28[0][0]               
____________________________________________________________________________________________________
convolution2d_29 (Convolution2D) (None, 64, 4, 4)      18496       dropout_12[0][0]                 
____________________________________________________________________________________________________
leakyrelu_29 (LeakyReLU)         (None, 64, 4, 4)      0           convolution2d_29[0][0]           
____________________________________________________________________________________________________
dropout_13 (Dropout)             (None, 64, 4, 4)      0           leakyrelu_29[0][0]               
____________________________________________________________________________________________________
convolution2d_30 (Convolution2D) (None, 128, 2, 2)     73856       dropout_13[0][0]                 
____________________________________________________________________________________________________
leakyrelu_30 (LeakyReLU)         (None, 128, 2, 2)     0           convolution2d_30[0][0]           
____________________________________________________________________________________________________
dropout_14 (Dropout)             (None, 128, 2, 2)     0           leakyrelu_30[0][0]               
____________________________________________________________________________________________________
flatten_3 (Flatten)              (None, 512)           0           dropout_14[0][0]                 
____________________________________________________________________________________________________
dense_5 (Dense)                  (None, 256)           131328      flatten_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_31 (LeakyReLU)         (None, 256)           0           dense_5[0][0]                    
____________________________________________________________________________________________________
dropout_15 (Dropout)             (None, 256)           0           leakyrelu_31[0][0]               
____________________________________________________________________________________________________
dense_6 (Dense)                  (None, 1)             257         dropout_15[0][0]                 
====================================================================================================
Total params: 228881
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5002 ', 'GAN acc 0.7617', 'Discriminator loss 0.8773', 'Discriminator accuracy 0.5312', 'Total loss: 1.3775', 'for batch', 0)
('GAN loss 0.5408 ', 'GAN acc 0.7344', 'Discriminator loss 0.9416', 'Discriminator accuracy 0.4883', 'Total loss: 1.4824', 'for batch', 1)
('GAN loss 0.6856 ', 'GAN acc 0.5781', 'Discriminator loss 0.9531', 'Discriminator accuracy 0.3926', 'Total loss: 1.6387', 'for batch', 2)
('GAN loss 0.8081 ', 'GAN acc 0.5039', 'Discriminator loss 0.9517', 'Discriminator accuracy 0.3555', 'Total loss: 1.7598', 'for batch', 3)
('GAN loss 0.8456 ', 'GAN acc 0.4844', 'Discriminator loss 0.8491', 'Discriminator accuracy 0.4199', 'Total loss: 1.6947', 'for batch', 4)
('GAN loss 0.8549 ', 'GAN acc 0.4727', 'Discriminator loss 0.8677', 'Discriminator accuracy 0.4297', 'Total loss: 1.7226', 'for batch', 5)
('GAN loss 0.7760 ', 'GAN acc 0.4883', 'Discriminator loss 0.7950', 'Discriminator accuracy 0.4961', 'Total loss: 1.5711', 'for batch', 6)
('GAN loss 0.8010 ', 'GAN acc 0.4766', 'Discriminator loss 0.7318', 'Discriminator accuracy 0.5605', 'Total loss: 1.5328', 'for batch', 7)
('GAN loss 0.8941 ', 'GAN acc 0.3984', 'Discriminator loss 0.7036', 'Discriminator accuracy 0.5781', 'Total loss: 1.5977', 'for batch', 8)
('GAN loss 0.9414 ', 'GAN acc 0.3711', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5918', 'Total loss: 1.6293', 'for batch', 9)
('GAN loss 1.0804 ', 'GAN acc 0.2734', 'Discriminator loss 0.6466', 'Discriminator accuracy 0.6289', 'Total loss: 1.7270', 'for batch', 10)
('GAN loss 0.9880 ', 'GAN acc 0.3125', 'Discriminator loss 0.6240', 'Discriminator accuracy 0.6406', 'Total loss: 1.6120', 'for batch', 11)
('GAN loss 0.9526 ', 'GAN acc 0.3555', 'Discriminator loss 0.6256', 'Discriminator accuracy 0.6348', 'Total loss: 1.5782', 'for batch', 12)
('GAN loss 0.9674 ', 'GAN acc 0.3164', 'Discriminator loss 0.6039', 'Discriminator accuracy 0.6699', 'Total loss: 1.5712', 'for batch', 13)
('GAN loss 1.0138 ', 'GAN acc 0.2891', 'Discriminator loss 0.6061', 'Discriminator accuracy 0.6719', 'Total loss: 1.6199', 'for batch', 14)
('GAN loss 1.1024 ', 'GAN acc 0.2344', 'Discriminator loss 0.5733', 'Discriminator accuracy 0.7109', 'Total loss: 1.6757', 'for batch', 15)
('GAN loss 1.1109 ', 'GAN acc 0.1914', 'Discriminator loss 0.5405', 'Discriminator accuracy 0.7441', 'Total loss: 1.6514', 'for batch', 16)
('GAN loss 0.9393 ', 'GAN acc 0.3281', 'Discriminator loss 0.5397', 'Discriminator accuracy 0.7344', 'Total loss: 1.4790', 'for batch', 17)
('GAN loss 0.9906 ', 'GAN acc 0.3047', 'Discriminator loss 0.5559', 'Discriminator accuracy 0.7383', 'Total loss: 1.5464', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.92109179)
('DISCRIMINATOR_Imagem FAKE=', 0.73487282)
('Discriminator trained', 14, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:45.377391')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.9819 ', 'GAN acc 0.2461', 'Discriminator loss 0.5591', 'Discriminator accuracy 0.7324', 'Total loss: 1.5410', 'for batch', 0)
('GAN loss 1.1028 ', 'GAN acc 0.2070', 'Discriminator loss 0.6076', 'Discriminator accuracy 0.6777', 'Total loss: 1.7104', 'for batch', 1)
('GAN loss 1.1683 ', 'GAN acc 0.1953', 'Discriminator loss 0.6165', 'Discriminator accuracy 0.6582', 'Total loss: 1.7847', 'for batch', 2)
('GAN loss 1.1415 ', 'GAN acc 0.1992', 'Discriminator loss 0.5847', 'Discriminator accuracy 0.7129', 'Total loss: 1.7262', 'for batch', 3)
('GAN loss 1.1772 ', 'GAN acc 0.2266', 'Discriminator loss 0.5887', 'Discriminator accuracy 0.7031', 'Total loss: 1.7658', 'for batch', 4)
('GAN loss 1.4513 ', 'GAN acc 0.1680', 'Discriminator loss 0.6184', 'Discriminator accuracy 0.6738', 'Total loss: 2.0696', 'for batch', 5)
('GAN loss 1.3838 ', 'GAN acc 0.1484', 'Discriminator loss 0.6672', 'Discriminator accuracy 0.6074', 'Total loss: 2.0510', 'for batch', 6)
('GAN loss 1.1854 ', 'GAN acc 0.2656', 'Discriminator loss 0.5988', 'Discriminator accuracy 0.6504', 'Total loss: 1.7841', 'for batch', 7)
('GAN loss 1.2511 ', 'GAN acc 0.2578', 'Discriminator loss 0.6398', 'Discriminator accuracy 0.6602', 'Total loss: 1.8910', 'for batch', 8)
('GAN loss 1.3191 ', 'GAN acc 0.1875', 'Discriminator loss 0.6213', 'Discriminator accuracy 0.6582', 'Total loss: 1.9404', 'for batch', 9)
('GAN loss 1.0737 ', 'GAN acc 0.3242', 'Discriminator loss 0.6318', 'Discriminator accuracy 0.6328', 'Total loss: 1.7056', 'for batch', 10)
('GAN loss 1.0848 ', 'GAN acc 0.2852', 'Discriminator loss 0.5994', 'Discriminator accuracy 0.6680', 'Total loss: 1.6842', 'for batch', 11)
('GAN loss 1.1513 ', 'GAN acc 0.2734', 'Discriminator loss 0.6671', 'Discriminator accuracy 0.6074', 'Total loss: 1.8184', 'for batch', 12)
('GAN loss 1.1648 ', 'GAN acc 0.2773', 'Discriminator loss 0.6324', 'Discriminator accuracy 0.6523', 'Total loss: 1.7972', 'for batch', 13)
('GAN loss 1.1421 ', 'GAN acc 0.2734', 'Discriminator loss 0.6156', 'Discriminator accuracy 0.6543', 'Total loss: 1.7576', 'for batch', 14)
('GAN loss 1.0473 ', 'GAN acc 0.3477', 'Discriminator loss 0.6342', 'Discriminator accuracy 0.6348', 'Total loss: 1.6816', 'for batch', 15)
('GAN loss 0.9828 ', 'GAN acc 0.3906', 'Discriminator loss 0.6660', 'Discriminator accuracy 0.6191', 'Total loss: 1.6488', 'for batch', 16)
('GAN loss 1.0744 ', 'GAN acc 0.3164', 'Discriminator loss 0.6704', 'Discriminator accuracy 0.6387', 'Total loss: 1.7448', 'for batch', 17)
('GAN loss 1.0717 ', 'GAN acc 0.2578', 'Discriminator loss 0.6322', 'Discriminator accuracy 0.6484', 'Total loss: 1.7039', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.91886842)
('DISCRIMINATOR_Imagem FAKE=', 0.87138855)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.670863')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 0.9746 ', 'GAN acc 0.3750', 'Discriminator loss 0.6498', 'Discriminator accuracy 0.6055', 'Total loss: 1.6244', 'for batch', 0)
('GAN loss 0.9501 ', 'GAN acc 0.3672', 'Discriminator loss 0.6787', 'Discriminator accuracy 0.5879', 'Total loss: 1.6288', 'for batch', 1)
('GAN loss 0.9104 ', 'GAN acc 0.3633', 'Discriminator loss 0.6996', 'Discriminator accuracy 0.5527', 'Total loss: 1.6100', 'for batch', 2)
('GAN loss 0.9404 ', 'GAN acc 0.3320', 'Discriminator loss 0.7084', 'Discriminator accuracy 0.5312', 'Total loss: 1.6488', 'for batch', 3)
('GAN loss 0.9504 ', 'GAN acc 0.3555', 'Discriminator loss 0.6274', 'Discriminator accuracy 0.6426', 'Total loss: 1.5779', 'for batch', 4)
('GAN loss 0.9810 ', 'GAN acc 0.2930', 'Discriminator loss 0.6472', 'Discriminator accuracy 0.6445', 'Total loss: 1.6283', 'for batch', 5)
('GAN loss 1.0957 ', 'GAN acc 0.2656', 'Discriminator loss 0.6893', 'Discriminator accuracy 0.5938', 'Total loss: 1.7851', 'for batch', 6)
('GAN loss 1.0296 ', 'GAN acc 0.2852', 'Discriminator loss 0.6722', 'Discriminator accuracy 0.5977', 'Total loss: 1.7018', 'for batch', 7)
('GAN loss 0.9548 ', 'GAN acc 0.3320', 'Discriminator loss 0.6824', 'Discriminator accuracy 0.5605', 'Total loss: 1.6372', 'for batch', 8)
('GAN loss 0.9291 ', 'GAN acc 0.3086', 'Discriminator loss 0.7087', 'Discriminator accuracy 0.5781', 'Total loss: 1.6378', 'for batch', 9)
('GAN loss 0.8480 ', 'GAN acc 0.4219', 'Discriminator loss 0.7123', 'Discriminator accuracy 0.5371', 'Total loss: 1.5603', 'for batch', 10)
('GAN loss 0.8346 ', 'GAN acc 0.3984', 'Discriminator loss 0.7183', 'Discriminator accuracy 0.5625', 'Total loss: 1.5529', 'for batch', 11)
('GAN loss 0.9003 ', 'GAN acc 0.3438', 'Discriminator loss 0.7118', 'Discriminator accuracy 0.5254', 'Total loss: 1.6121', 'for batch', 12)
('GAN loss 0.9113 ', 'GAN acc 0.3477', 'Discriminator loss 0.7052', 'Discriminator accuracy 0.5312', 'Total loss: 1.6165', 'for batch', 13)
('GAN loss 0.8982 ', 'GAN acc 0.3320', 'Discriminator loss 0.6693', 'Discriminator accuracy 0.5918', 'Total loss: 1.5676', 'for batch', 14)
('GAN loss 0.8638 ', 'GAN acc 0.3750', 'Discriminator loss 0.6578', 'Discriminator accuracy 0.6074', 'Total loss: 1.5216', 'for batch', 15)
('GAN loss 0.9071 ', 'GAN acc 0.3359', 'Discriminator loss 0.6874', 'Discriminator accuracy 0.5840', 'Total loss: 1.5946', 'for batch', 16)
('GAN loss 0.8754 ', 'GAN acc 0.3164', 'Discriminator loss 0.7050', 'Discriminator accuracy 0.5156', 'Total loss: 1.5805', 'for batch', 17)
('GAN loss 0.8519 ', 'GAN acc 0.3281', 'Discriminator loss 0.6643', 'Discriminator accuracy 0.5859', 'Total loss: 1.5162', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.87808937)
('DISCRIMINATOR_Imagem FAKE=', 0.85575008)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.232079')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7950 ', 'GAN acc 0.4375', 'Discriminator loss 0.6938', 'Discriminator accuracy 0.5352', 'Total loss: 1.4889', 'for batch', 0)
('GAN loss 0.7675 ', 'GAN acc 0.4180', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5742', 'Total loss: 1.4515', 'for batch', 1)
('GAN loss 0.7515 ', 'GAN acc 0.4844', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5879', 'Total loss: 1.4295', 'for batch', 2)
('GAN loss 0.7515 ', 'GAN acc 0.4609', 'Discriminator loss 0.6849', 'Discriminator accuracy 0.5625', 'Total loss: 1.4364', 'for batch', 3)
('GAN loss 0.7257 ', 'GAN acc 0.4922', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5625', 'Total loss: 1.4002', 'for batch', 4)
('GAN loss 0.7438 ', 'GAN acc 0.4688', 'Discriminator loss 0.7075', 'Discriminator accuracy 0.5332', 'Total loss: 1.4513', 'for batch', 5)
('GAN loss 0.7296 ', 'GAN acc 0.4961', 'Discriminator loss 0.6814', 'Discriminator accuracy 0.5586', 'Total loss: 1.4111', 'for batch', 6)
('GAN loss 0.7021 ', 'GAN acc 0.5625', 'Discriminator loss 0.7060', 'Discriminator accuracy 0.5215', 'Total loss: 1.4080', 'for batch', 7)
('GAN loss 0.6722 ', 'GAN acc 0.5781', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5703', 'Total loss: 1.3564', 'for batch', 8)
('GAN loss 0.6798 ', 'GAN acc 0.5312', 'Discriminator loss 0.6791', 'Discriminator accuracy 0.5684', 'Total loss: 1.3588', 'for batch', 9)
('GAN loss 0.6395 ', 'GAN acc 0.6758', 'Discriminator loss 0.7387', 'Discriminator accuracy 0.4766', 'Total loss: 1.3782', 'for batch', 10)
('GAN loss 0.6434 ', 'GAN acc 0.6211', 'Discriminator loss 0.7238', 'Discriminator accuracy 0.5078', 'Total loss: 1.3672', 'for batch', 11)
('GAN loss 0.6601 ', 'GAN acc 0.6055', 'Discriminator loss 0.7311', 'Discriminator accuracy 0.4648', 'Total loss: 1.3912', 'for batch', 12)
('GAN loss 0.6530 ', 'GAN acc 0.5859', 'Discriminator loss 0.7390', 'Discriminator accuracy 0.4609', 'Total loss: 1.3919', 'for batch', 13)
('GAN loss 0.6319 ', 'GAN acc 0.6523', 'Discriminator loss 0.7471', 'Discriminator accuracy 0.4648', 'Total loss: 1.3790', 'for batch', 14)
('GAN loss 0.6178 ', 'GAN acc 0.6914', 'Discriminator loss 0.7246', 'Discriminator accuracy 0.4844', 'Total loss: 1.3424', 'for batch', 15)
('GAN loss 0.6790 ', 'GAN acc 0.5859', 'Discriminator loss 0.7108', 'Discriminator accuracy 0.5254', 'Total loss: 1.3898', 'for batch', 16)
('GAN loss 0.7080 ', 'GAN acc 0.4922', 'Discriminator loss 0.7128', 'Discriminator accuracy 0.4922', 'Total loss: 1.4208', 'for batch', 17)
('GAN loss 0.6909 ', 'GAN acc 0.5664', 'Discriminator loss 0.7038', 'Discriminator accuracy 0.5078', 'Total loss: 1.3947', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.8386327)
('DISCRIMINATOR_Imagem FAKE=', 0.79798573)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.732590')
----------------------------------
('Epoch', 5, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6781 ', 'GAN acc 0.5781', 'Discriminator loss 0.6865', 'Discriminator accuracy 0.5723', 'Total loss: 1.3646', 'for batch', 0)
('GAN loss 0.6971 ', 'GAN acc 0.5391', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5605', 'Total loss: 1.3845', 'for batch', 1)
('GAN loss 0.7616 ', 'GAN acc 0.4141', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5645', 'Total loss: 1.4478', 'for batch', 2)
('GAN loss 0.8067 ', 'GAN acc 0.3477', 'Discriminator loss 0.6934', 'Discriminator accuracy 0.5488', 'Total loss: 1.5000', 'for batch', 3)
('GAN loss 0.7864 ', 'GAN acc 0.3867', 'Discriminator loss 0.6753', 'Discriminator accuracy 0.5684', 'Total loss: 1.4618', 'for batch', 4)
('GAN loss 0.7875 ', 'GAN acc 0.3984', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5859', 'Total loss: 1.4720', 'for batch', 5)
('GAN loss 0.7933 ', 'GAN acc 0.3867', 'Discriminator loss 0.6954', 'Discriminator accuracy 0.5488', 'Total loss: 1.4887', 'for batch', 6)
('GAN loss 0.8066 ', 'GAN acc 0.3750', 'Discriminator loss 0.7053', 'Discriminator accuracy 0.5293', 'Total loss: 1.5119', 'for batch', 7)
('GAN loss 0.8213 ', 'GAN acc 0.3398', 'Discriminator loss 0.6911', 'Discriminator accuracy 0.5625', 'Total loss: 1.5124', 'for batch', 8)
('GAN loss 0.8681 ', 'GAN acc 0.3125', 'Discriminator loss 0.6842', 'Discriminator accuracy 0.5488', 'Total loss: 1.5523', 'for batch', 9)
('GAN loss 0.8592 ', 'GAN acc 0.2852', 'Discriminator loss 0.6949', 'Discriminator accuracy 0.5625', 'Total loss: 1.5541', 'for batch', 10)
('GAN loss 0.8154 ', 'GAN acc 0.3633', 'Discriminator loss 0.7138', 'Discriminator accuracy 0.5273', 'Total loss: 1.5292', 'for batch', 11)
('GAN loss 0.8350 ', 'GAN acc 0.3594', 'Discriminator loss 0.7170', 'Discriminator accuracy 0.4941', 'Total loss: 1.5520', 'for batch', 12)
('GAN loss 0.7766 ', 'GAN acc 0.4297', 'Discriminator loss 0.7317', 'Discriminator accuracy 0.4785', 'Total loss: 1.5083', 'for batch', 13)
('GAN loss 0.8456 ', 'GAN acc 0.3008', 'Discriminator loss 0.7340', 'Discriminator accuracy 0.4492', 'Total loss: 1.5796', 'for batch', 14)
('GAN loss 0.7795 ', 'GAN acc 0.4062', 'Discriminator loss 0.7261', 'Discriminator accuracy 0.4727', 'Total loss: 1.5055', 'for batch', 15)
('GAN loss 0.7528 ', 'GAN acc 0.4219', 'Discriminator loss 0.7034', 'Discriminator accuracy 0.5293', 'Total loss: 1.4562', 'for batch', 16)
('GAN loss 0.7496 ', 'GAN acc 0.4258', 'Discriminator loss 0.7246', 'Discriminator accuracy 0.4609', 'Total loss: 1.4742', 'for batch', 17)
('GAN loss 0.7999 ', 'GAN acc 0.3594', 'Discriminator loss 0.7009', 'Discriminator accuracy 0.5176', 'Total loss: 1.5008', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.7782557)
('DISCRIMINATOR_Imagem FAKE=', 0.78877878)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.320988')
----------------------------------
('Epoch', 6, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8325 ', 'GAN acc 0.2852', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.5508', 'Total loss: 1.5205', 'for batch', 0)
('GAN loss 0.8152 ', 'GAN acc 0.3438', 'Discriminator loss 0.7000', 'Discriminator accuracy 0.5469', 'Total loss: 1.5151', 'for batch', 1)
('GAN loss 0.7728 ', 'GAN acc 0.4375', 'Discriminator loss 0.7033', 'Discriminator accuracy 0.5176', 'Total loss: 1.4761', 'for batch', 2)
('GAN loss 0.7335 ', 'GAN acc 0.4805', 'Discriminator loss 0.7154', 'Discriminator accuracy 0.5059', 'Total loss: 1.4489', 'for batch', 3)
('GAN loss 0.7738 ', 'GAN acc 0.4023', 'Discriminator loss 0.6913', 'Discriminator accuracy 0.5273', 'Total loss: 1.4651', 'for batch', 4)
('GAN loss 0.7413 ', 'GAN acc 0.4336', 'Discriminator loss 0.7135', 'Discriminator accuracy 0.4824', 'Total loss: 1.4548', 'for batch', 5)
('GAN loss 0.7617 ', 'GAN acc 0.4062', 'Discriminator loss 0.6943', 'Discriminator accuracy 0.5254', 'Total loss: 1.4559', 'for batch', 6)
('GAN loss 0.7686 ', 'GAN acc 0.4102', 'Discriminator loss 0.7090', 'Discriminator accuracy 0.5293', 'Total loss: 1.4776', 'for batch', 7)
('GAN loss 0.7425 ', 'GAN acc 0.4414', 'Discriminator loss 0.7136', 'Discriminator accuracy 0.5000', 'Total loss: 1.4561', 'for batch', 8)
('GAN loss 0.6962 ', 'GAN acc 0.5078', 'Discriminator loss 0.7094', 'Discriminator accuracy 0.4980', 'Total loss: 1.4056', 'for batch', 9)
('GAN loss 0.7029 ', 'GAN acc 0.5352', 'Discriminator loss 0.7203', 'Discriminator accuracy 0.4766', 'Total loss: 1.4232', 'for batch', 10)
('GAN loss 0.7190 ', 'GAN acc 0.4883', 'Discriminator loss 0.7051', 'Discriminator accuracy 0.5195', 'Total loss: 1.4240', 'for batch', 11)
('GAN loss 0.6930 ', 'GAN acc 0.5703', 'Discriminator loss 0.7184', 'Discriminator accuracy 0.4668', 'Total loss: 1.4115', 'for batch', 12)
('GAN loss 0.7470 ', 'GAN acc 0.4727', 'Discriminator loss 0.7136', 'Discriminator accuracy 0.4902', 'Total loss: 1.4606', 'for batch', 13)
('GAN loss 0.7464 ', 'GAN acc 0.4453', 'Discriminator loss 0.7116', 'Discriminator accuracy 0.4707', 'Total loss: 1.4580', 'for batch', 14)
('GAN loss 0.7715 ', 'GAN acc 0.3984', 'Discriminator loss 0.6837', 'Discriminator accuracy 0.5508', 'Total loss: 1.4552', 'for batch', 15)
('GAN loss 0.8041 ', 'GAN acc 0.3203', 'Discriminator loss 0.6780', 'Discriminator accuracy 0.5684', 'Total loss: 1.4821', 'for batch', 16)
('GAN loss 0.8084 ', 'GAN acc 0.3164', 'Discriminator loss 0.6981', 'Discriminator accuracy 0.5059', 'Total loss: 1.5064', 'for batch', 17)
('GAN loss 0.7767 ', 'GAN acc 0.3477', 'Discriminator loss 0.6938', 'Discriminator accuracy 0.5215', 'Total loss: 1.4705', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.72780144)
('DISCRIMINATOR_Imagem FAKE=', 0.74036521)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.822948')
----------------------------------
('Epoch', 7, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7451 ', 'GAN acc 0.4375', 'Discriminator loss 0.7057', 'Discriminator accuracy 0.5195', 'Total loss: 1.4509', 'for batch', 0)
('GAN loss 0.7693 ', 'GAN acc 0.3906', 'Discriminator loss 0.6929', 'Discriminator accuracy 0.5234', 'Total loss: 1.4623', 'for batch', 1)
('GAN loss 0.7979 ', 'GAN acc 0.3477', 'Discriminator loss 0.7011', 'Discriminator accuracy 0.5254', 'Total loss: 1.4990', 'for batch', 2)
('GAN loss 0.8073 ', 'GAN acc 0.2891', 'Discriminator loss 0.6884', 'Discriminator accuracy 0.5449', 'Total loss: 1.4957', 'for batch', 3)
('GAN loss 0.7774 ', 'GAN acc 0.3984', 'Discriminator loss 0.6832', 'Discriminator accuracy 0.5508', 'Total loss: 1.4606', 'for batch', 4)
('GAN loss 0.8126 ', 'GAN acc 0.3359', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5586', 'Total loss: 1.5046', 'for batch', 5)
('GAN loss 0.7856 ', 'GAN acc 0.3945', 'Discriminator loss 0.7038', 'Discriminator accuracy 0.5000', 'Total loss: 1.4894', 'for batch', 6)
('GAN loss 0.8011 ', 'GAN acc 0.3398', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5508', 'Total loss: 1.4931', 'for batch', 7)
('GAN loss 0.7719 ', 'GAN acc 0.3633', 'Discriminator loss 0.6994', 'Discriminator accuracy 0.5098', 'Total loss: 1.4713', 'for batch', 8)
('GAN loss 0.7703 ', 'GAN acc 0.3750', 'Discriminator loss 0.6926', 'Discriminator accuracy 0.5410', 'Total loss: 1.4630', 'for batch', 9)
('GAN loss 0.7500 ', 'GAN acc 0.4023', 'Discriminator loss 0.7177', 'Discriminator accuracy 0.4785', 'Total loss: 1.4677', 'for batch', 10)
('GAN loss 0.7828 ', 'GAN acc 0.3516', 'Discriminator loss 0.7001', 'Discriminator accuracy 0.5352', 'Total loss: 1.4830', 'for batch', 11)
('GAN loss 0.7777 ', 'GAN acc 0.3438', 'Discriminator loss 0.7046', 'Discriminator accuracy 0.5137', 'Total loss: 1.4823', 'for batch', 12)
('GAN loss 0.7644 ', 'GAN acc 0.3672', 'Discriminator loss 0.6966', 'Discriminator accuracy 0.5215', 'Total loss: 1.4609', 'for batch', 13)
('GAN loss 0.7659 ', 'GAN acc 0.3711', 'Discriminator loss 0.6967', 'Discriminator accuracy 0.5215', 'Total loss: 1.4625', 'for batch', 14)
('GAN loss 0.7656 ', 'GAN acc 0.3867', 'Discriminator loss 0.6935', 'Discriminator accuracy 0.5176', 'Total loss: 1.4591', 'for batch', 15)
('GAN loss 0.7331 ', 'GAN acc 0.4219', 'Discriminator loss 0.7063', 'Discriminator accuracy 0.5234', 'Total loss: 1.4394', 'for batch', 16)
('GAN loss 0.7402 ', 'GAN acc 0.4492', 'Discriminator loss 0.7039', 'Discriminator accuracy 0.5117', 'Total loss: 1.4441', 'for batch', 17)
('GAN loss 0.7369 ', 'GAN acc 0.4453', 'Discriminator loss 0.7153', 'Discriminator accuracy 0.5039', 'Total loss: 1.4522', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.69073379)
('DISCRIMINATOR_Imagem FAKE=', 0.69826871)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.311967')
----------------------------------
('Epoch', 8, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7136 ', 'GAN acc 0.4961', 'Discriminator loss 0.7138', 'Discriminator accuracy 0.4688', 'Total loss: 1.4274', 'for batch', 0)
('GAN loss 0.7384 ', 'GAN acc 0.4141', 'Discriminator loss 0.7112', 'Discriminator accuracy 0.4883', 'Total loss: 1.4496', 'for batch', 1)
('GAN loss 0.7439 ', 'GAN acc 0.4375', 'Discriminator loss 0.7089', 'Discriminator accuracy 0.5098', 'Total loss: 1.4529', 'for batch', 2)
('GAN loss 0.7428 ', 'GAN acc 0.4141', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.5273', 'Total loss: 1.4345', 'for batch', 3)
('GAN loss 0.7287 ', 'GAN acc 0.4453', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.5176', 'Total loss: 1.4204', 'for batch', 4)
('GAN loss 0.7107 ', 'GAN acc 0.4922', 'Discriminator loss 0.6897', 'Discriminator accuracy 0.5488', 'Total loss: 1.4004', 'for batch', 5)
('GAN loss 0.7352 ', 'GAN acc 0.4453', 'Discriminator loss 0.6955', 'Discriminator accuracy 0.5332', 'Total loss: 1.4307', 'for batch', 6)
('GAN loss 0.7261 ', 'GAN acc 0.4727', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.5352', 'Total loss: 1.4209', 'for batch', 7)
('GAN loss 0.7272 ', 'GAN acc 0.4453', 'Discriminator loss 0.7054', 'Discriminator accuracy 0.5098', 'Total loss: 1.4326', 'for batch', 8)
('GAN loss 0.7454 ', 'GAN acc 0.4180', 'Discriminator loss 0.6961', 'Discriminator accuracy 0.5215', 'Total loss: 1.4415', 'for batch', 9)
('GAN loss 0.7204 ', 'GAN acc 0.4414', 'Discriminator loss 0.6938', 'Discriminator accuracy 0.5312', 'Total loss: 1.4142', 'for batch', 10)
('GAN loss 0.7248 ', 'GAN acc 0.4180', 'Discriminator loss 0.7038', 'Discriminator accuracy 0.4805', 'Total loss: 1.4286', 'for batch', 11)
('GAN loss 0.7083 ', 'GAN acc 0.5117', 'Discriminator loss 0.6977', 'Discriminator accuracy 0.4922', 'Total loss: 1.4060', 'for batch', 12)
('GAN loss 0.7199 ', 'GAN acc 0.4453', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.5391', 'Total loss: 1.4127', 'for batch', 13)
('GAN loss 0.7223 ', 'GAN acc 0.4453', 'Discriminator loss 0.6947', 'Discriminator accuracy 0.5273', 'Total loss: 1.4170', 'for batch', 14)
('GAN loss 0.7182 ', 'GAN acc 0.4844', 'Discriminator loss 0.6992', 'Discriminator accuracy 0.4961', 'Total loss: 1.4174', 'for batch', 15)
('GAN loss 0.7240 ', 'GAN acc 0.4414', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.5020', 'Total loss: 1.4189', 'for batch', 16)
('GAN loss 0.7058 ', 'GAN acc 0.4883', 'Discriminator loss 0.7035', 'Discriminator accuracy 0.4883', 'Total loss: 1.4093', 'for batch', 17)
('GAN loss 0.7087 ', 'GAN acc 0.4883', 'Discriminator loss 0.7077', 'Discriminator accuracy 0.5000', 'Total loss: 1.4164', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.67227417)
('DISCRIMINATOR_Imagem FAKE=', 0.67305356)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.764154')
----------------------------------
('Epoch', 9, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7214 ', 'GAN acc 0.4375', 'Discriminator loss 0.7029', 'Discriminator accuracy 0.5078', 'Total loss: 1.4242', 'for batch', 0)
('GAN loss 0.7124 ', 'GAN acc 0.5039', 'Discriminator loss 0.6989', 'Discriminator accuracy 0.5117', 'Total loss: 1.4114', 'for batch', 1)
('GAN loss 0.7511 ', 'GAN acc 0.3633', 'Discriminator loss 0.6905', 'Discriminator accuracy 0.5215', 'Total loss: 1.4416', 'for batch', 2)
('GAN loss 0.7246 ', 'GAN acc 0.4297', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.5195', 'Total loss: 1.4174', 'for batch', 3)
('GAN loss 0.7148 ', 'GAN acc 0.4609', 'Discriminator loss 0.6983', 'Discriminator accuracy 0.5176', 'Total loss: 1.4131', 'for batch', 4)
('GAN loss 0.7315 ', 'GAN acc 0.4375', 'Discriminator loss 0.6977', 'Discriminator accuracy 0.5078', 'Total loss: 1.4292', 'for batch', 5)
('GAN loss 0.7121 ', 'GAN acc 0.4688', 'Discriminator loss 0.7009', 'Discriminator accuracy 0.4980', 'Total loss: 1.4130', 'for batch', 6)
('GAN loss 0.7063 ', 'GAN acc 0.4922', 'Discriminator loss 0.6994', 'Discriminator accuracy 0.5020', 'Total loss: 1.4057', 'for batch', 7)
('GAN loss 0.7106 ', 'GAN acc 0.4727', 'Discriminator loss 0.6936', 'Discriminator accuracy 0.5449', 'Total loss: 1.4042', 'for batch', 8)
('GAN loss 0.6975 ', 'GAN acc 0.5352', 'Discriminator loss 0.6989', 'Discriminator accuracy 0.5059', 'Total loss: 1.3964', 'for batch', 9)
('GAN loss 0.7232 ', 'GAN acc 0.4531', 'Discriminator loss 0.7013', 'Discriminator accuracy 0.5156', 'Total loss: 1.4245', 'for batch', 10)
('GAN loss 0.7256 ', 'GAN acc 0.4453', 'Discriminator loss 0.6979', 'Discriminator accuracy 0.5215', 'Total loss: 1.4234', 'for batch', 11)
('GAN loss 0.7263 ', 'GAN acc 0.4805', 'Discriminator loss 0.7044', 'Discriminator accuracy 0.5234', 'Total loss: 1.4306', 'for batch', 12)
('GAN loss 0.7064 ', 'GAN acc 0.5234', 'Discriminator loss 0.6984', 'Discriminator accuracy 0.5332', 'Total loss: 1.4047', 'for batch', 13)
('GAN loss 0.6996 ', 'GAN acc 0.5312', 'Discriminator loss 0.7068', 'Discriminator accuracy 0.4805', 'Total loss: 1.4064', 'for batch', 14)
('GAN loss 0.7074 ', 'GAN acc 0.5312', 'Discriminator loss 0.7040', 'Discriminator accuracy 0.5176', 'Total loss: 1.4114', 'for batch', 15)
('GAN loss 0.7324 ', 'GAN acc 0.4570', 'Discriminator loss 0.7101', 'Discriminator accuracy 0.4668', 'Total loss: 1.4425', 'for batch', 16)
('GAN loss 0.7070 ', 'GAN acc 0.4805', 'Discriminator loss 0.7059', 'Discriminator accuracy 0.4746', 'Total loss: 1.4129', 'for batch', 17)
('GAN loss 0.7248 ', 'GAN acc 0.4219', 'Discriminator loss 0.7001', 'Discriminator accuracy 0.5000', 'Total loss: 1.4250', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.64086109)
('DISCRIMINATOR_Imagem FAKE=', 0.64028859)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.334553')
----------------------------------
('Epoch', 10, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7164 ', 'GAN acc 0.4609', 'Discriminator loss 0.7083', 'Discriminator accuracy 0.4980', 'Total loss: 1.4247', 'for batch', 0)
('GAN loss 0.7089 ', 'GAN acc 0.4844', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.5254', 'Total loss: 1.4033', 'for batch', 1)
('GAN loss 0.7182 ', 'GAN acc 0.4492', 'Discriminator loss 0.6955', 'Discriminator accuracy 0.5449', 'Total loss: 1.4137', 'for batch', 2)
('GAN loss 0.7130 ', 'GAN acc 0.4414', 'Discriminator loss 0.7041', 'Discriminator accuracy 0.4824', 'Total loss: 1.4171', 'for batch', 3)
('GAN loss 0.7291 ', 'GAN acc 0.4258', 'Discriminator loss 0.6924', 'Discriminator accuracy 0.5410', 'Total loss: 1.4215', 'for batch', 4)
('GAN loss 0.7301 ', 'GAN acc 0.4141', 'Discriminator loss 0.6829', 'Discriminator accuracy 0.5527', 'Total loss: 1.4130', 'for batch', 5)
('GAN loss 0.7124 ', 'GAN acc 0.4609', 'Discriminator loss 0.7008', 'Discriminator accuracy 0.5117', 'Total loss: 1.4132', 'for batch', 6)
('GAN loss 0.7145 ', 'GAN acc 0.4297', 'Discriminator loss 0.6893', 'Discriminator accuracy 0.5449', 'Total loss: 1.4038', 'for batch', 7)
('GAN loss 0.7032 ', 'GAN acc 0.4883', 'Discriminator loss 0.6963', 'Discriminator accuracy 0.5137', 'Total loss: 1.3995', 'for batch', 8)
('GAN loss 0.6888 ', 'GAN acc 0.5195', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.5508', 'Total loss: 1.3756', 'for batch', 9)
('GAN loss 0.6843 ', 'GAN acc 0.5547', 'Discriminator loss 0.6946', 'Discriminator accuracy 0.5156', 'Total loss: 1.3789', 'for batch', 10)
('GAN loss 0.7043 ', 'GAN acc 0.5117', 'Discriminator loss 0.6905', 'Discriminator accuracy 0.5273', 'Total loss: 1.3949', 'for batch', 11)
('GAN loss 0.7022 ', 'GAN acc 0.4648', 'Discriminator loss 0.6986', 'Discriminator accuracy 0.4863', 'Total loss: 1.4009', 'for batch', 12)
('GAN loss 0.6917 ', 'GAN acc 0.5234', 'Discriminator loss 0.6971', 'Discriminator accuracy 0.4922', 'Total loss: 1.3888', 'for batch', 13)
('GAN loss 0.7109 ', 'GAN acc 0.5117', 'Discriminator loss 0.6872', 'Discriminator accuracy 0.5332', 'Total loss: 1.3981', 'for batch', 14)
('GAN loss 0.7092 ', 'GAN acc 0.4883', 'Discriminator loss 0.6945', 'Discriminator accuracy 0.5254', 'Total loss: 1.4037', 'for batch', 15)
('GAN loss 0.6989 ', 'GAN acc 0.4883', 'Discriminator loss 0.6973', 'Discriminator accuracy 0.5254', 'Total loss: 1.3962', 'for batch', 16)
('GAN loss 0.7059 ', 'GAN acc 0.5039', 'Discriminator loss 0.6922', 'Discriminator accuracy 0.5254', 'Total loss: 1.3981', 'for batch', 17)
('GAN loss 0.6989 ', 'GAN acc 0.5156', 'Discriminator loss 0.7054', 'Discriminator accuracy 0.4746', 'Total loss: 1.4043', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.63069654)
('DISCRIMINATOR_Imagem FAKE=', 0.62954473)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.790060')
----------------------------------
('Epoch', 11, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7034 ', 'GAN acc 0.5078', 'Discriminator loss 0.7060', 'Discriminator accuracy 0.4805', 'Total loss: 1.4094', 'for batch', 0)
('GAN loss 0.7183 ', 'GAN acc 0.4531', 'Discriminator loss 0.7043', 'Discriminator accuracy 0.5020', 'Total loss: 1.4226', 'for batch', 1)
('GAN loss 0.7027 ', 'GAN acc 0.5195', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.5332', 'Total loss: 1.3986', 'for batch', 2)
('GAN loss 0.7021 ', 'GAN acc 0.4961', 'Discriminator loss 0.6973', 'Discriminator accuracy 0.4961', 'Total loss: 1.3995', 'for batch', 3)
('GAN loss 0.6992 ', 'GAN acc 0.5273', 'Discriminator loss 0.7066', 'Discriminator accuracy 0.4707', 'Total loss: 1.4058', 'for batch', 4)
('GAN loss 0.6963 ', 'GAN acc 0.5195', 'Discriminator loss 0.6997', 'Discriminator accuracy 0.4844', 'Total loss: 1.3960', 'for batch', 5)
('GAN loss 0.7006 ', 'GAN acc 0.4961', 'Discriminator loss 0.6896', 'Discriminator accuracy 0.5254', 'Total loss: 1.3903', 'for batch', 6)
('GAN loss 0.7080 ', 'GAN acc 0.4883', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.5059', 'Total loss: 1.4039', 'for batch', 7)
('GAN loss 0.6975 ', 'GAN acc 0.5312', 'Discriminator loss 0.7052', 'Discriminator accuracy 0.4883', 'Total loss: 1.4027', 'for batch', 8)
('GAN loss 0.6945 ', 'GAN acc 0.5000', 'Discriminator loss 0.6910', 'Discriminator accuracy 0.5449', 'Total loss: 1.3855', 'for batch', 9)
('GAN loss 0.7031 ', 'GAN acc 0.5039', 'Discriminator loss 0.6974', 'Discriminator accuracy 0.5039', 'Total loss: 1.4005', 'for batch', 10)
('GAN loss 0.7060 ', 'GAN acc 0.5039', 'Discriminator loss 0.6864', 'Discriminator accuracy 0.5371', 'Total loss: 1.3924', 'for batch', 11)
('GAN loss 0.7072 ', 'GAN acc 0.4688', 'Discriminator loss 0.6873', 'Discriminator accuracy 0.5547', 'Total loss: 1.3946', 'for batch', 12)
('GAN loss 0.6968 ', 'GAN acc 0.5078', 'Discriminator loss 0.7011', 'Discriminator accuracy 0.4941', 'Total loss: 1.3979', 'for batch', 13)
('GAN loss 0.7127 ', 'GAN acc 0.4492', 'Discriminator loss 0.6930', 'Discriminator accuracy 0.5215', 'Total loss: 1.4057', 'for batch', 14)
('GAN loss 0.7088 ', 'GAN acc 0.4570', 'Discriminator loss 0.6903', 'Discriminator accuracy 0.5391', 'Total loss: 1.3991', 'for batch', 15)
('GAN loss 0.7073 ', 'GAN acc 0.4531', 'Discriminator loss 0.6838', 'Discriminator accuracy 0.5371', 'Total loss: 1.3911', 'for batch', 16)
('GAN loss 0.7080 ', 'GAN acc 0.5000', 'Discriminator loss 0.6921', 'Discriminator accuracy 0.5273', 'Total loss: 1.4001', 'for batch', 17)
('GAN loss 0.6993 ', 'GAN acc 0.5039', 'Discriminator loss 0.6928', 'Discriminator accuracy 0.5195', 'Total loss: 1.3921', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.61949855)
('DISCRIMINATOR_Imagem FAKE=', 0.61647248)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.300545')
----------------------------------
('Epoch', 12, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6986 ', 'GAN acc 0.5391', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5391', 'Total loss: 1.3906', 'for batch', 0)
('GAN loss 0.6905 ', 'GAN acc 0.5547', 'Discriminator loss 0.6967', 'Discriminator accuracy 0.4922', 'Total loss: 1.3871', 'for batch', 1)
('GAN loss 0.6946 ', 'GAN acc 0.5195', 'Discriminator loss 0.6996', 'Discriminator accuracy 0.5078', 'Total loss: 1.3942', 'for batch', 2)
('GAN loss 0.7162 ', 'GAN acc 0.4570', 'Discriminator loss 0.6984', 'Discriminator accuracy 0.5137', 'Total loss: 1.4146', 'for batch', 3)
('GAN loss 0.7086 ', 'GAN acc 0.4570', 'Discriminator loss 0.6890', 'Discriminator accuracy 0.5332', 'Total loss: 1.3975', 'for batch', 4)
('GAN loss 0.6999 ', 'GAN acc 0.4922', 'Discriminator loss 0.6875', 'Discriminator accuracy 0.5488', 'Total loss: 1.3875', 'for batch', 5)
('GAN loss 0.7031 ', 'GAN acc 0.4922', 'Discriminator loss 0.6779', 'Discriminator accuracy 0.5938', 'Total loss: 1.3810', 'for batch', 6)
('GAN loss 0.6872 ', 'GAN acc 0.5469', 'Discriminator loss 0.6927', 'Discriminator accuracy 0.5449', 'Total loss: 1.3799', 'for batch', 7)
('GAN loss 0.7041 ', 'GAN acc 0.5273', 'Discriminator loss 0.6954', 'Discriminator accuracy 0.5039', 'Total loss: 1.3995', 'for batch', 8)
('GAN loss 0.7112 ', 'GAN acc 0.4648', 'Discriminator loss 0.6960', 'Discriminator accuracy 0.5020', 'Total loss: 1.4072', 'for batch', 9)
('GAN loss 0.7103 ', 'GAN acc 0.4688', 'Discriminator loss 0.7026', 'Discriminator accuracy 0.4805', 'Total loss: 1.4129', 'for batch', 10)
('GAN loss 0.7196 ', 'GAN acc 0.4180', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.5117', 'Total loss: 1.4144', 'for batch', 11)
('GAN loss 0.7053 ', 'GAN acc 0.4648', 'Discriminator loss 0.6983', 'Discriminator accuracy 0.5059', 'Total loss: 1.4037', 'for batch', 12)
('GAN loss 0.7078 ', 'GAN acc 0.4688', 'Discriminator loss 0.7037', 'Discriminator accuracy 0.4844', 'Total loss: 1.4115', 'for batch', 13)
('GAN loss 0.7140 ', 'GAN acc 0.4609', 'Discriminator loss 0.6911', 'Discriminator accuracy 0.5410', 'Total loss: 1.4051', 'for batch', 14)
('GAN loss 0.6869 ', 'GAN acc 0.5508', 'Discriminator loss 0.6971', 'Discriminator accuracy 0.5176', 'Total loss: 1.3840', 'for batch', 15)
('GAN loss 0.6801 ', 'GAN acc 0.5469', 'Discriminator loss 0.6969', 'Discriminator accuracy 0.5254', 'Total loss: 1.3770', 'for batch', 16)
('GAN loss 0.6935 ', 'GAN acc 0.5469', 'Discriminator loss 0.7021', 'Discriminator accuracy 0.4922', 'Total loss: 1.3956', 'for batch', 17)
('GAN loss 0.6766 ', 'GAN acc 0.6016', 'Discriminator loss 0.7009', 'Discriminator accuracy 0.5000', 'Total loss: 1.3775', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.612719)
('DISCRIMINATOR_Imagem FAKE=', 0.61291993)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.782721')
----------------------------------
('Epoch', 13, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6873 ', 'GAN acc 0.5312', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.5410', 'Total loss: 1.3790', 'for batch', 0)
('GAN loss 0.6957 ', 'GAN acc 0.5352', 'Discriminator loss 0.7001', 'Discriminator accuracy 0.5195', 'Total loss: 1.3959', 'for batch', 1)
('GAN loss 0.7122 ', 'GAN acc 0.4805', 'Discriminator loss 0.6950', 'Discriminator accuracy 0.4922', 'Total loss: 1.4071', 'for batch', 2)
('GAN loss 0.6972 ', 'GAN acc 0.4766', 'Discriminator loss 0.6958', 'Discriminator accuracy 0.5156', 'Total loss: 1.3930', 'for batch', 3)
('GAN loss 0.6936 ', 'GAN acc 0.4883', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.5391', 'Total loss: 1.3835', 'for batch', 4)
('GAN loss 0.7006 ', 'GAN acc 0.5156', 'Discriminator loss 0.6943', 'Discriminator accuracy 0.5117', 'Total loss: 1.3949', 'for batch', 5)
('GAN loss 0.7048 ', 'GAN acc 0.4844', 'Discriminator loss 0.6976', 'Discriminator accuracy 0.5176', 'Total loss: 1.4024', 'for batch', 6)
('GAN loss 0.6920 ', 'GAN acc 0.5078', 'Discriminator loss 0.6959', 'Discriminator accuracy 0.5176', 'Total loss: 1.3879', 'for batch', 7)
('GAN loss 0.6944 ', 'GAN acc 0.5469', 'Discriminator loss 0.7025', 'Discriminator accuracy 0.4629', 'Total loss: 1.3969', 'for batch', 8)
('GAN loss 0.6832 ', 'GAN acc 0.5703', 'Discriminator loss 0.7024', 'Discriminator accuracy 0.4902', 'Total loss: 1.3856', 'for batch', 9)
('GAN loss 0.6907 ', 'GAN acc 0.5391', 'Discriminator loss 0.6989', 'Discriminator accuracy 0.5020', 'Total loss: 1.3896', 'for batch', 10)
('GAN loss 0.6931 ', 'GAN acc 0.5312', 'Discriminator loss 0.6963', 'Discriminator accuracy 0.5000', 'Total loss: 1.3894', 'for batch', 11)
('GAN loss 0.6897 ', 'GAN acc 0.5391', 'Discriminator loss 0.6955', 'Discriminator accuracy 0.5254', 'Total loss: 1.3852', 'for batch', 12)
('GAN loss 0.6962 ', 'GAN acc 0.4844', 'Discriminator loss 0.6966', 'Discriminator accuracy 0.5020', 'Total loss: 1.3928', 'for batch', 13)
('GAN loss 0.7015 ', 'GAN acc 0.4961', 'Discriminator loss 0.6910', 'Discriminator accuracy 0.5117', 'Total loss: 1.3925', 'for batch', 14)
('GAN loss 0.6971 ', 'GAN acc 0.5195', 'Discriminator loss 0.7045', 'Discriminator accuracy 0.4766', 'Total loss: 1.4016', 'for batch', 15)
('GAN loss 0.7080 ', 'GAN acc 0.4609', 'Discriminator loss 0.6886', 'Discriminator accuracy 0.5430', 'Total loss: 1.3967', 'for batch', 16)
('GAN loss 0.7060 ', 'GAN acc 0.4844', 'Discriminator loss 0.6918', 'Discriminator accuracy 0.5547', 'Total loss: 1.3978', 'for batch', 17)
('GAN loss 0.6846 ', 'GAN acc 0.5586', 'Discriminator loss 0.6987', 'Discriminator accuracy 0.4961', 'Total loss: 1.3833', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.59127599)
('DISCRIMINATOR_Imagem FAKE=', 0.58924001)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:28.291396')
----------------------------------
('Epoch', 14, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6894 ', 'GAN acc 0.5664', 'Discriminator loss 0.7010', 'Discriminator accuracy 0.4863', 'Total loss: 1.3904', 'for batch', 0)
('GAN loss 0.6806 ', 'GAN acc 0.5352', 'Discriminator loss 0.7054', 'Discriminator accuracy 0.4629', 'Total loss: 1.3859', 'for batch', 1)
('GAN loss 0.6967 ', 'GAN acc 0.5312', 'Discriminator loss 0.6980', 'Discriminator accuracy 0.4785', 'Total loss: 1.3948', 'for batch', 2)
('GAN loss 0.6817 ', 'GAN acc 0.5703', 'Discriminator loss 0.7027', 'Discriminator accuracy 0.4668', 'Total loss: 1.3844', 'for batch', 3)
('GAN loss 0.6976 ', 'GAN acc 0.5078', 'Discriminator loss 0.6982', 'Discriminator accuracy 0.5000', 'Total loss: 1.3958', 'for batch', 4)
('GAN loss 0.6909 ', 'GAN acc 0.5195', 'Discriminator loss 0.6994', 'Discriminator accuracy 0.4902', 'Total loss: 1.3903', 'for batch', 5)
('GAN loss 0.6788 ', 'GAN acc 0.5625', 'Discriminator loss 0.7041', 'Discriminator accuracy 0.4863', 'Total loss: 1.3829', 'for batch', 6)
('GAN loss 0.6931 ', 'GAN acc 0.5273', 'Discriminator loss 0.6999', 'Discriminator accuracy 0.4922', 'Total loss: 1.3929', 'for batch', 7)
('GAN loss 0.6968 ', 'GAN acc 0.5117', 'Discriminator loss 0.6942', 'Discriminator accuracy 0.4980', 'Total loss: 1.3910', 'for batch', 8)
('GAN loss 0.6863 ', 'GAN acc 0.6172', 'Discriminator loss 0.6976', 'Discriminator accuracy 0.5098', 'Total loss: 1.3839', 'for batch', 9)
('GAN loss 0.6863 ', 'GAN acc 0.5391', 'Discriminator loss 0.7008', 'Discriminator accuracy 0.4805', 'Total loss: 1.3871', 'for batch', 10)
('GAN loss 0.6912 ', 'GAN acc 0.5547', 'Discriminator loss 0.6930', 'Discriminator accuracy 0.5176', 'Total loss: 1.3842', 'for batch', 11)
('GAN loss 0.6789 ', 'GAN acc 0.5820', 'Discriminator loss 0.6945', 'Discriminator accuracy 0.5059', 'Total loss: 1.3735', 'for batch', 12)
('GAN loss 0.6810 ', 'GAN acc 0.5586', 'Discriminator loss 0.7044', 'Discriminator accuracy 0.4648', 'Total loss: 1.3854', 'for batch', 13)
('GAN loss 0.6929 ', 'GAN acc 0.5078', 'Discriminator loss 0.6946', 'Discriminator accuracy 0.5059', 'Total loss: 1.3875', 'for batch', 14)
('GAN loss 0.6915 ', 'GAN acc 0.5312', 'Discriminator loss 0.6990', 'Discriminator accuracy 0.5039', 'Total loss: 1.3905', 'for batch', 15)
('GAN loss 0.6943 ', 'GAN acc 0.5547', 'Discriminator loss 0.7004', 'Discriminator accuracy 0.4824', 'Total loss: 1.3947', 'for batch', 16)
('GAN loss 0.6923 ', 'GAN acc 0.5469', 'Discriminator loss 0.6980', 'Discriminator accuracy 0.5156', 'Total loss: 1.3903', 'for batch', 17)
('GAN loss 0.6983 ', 'GAN acc 0.4844', 'Discriminator loss 0.6999', 'Discriminator accuracy 0.5078', 'Total loss: 1.3981', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.57521397)
('DISCRIMINATOR_Imagem FAKE=', 0.57669556)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('out.shape=', (256, 3, 32, 32), 'out.max', 255.0, 'out.min=', 0.13333334)
('original.shape=', (256, 3, 32, 32), 'original.max', 255.0, 'original.min=', 0.0)
('Elapsed time in epoch = ', '0:00:27.769374')
----------------------------------
('Epoch', 15, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6890 ', 'GAN acc 0.5234', 'Discriminator loss 0.7093', 'Discriminator accuracy 0.4336', 'Total loss: 1.3984', 'for batch', 0)
('GAN loss 0.6936 ', 'GAN acc 0.5273', 'Discriminator loss 0.7017', 'Discriminator accuracy 0.4824', 'Total loss: 1.3952', 'for batch', 1)
('GAN loss 0.6817 ', 'GAN acc 0.5352', 'Discriminator loss 0.6971', 'Discriminator accuracy 0.4922', 'Total loss: 1.3788', 'for batch', 2)
('GAN loss 0.6862 ', 'GAN acc 0.5352', 'Discriminator loss 0.7067', 'Discriminator accuracy 0.4766', 'Total loss: 1.3930', 'f
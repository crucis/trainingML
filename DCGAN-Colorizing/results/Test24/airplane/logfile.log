----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
_____________________________________________________________________________________----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 256)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             257         dropout_5[0][0]                  
====================================================================================================
Total params: 650785
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5621 ', 'GAN acc 0.7305', 'Discriminator loss 4.8536', 'Discriminator accuracy 0.4863', 'Total loss: 5.4157', 'for batch', 0)
('GAN loss 0.2315 ', 'GAN acc 0.9961', 'Discriminator loss 1.5884', 'Discriminator accuracy 0.4199', 'Total loss: 1.8199', 'for batch', 1)
('GAN loss 0.1613 ', 'GAN acc 0.9961', 'Discriminator loss 1.0101', 'Discriminator accuracy 0.4746', 'Total loss: 1.1714', 'for batch', 2)
('GAN loss 0.1654 ', 'GAN acc 0.9961', 'Discriminator loss 1.1423', 'Discriminator accuracy 0.4824', 'Total loss: 1.3077', 'for batch', 3)
('GAN loss 0.2259 ', 'GAN acc 0.9961', 'Discriminator loss 1.1068', 'Discriminator accuracy 0.4785', 'Total loss: 1.3327', 'for batch', 4)
('GAN loss 0.3600 ', 'GAN acc 0.9492', 'Discriminator loss 0.9685', 'Discriminator accuracy 0.4883', 'Total loss: 1.3286', 'for batch', 5)
('GAN loss 0.4592 ', 'GAN acc 0.8594', 'Discriminator loss 0.7571', 'Discriminator accuracy 0.4961', 'Total loss: 1.2163', 'for batch', 6)
('GAN loss 0.6308 ', 'GAN acc 0.6250', 'Discriminator loss 0.5850', 'Discriminator accuracy 0.5449', 'Total loss: 1.2159', 'for batch', 7)
('GAN loss 0.6617 ', 'GAN acc 0.6055', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5918', 'Total loss: 1.3355', 'for batch', 8)
('GAN loss 0.5856 ', 'GAN acc 0.7227', 'Discriminator loss 0.7421', 'Discriminator accuracy 0.5430', 'Total loss: 1.3277', 'for batch', 9)
('GAN loss 0.5471 ', 'GAN acc 0.7812', 'Discriminator loss 0.5496', 'Discriminator accuracy 0.5859', 'Total loss: 1.0967', 'for batch', 10)
('GAN loss 0.6259 ', 'GAN acc 0.6875', 'Discriminator loss 0.5656', 'Discriminator accuracy 0.5742', 'Total loss: 1.1915', 'for batch', 11)
('GAN loss 0.7062 ', 'GAN acc 0.5391', 'Discriminator loss 0.5348', 'Discriminator accuracy 0.6055', 'Total loss: 1.2409', 'for batch', 12)
('GAN loss 0.7020 ', 'GAN acc 0.5352', 'Discriminator loss 0.4673', 'Discriminator accuracy 0.6328', 'Total loss: 1.1692', 'for batch', 13)
('GAN loss 0.7057 ', 'GAN acc 0.5039', 'Discriminator loss 0.4875', 'Discriminator accuracy 0.6270', 'Total loss: 1.1932', 'for batch', 14)
('GAN loss 0.6798 ', 'GAN acc 0.5312', 'Discriminator loss 0.4870', 'Discriminator accuracy 0.6152', 'Total loss: 1.1667', 'for batch', 15)
('GAN loss 0.6325 ', 'GAN acc 0.6445', 'Discriminator loss 0.5859', 'Discriminator accuracy 0.5371', 'Total loss: 1.2184', 'for batch', 16)
('GAN loss 0.6682 ', 'GAN acc 0.5898', 'Discriminator loss 0.5483', 'Discriminator accuracy 0.5605', 'Total loss: 1.2165', 'for batch', 17)
('GAN loss 0.7726 ', 'GAN acc 0.3984', 'Discriminator loss 0.5810', 'Discriminator accuracy 0.6211', 'Total loss: 1.3536', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95941079)
('DISCRIMINATOR_Imagem FAKE=', 0.46884528)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:45.016620')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8260 ', 'GAN acc 0.3555', 'Discriminator loss 0.5646', 'Discriminator accuracy 0.7207', 'Total loss: 1.3905', 'for batch', 0)
('GAN loss 0.8434 ', 'GAN acc 0.3320', 'Discriminator loss 0.4233', 'Discriminator accuracy 0.7266', 'Total loss: 1.2666', 'for batch', 1)
('GAN loss 0.8711 ', 'GAN acc 0.2500', 'Discriminator loss 0.5556', 'Discriminator accuracy 0.7676', 'Total loss: 1.4267', 'for batch', 2)
('GAN loss 0.8919 ', 'GAN acc 0.2383', 'Discriminator loss 0.4091', 'Discriminator accuracy 0.7852', 'Total loss: 1.3010', 'for batch', 3)
('GAN loss 0.8079 ', 'GAN acc 0.3320', 'Discriminator loss 0.4034', 'Discriminator accuracy 0.7676', 'Total loss: 1.2114', 'for batch', 4)
('GAN loss 0.7589 ', 'GAN acc 0.4141', 'Discriminator loss 0.4972', 'Discriminator accuracy 0.7227', 'Total loss: 1.2562', 'for batch', 5)
('GAN loss 0.7229 ', 'GAN acc 0.5273', 'Discriminator loss 0.5269', 'Discriminator accuracy 0.6387', 'Total loss: 1.2498', 'for batch', 6)
('GAN loss 0.7806 ', 'GAN acc 0.3906', 'Discriminator loss 0.4086', 'Discriminator accuracy 0.6973', 'Total loss: 1.1892', 'for batch', 7)
('GAN loss 0.7781 ', 'GAN acc 0.4258', 'Discriminator loss 0.4841', 'Discriminator accuracy 0.7168', 'Total loss: 1.2622', 'for batch', 8)
('GAN loss 0.7515 ', 'GAN acc 0.4219', 'Discriminator loss 0.4206', 'Discriminator accuracy 0.6973', 'Total loss: 1.1721', 'for batch', 9)
('GAN loss 0.8292 ', 'GAN acc 0.2852', 'Discriminator loss 0.3596', 'Discriminator accuracy 0.7363', 'Total loss: 1.1889', 'for batch', 10)
('GAN loss 0.8064 ', 'GAN acc 0.3438', 'Discriminator loss 0.4853', 'Discriminator accuracy 0.7656', 'Total loss: 1.2916', 'for batch', 11)
('GAN loss 0.7911 ', 'GAN acc 0.3008', 'Discriminator loss 0.4509', 'Discriminator accuracy 0.7832', 'Total loss: 1.2420', 'for batch', 12)
('GAN loss 0.8715 ', 'GAN acc 0.2031', 'Discriminator loss 0.3740', 'Discriminator accuracy 0.8066', 'Total loss: 1.2454', 'for batch', 13)
('GAN loss 0.9002 ', 'GAN acc 0.1797', 'Discriminator loss 0.3771', 'Discriminator accuracy 0.8145', 'Total loss: 1.2773', 'for batch', 14)
('GAN loss 0.9148 ', 'GAN acc 0.1602', 'Discriminator loss 0.3915', 'Discriminator accuracy 0.8398', 'Total loss: 1.3062', 'for batch', 15)
('GAN loss 0.9401 ', 'GAN acc 0.1445', 'Discriminator loss 0.3795', 'Discriminator accuracy 0.8574', 'Total loss: 1.3196', 'for batch', 16)
('GAN loss 0.8805 ', 'GAN acc 0.2070', 'Discriminator loss 0.3585', 'Discriminator accuracy 0.8301', 'Total loss: 1.2390', 'for batch', 17)
('GAN loss 0.8079 ', 'GAN acc 0.3359', 'Discriminator loss 0.4668', 'Discriminator accuracy 0.8027', 'Total loss: 1.2747', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96695065)
('DISCRIMINATOR_Imagem FAKE=', 0.45198414)
('Discriminator trained', 2, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.017348')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7986 ', 'GAN acc 0.3203', 'Discriminator loss 0.4265', 'Discriminator accuracy 0.7656', 'Total loss: 1.2251', 'for batch', 0)
('GAN loss 0.8372 ', 'GAN acc 0.2578', 'Discriminator loss 0.3867', 'Discriminator accuracy 0.7754', 'Total loss: 1.2239', 'for batch', 1)
('GAN loss 0.7792 ', 'GAN acc 0.3281', 'Discriminator loss 0.5106', 'Discriminator accuracy 0.7539', 'Total loss: 1.2898', 'for batch', 2)
('GAN loss 0.8179 ', 'GAN acc 0.3320', 'Discriminator loss 0.4182', 'Discriminator accuracy 0.7891', 'Total loss: 1.2361', 'for batch', 3)
('GAN loss 0.8112 ', 'GAN acc 0.3281', 'Discriminator loss 0.3888', 'Discriminator accuracy 0.7559', 'Total loss: 1.2000', 'for batch', 4)
('GAN loss 0.8590 ', 'GAN acc 0.2461', 'Discriminator loss 0.4158', 'Discriminator accuracy 0.7695', 'Total loss: 1.2747', 'for batch', 5)
('GAN loss 0.8829 ', 'GAN acc 0.2031', 'Discriminator loss 0.3757', 'Discriminator accuracy 0.8262', 'Total loss: 1.2586', 'for batch', 6)
('GAN loss 0.9209 ', 'GAN acc 0.1445', 'Discriminator loss 0.3170', 'Discriminator accuracy 0.8457', 'Total loss: 1.2379', 'for batch', 7)
('GAN loss 0.9321 ', 'GAN acc 0.1328', 'Discriminator loss 0.4910', 'Discriminator accuracy 0.8691', 'Total loss: 1.4231', 'for batch', 8)
('GAN loss 0.9144 ', 'GAN acc 0.1133', 'Discriminator loss 0.4512', 'Discriminator accuracy 0.8594', 'Total loss: 1.3656', 'for batch', 9)
('GAN loss 0.9062 ', 'GAN acc 0.1133', 'Discriminator loss 0.3486', 'Discriminator accuracy 0.9023', 'Total loss: 1.2548', 'for batch', 10)
('GAN loss 0.8646 ', 'GAN acc 0.1875', 'Discriminator loss 0.4374', 'Discriminator accuracy 0.8926', 'Total loss: 1.3020', 'for batch', 11)
('GAN loss 0.8776 ', 'GAN acc 0.1406', 'Discriminator loss 0.3601', 'Discriminator accuracy 0.8730', 'Total loss: 1.2377', 'for batch', 12)
('GAN loss 0.8688 ', 'GAN acc 0.1211', 'Discriminator loss 0.4184', 'Discriminator accuracy 0.8867', 'Total loss: 1.2872', 'for batch', 13)
('GAN loss 0.8873 ', 'GAN acc 0.1055', 'Discriminator loss 0.3516', 'Discriminator accuracy 0.8945', 'Total loss: 1.2389', 'for batch', 14)
('GAN loss 0.8867 ', 'GAN acc 0.0820', 'Discriminator loss 0.3908', 'Discriminator accuracy 0.9180', 'Total loss: 1.2775', 'for batch', 15)
('GAN loss 0.8975 ', 'GAN acc 0.1094', 'Discriminator loss 0.3750', 'Discriminator accuracy 0.9082', 'Total loss: 1.2724', 'for batch', 16)
('GAN loss 0.8537 ', 'GAN acc 0.1836', 'Discriminator loss 0.3101', 'Discriminator accuracy 0.9121', 'Total loss: 1.1638', 'for batch', 17)
('GAN loss 0.8328 ', 'GAN acc 0.1602', 'Discriminator loss 0.3563', 'Discriminator accuracy 0.8789', 'Total loss: 1.1891', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.9685418)
('DISCRIMINATOR_Imagem FAKE=', 0.43576011)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.680819')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8489 ', 'GAN acc 0.2109', 'Discriminator loss 0.3447', 'Discriminator accuracy 0.8496', 'Total loss: 1.1936', 'for batch', 0)
('GAN loss 0.8683 ', 'GAN acc 0.2188', 'Discriminator loss 0.3557', 'Discriminator accuracy 0.8418', 'Total loss: 1.2240', 'for batch', 1)
('GAN loss 0.9029 ', 'GAN acc 0.2188', 'Discriminator loss 0.3811', 'Discriminator accuracy 0.8828', 'Total loss: 1.2840', 'for batch', 2)
('GAN loss 0.9269 ', 'GAN acc 0.1523', 'Discriminator loss 0.3580', 'Discriminator accuracy 0.8770', 'Total loss: 1.2849', 'for batch', 3)
('GAN loss 1.0088 ', 'GAN acc 0.0664', 'Discriminator loss 0.3664', 'Discriminator accuracy 0.8984', 'Total loss: 1.3752', 'for batch', 4)
('GAN loss 1.0399 ', 'GAN acc 0.0625', 'Discriminator loss 0.3420', 'Discriminator accuracy 0.9395', 'Total loss: 1.3819', 'for batch', 5)
('GAN loss 0.9926 ', 'GAN acc 0.0781', 'Discriminator loss 0.3671', 'Discriminator accuracy 0.9453', 'Total loss: 1.3597', 'for batch', 6)
('GAN loss 1.0284 ', 'GAN acc 0.0586', 'Discriminator loss 0.2659', 'Discriminator accuracy 0.9551', 'Total loss: 1.2943', 'for batch', 7)
('GAN loss 1.0087 ', 'GAN acc 0.0391', 'Discriminator loss 0.4105', 'Discriminator accuracy 0.9434', 'Total loss: 1.4193', 'for batch', 8)
('GAN loss 1.0385 ', 'GAN acc 0.0156', 'Discriminator loss 0.3270', 'Discriminator accuracy 0.9336', 'Total loss: 1.3655', 'for batch', 9)
('GAN loss 1.1048 ', 'GAN acc 0.0273', 'Discriminator loss 0.2482', 'Discriminator accuracy 0.9629', 'Total loss: 1.3529', 'for batch', 10)
('GAN loss 1.0809 ', 'GAN acc 0.0234', 'Discriminator loss 0.3682', 'Discriminator accuracy 0.9570', 'Total loss: 1.4491', 'for batch', 11)
('GAN loss 1.0565 ', 'GAN acc 0.0195', 'Discriminator loss 0.2908', 'Discriminator accuracy 0.9707', 'Total loss: 1.3474', 'for batch', 12)
('GAN loss 1.0684 ', 'GAN acc 0.0156', 'Discriminator loss 0.2577', 'Discriminator accuracy 0.9727', 'Total loss: 1.3261', 'for batch', 13)
('GAN loss 1.0235 ', 'GAN acc 0.0469', 'Discriminator loss 0.2652', 'Discriminator accuracy 0.9570', 'Total loss: 1.2887', 'for batch', 14)
('GAN loss 1.0336 ', 'GAN acc 0.0625', 'Discriminator loss 0.3009', 'Discriminator accuracy 0.9258', 'Total loss: 1.3345', 'for batch', 15)
('GAN loss 1.0817 ', 'GAN acc 0.0391', 'Discriminator loss 0.3192', 'Discriminator accuracy 0.9277', 'Total loss: 1.4009', 'for batch', 16)
('GAN loss 1.1910 ', 'GAN acc 0.0078', 'Discriminator loss 0.2891', 'Discriminator accuracy 0.9492', 'Total loss: 1.4802', 'for batch', 17)
('GAN loss 1.2559 ', 'GAN acc 0.0078', 'Discriminator loss 0.2862', 'Discriminator accuracy 0.9688', 'Total loss: 1.5421', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95941669)
('DISCRIMINATOR_Imagem FAKE=', 0.30201125)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.321348')
----------------------------------
('Epoch', 5, 'of', 50)
('Number of batches', 19)
('GAN loss 1.2567 ', 'GAN acc 0.0117', 'Discriminator loss 0.2752', 'Discriminator accuracy 0.9570', 'Total loss: 1.5319', 'for batch', 0)
('GAN loss 1.2273 ', 'GAN acc 0.0078', 'Discriminator loss 0.2686', 'Discriminator accuracy 0.9668', 'Total loss: 1.4959', 'for batch', 1)
('GAN loss 1.1681 ', 'GAN acc 0.0117', 'Discriminator loss 0.3373', 'Discriminator accuracy 0.9570', 'Total loss: 1.5054', 'for batch', 2)
('GAN loss 1.0794 ', 'GAN acc 0.0391', 'Discriminator loss 0.2470', 'Discriminator accuracy 0.9551', 'Total loss: 1.3264', 'for batch', 3)
('GAN loss 1.0822 ', 'GAN acc 0.0508', 'Discriminator loss 0.2779', 'Discriminator accuracy 0.9492', 'Total loss: 1.3600', 'for batch', 4)
('GAN loss 1.1565 ', 'GAN acc 0.0508', 'Discriminator loss 0.2431', 'Discriminator accuracy 0.9688', 'Total loss: 1.3997', 'for batch', 5)
('GAN loss 1.1628 ', 'GAN acc 0.0234', 'Discriminator loss 0.3092', 'Discriminator accuracy 0.9531', 'Total loss: 1.4719', 'for batch', 6)
('GAN loss 1.2964 ', 'GAN acc 0.0078', 'Discriminator loss 0.2349', 'Discriminator accuracy 0.9688', 'Total loss: 1.5312', 'for batch', 7)
('GAN loss 1.1816 ', 'GAN acc 0.0430', 'Discriminator loss 0.2760', 'Discriminator accuracy 0.9570', 'Total loss: 1.4575', 'for batch', 8)
('GAN loss 1.2020 ', 'GAN acc 0.0234', 'Discriminator loss 0.2614', 'Discriminator accuracy 0.9453', 'Total loss: 1.4635', 'for batch', 9)
('GAN loss 1.2697 ', 'GAN acc 0.0469', 'Discriminator loss 0.2423', 'Discriminator accuracy 0.9355', 'Total loss: 1.5121', 'for batch', 10)
('GAN loss 1.2963 ', 'GAN acc 0.0430', 'Discriminator loss 0.3492', 'Discriminator accuracy 0.9395', 'Total loss: 1.6455', 'for batch', 11)
('GAN loss 1.2817 ', 'GAN acc 0.0195', 'Discriminator loss 0.3102', 'Discriminator accuracy 0.9414', 'Total loss: 1.5920', 'for batch', 12)
('GAN loss 1.3013 ', 'GAN acc 0.0039', 'Discriminator loss 0.2911', 'Discriminator accuracy 0.9648', 'Total loss: 1.5924', 'for batch', 13)
('GAN loss 1.4114 ', 'GAN acc 0.0117', 'Discriminator loss 0.3070', 'Discriminator accuracy 0.9570', 'Total loss: 1.7184', 'for batch', 14)
('GAN loss 1.4201 ', 'GAN acc 0.0039', 'Discriminator loss 0.2608', 'Discriminator accuracy 0.9473', 'Total loss: 1.6809', 'for batch', 15)
('GAN loss 1.5058 ', 'GAN acc 0.0000', 'Discriminator loss 0.2815', 'Discriminator accuracy 0.9551', 'Total loss: 1.7873', 'for batch', 16)
('GAN loss 1.4366 ', 'GAN acc 0.0078', 'Discriminator loss 0.2461', 'Discriminator accuracy 0.9688', 'Total loss: 1.6827', 'for batch', 17)
('GAN loss 1.3978 ', 'GAN acc 0.0039', 'Discriminator loss 0.2832', 'Discriminator accuracy 0.9707', 'Total loss: 1.6809', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95793992)
('DISCRIMINATOR_Imagem FAKE=', 0.28252721)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.851462')
----------------------------------
('Epoch', 6, 'of', 50)
('Number of batches', 19)
('GAN loss 1.3797 ', 'GAN acc 0.0000', 'Discriminator loss 0.2547', 'Discriminator accuracy 0.9609', 'Total loss: 1.6344', 'for batch', 0)
('GAN loss 1.4988 ', 'GAN acc 0.0078', 'Discriminator loss 0.2298', 'Discriminator accuracy 0.9707', 'Total loss: 1.7287', 'for batch', 1)
('GAN loss 1.5647 ', 'GAN acc 0.0000', 'Discriminator loss 0.3972', 'Discriminator accuracy 0.9629', 'Total loss: 1.9619', 'for batch', 2)
('GAN loss 1.5736 ', 'GAN acc 0.0000', 'Discriminator loss 0.2427', 'Discriminator accuracy 0.9707', 'Total loss: 1.8163', 'for batch', 3)
('GAN loss 1.6738 ', 'GAN acc 0.0000', 'Discriminator loss 0.2084', 'Discriminator accuracy 0.9668', 'Total loss: 1.8822', 'for batch', 4)
('GAN loss 1.7821 ', 'GAN acc 0.0000', 'Discriminator loss 0.2307', 'Discriminator accuracy 0.9766', 'Total loss: 2.0127', 'for batch', 5)
('GAN loss 1.7350 ', 'GAN acc 0.0039', 'Discriminator loss 0.2159', 'Discriminator accuracy 0.9648', 'Total loss: 1.9509', 'for batch', 6)
('GAN loss 1.7322 ', 'GAN acc 0.0000', 'Discriminator loss 0.1431', 'Discriminator accuracy 0.9785', 'Total loss: 1.8753', 'for batch', 7)
('GAN loss 1.7240 ', 'GAN acc 0.0000', 'Discriminator loss 0.3221', 'Discriminator accuracy 0.9551', 'Total loss: 2.0461', 'for batch', 8)
('GAN loss 1.6640 ', 'GAN acc 0.0000', 'Discriminator loss 0.2918', 'Discriminator accuracy 0.9570', 'Total loss: 1.9559', 'for batch', 9)
('GAN loss 1.5974 ', 'GAN acc 0.0039', 'Discriminator loss 0.1541', 'Discriminator accuracy 0.9844', 'Total loss: 1.7515', 'for batch', 10)
('GAN loss 1.5149 ', 'GAN acc 0.0117', 'Discriminator loss 0.2729', 'Discriminator accuracy 0.9648', 'Total loss: 1.7878', 'for batch', 11)
('GAN loss 1.5164 ', 'GAN acc 0.0078', 'Discriminator loss 0.1976', 'Discriminator accuracy 0.9727', 'Total loss: 1.7140', 'for batch', 12)
('GAN loss 1.4275 ', 'GAN acc 0.0195', 'Discriminator loss 0.2569', 'Discriminator accuracy 0.9707', 'Total loss: 1.6843', 'for batch', 13)
('GAN loss 1.4026 ', 'GAN acc 0.0234', 'Discriminator loss 0.2247', 'Discriminator accuracy 0.9609', 'Total loss: 1.6273', 'for batch', 14)
('GAN loss 1.6510 ', 'GAN acc 0.0039', 'Discriminator loss 0.2520', 'Discriminator accuracy 0.9492', 'Total loss: 1.9030', 'for batch', 15)
('GAN loss 1.7277 ', 'GAN acc 0.0039', 'Discriminator loss 0.2582', 'Discriminator accuracy 0.9590', 'Total loss: 1.9859', 'for batch', 16)
('GAN loss 1.9409 ', 'GAN acc 0.0000', 'Discriminator loss 0.1898', 'Discriminator accuracy 0.9727', 'Total loss: 2.1308', 'for batch', 17)
('GAN loss 2.1741 ', 'GAN acc 0.0000', 'Discriminator loss 0.2350', 'Discriminator accuracy 0.9688', 'Total loss: 2.4091', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95180678)
('DISCRIMINATOR_Imagem FAKE=', 0.12348698)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.408958')
----------------------------------
('Epoch', 7, 'of', 50)
('Number of batches', 19)
('GAN loss 1.9444 ', 'GAN acc 0.0000', 'Discriminator loss 0.2456', 'Discriminator accuracy 0.9629', 'Total loss: 2.1900', 'for batch', 0)
('GAN loss 1.8185 ', 'GAN acc 0.0000', 'Discriminator loss 0.1986', 'Discriminator accuracy 0.9727', 'Total loss: 2.0172', 'for batch', 1)
('GAN loss 1.5087 ', 'GAN acc 0.0117', 'Discriminator loss 0.2593', 'Discriminator accuracy 0.9648', 'Total loss: 1.7679', 'for batch', 2)
('GAN loss 1.4222 ', 'GAN acc 0.0312', 'Discriminator loss 0.2070', 'Discriminator accuracy 0.9570', 'Total loss: 1.6292', 'for batch', 3)
('GAN loss 1.6776 ', 'GAN acc 0.0039', 'Discriminator loss 0.2167', 'Discriminator accuracy 0.9570', 'Total loss: 1.8943', 'for batch', 4)
('GAN loss 1.9465 ', 'GAN acc 0.0039', 'Discriminator loss 0.1826', 'Discriminator accuracy 0.9727', 'Total loss: 2.1290', 'for batch', 5)
('GAN loss 1.8725 ', 'GAN acc 0.0000', 'Discriminator loss 0.2179', 'Discriminator accuracy 0.9648', 'Total loss: 2.0903', 'for batch', 6)
('GAN loss 2.0128 ', 'GAN acc 0.0000', 'Discriminator loss 0.1200', 'Discriminator accuracy 0.9883', 'Total loss: 2.1329', 'for batch', 7)
('GAN loss 1.8570 ', 'GAN acc 0.0000', 'Discriminator loss 0.2801', 'Discriminator accuracy 0.9551', 'Total loss: 2.1371', 'for batch', 8)
('GAN loss 1.7793 ', 'GAN acc 0.0000', 'Discriminator loss 0.1986', 'Discriminator accuracy 0.9668', 'Total loss: 1.9779', 'for batch', 9)
('GAN loss 1.8932 ', 'GAN acc 0.0000', 'Discriminator loss 0.1587', 'Discriminator accuracy 0.9863', 'Total loss: 2.0519', 'for batch', 10)
('GAN loss 1.8897 ', 'GAN acc 0.0000', 'Discriminator loss 0.2357', 'Discriminator accuracy 0.9668', 'Total loss: 2.1254', 'for batch', 11)
('GAN loss 1.8758 ', 'GAN acc 0.0000', 'Discriminator loss 0.1921', 'Discriminator accuracy 0.9746', 'Total loss: 2.0679', 'for batch', 12)
('GAN loss 1.9022 ', 'GAN acc 0.0000', 'Discriminator loss 0.1635', 'Discriminator accuracy 0.9824', 'Total loss: 2.0657', 'for batch', 13)
('GAN loss 1.9086 ', 'GAN acc 0.0039', 'Discriminator loss 0.1923', 'Discriminator accuracy 0.9688', 'Total loss: 2.1009', 'for batch', 14)
('GAN loss 1.8134 ', 'GAN acc 0.0000', 'Discriminator loss 0.2016', 'Discriminator accuracy 0.9570', 'Total loss: 2.0149', 'for batch', 15)
('GAN loss 1.7326 ', 'GAN acc 0.0234', 'Discriminator loss 0.2288', 'Discriminator accuracy 0.9473', 'Total loss: 1.9615', 'for batch', 16)
('GAN loss 1.9825 ', 'GAN acc 0.0000', 'Discriminator loss 0.1694', 'Discriminator accuracy 0.9648', 'Total loss: 2.1519', 'for batch', 17)
('GAN loss 2.0544 ', 'GAN acc 0.0000', 'Discriminator loss 0.2022', 'Discriminator accuracy 0.9766', 'Total loss: 2.2566', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95542186)
('DISCRIMINATOR_Imagem FAKE=', 0.14125699)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.926655')
----------------------------------
('Epoch', 8, 'of', 50)
('Number of batches', 19)
('GAN loss 2.1203 ', 'GAN acc 0.0039', 'Discriminator loss 0.1880', 'Discriminator accuracy 0.9688', 'Total loss: 2.3083', 'for batch', 0)
('GAN loss 2.1704 ', 'GAN acc 0.0000', 'Discriminator loss 0.1678', 'Discriminator accuracy 0.9707', 'Total loss: 2.3382', 'for batch', 1)
('GAN loss 2.0008 ', 'GAN acc 0.0000', 'Discriminator loss 0.2426', 'Discriminator accuracy 0.9648', 'Total loss: 2.2434', 'for batch', 2)
('GAN loss 1.7618 ', 'GAN acc 0.0039', 'Discriminator loss 0.1624', 'Discriminator accuracy 0.9746', 'Total loss: 1.9242', 'for batch', 3)
('GAN loss 1.8649 ', 'GAN acc 0.0000', 'Discriminator loss 0.1745', 'Discriminator accuracy 0.9727', 'Total loss: 2.0394', 'for batch', 4)
('GAN loss 2.2112 ', 'GAN acc 0.0000', 'Discriminator loss 0.1358', 'Discriminator accuracy 0.9824', 'Total loss: 2.3469', 'for batch', 5)
('GAN loss 2.3955 ', 'GAN acc 0.0000', 'Discriminator loss 0.1678', 'Discriminator accuracy 0.9707', 'Total loss: 2.5633', 'for batch', 6)
('GAN loss 2.5245 ', 'GAN acc 0.0000', 'Discriminator loss 0.0961', 'Discriminator accuracy 0.9863', 'Total loss: 2.6206', 'for batch', 7)
('GAN loss 2.3358 ', 'GAN acc 0.0000', 'Discriminator loss 0.2149', 'Discriminator accuracy 0.9609', 'Total loss: 2.5507', 'for batch', 8)
('GAN loss 2.2431 ', 'GAN acc 0.0000', 'Discriminator loss 0.1699', 'Discriminator accuracy 0.9668', 'Total loss: 2.4130', 'for batch', 9)
('GAN loss 2.2485 ', 'GAN acc 0.0000', 'Discriminator loss 0.1001', 'Discriminator accuracy 0.9922', 'Total loss: 2.3486', 'for batch', 10)
('GAN loss 2.2004 ', 'GAN acc 0.0000', 'Discriminator loss 0.1911', 'Discriminator accuracy 0.9707', 'Total loss: 2.3916', 'for batch', 11)
('GAN loss 2.0596 ', 'GAN acc 0.0000', 'Discriminator loss 0.1604', 'Discriminator accuracy 0.9805', 'Total loss: 2.2200', 'for batch', 12)
('GAN loss 1.9945 ', 'GAN acc 0.0000', 'Discriminator loss 0.1478', 'Discriminator accuracy 0.9766', 'Total loss: 2.1423', 'for batch', 13)
('GAN loss 2.2266 ', 'GAN acc 0.0000', 'Discriminator loss 0.1638', 'Discriminator accuracy 0.9746', 'Total loss: 2.3904', 'for batch', 14)
('GAN loss 2.3532 ', 'GAN acc 0.0000', 'Discriminator loss 0.1994', 'Discriminator accuracy 0.9609', 'Total loss: 2.5526', 'for batch', 15)
('GAN loss 2.3945 ', 'GAN acc 0.0000', 'Discriminator loss 0.1791', 'Discriminator accuracy 0.9648', 'Total loss: 2.5736', 'for batch', 16)
('GAN loss 2.5945 ', 'GAN acc 0.0039', 'Discriminator loss 0.1200', 'Discriminator accuracy 0.9785', 'Total loss: 2.7145', 'for batch', 17)
('GAN loss 2.7041 ', 'GAN acc 0.0000', 'Discriminator loss 0.1647', 'Discriminator accuracy 0.9746', 'Total loss: 2.8688', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95090377)
('DISCRIMINATOR_Imagem FAKE=', 0.082766727)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.512632')
----------------------------------
('Epoch', 9, 'of', 50)
('Number of batches', 19)
('GAN loss 2.4856 ', 'GAN acc 0.0039', 'Discriminator loss 0.1682', 'Discriminator accuracy 0.9668', 'Total loss: 2.6538', 'for batch', 0)
('GAN loss 2.3802 ', 'GAN acc 0.0039', 'Discriminator loss 0.1496', 'Discriminator accuracy 0.9707', 'Total loss: 2.5298', 'for batch', 1)
('GAN loss 2.2538 ', 'GAN acc 0.0000', 'Discriminator loss 0.1330', 'Discriminator accuracy 0.9766', 'Total loss: 2.3867', 'for batch', 2)
('GAN loss 1.9270 ', 'GAN acc 0.0000', 'Discriminator loss 0.1552', 'Discriminator accuracy 0.9766', 'Total loss: 2.0823', 'for batch', 3)
----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 256)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             257         dropout_5[0][0]                  
====================================================================================================
Total params: 650785
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5621 ', 'GAN acc 0.7305', 'Discriminator loss 4.8536', 'Discriminator accuracy 0.4863', 'Total loss: 5.4157', 'for batch', 0)
('GAN loss 0.2315 ', 'GAN acc 0.9961', 'Discriminator loss 1.5884', 'Discriminator accuracy 0.4199', 'Total loss: 1.8199', 'for batch', 1)
('GAN loss 0.1613 ', 'GAN acc 0.9961', 'Discriminator loss 1.0101', 'Discriminator accuracy 0.4746', 'Total loss: 1.1714', 'for batch', 2)
('GAN loss 0.1654 ', 'GAN acc 0.9961', 'Discriminator loss 1.1418', 'Discriminator accuracy 0.4824', 'Total loss: 1.3073', 'for batch', 3)
('GAN loss 0.2259 ', 'GAN acc 0.9961', 'Discriminator loss 1.1066', 'Discriminator accuracy 0.4785', 'Total loss: 1.3325', 'for batch', 4)
('GAN loss 0.3628 ', 'GAN acc 0.9375', 'Discriminator loss 0.9726', 'Discriminator accuracy 0.4902', 'Total loss: 1.3354', 'for batch', 5)
('GAN loss 0.4609 ', 'GAN acc 0.8594', 'Discriminator loss 0.7527', 'Discriminator accuracy 0.4941', 'Total loss: 1.2135', 'for batch', 6)
('GAN loss 0.6256 ', 'GAN acc 0.6562', 'Discriminator loss 0.5982', 'Discriminator accuracy 0.5586', 'Total loss: 1.2238', 'for batch', 7)
('GAN loss 0.6405 ', 'GAN acc 0.6562', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5840', 'Total loss: 1.3161', 'for batch', 8)
('GAN loss 0.5658 ', 'GAN acc 0.7227', 'Discriminator loss 0.7456', 'Discriminator accuracy 0.5293', 'Total loss: 1.3115', 'for batch', 9)
('GAN loss 0.5541 ', 'GAN acc 0.7734', 'Discriminator loss 0.5490', 'Discriminator accuracy 0.5879', 'Total loss: 1.1031', 'for batch', 10)
('GAN loss 0.6144 ', 'GAN acc 0.6641', 'Discriminator loss 0.5806', 'Discriminator accuracy 0.5586', 'Total loss: 1.1950', 'for batch', 11)
('GAN loss 0.7164 ', 'GAN acc 0.5156', 'Discriminator loss 0.5533', 'Discriminator accuracy 0.5957', 'Total loss: 1.2697', 'for batch', 12)
('GAN loss 0.7497 ', 'GAN acc 0.4336', 'Discriminator loss 0.4579', 'Discriminator accuracy 0.6719', 'Total loss: 1.2076', 'for batch', 13)
('GAN loss 0.7914 ', 'GAN acc 0.3555', 'Discriminator loss 0.4650', 'Discriminator accuracy 0.6855', 'Total loss: 1.2564', 'for batch', 14)
('GAN loss 0.8147 ', 'GAN acc 0.3516', 'Discriminator loss 0.4340', 'Discriminator accuracy 0.7070', 'Total loss: 1.2488', 'for batch', 15)
('GAN loss 0.8342 ', 'GAN acc 0.3242', 'Discriminator loss 0.4613', 'Discriminator accuracy 0.7148', 'Total loss: 1.2956', 'for batch', 16)
('GAN loss 0.8367 ', 'GAN acc 0.3633', 'Discriminator loss 0.4328', 'Discriminator accuracy 0.7246', 'Total loss: 1.2695', 'for batch', 17)
('GAN loss 0.8925 ', 'GAN acc 0.2539', 'Discriminator loss 0.4824', 'Discriminator accuracy 0.7500', 'Total loss: 1.3748', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96303821)
('DISCRIMINATOR_Imagem FAKE=', 0.45013487)
('Discriminator trained', 14, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:45.195994')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8831 ', 'GAN acc 0.2734', 'Discriminator loss 0.4935', 'Discriminator accuracy 0.7715', 'Total loss: 1.3766', 'for batch', 0)
('GAN loss 0.8711 ', 'GAN acc 0.2539', 'Discriminator loss 0.4024', 'Discriminator accuracy 0.7695', 'Total loss: 1.2735', 'for batch', 1)
('GAN loss 0.6756 ', 'GAN acc 0.5859', 'Discriminator loss 0
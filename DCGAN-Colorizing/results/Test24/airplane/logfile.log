----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
_____________________________________________________________________________________----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 256)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             257         dropout_5[0][0]                  
====================================================================================================
Total params: 650785
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5621 ', 'GAN acc 0.7305', 'Discriminator loss 4.8536', 'Discriminator accuracy 0.4863', 'Total loss: 5.4157', 'for batch', 0)
('GAN loss 0.2315 ', 'GAN acc 0.9961', 'Discriminator loss 1.5884', 'Discriminator accuracy 0.4199', 'Total loss: 1.8199', 'for batch', 1)
('GAN loss 0.1613 ', 'GAN acc 0.9961', 'Discriminator loss 1.0101', 'Discriminator accuracy 0.4746', 'Total loss: 1.1714', 'for batch', 2)
('GAN loss 0.1654 ', 'GAN acc 0.9961', 'Discriminator loss 1.1423', 'Discriminator accuracy 0.4824', 'Total loss: 1.3077', 'for batch', 3)
('GAN loss 0.2259 ', 'GAN acc 0.9961', 'Discriminator loss 1.1068', 'Discriminator accuracy 0.4785', 'Total loss: 1.3327', 'for batch', 4)
('GAN loss 0.3600 ', 'GAN acc 0.9492', 'Discriminator loss 0.9685', 'Discriminator accuracy 0.4883', 'Total loss: 1.3286', 'for batch', 5)
('GAN loss 0.4592 ', 'GAN acc 0.8594', 'Discriminator loss 0.7571', 'Discriminator accuracy 0.4961', 'Total loss: 1.2163', 'for batch', 6)
('GAN loss 0.6308 ', 'GAN acc 0.6250', 'Discriminator loss 0.5850', 'Discriminator accuracy 0.5449', 'Total loss: 1.2159', 'for batch', 7)
('GAN loss 0.6617 ', 'GAN acc 0.6055', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5918', 'Total loss: 1.3355', 'for batch', 8)
('GAN loss 0.5856 ', 'GAN acc 0.7227', 'Discriminator loss 0.7421', 'Discriminator accuracy 0.5430', 'Total loss: 1.3277', 'for batch', 9)
('GAN loss 0.5471 ', 'GAN acc 0.7812', 'Discriminator loss 0.5496', 'Discriminator accuracy 0.5859', 'Total loss: 1.0967', 'for batch', 10)
('GAN loss 0.6259 ', 'GAN acc 0.6875', 'Discriminator loss 0.5656', 'Discriminator accuracy 0.5742', 'Total loss: 1.1915', 'for batch', 11)
('GAN loss 0.7062 ', 'GAN acc 0.5391', 'Discriminator loss 0.5348', 'Discriminator accuracy 0.6055', 'Total loss: 1.2409', 'for batch', 12)
('GAN loss 0.7020 ', 'GAN acc 0.5352', 'Discriminator loss 0.4673', 'Discriminator accuracy 0.6328', 'Total loss: 1.1692', 'for batch', 13)
('GAN loss 0.7057 ', 'GAN acc 0.5039', 'Discriminator loss 0.4875', 'Discriminator accuracy 0.6270', 'Total loss: 1.1932', 'for batch', 14)
('GAN loss 0.6798 ', 'GAN acc 0.5312', 'Discriminator loss 0.4870', 'Discriminator accuracy 0.6152', 'Total loss: 1.1667', 'for batch', 15)
('GAN loss 0.6325 ', 'GAN acc 0.6445', 'Discriminator loss 0.5859', 'Discriminator accuracy 0.5371', 'Total loss: 1.2184', 'for batch', 16)
('GAN loss 0.6682 ', 'GAN acc 0.5898', 'Discriminator loss 0.5483', 'Discriminator accuracy 0.5605', 'Total loss: 1.2165', 'for batch', 17)
('GAN loss 0.7726 ', 'GAN acc 0.3984', 'Discriminator loss 0.5810', 'Discriminator accuracy 0.6211', 'Total loss: 1.3536', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95941079)
('DISCRIMINATOR_Imagem FAKE=', 0.46884528)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:45.016620')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8260 ', 'GAN acc 0.3555', 'Discriminator loss 0.5646', 'Discriminator accuracy 0.7207', 'Total loss: 1.3905', 'for batch', 0)
('GAN loss 0.8434 ', 'GAN acc 0.3320', 'Discriminator loss 0.4233', 'Discriminator accuracy 0.7266', 'Total loss: 1.2666', 'for batch', 1)
('GAN loss 0.8711 ', 'GAN acc 0.2500', 'Discriminator loss 0.5556', 'Discriminator accuracy 0.7676', 'Total loss: 1.4267', 'for batch', 2)
('GAN loss 0.8919 ', 'GAN acc 0.2383', 'Discriminator loss 0.4091', 'Discriminator accuracy 0.7852', 'Total loss: 1.3010', 'for batch', 3)
('GAN loss 0.8079 ', 'GAN acc 0.3320', 'Discriminator loss 0.4034', 'Discriminator accuracy 0.7676', 'Total loss: 1.2114', 'for batch', 4)
('GAN loss 0.7589 ', 'GAN acc 0.4141', 'Discriminator loss 0.4972', 'Discriminator accuracy 0.7227', 'Total loss: 1.2562', 'for batch', 5)
('GAN loss 0.7229 ', 'GAN acc 0.5273', 'Discriminator loss 0.5269', 'Discriminator accuracy 0.6387', 'Total loss: 1.2498', 'for batch', 6)
('GAN loss 0.7806 ', 'GAN acc 0.3906', 'Discriminator loss 0.4086', 'Discriminator accuracy 0.6973', 'Total loss: 1.1892', 'for batch', 7)
('GAN loss 0.7781 ', 'GAN acc 0.4258', 'Discriminator loss 0.4841', 'Discriminator accuracy 0.7168', 'Total loss: 1.2622', 'for batch', 8)
('GAN loss 0.7515 ', 'GAN acc 0.4219', 'Discriminator loss 0.4206', 'Discriminator accuracy 0.6973', 'Total loss: 1.1721', 'for batch', 9)
('GAN loss 0.8292 ', 'GAN acc 0.2852', 'Discriminator loss 0.3596', 'Discriminator accuracy 0.7363', 'Total loss: 1.1889', 'for batch', 10)
('GAN loss 0.8064 ', 'GAN acc 0.3438', 'Discriminator loss 0.4853', 'Discriminator accuracy 0.7656', 'Total loss: 1.2916', 'for batch', 11)
('GAN loss 0.7911 ', 'GAN acc 0.3008', 'Discriminator loss 0.4509', 'Discriminator accuracy 0.7832', 'Total loss: 1.2420', 'for batch', 12)
('GAN loss 0.8715 ', 'GAN acc 0.2031', 'Discriminator loss 0.3740', 'Discriminator accuracy 0.8066', 'Total loss: 1.2454', 'for batch', 13)
('GAN loss 0.9002 ', 'GAN acc 0.1797', 'Discriminator loss 0.3771', 'Discriminator accuracy 0.8145', 'Total loss: 1.2773', 'for batch', 14)
('GAN loss 0.9148 ', 'GAN acc 0.1602', 'Discriminator loss 0.3915', 'Discriminator accuracy 0.8398', 'Total loss: 1.3062', 'for batch', 15)
('GAN loss 0.9401 ', 'GAN acc 0.1445', 'Discriminator loss 0.3795', 'Discriminator accuracy 0.8574', 'Total loss: 1.3196', 'for batch', 16)
('GAN loss 0.8805 ', 'GAN acc 0.2070', 'Discriminator loss 0.3585', 'Discriminator accuracy 0.8301', 'Total loss: 1.2390', 'for batch', 17)
('GAN loss 0.8079 ', 'GAN acc 0.3359', 'Discriminator loss 0.4668', 'Discriminator accuracy 0.8027', 'Total loss: 1.2747', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96695065)
('DISCRIMINATOR_Imagem FAKE=', 0.45198414)
('Discriminator trained', 2, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.017348')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7986 ', 'GAN acc 0.3203', 'Discriminator loss 0.4265', 'Discriminator accuracy 0.7656', 'Total loss: 1.2251', 'for batch', 0)
('GAN loss 0.8372 ', 'GAN acc 0.2578', 'Discriminator loss 0.3867', 'Discriminator accuracy 0.7754', 'Total loss: 1.2239', 'for batch', 1)
('GAN loss 0.7792 ', 'GAN acc 0.3281', 'Discriminator loss 0.5106', 'Discriminator accuracy 0.7539', 'Total loss: 1.2898', 'for batch', 2)
('GAN loss 0.8179 ', 'GAN acc 0.3320', 'Discriminator loss 0.4182', 'Discriminator accuracy 0.7891', 'Total loss: 1.2361', 'for batch', 3)
('GAN loss 0.8112 ', 'GAN acc 0.3281', 'Discriminator loss 0.3888', 'Discriminator accuracy 0.7559', 'Total loss: 1.2000', 'for batch', 4)
('GAN loss 0.8590 ', 'GAN acc 0.2461', 'Discriminator loss 0.4158', 'Discriminator accuracy 0.7695', 'Total loss: 1.2747', 'for batch', 5)
('GAN loss 0.8829 ', 'GAN acc 0.2031', 'Discriminator loss 0.3757', 'Discriminator accuracy 0.8262', 'Total loss: 1.2586', 'for batch', 6)
('GAN loss 0.9209 ', 'GAN acc 0.1445', 'Discriminator loss 0.3170', 'Discriminator accuracy 0.8457', 'Total loss: 1.2379', 'for batch', 7)
('GAN loss 0.9321 ', 'GAN acc 0.1328', 'Discriminator loss 0.4910', 'Discriminator accuracy 0.8691', 'Total loss: 1.4231', 'for batch', 8)
('GAN loss 0.9144 ', 'GAN acc 0.1133', 'Discriminator loss 0.4512', 'Discriminator accuracy 0.8594', 'Total loss: 1.3656', 'for batch', 9)
('GAN loss 0.9062 ', 'GAN acc 0.1133', 'Discriminator loss 0.3486', 'Discriminator accuracy 0.9023', 'Total loss: 1.2548', 'for batch', 10)
('GAN loss 0.8646 ', 'GAN acc 0.1875', 'Discriminator loss 0.4374', 'Discriminator accuracy 0.8926', 'Total loss: 1.3020', 'for batch', 11)
('GAN loss 0.8776 ', 'GAN acc 0.1406', 'Discriminator loss 0.3601', 'Discriminator accuracy 0.8730', 'Total loss: 1.2377', 'for batch', 12)
('GAN loss 0.8688 ', 'GAN acc 0.1211', 'Discriminator loss 0.4184', 'Discriminator accuracy 0.8867', 'Total loss: 1.2872', 'for batch', 13)
('GAN loss 0.8873 ', 'GAN acc 0.1055', 'Discriminator loss 0.3516', 'Discriminator accuracy 0.8945', 'Total loss: 1.2389', 'for batch', 14)
('GAN loss 0.8867 ', 'GAN acc 0.0820', 'Discriminator loss 0.3908', 'Discriminator accuracy 0.9180', 'Total loss: 1.2775', 'for batch', 15)
('GAN loss 0.8975 ', 'GAN acc 0.1094', 'Discriminator loss 0.3750', 'Discriminator accuracy 0.9082', 'Total loss: 1.2724', 'for batch', 16)
('GAN loss 0.8537 ', 'GAN acc 0.1836', 'Discriminator loss 0.3101', 'Discriminator accuracy 0.9121', 'Total loss: 1.1638', 'for batch', 17)
('GAN loss 0.8328 ', 'GAN acc 0.1602', 'Discriminator loss 0.3563', 'Discriminator accuracy 0.8789', 'Total loss: 1.1891', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.9685418)
('DISCRIMINATOR_Imagem FAKE=', 0.43576011)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.680819')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8489 ', 'GAN acc 0.2109', 'Discriminator loss 0.3447', 'Discriminator accuracy 0.8496', 'Total loss: 1.1936', 'for batch', 0)
('GAN loss 0.8683 ', 'GAN acc 0.2188', 'Discriminator loss 0.3557', 'Discriminator accuracy 0.8418', 'Total loss: 1.2240', 'for batch', 1)
('GAN loss 0.9029 ', 'GAN acc 0.2188', 'Discriminator loss 0.3811', 'Discriminator accuracy 0.8828', 'Total loss: 1.2840', 'for batch', 2)
('GAN loss 0.9269 ', 'GAN acc 0.1523', 'Discriminator loss 0.3580', 'Discriminator accuracy 0.8770', 'Total loss: 1.2849', 'for batch', 3)
('GAN loss 1.0088 ', 'GAN acc 0.0664', 'Discriminator loss 0.3664', 'Discriminator accuracy 0.8984', 'Total loss: 1.3752', 'for batch', 4)
('GAN loss 1.0399 ', 'GAN acc 0.0625', 'Discriminator loss 0.3420', 'Discriminator accuracy 0.9395', 'Total loss: 1.3819', 'for batch', 5)
('GAN loss 0.9926 ', 'GAN acc 0.0781', 'Discriminator loss 0.3671', 'Discriminator accuracy 0.9453', 'Total loss: 1.3597', 'for batch', 6)
('GAN loss 1.0284 ', 'GAN acc 0.0586', 'Discriminator loss 0.2659', 'Discriminator accuracy 0.9551', 'Total loss: 1.2943', 'for batch', 7)
('GAN loss 1.0087 ', 'GAN acc 0.0391', 'Discriminator loss 0.4105', 'Discriminator accuracy 0.9434', 'Total loss: 1.4193', 'for batch', 8)
('GAN loss 1.0385 ', 'GAN acc 0.0156', 'Discriminator loss 0.3270', 'Discriminator accuracy 0.9336', 'Total loss: 1.3655', 'for batch', 9)
('GAN loss 1.1048 ', 'GAN acc 0.0273', 'Discriminator loss 0.2482', 'Discriminator accuracy 0.9629', 'Total loss: 1.3529', 'for batch', 10)
('GAN loss 1.0809 ', 'GAN acc 0.0234', 'Discriminator loss 0.3682', 'Discriminator accuracy 0.9570', 'Total loss: 1.4491', 'for batch', 11)
('GAN loss 1.0565 ', 'GAN acc 0.0195', 'Discriminator loss 0.2908', 'Discriminator accuracy 0.9707', 'Total loss: 1.3474', 'for batch', 12)
('GAN loss 1.0684 ', 'GAN acc 0.0156', 'Discriminator loss 0.2577', 'Discriminator accuracy 0.9727', 'Total loss: 1.3261', 'for batch', 13)
('GAN loss 1.0235 ', 'GAN acc 0.0469', 'Discriminator loss 0.2652', 'Discriminator accuracy 0.9570', 'Total loss: 1.2887', 'for batch', 14)
('GAN loss 1.0336 ', 'GAN acc 0.0625', 'Discriminator loss 0.3009', 'Discriminator accuracy 0.9258', 'Total loss: 1.3345', 'for batch', 15)
('GAN loss 1.0817 ', 'GAN acc 0.0391', 'Discriminator loss 0.3192', 'Discriminator accuracy 0.9277', 'Total loss: 1.4009', 'for batch', 16)
('GAN loss 1.1910 ', 'GAN acc 0.0078', 'Discriminator loss 0.2891', 'Discriminator accuracy 0.9492', 'Total loss: 1.4802', 'for batch', 17)
('GAN loss 1.2559 ', 'GAN acc 0.0078', 'Discriminator loss 0.2862', 'Discriminator accuracy 0.9688', 'Total loss: 1.5421', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95941669)
('DISCRIMINATOR_Imagem FAKE=', 0.30201125)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.321348')
----------------------------------
('Epoch', 5, 'of', 50)
('Number of batches', 19)
('GAN loss 1.2567 ', 'GAN acc 0.0117', 'Discriminator loss 0.2752', 'Discriminator accuracy 0.9570', 'Total loss: 1.5319', 'for batch', 0)
('GAN loss 1.2273 ', 'GAN acc 0.0078', 'Discriminator loss 0.2686', 'Discriminator accuracy 0.9668', 'Total loss: 1.4959', 'for batch', 1)
('GAN loss 1.1681 ', 'GAN acc 0.0117', 'Discriminator loss 0.3373', 'Discriminator accuracy 0.9570', 'Total loss: 1.5054', 'for batch', 2)
('GAN loss 1.0794 ', 'GAN acc 0.0391', 'Discriminator loss 0.2470', 'Discriminator accuracy 0.9551', 'Total loss: 1.3264', 'for batch', 3)
('GAN loss 1.0822 ', 'GAN acc 0.0508', 'Discriminator loss 0.2779', 'Discriminator accuracy 0.9492', 'Total loss: 1.3600', 'for batch', 4)
('GAN loss 1.1565 ', 'GAN acc 0.0508', 'Discriminator loss 0.2431', 'Discriminator accuracy 0.9688', 'Total loss: 1.3997', 'for batch', 5)
('GAN loss 1.1628 ', 'GAN acc 0.0234', 'Discriminator loss 0.3092', 'Discriminator accuracy 0.9531', 'Total loss: 1.4719', 'for batch', 6)
('GAN loss 1.2964 ', 'GAN acc 0.0078', 'Discriminator loss 0.2349', 'Discriminator accuracy 0.9688', 'Total loss: 1.5312', 'for batch', 7)
('GAN loss 1.1816 ', 'GAN acc 0.0430', 'Discriminator loss 0.2760', 'Discriminator accuracy 0.9570', 'Total loss: 1.4575', 'for batch', 8)
('GAN loss 1.2020 ', 'GAN acc 0.0234', 'Discriminator loss 0.2614', 'Discriminator accuracy 0.9453', 'Total loss: 1.4635', 'for batch', 9)
('GAN loss 1.2697 ', 'GAN acc 0.0469', 'Discriminator loss 0.2423', 'Discriminator accuracy 0.9355', 'Total loss: 1.5121', 'for batch', 10)
('GAN loss 1.2963 ', 'GAN acc 0.0430', 'Discriminator loss 0.3492', 'Discriminator accuracy 0.9395', 'Total loss: 1.6455', 'for batch', 11)
('GAN loss 1.2817 ', 'GAN acc 0.0195', 'Discriminator loss 0.3102', 'Discriminator accuracy 0.9414', 'Total loss: 1.5920', 'for batch', 12)
('GAN loss 1.3013 ', 'GAN acc 0.0039', 'Discriminator loss 0.2911', 'Discriminator accuracy 0.9648', 'Total loss: 1.5924', 'for batch', 13)
('GAN loss 1.4114 ', 'GAN acc 0.0117', 'Discriminator loss 0.3070', 'Discriminator accuracy 0.9570', 'Total loss: 1.7184', 'for batch', 14)
('GAN loss 1.4201 ', 'GAN acc 0.0039', 'Discriminator loss 0.2608', 'Discriminator accuracy 0.9473', 'Total loss: 1.6809', 'for batch', 15)
('GAN loss 1.5058 ', 'GAN acc 0.0000', 'Discriminator loss 0.2815', 'Discriminator accuracy 0.9551', 'Total loss: 1.7873', 'for batch', 16)
('GAN loss 1.4366 ', 'GAN acc 0.0078', 'Discriminator loss 0.2461', 'Discriminator accuracy 0.9688', 'Total loss: 1.6827', 'for batch', 17)
('GAN loss 1.3978 ', 'GAN acc 0.0039', 'Discriminator loss 0.2832', 'Discriminator accuracy 0.9707', 'Total loss: 1.6809', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95793992)
('DISCRIMINATOR_Imagem FAKE=', 0.28252721)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.851462')
----------------------------------
('Epoch', 6, 'of', 50)
('Number of batches', 19)
('GAN loss 1.3797 ', 'GAN acc 0.0000', 'Discriminator loss 0.2547', 'Discriminator accuracy 0.9609', 'Total loss: 1.6344', 'for batch', 0)
('GAN loss 1.4988 ', 'GAN acc 0.0078', 'Discriminator loss 0.2298', 'Discriminator accuracy 0.9707', 'Total loss: 1.7287', 'for batch', 1)
('GAN loss 1.5647 ', 'GAN acc 0.0000', 'Discriminator loss 0.3972', 'Discriminator accuracy 0.9629', 'Total loss: 1.9619', 'for batch', 2)
('GAN loss 1.5736 ', 'GAN acc 0.0000', 'Discriminator loss 0.2427', 'Discriminator accuracy 0.9707', 'Total loss: 1.8163', 'for batch', 3)
('GAN loss 1.6738 ', 'GAN acc 0.0000', 'Discriminator loss 0.2084', 'Discriminator accuracy 0.9668', 'Total loss: 1.8822', 'for batch', 4)
('GAN loss 1.7821 ', 'GAN acc 0.0000', 'Discriminator loss 0.2307', 'Discriminator accuracy 0.9766', 'Total loss: 2.0127', 'for batch', 5)
('GAN loss 1.7350 ', 'GAN acc 0.0039', 'Discriminator loss 0.2159', 'Discriminator accuracy 0.9648', 'Total loss: 1.9509', 'for batch', 6)
('GAN loss 1.7322 ', 'GAN acc 0.0000', 'Discriminator loss 0.1431', 'Discriminator accuracy 0.9785', 'Total loss: 1.8753', 'for batch', 7)
('GAN loss 1.7240 ', 'GAN acc 0.0000', 'Discriminator loss 0.3221', 'Discriminator accuracy 0.9551', 'Total loss: 2.0461', 'for batch', 8)
('GAN loss 1.6640 ', 'GAN acc 0.0000', 'Discriminator loss 0.2918', 'Discriminator accuracy 0.9570', 'Total loss: 1.9559', 'for batch', 9)
('GAN loss 1.5974 ', 'GAN acc 0.0039', 'Discriminator loss 0.1541', 'Discriminator accuracy 0.9844', 'Total loss: 1.7515', 'for batch', 10)
('GAN loss 1.5149 ', 'GAN acc 0.0117', 'Discriminator loss 0.2729', 'Discriminator accuracy 0.9648', 'Total loss: 1.7878', 'for batch', 11)
('GAN loss 1.5164 ', 'GAN acc 0.0078', 'Discriminator loss 0.1976', 'Discriminator accuracy 0.9727', 'Total loss: 1.7140', 'for batch', 12)
('GAN loss 1.4275 ', 'GAN acc 0.0195', 'Discriminator loss 0.2569', 'Discriminator accuracy 0.9707', 'Total loss: 1.6843', 'for batch', 13)
('GAN loss 1.4026 ', 'GAN acc 0.0234', 'Discriminator loss 0.2247', 'Discriminator accuracy 0.9609', 'Total loss: 1.6273', 'for batch', 14)
('GAN loss 1.6510 ', 'GAN acc 0.0039', 'Discriminator loss 0.2520', 'Discriminator accuracy 0.9492', 'Total loss: 1.9030', 'for batch', 15)
('GAN loss 1.7277 ', 'GAN acc 0.0039', 'Discriminator loss 0.2582', 'Discriminator accuracy 0.9590', 'Total loss: 1.9859', 'for batch', 16)
('GAN loss 1.9409 ', 'GAN acc 0.0000', 'Discriminator loss 0.1898', 'Discriminator accuracy 0.9727', 'Total loss: 2.1308', 'for batch', 17)
('GAN loss 2.1741 ', 'GAN acc 0.0000', 'Discriminator loss 0.2350', 'Discriminator accuracy 0.9688', 'Total loss: 2.4091', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95180678)
('DISCRIMINATOR_Imagem FAKE=', 0.12348698)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.408958')
----------------------------------
('Epoch', 7, 'of', 50)
('Number of batches', 19)
('GAN loss 1.9444 ', 'GAN acc 0.0000', 'Discriminator loss 0.2456', 'Discriminator accuracy 0.9629', 'Total loss: 2.1900', 'for batch', 0)
('GAN loss 1.8185 ', 'GAN acc 0.0000', 'Discriminator loss 0.1986', 'Discriminator accuracy 0.9727', 'Total loss: 2.0172', 'for batch', 1)
('GAN loss 1.5087 ', 'GAN acc 0.0117', 'Discriminator loss 0.2593', 'Discriminator accuracy 0.9648', 'Total loss: 1.7679', 'for batch', 2)
('GAN loss 1.4222 ', 'GAN acc 0.0312', 'Discriminator loss 0.2070', 'Discriminator accuracy 0.9570', 'Total loss: 1.6292', 'for batch', 3)
('GAN loss 1.6776 ', 'GAN acc 0.0039', 'Discriminator loss 0.2167', 'Discriminator accuracy 0.9570', 'Total loss: 1.8943', 'for batch', 4)
('GAN loss 1.9465 ', 'GAN acc 0.0039', 'Discriminator loss 0.1826', 'Discriminator accuracy 0.9727', 'Total loss: 2.1290', 'for batch', 5)
('GAN loss 1.8725 ', 'GAN acc 0.0000', 'Discriminator loss 0.2179', 'Discriminator accuracy 0.9648', 'Total loss: 2.0903', 'for batch', 6)
('GAN loss 2.0128 ', 'GAN acc 0.0000', 'Discriminator loss 0.1200', 'Discriminator accuracy 0.9883', 'Total loss: 2.1329', 'for batch', 7)
('GAN loss 1.8570 ', 'GAN acc 0.0000', 'Discriminator loss 0.2801', 'Discriminator accuracy 0.9551', 'Total loss: 2.1371', 'for batch', 8)
('GAN loss 1.7793 ', 'GAN acc 0.0000', 'Discriminator loss 0.1986', 'Discriminator accuracy 0.9668', 'Total loss: 1.9779', 'for batch', 9)
('GAN loss 1.8932 ', 'GAN acc 0.0000', 'Discriminator loss 0.1587', 'Discriminator accuracy 0.9863', 'Total loss: 2.0519', 'for batch', 10)
('GAN loss 1.8897 ', 'GAN acc 0.0000', 'Discriminator loss 0.2357', 'Discriminator accuracy 0.9668', 'Total loss: 2.1254', 'for batch', 11)
('GAN loss 1.8758 ', 'GAN acc 0.0000', 'Discriminator loss 0.1921', 'Discriminator accuracy 0.9746', 'Total loss: 2.0679', 'for batch', 12)
('GAN loss 1.9022 ', 'GAN acc 0.0000', 'Discriminator loss 0.1635', 'Discriminator accuracy 0.9824', 'Total loss: 2.0657', 'for batch', 13)
('GAN loss 1.9086 ', 'GAN acc 0.0039', 'Discriminator loss 0.1923', 'Discriminator accuracy 0.9688', 'Total loss: 2.1009', 'for batch', 14)
('GAN loss 1.8134 ', 'GAN acc 0.0000', 'Discriminator loss 0.2016', 'Discriminator accuracy 0.9570', 'Total loss: 2.0149', 'for batch', 15)
('GAN loss 1.7326 ', 'GAN acc 0.0234', 'Discriminator loss 0.2288', 'Discriminator accuracy 0.9473', 'Total loss: 1.9615', 'for batch', 16)
('GAN loss 1.9825 ', 'GAN acc 0.0000', 'Discriminator loss 0.1694', 'Discriminator accuracy 0.9648', 'Total loss: 2.1519', 'for batch', 17)
('GAN loss 2.0544 ', 'GAN acc 0.0000', 'Discriminator loss 0.2022', 'Discriminator accuracy 0.9766', 'Total loss: 2.2566', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95542186)
('DISCRIMINATOR_Imagem FAKE=', 0.14125699)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.926655')
----------------------------------
('Epoch', 8, 'of', 50)
('Number of batches', 19)
('GAN loss 2.1203 ', 'GAN acc 0.0039', 'Discriminator loss 0.1880', 'Discriminator accuracy 0.9688', 'Total loss: 2.3083', 'for batch', 0)
('GAN loss 2.1704 ', 'GAN acc 0.0000', 'Discriminator loss 0.1678', 'Discriminator accuracy 0.9707', 'Total loss: 2.3382', 'for batch', 1)
('GAN loss 2.0008 ', 'GAN acc 0.0000', 'Discriminator loss 0.2426', 'Discriminator accuracy 0.9648', 'Total loss: 2.2434', 'for batch', 2)
('GAN loss 1.7618 ', 'GAN acc 0.0039', 'Discriminator loss 0.1624', 'Discriminator accuracy 0.9746', 'Total loss: 1.9242', 'for batch', 3)
('GAN loss 1.8649 ', 'GAN acc 0.0000', 'Discriminator loss 0.1745', 'Discriminator accuracy 0.9727', 'Total loss: 2.0394', 'for batch', 4)
('GAN loss 2.2112 ', 'GAN acc 0.0000', 'Discriminator loss 0.1358', 'Discriminator accuracy 0.9824', 'Total loss: 2.3469', 'for batch', 5)
('GAN loss 2.3955 ', 'GAN acc 0.0000', 'Discriminator loss 0.1678', 'Discriminator accuracy 0.9707', 'Total loss: 2.5633', 'for batch', 6)
('GAN loss 2.5245 ', 'GAN acc 0.0000', 'Discriminator loss 0.0961', 'Discriminator accuracy 0.9863', 'Total loss: 2.6206', 'for batch', 7)
('GAN loss 2.3358 ', 'GAN acc 0.0000', 'Discriminator loss 0.2149', 'Discriminator accuracy 0.9609', 'Total loss: 2.5507', 'for batch', 8)
('GAN loss 2.2431 ', 'GAN acc 0.0000', 'Discriminator loss 0.1699', 'Discriminator accuracy 0.9668', 'Total loss: 2.4130', 'for batch', 9)
('GAN loss 2.2485 ', 'GAN acc 0.0000', 'Discriminator loss 0.1001', 'Discriminator accuracy 0.9922', 'Total loss: 2.3486', 'for batch', 10)
('GAN loss 2.2004 ', 'GAN acc 0.0000', 'Discriminator loss 0.1911', 'Discriminator accuracy 0.9707', 'Total loss: 2.3916', 'for batch', 11)
('GAN loss 2.0596 ', 'GAN acc 0.0000', 'Discriminator loss 0.1604', 'Discriminator accuracy 0.9805', 'Total loss: 2.2200', 'for batch', 12)
('GAN loss 1.9945 ', 'GAN acc 0.0000', 'Discriminator loss 0.1478', 'Discriminator accuracy 0.9766', 'Total loss: 2.1423', 'for batch', 13)
('GAN loss 2.2266 ', 'GAN acc 0.0000', 'Discriminator loss 0.1638', 'Discriminator accuracy 0.9746', 'Total loss: 2.3904', 'for batch', 14)
('GAN loss 2.3532 ', 'GAN acc 0.0000', 'Discriminator loss 0.1994', 'Discriminator accuracy 0.9609', 'Total loss: 2.5526', 'for batch', 15)
('GAN loss 2.3945 ', 'GAN acc 0.0000', 'Discriminator loss 0.1791', 'Discriminator accuracy 0.9648', 'Total loss: 2.5736', 'for batch', 16)
('GAN loss 2.5945 ', 'GAN acc 0.0039', 'Discriminator loss 0.1200', 'Discriminator accuracy 0.9785', 'Total loss: 2.7145', 'for batch', 17)
('GAN loss 2.7041 ', 'GAN acc 0.0000', 'Discriminator loss 0.1647', 'Discriminator accuracy 0.9746', 'Total loss: 2.8688', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95090377)
('DISCRIMINATOR_Imagem FAKE=', 0.082766727)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.512632')
----------------------------------
('Epoch', 9, 'of', 50)
('Number of batches', 19)
('GAN loss 2.4856 ', 'GAN acc 0.0039', 'Discriminator loss 0.1682', 'Discriminator accuracy 0.9668', 'Total loss: 2.6538', 'for batch', 0)
('GAN loss 2.3802 ', 'GAN acc 0.0039', 'Discriminator loss 0.1496', 'Discriminator accuracy 0.9707', 'Total loss: 2.5298', 'for batch', 1)
('GAN loss 2.2538 ', 'GAN acc 0.0000', 'Discriminator loss 0.1330', 'Discriminator accuracy 0.9766', 'Total loss: 2.3867', 'for batch', 2)
('GAN loss 1.9270 ', 'GAN acc 0.0000', 'Discriminator loss 0.1552', 'Discriminator accuracy 0.9766', 'Total loss: 2.0823', 'for batch', 3)
----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 256)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             257         dropout_5[0][0]                  
====================================================================================================
Total params: 650785
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5621 ', 'GAN acc 0.7305', 'Discriminator loss 4.8536', 'Discriminator accuracy 0.4863', 'Total loss: 5.4157', 'for batch', 0)
('GAN loss 0.2315 ', 'GAN acc 0.9961', 'Discriminator loss 1.5884', 'Discriminator accuracy 0.4199', 'Total loss: 1.8199', 'for batch', 1)
('GAN loss 0.1613 ', 'GAN acc 0.9961', 'Discriminator loss 1.0101', 'Discriminator accuracy 0.4746', 'Total loss: 1.1714', 'for batch', 2)
('GAN loss 0.1654 ', 'GAN acc 0.9961', 'Discriminator loss 1.1418', 'Discriminator accuracy 0.4824', 'Total loss: 1.3073', 'for batch', 3)
('GAN loss 0.2259 ', 'GAN acc 0.9961', 'Discriminator loss 1.1066', 'Discriminator accuracy 0.4785', 'Total loss: 1.3325', 'for batch', 4)
('GAN loss 0.3628 ', 'GAN acc 0.9375', 'Discriminator loss 0.9726', 'Discriminator accuracy 0.4902', 'Total loss: 1.3354', 'for batch', 5)
('GAN loss 0.4609 ', 'GAN acc 0.8594', 'Discriminator loss 0.7527', 'Discriminator accuracy 0.4941', 'Total loss: 1.2135', 'for batch', 6)
('GAN loss 0.6256 ', 'GAN acc 0.6562', 'Discriminator loss 0.5982', 'Discriminator accuracy 0.5586', 'Total loss: 1.2238', 'for batch', 7)
('GAN loss 0.6405 ', 'GAN acc 0.6562', 'Discriminator loss 0.6756', 'Discriminator accuracy 0.5840', 'Total loss: 1.3161', 'for batch', 8)
('GAN loss 0.5658 ', 'GAN acc 0.7227', 'Discriminator loss 0.7456', 'Discriminator accuracy 0.5293', 'Total loss: 1.3115', 'for batch', 9)
('GAN loss 0.5541 ', 'GAN acc 0.7734', 'Discriminator loss 0.5490', 'Discriminator accuracy 0.5879', 'Total loss: 1.1031', 'for batch', 10)
('GAN loss 0.6144 ', 'GAN acc 0.6641', 'Discriminator loss 0.5806', 'Discriminator accuracy 0.5586', 'Total loss: 1.1950', 'for batch', 11)
('GAN loss 0.7164 ', 'GAN acc 0.5156', 'Discriminator loss 0.5533', 'Discriminator accuracy 0.5957', 'Total loss: 1.2697', 'for batch', 12)
('GAN loss 0.7497 ', 'GAN acc 0.4336', 'Discriminator loss 0.4579', 'Discriminator accuracy 0.6719', 'Total loss: 1.2076', 'for batch', 13)
('GAN loss 0.7914 ', 'GAN acc 0.3555', 'Discriminator loss 0.4650', 'Discriminator accuracy 0.6855', 'Total loss: 1.2564', 'for batch', 14)
('GAN loss 0.8147 ', 'GAN acc 0.3516', 'Discriminator loss 0.4340', 'Discriminator accuracy 0.7070', 'Total loss: 1.2488', 'for batch', 15)
('GAN loss 0.8342 ', 'GAN acc 0.3242', 'Discriminator loss 0.4613', 'Discriminator accuracy 0.7148', 'Total loss: 1.2956', 'for batch', 16)
('GAN loss 0.8367 ', 'GAN acc 0.3633', 'Discriminator loss 0.4328', 'Discriminator accuracy 0.7246', 'Total loss: 1.2695', 'for batch', 17)
('GAN loss 0.8925 ', 'GAN acc 0.2539', 'Discriminator loss 0.4824', 'Discriminator accuracy 0.7500', 'Total loss: 1.3748', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96303821)
('DISCRIMINATOR_Imagem FAKE=', 0.45013487)
('Discriminator trained', 14, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:45.195994')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8831 ', 'GAN acc 0.2734', 'Discriminator loss 0.4935', 'Discriminator accuracy 0.7715', 'Total loss: 1.3766', 'for batch', 0)
('GAN loss 0.8711 ', 'GAN acc 0.2539', 'Discriminator loss 0.4024', 'Discriminator accuracy 0.7695', 'Total loss: 1.2735', 'for batch', 1)
('GAN loss 0.6756 ', 'GAN acc 0.5859', 'Discriminator loss 0.5862', 'Discriminator accuracy 0.6289', 'Total loss: 1.2618', 'for batch', 2)
('GAN loss 0.7296 ', 'GAN acc 0.4883', 'Discriminator loss 0.5092', 'Discriminator accuracy 0.6328', 'Total loss: 1.2388', 'for batch', 3)
('GAN loss 0.7201 ', 'GAN acc 0.4609', 'Discriminator loss 0.4773', 'Discriminator accuracy 0.6484', 'Total loss: 1.1974', 'for batch', 4)
('GAN loss 0.8296 ', 'GAN acc 0.3594', 'Discriminator loss 0.5053', 'Discriminator accuracy 0.7148', 'Total loss: 1.3349', 'for batch', 5)
('GAN loss 0.9104 ', 'GAN acc 0.2266', 'Discriminator loss 0.4557', 'Discriminator accuracy 0.7695', 'Total loss: 1.3661', 'for batch', 6)
('GAN loss 0.9040 ', 'GAN acc 0.1992', 'Discriminator loss 0.3703', 'Discriminator accuracy 0.7598', 'Total loss: 1.2743', 'for batch', 7)
('GAN loss 0.9386 ', 'GAN acc 0.2305', 'Discriminator loss 0.4408', 'Discriminator accuracy 0.8066', 'Total loss: 1.3794', 'for batch', 8)
('GAN loss 0.8646 ', 'GAN acc 0.2812', 'Discriminator loss 0.3984', 'Discriminator accuracy 0.8086', 'Total loss: 1.2630', 'for batch', 9)
('GAN loss 0.8699 ', 'GAN acc 0.2617', 'Discriminator loss 0.3517', 'Discriminator accuracy 0.7578', 'Total loss: 1.2216', 'for batch', 10)
('GAN loss 0.7066 ', 'GAN acc 0.5312', 'Discriminator loss 0.5005', 'Discriminator accuracy 0.6523', 'Total loss: 1.2071', 'for batch', 11)
('GAN loss 0.6894 ', 'GAN acc 0.5664', 'Discriminator loss 0.5424', 'Discriminator accuracy 0.6582', 'Total loss: 1.2318', 'for batch', 12)
('GAN loss 0.7437 ', 'GAN acc 0.4492', 'Discriminator loss 0.4798', 'Discriminator accuracy 0.6738', 'Total loss: 1.2235', 'for batch', 13)
('GAN loss 0.7263 ', 'GAN acc 0.4648', 'Discriminator loss 0.4673', 'Discriminator accuracy 0.7090', 'Total loss: 1.1935', 'for batch', 14)
('GAN loss 0.7530 ', 'GAN acc 0.4297', 'Discriminator loss 0.5014', 'Discriminator accuracy 0.6992', 'Total loss: 1.2544', 'for batch', 15)
('GAN loss 0.7622 ', 'GAN acc 0.4180', 'Discriminator loss 0.4809', 'Discriminator accuracy 0.7207', 'Total loss: 1.2431', 'for batch', 16)
('GAN loss 0.7812 ', 'GAN acc 0.3828', 'Discriminator loss 0.3983', 'Discriminator accuracy 0.7207', 'Total loss: 1.1795', 'for batch', 17)
('GAN loss 0.8232 ', 'GAN acc 0.2695', 'Discriminator loss 0.4622', 'Discriminator accuracy 0.7754', 'Total loss: 1.2854', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96479052)
('DISCRIMINATOR_Imagem FAKE=', 0.45548728)
('Discriminator trained', 3, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.125284')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8512 ', 'GAN acc 0.2461', 'Discriminator loss 0.4004', 'Discriminator accuracy 0.7305', 'Total loss: 1.2516', 'for batch', 0)
('GAN loss 0.9354 ', 'GAN acc 0.1016', 'Discriminator loss 0.3769', 'Discriminator accuracy 0.8105', 'Total loss: 1.3123', 'for batch', 1)
('GAN loss 0.9735 ', 'GAN acc 0.1133', 'Discriminator loss 0.4644', 'Discriminator accuracy 0.8730', 'Total loss: 1.4379', 'for batch', 2)
('GAN loss 0.9870 ', 'GAN acc 0.0898', 'Discriminator loss 0.3777', 'Discriminator accuracy 0.8887', 'Total loss: 1.3646', 'for batch', 3)
('GAN loss 0.9583 ', 'GAN acc 0.1133', 'Discriminator loss 0.3192', 'Discriminator accuracy 0.9004', 'Total loss: 1.2775', 'for batch', 4)
('GAN loss 0.9609 ', 'GAN acc 0.1211', 'Discriminator loss 0.3918', 'Discriminator accuracy 0.9004', 'Total loss: 1.3527', 'for batch', 5)
('GAN loss 0.8956 ', 'GAN acc 0.1406', 'Discriminator loss 0.3689', 'Discriminator accuracy 0.8848', 'Total loss: 1.2646', 'for batch', 6)
('GAN loss 0.9320 ', 'GAN acc 0.1133', 'Discriminator loss 0.2947', 'Discriminator accuracy 0.9004', 'Total loss: 1.2267', 'for batch', 7)
('GAN loss 0.9493 ', 'GAN acc 0.1289', 'Discriminator loss 0.4612', 'Discriminator accuracy 0.9043', 'Total loss: 1.4105', 'for batch', 8)
('GAN loss 0.9894 ', 'GAN acc 0.0547', 'Discriminator loss 0.3435', 'Discriminator accuracy 0.9004', 'Total loss: 1.3329', 'for batch', 9)
('GAN loss 0.9593 ', 'GAN acc 0.0938', 'Discriminator loss 0.2967', 'Discriminator accuracy 0.9355', 'Total loss: 1.2559', 'for batch', 10)
('GAN loss 0.9493 ', 'GAN acc 0.0625', 'Discriminator loss 0.4089', 'Discriminator accuracy 0.9180', 'Total loss: 1.3583', 'for batch', 11)
('GAN loss 0.9331 ', 'GAN acc 0.0898', 'Discriminator loss 0.3623', 'Discriminator accuracy 0.9238', 'Total loss: 1.2954', 'for batch', 12)
('GAN loss 0.9135 ', 'GAN acc 0.1172', 'Discriminator loss 0.3872', 'Discriminator accuracy 0.9375', 'Total loss: 1.3007', 'for batch', 13)
('GAN loss 0.9347 ', 'GAN acc 0.0938', 'Discriminator loss 0.3444', 'Discriminator accuracy 0.9160', 'Total loss: 1.2790', 'for batch', 14)
('GAN loss 0.9047 ', 'GAN acc 0.1055', 'Discriminator loss 0.4000', 'Discriminator accuracy 0.9004', 'Total loss: 1.3047', 'for batch', 15)
('GAN loss 0.9496 ', 'GAN acc 0.0898', 'Discriminator loss 0.3964', 'Discriminator accuracy 0.8848', 'Total loss: 1.3461', 'for batch', 16)
('GAN loss 0.9230 ', 'GAN acc 0.1328', 'Discriminator loss 0.3353', 'Discriminator accuracy 0.8633', 'Total loss: 1.2584', 'for batch', 17)
('GAN loss 0.9274 ', 'GAN acc 0.0938', 'Discriminator loss 0.3754', 'Discriminator accuracy 0.8906', 'Total loss: 1.3027', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96215969)
('DISCRIMINATOR_Imagem FAKE=', 0.41439703)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.767820')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.9307 ', 'GAN acc 0.0977', 'Discriminator loss 0.3505', 'Discriminator accuracy 0.8789', 'Total loss: 1.2812', 'for batch', 0)
('GAN loss 0.9427 ', 'GAN acc 0.0898', 'Discriminator loss 0.3581', 'Discriminator accuracy 0.9141', 'Total loss: 1.3008', 'for batch', 1)
('GAN loss 0.9088 ', 'GAN acc 0.0977', 'Discriminator loss 0.4201', 'Discriminator accuracy 0.9082', 'Total loss: 1.3289', 'for batch', 2)
('GAN loss 0.9145 ', 'GAN acc 0.1211', 'Discriminator loss 0.3549', 'Discriminator accuracy 0.9004', 'Total loss: 1.2695', 'for batch', 3)
('GAN loss 0.9480 ', 'GAN acc 0.1328', 'Discriminator loss 0.3744', 'Discriminator accuracy 0.8965', 'Total loss: 1.3223', 'for batch', 4)
('GAN loss 0.9732 ', 'GAN acc 0.0898', 'Discriminator loss 0.3186', 'Discriminator accuracy 0.9316', 'Total loss: 1.2919', 'for batch', 5)
('GAN loss 1.0029 ', 'GAN acc 0.0430', 'Discriminator loss 0.3791', 'Discriminator accuracy 0.9414', 'Total loss: 1.3820', 'for batch', 6)
('GAN loss 1.0731 ', 'GAN acc 0.0469', 'Discriminator loss 0.2596', 'Discriminator accuracy 0.9629', 'Total loss: 1.3328', 'for batch', 7)
('GAN loss 1.0217 ', 'GAN acc 0.0742', 'Discriminator loss 0.4240', 'Discriminator accuracy 0.9121', 'Total loss: 1.4457', 'for batch', 8)
('GAN loss 1.0230 ', 'GAN acc 0.0469', 'Discriminator loss 0.3207', 'Discriminator accuracy 0.9277', 'Total loss: 1.3437', 'for batch', 9)
('GAN loss 1.0608 ', 'GAN acc 0.0664', 'Discriminator loss 0.2884', 'Discriminator accuracy 0.9141', 'Total loss: 1.3492', 'for batch', 10)
('GAN loss 1.0023 ', 'GAN acc 0.0938', 'Discriminator loss 0.4403', 'Discriminator accuracy 0.9199', 'Total loss: 1.4426', 'for batch', 11)
('GAN loss 0.9502 ', 'GAN acc 0.1211', 'Discriminator loss 0.3309', 'Discriminator accuracy 0.9141', 'Total loss: 1.2811', 'for batch', 12)
('GAN loss 0.9711 ', 'GAN acc 0.1016', 'Discriminator loss 0.3075', 'Discriminator accuracy 0.9160', 'Total loss: 1.2787', 'for batch', 13)
('GAN loss 0.9967 ', 'GAN acc 0.0820', 'Discriminator loss 0.3102', 'Discriminator accuracy 0.9316', 'Total loss: 1.3069', 'for batch', 14)
----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 256)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             257         dropout_5[0][0]                  
====================================================================================================
Total params: 650785
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
----------------------------------
('Training with dataset based on class - ', 'airplane', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 2018435
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 256)           262400      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 256)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 256)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             257         dropout_5[0][0]                  
====================================================================================================
Total params: 650785
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5621 ', 'GAN acc 0.7305', 'Discriminator loss 4.8536', 'Discriminator accuracy 0.4863', 'Total loss: 5.4157', 'for batch', 0)
('GAN loss 0.2315 ', 'GAN acc 0.9961', 'Discriminator loss 1.5884', 'Discriminator accuracy 0.4199', 'Total loss: 1.8199', 'for batch', 1)
('GAN loss 0.1613 ', 'GAN acc 0.9961', 'Discriminator loss 1.0101', 'Discriminator accuracy 0.4746', 'Total loss: 1.1714', 'for batch', 2)
('GAN loss 0.1654 ', 'GAN acc 0.9961', 'Discriminator loss 1.1422', 'Discriminator accuracy 0.4824', 'Total loss: 1.3076', 'for batch', 3)
('GAN loss 0.2258 ', 'GAN acc 0.9961', 'Discriminator loss 1.1068', 'Discriminator accuracy 0.4785', 'Total loss: 1.3326', 'for batch', 4)
('GAN loss 0.3594 ', 'GAN acc 0.9414', 'Discriminator loss 0.9702', 'Discriminator accuracy 0.4883', 'Total loss: 1.3296', 'for batch', 5)
('GAN loss 0.4623 ', 'GAN acc 0.8594', 'Discriminator loss 0.7548', 'Discriminator accuracy 0.4961', 'Total loss: 1.2171', 'for batch', 6)
('GAN loss 0.6234 ', 'GAN acc 0.6562', 'Discriminator loss 0.5962', 'Discriminator accuracy 0.5469', 'Total loss: 1.2197', 'for batch', 7)
('GAN loss 0.6484 ', 'GAN acc 0.6016', 'Discriminator loss 0.6692', 'Discriminator accuracy 0.5840', 'Total loss: 1.3176', 'for batch', 8)
('GAN loss 0.5784 ', 'GAN acc 0.7383', 'Discriminator loss 0.7372', 'Discriminator accuracy 0.5430', 'Total loss: 1.3156', 'for batch', 9)
('GAN loss 0.5556 ', 'GAN acc 0.7617', 'Discriminator loss 0.5407', 'Discriminator accuracy 0.5898', 'Total loss: 1.0962', 'for batch', 10)
('GAN loss 0.6027 ', 'GAN acc 0.7070', 'Discriminator loss 0.5736', 'Discriminator accuracy 0.5645', 'Total loss: 1.1763', 'for batch', 11)
('GAN loss 0.6809 ', 'GAN acc 0.5781', 'Discriminator loss 0.5693', 'Discriminator accuracy 0.5996', 'Total loss: 1.2502', 'for batch', 12)
('GAN loss 0.6934 ', 'GAN acc 0.5469', 'Discriminator loss 0.4926', 'Discriminator accuracy 0.6152', 'Total loss: 1.1860', 'for batch', 13)
('GAN loss 0.7155 ', 'GAN acc 0.5352', 'Discriminator loss 0.5143', 'Discriminator accuracy 0.6211', 'Total loss: 1.2298', 'for batch', 14)
('GAN loss 0.7421 ', 'GAN acc 0.4961', 'Discriminator loss 0.5024', 'Discriminator accuracy 0.6074', 'Total loss: 1.2444', 'for batch', 15)
('GAN loss 0.6979 ', 'GAN acc 0.5742', 'Discriminator loss 0.5726', 'Discriminator accuracy 0.5938', 'Total loss: 1.2705', 'for batch', 16)
('GAN loss 0.7509 ', 'GAN acc 0.4570', 'Discriminator loss 0.4843', 'Discriminator accuracy 0.6582', 'Total loss: 1.2352', 'for batch', 17)
('GAN loss 0.7617 ', 'GAN acc 0.3945', 'Discriminator loss 0.5155', 'Discriminator accuracy 0.6758', 'Total loss: 1.2772', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96253979)
('DISCRIMINATOR_Imagem FAKE=', 0.47909769)
('Discriminator trained', 18, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:45.212448')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7180 ', 'GAN acc 0.5195', 'Discriminator loss 0.5520', 'Discriminator accuracy 0.6777', 'Total loss: 1.2700', 'for batch', 0)
('GAN loss 0.7115 ', 'GAN acc 0.5156', 'Discriminator loss 0.4729', 'Discriminator accuracy 0.6309', 'Total loss: 1.1844', 'for batch', 1)
('GAN loss 0.7414 ', 'GAN acc 0.4414', 'Discriminator loss 0.5505', 'Discriminator accuracy 0.6680', 'Total loss: 1.2919', 'for batch', 2)
('GAN loss 0.8056 ', 'GAN acc 0.3477', 'Discriminator loss 0.4414', 'Discriminator accuracy 0.7129', 'Total loss: 1.2470', 'for batch', 3)
('GAN loss 0.7560 ', 'GAN acc 0.4375', 'Discriminator loss 0.4348', 'Discriminator accuracy 0.7363', 'Total loss: 1.1908', 'for batch', 4)
('GAN loss 0.8134 ', 'GAN acc 0.3359', 'Discriminator loss 0.4815', 'Discriminator accuracy 0.7500', 'Total loss: 1.2948', 'for batch', 5)
('GAN loss 0.8592 ', 'GAN acc 0.2539', 'Discriminator loss 0.4492', 'Discriminator accuracy 0.7500', 'Total loss: 1.3084', 'for batch', 6)
('GAN loss 0.9237 ', 'GAN acc 0.2070', 'Discriminator loss 0.3487', 'Discriminator accuracy 0.7930', 'Total loss: 1.2724', 'for batch', 7)
('GAN loss 0.9134 ', 'GAN acc 0.2305', 'Discriminator loss 0.4621', 'Discriminator accuracy 0.7734', 'Total loss: 1.3755', 'for batch', 8)
('GAN loss 0.8306 ', 'GAN acc 0.3320', 'Discriminator loss 0.3889', 'Discriminator accuracy 0.7559', 'Total loss: 1.2195', 'for batch', 9)
('GAN loss 0.8260 ', 'GAN acc 0.3008', 'Discriminator loss 0.3684', 'Discriminator accuracy 0.7383', 'Total loss: 1.1945', 'for batch', 10)
('GAN loss 0.7846 ', 'GAN acc 0.3555', 'Discriminator loss 0.5041', 'Discriminator accuracy 0.7207', 'Total loss: 1.2887', 'for batch', 11)
('GAN loss 0.7533 ', 'GAN acc 0.4219', 'Discriminator loss 0.4783', 'Discriminator accuracy 0.7129', 'Total loss: 1.2316', 'for batch', 12)
('GAN loss 0.8514 ', 'GAN acc 0.2891', 'Discriminator loss 0.4193', 'Discriminator accuracy 0.7363', 'Total loss: 1.2706', 'for batch', 13)
('GAN loss 0.8859 ', 'GAN acc 0.1797', 'Discriminator loss 0.4143', 'Discriminator accuracy 0.7812', 'Total loss: 1.3002', 'for batch', 14)
('GAN loss 0.8978 ', 'GAN acc 0.1602', 'Discriminator loss 0.4434', 'Discriminator accuracy 0.8438', 'Total loss: 1.3411', 'for batch', 15)
('GAN loss 0.9073 ', 'GAN acc 0.1562', 'Discriminator loss 0.3997', 'Discriminator accuracy 0.8789', 'Total loss: 1.3070', 'for batch', 16)
('GAN loss 0.8952 ', 'GAN acc 0.1719', 'Discriminator loss 0.3389', 'Discriminator accuracy 0.8672', 'Total loss: 1.2341', 'for batch', 17)
('GAN loss 0.8541 ', 'GAN acc 0.1875', 'Discriminator loss 0.4667', 'Discriminator accuracy 0.8652', 'Total loss: 1.3208', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96611571)
('DISCRIMINATOR_Imagem FAKE=', 0.43501282)
('Discriminator trained', 1, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.199217')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7971 ', 'GAN acc 0.3008', 'Discriminator loss 0.3735', 'Discriminator accuracy 0.8340', 'Total loss: 1.1706', 'for batch', 0)
('GAN loss 0.7597 ', 'GAN acc 0.3750', 'Discriminator loss 0.3909', 'Discriminator accuracy 0.7676', 'Total loss: 1.1506', 'for batch', 1)
('GAN loss 0.6955 ', 'GAN acc 0.4766', 'Discriminator loss 0.5004', 'Discriminator accuracy 0.6992', 'Total loss: 1.1959', 'for batch', 2)
('GAN loss 0.7268 ', 'GAN acc 0.4297', 'Discriminator loss 0.4183', 'Discriminator accuracy 0.6719', 'Total loss: 1.1451', 'for batch', 3)
('GAN loss 0.7193 ', 'GAN acc 0.4648', 'Discriminator loss 0.4153', 'Discriminator accuracy 0.6719', 'Total loss: 1.1347', 'for batch', 4)
('GAN loss 0.7712 ', 'GAN acc 0.3516', 'Discriminator loss 0.4090', 'Discriminator accuracy 0.7227', 'Total loss: 1.1801', 'for batch', 5)
('GAN loss 0.8055 ', 'GAN acc 0.2500', 'Discriminator loss 0.3760', 'Discriminator accuracy 0.7871', 'Total loss: 1.1816', 'for batch', 6)
('GAN loss 0.8896 ', 'GAN acc 0.1602', 'Discriminator loss 0.3314', 'Discriminator accuracy 0.8203', 'Total loss: 1.2210', 'for batch', 7)
('GAN loss 0.8846 ', 'GAN acc 0.1719', 'Discriminator loss 0.4767', 'Discriminator accuracy 0.8730', 'Total loss: 1.3613', 'for batch', 8)
('GAN loss 0.8614 ', 'GAN acc 0.1797', 'Discriminator loss 0.4377', 'Discriminator accuracy 0.8730', 'Total loss: 1.2991', 'for batch', 9)
('GAN loss 0.8547 ', 'GAN acc 0.1836', 'Discriminator loss 0.3461', 'Discriminator accuracy 0.8770', 'Total loss: 1.2007', 'for batch', 10)
('GAN loss 0.8360 ', 'GAN acc 0.2070', 'Discriminator loss 0.4219', 'Discriminator accuracy 0.8730', 'Total loss: 1.2579', 'for batch', 11)
('GAN loss 0.8368 ', 'GAN acc 0.1875', 'Discriminator loss 0.3787', 'Discriminator accuracy 0.8633', 'Total loss: 1.2155', 'for batch', 12)
('GAN loss 0.8465 ', 'GAN acc 0.1914', 'Discriminator loss 0.3956', 'Discriminator accuracy 0.8652', 'Total loss: 1.2421', 'for batch', 13)
('GAN loss 0.9204 ', 'GAN acc 0.1094', 'Discriminator loss 0.3613', 'Discriminator accuracy 0.8594', 'Total loss: 1.2817', 'for batch', 14)
('GAN loss 0.8918 ', 'GAN acc 0.1523', 'Discriminator loss 0.3867', 'Discriminator accuracy 0.8711', 'Total loss: 1.2785', 'for batch', 15)
('GAN loss 0.9064 ', 'GAN acc 0.1250', 'Discriminator loss 0.3932', 'Discriminator accuracy 0.8555', 'Total loss: 1.2996', 'for batch', 16)
('GAN loss 0.8974 ', 'GAN acc 0.1172', 'Discriminator loss 0.3319', 'Discriminator accuracy 0.8906', 'Total loss: 1.2293', 'for batch', 17)
('GAN loss 0.8749 ', 'GAN acc 0.1680', 'Discriminator loss 0.3618', 'Discriminator accuracy 0.8770', 'Total loss: 1.2367', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96416253)
('DISCRIMINATOR_Imagem FAKE=', 0.42767078)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.827253')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.9194 ', 'GAN acc 0.1484', 'Discriminator loss 0.3405', 'Discriminator accuracy 0.8613', 'Total loss: 1.2600', 'for batch', 0)
('GAN loss 0.8952 ', 'GAN acc 0.1406', 'Discriminator loss 0.3670', 'Discriminator accuracy 0.8848', 'Total loss: 1.2622', 'for batch', 1)
('GAN loss 0.8966 ', 'GAN acc 0.1562', 'Discriminator loss 0.4191', 'Discriminator accuracy 0.9062', 'Total loss: 1.3157', 'for batch', 2)
('GAN loss 0.8866 ', 'GAN acc 0.1406', 'Discriminator loss 0.3770', 'Discriminator accuracy 0.8828', 'Total loss: 1.2636', 'for batch', 3)
('GAN loss 0.8826 ', 'GAN acc 0.1797', 'Discriminator loss 0.3751', 'Discriminator accuracy 0.8672', 'Total loss: 1.2576', 'for batch', 4)
('GAN loss 0.9014 ', 'GAN acc 0.1758', 'Discriminator loss 0.3415', 'Discriminator accuracy 0.8789', 'Total loss: 1.2429', 'for batch', 5)
('GAN loss 0.8754 ', 'GAN acc 0.1719', 'Discriminator loss 0.4054', 'Discriminator accuracy 0.8594', 'Total loss: 1.2808', 'for batch', 6)
('GAN loss 0.9847 ', 'GAN acc 0.1094', 'Discriminator loss 0.3041', 'Discriminator accuracy 0.8828', 'Total loss: 1.2888', 'for batch', 7)
('GAN loss 1.0535 ', 'GAN acc 0.0469', 'Discriminator loss 0.4146', 'Discriminator accuracy 0.9062', 'Total loss: 1.4681', 'for batch', 8)
('GAN loss 1.0974 ', 'GAN acc 0.0352', 'Discriminator loss 0.3209', 'Discriminator accuracy 0.9238', 'Total loss: 1.4182', 'for batch', 9)
('GAN loss 1.1498 ', 'GAN acc 0.0156', 'Discriminator loss 0.2557', 'Discriminator accuracy 0.9629', 'Total loss: 1.4055', 'for batch', 10)
('GAN loss 1.0576 ', 'GAN acc 0.0430', 'Discriminator loss 0.4588', 'Discriminator accuracy 0.9434', 'Total loss: 1.5165', 'for batch', 11)
('GAN loss 1.0202 ', 'GAN acc 0.0625', 'Discriminator loss 0.2933', 'Discriminator accuracy 0.9570', 'Total loss: 1.3135', 'for batch', 12)
('GAN loss 1.0280 ', 'GAN acc 0.0234', 'Discriminator loss 0.2887', 'Discriminator accuracy 0.9336', 'Total loss: 1.3168', 'for batch', 13)
('GAN loss 1.0328 ', 'GAN acc 0.0430', 'Discriminator loss 0.2941', 'Discriminator accuracy 0.9453', 'Total loss: 1.3269', 'for batch', 14)
('GAN loss 1.0157 ', 'GAN acc 0.0430', 'Discriminator loss 0.3091', 'Discriminator accuracy 0.9219', 'Total loss: 1.3248', 'for batch', 15)
('GAN loss 1.0380 ', 'GAN acc 0.0547', 'Discriminator loss 0.3215', 'Discriminator accuracy 0.9355', 'Total loss: 1.3594', 'for batch', 16)
('GAN loss 1.1008 ', 'GAN acc 0.0469', 'Discriminator loss 0.2962', 'Discriminator accuracy 0.9375', 'Total loss: 1.3969', 'for batch', 17)
('GAN loss 1.1084 ', 'GAN acc 0.0312', 'Discriminator loss 0.3044', 'Discriminator accuracy 0.9570', 'Total loss: 1.4128', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96224803)
('DISCRIMINATOR_Imagem FAKE=', 0.35875669)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.418445')
----------------------------------
('Epoch', 5, 'of', 50)
('Number of batches', 19)
('GAN loss 1.0960 ', 'GAN acc 0.0273', 'Discriminator loss 0.3103', 'Discriminator accuracy 0.9277', 'Total loss: 1.4063', 'for batch', 0)
('GAN loss 1.1248 ', 'GAN acc 0.0352', 'Discriminator loss 0.2906', 'Discriminator accuracy 0.9414', 'Total loss: 1.4154', 'for batch', 1)
('GAN loss 1.0611 ', 'GAN acc 0.0547', 'Discriminator loss 0.3893', 'Discriminator accuracy 0.9375', 'Total loss: 1.4504', 'for batch', 2)
('GAN loss 1.0358 ', 'GAN acc 0.0430', 'Discriminator loss 0.2797', 'Discriminator accuracy 0.9316', 'Total loss: 1.3154', 'for batch', 3)
('GAN loss 1.0702 ', 'GAN acc 0.0586', 'Discriminator loss 0.2996', 'Discriminator accuracy 0.9082', 'Total loss: 1.3698', 'for batch', 4)
('GAN loss 1.1815 ', 'GAN acc 0.0156', 'Discriminator loss 0.2791', 'Discriminator accuracy 0.9453', 'Total loss: 1.4606', 'for batch', 5)
('GAN loss 1.1940 ', 'GAN acc 0.0273', 'Discriminator loss 0.3359', 'Discriminator accuracy 0.9414', 'Total loss: 1.5298', 'for batch', 6)
('GAN loss 1.3330 ', 'GAN acc 0.0078', 'Discriminator loss 0.2193', 'Discriminator accuracy 0.9785', 'Total loss: 1.5524', 'for batch', 7)
('GAN loss 1.3111 ', 'GAN acc 0.0078', 'Discriminator loss 0.3472', 'Discriminator accuracy 0.9531', 'Total loss: 1.6583', 'for batch', 8)
('GAN loss 1.2853 ', 'GAN acc 0.0000', 'Discriminator loss 0.2636', 'Discriminator accuracy 0.9629', 'Total loss: 1.5489', 'for batch', 9)
('GAN loss 1.3796 ', 'GAN acc 0.0000', 'Discriminator loss 0.1979', 'Discriminator accuracy 0.9863', 'Total loss: 1.5775', 'for batch', 10)
('GAN loss 1.4366 ', 'GAN acc 0.0000', 'Discriminator loss 0.3397', 'Discriminator accuracy 0.9629', 'Total loss: 1.7763', 'for batch', 11)
('GAN loss 1.3761 ', 'GAN acc 0.0000', 'Discriminator loss 0.2668', 'Discriminator accuracy 0.9648', 'Total loss: 1.6430', 'for batch', 12)
('GAN loss 1.2119 ', 'GAN acc 0.0078', 'Discriminator loss 0.2696', 'Discriminator accuracy 0.9688', 'Total loss: 1.4815', 'for batch', 13)
('GAN loss 1.0840 ', 'GAN acc 0.0625', 'Discriminator loss 0.3199', 'Discriminator accuracy 0.9512', 'Total loss: 1.4038', 'for batch', 14)
('GAN loss 1.0457 ', 'GAN acc 0.0820', 'Discriminator loss 0.2769', 'Discriminator accuracy 0.9395', 'Total loss: 1.3226', 'for batch', 15)
('GAN loss 1.1275 ', 'GAN acc 0.0352', 'Discriminator loss 0.3125', 'Discriminator accuracy 0.9297', 'Total loss: 1.4400', 'for batch', 16)
('GAN loss 1.2875 ', 'GAN acc 0.0039', 'Discriminator loss 0.2421', 'Discriminator accuracy 0.9609', 'Total loss: 1.5296', 'for batch', 17)
('GAN loss 1.4362 ', 'GAN acc 0.0039', 'Discriminator loss 0.2808', 'Discriminator accuracy 0.9707', 'Total loss: 1.7171', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95783132)
('DISCRIMINATOR_Imagem FAKE=', 0.255867)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.927952')
----------------------------------
('Epoch', 6, 'of', 50)
('Number of batches', 19)
('GAN loss 1.5087 ', 'GAN acc 0.0000', 'Discriminator loss 0.2534', 'Discriminator accuracy 0.9648', 'Total loss: 1.7621', 'for batch', 0)
('GAN loss 1.5357 ', 'GAN acc 0.0000', 'Discriminator loss 0.2216', 'Discriminator accuracy 0.9707', 'Total loss: 1.7574', 'for batch', 1)
('GAN loss 1.4658 ', 'GAN acc 0.0000', 'Discriminator loss 0.3962', 'Discriminator accuracy 0.9609', 'Total loss: 1.8620', 'for batch', 2)
('GAN loss 1.4473 ', 'GAN acc 0.0000', 'Discriminator loss 0.2463', 'Discriminator accuracy 0.9727', 'Total loss: 1.6936', 'for batch', 3)
('GAN loss 1.4699 ', 'GAN acc 0.0000', 'Discriminator loss 0.2139', 'Discriminator accuracy 0.9688', 'Total loss: 1.6839', 'for batch', 4)
('GAN loss 1.4630 ', 'GAN acc 0.0000', 'Discriminator loss 0.2215', 'Discriminator accuracy 0.9785', 'Total loss: 1.6844', 'for batch', 5)
('GAN loss 1.4323 ', 'GAN acc 0.0000', 'Discriminator loss 0.2166', 'Discriminator accuracy 0.9746', 'Total loss: 1.6488', 'for batch', 6)
('GAN loss 1.4611 ', 'GAN acc 0.0078', 'Discriminator loss 0.1738', 'Discriminator accuracy 0.9824', 'Total loss: 1.6349', 'for batch', 7)
('GAN loss 1.4666 ', 'GAN acc 0.0078', 'Discriminator loss 0.3332', 'Discriminator accuracy 0.9531', 'Total loss: 1.7998', 'for batch', 8)
('GAN loss 1.4991 ', 'GAN acc 0.0117', 'Discriminator loss 0.2550', 'Discriminator accuracy 0.9629', 'Total loss: 1.7541', 'for batch', 9)
('GAN loss 1.5528 ', 'GAN acc 0.0000', 'Discriminator loss 0.1647', 'Discriminator accuracy 0.9902', 'Total loss: 1.7176', 'for batch', 10)
('GAN loss 1.6972 ', 'GAN acc 0.0000', 'Discriminator loss 0.2663', 'Discriminator accuracy 0.9707', 'Total loss: 1.9635', 'for batch', 11)
('GAN loss 1.6830 ', 'GAN acc 0.0000', 'Discriminator loss 0.1930', 'Discriminator accuracy 0.9746', 'Total loss: 1.8760', 'for batch', 12)
('GAN loss 1.5722 ', 'GAN acc 0.0039', 'Discriminator loss 0.2364', 'Discriminator accuracy 0.9785', 'Total loss: 1.8086', 'for batch', 13)
('GAN loss 1.4295 ', 'GAN acc 0.0000', 'Discriminator loss 0.2061', 'Discriminator accuracy 0.9668', 'Total loss: 1.6356', 'for batch', 14)
('GAN loss 1.4635 ', 'GAN acc 0.0078', 'Discriminator loss 0.2339', 'Discriminator accuracy 0.9629', 'Total loss: 1.6974', 'for batch', 15)
('GAN loss 1.4624 ', 'GAN acc 0.0039', 'Discriminator loss 0.2510', 'Discriminator accuracy 0.9629', 'Total loss: 1.7134', 'for batch', 16)
('GAN loss 1.6189 ', 'GAN acc 0.0000', 'Discriminator loss 0.2063', 'Discriminator accuracy 0.9746', 'Total loss: 1.8252', 'for batch', 17)
('GAN loss 1.8552 ', 'GAN acc 0.0000', 'Discriminator loss 0.2204', 'Discriminator accuracy 0.9727', 'Total loss: 2.0756', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95577699)
('DISCRIMINATOR_Imagem FAKE=', 0.1651772)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.468117')
----------------------------------
('Epoch', 7, 'of', 50)
('Number of batches', 19)
('GAN loss 1.8931 ', 'GAN acc 0.0000', 'Discriminator loss 0.1935', 'Discriminator accuracy 0.9668', 'Total loss: 2.0866', 'for batch', 0)
('GAN loss 1.8407 ', 'GAN acc 0.0000', 'Discriminator loss 0.1959', 'Discriminator accuracy 0.9727', 'Total loss: 2.0366', 'for batch', 1)
('GAN loss 1.4976 ', 'GAN acc 0.0000', 'Discriminator loss 0.3132', 'Discriminator accuracy 0.9648', 'Total loss: 1.8108', 'for batch', 2)
('GAN loss 1.3962 ', 'GAN acc 0.0156', 'Discriminator loss 0.1956', 'Discriminator accuracy 0.9746', 'Total loss: 1.5917', 'for batch', 3)
('GAN loss 1.5109 ', 'GAN acc 0.0117', 'Discriminator loss 0.2216', 'Discriminator accuracy 0.9668', 'Total loss: 1.7326', 'for batch', 4)
('GAN loss 1.6995 ', 'GAN acc 0.0000', 'Discriminator loss 0.1945', 'Discriminator accuracy 0.9766', 'Total loss: 1.8940', 'for batch', 5)
('GAN loss 1.8609 ', 'GAN acc 0.0000', 'Discriminator loss 0.1969', 'Discriminator accuracy 0.9688', 'Total loss: 2.0578', 'for batch', 6)
('GAN loss 2.1339 ', 'GAN acc 0.0000', 'Discriminator loss 0.1298', 'Discriminator accuracy 0.9863', 'Total loss: 2.2637', 'for batch', 7)
('GAN loss 2.0643 ', 'GAN acc 0.0000', 'Discriminator loss 0.2898', 'Discriminator accuracy 0.9570', 'Total loss: 2.3541', 'for batch', 8)
('GAN loss 1.9879 ', 'GAN acc 0.0000', 'Discriminator loss 0.1895', 'Discriminator accuracy 0.9648', 'Total loss: 2.1775', 'for batch', 9)
('GAN loss 2.0962 ', 'GAN acc 0.0000', 'Discriminator loss 0.1423', 'Discriminator accuracy 0.9863', 'Total loss: 2.2386', 'for batch', 10)
('GAN loss 1.9900 ', 'GAN acc 0.0000', 'Discriminator loss 0.2461', 'Discriminator accuracy 0.9629', 'Total loss: 2.2361', 'for batch', 11)
('GAN loss 1.9354 ', 'GAN acc 0.0000', 'Discriminator loss 0.1987', 'Discriminator accuracy 0.9688', 'Total loss: 2.1341', 'for batch', 12)
('GAN loss 1.7789 ', 'GAN acc 0.0039', 'Discriminator loss 0.1534', 'Discriminator accuracy 0.9785', 'Total loss: 1.9323', 'for batch', 13)
('GAN loss 1.7169 ', 'GAN acc 0.0039', 'Discriminator loss 0.1922', 'Discriminator accuracy 0.9707', 'Total loss: 1.9091', 'for batch', 14)
('GAN loss 1.7222 ', 'GAN acc 0.0000', 'Discriminator loss 0.2083', 'Discriminator accuracy 0.9551', 'Total loss: 1.9305', 'for batch', 15)
('GAN loss 1.7281 ', 'GAN acc 0.0000', 'Discriminator loss 0.2260', 'Discriminator accuracy 0.9609', 'Total loss: 1.9541', 'for batch', 16)
('GAN loss 1.9777 ', 'GAN acc 0.0000', 'Discriminator loss 0.1585', 'Discriminator accuracy 0.9766', 'Total loss: 2.1362', 'for batch', 17)
('GAN loss 2.0338 ', 'GAN acc 0.0000', 'Discriminator loss 0.2311', 'Discriminator accuracy 0.9746', 'Total loss: 2.2650', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95311725)
('DISCRIMINATOR_Imagem FAKE=', 0.12294729)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.020151')
----------------------------------
('Epoch', 8, 'of', 50)
('Number of batches', 19)
('GAN loss 2.1505 ', 'GAN acc 0.0000', 'Discriminator loss 0.2104', 'Discriminator accuracy 0.9648', 'Total loss: 2.3609', 'for batch', 0)
('GAN loss 2.1089 ', 'GAN acc 0.0000', 'Discriminator loss 0.1927', 'Discriminator accuracy 0.9707', 'Total loss: 2.3016', 'for batch', 1)
('GAN loss 1.8004 ', 'GAN acc 0.0000', 'Discriminator loss 0.2828', 'Discriminator accuracy 0.9609', 'Total loss: 2.0832', 'for batch', 2)
('GAN loss 1.6388 ', 'GAN acc 0.0078', 'Discriminator loss 0.1660', 'Discriminator accuracy 0.9727', 'Total loss: 1.8048', 'for batch', 3)
('GAN loss 1.7251 ', 'GAN acc 0.0039', 'Discriminator loss 0.2009', 'Discriminator accuracy 0.9668', 'Total loss: 1.9260', 'for batch', 4)
('GAN loss 2.1369 ', 'GAN acc 0.0000', 'Discriminator loss 0.1480', 'Discriminator accuracy 0.9844', 'Total loss: 2.2849', 'for batch', 5)
('GAN loss 2.3065 ', 'GAN acc 0.0000', 'Discriminator loss 0.1901', 'Discriminator accuracy 0.9707', 'Total loss: 2.4966', 'for batch', 6)
('GAN loss 2.5661 ', 'GAN acc 0.0000', 'Discriminator loss 0.1014', 'Discriminator accuracy 0.9844', 'Total loss: 2.6676', 'for batch', 7)
('GAN loss 2.3762 ', 'GAN acc 0.0000', 'Discriminator loss 0.2674', 'Discriminator accuracy 0.9590', 'Total loss: 2.6435', 'for batch', 8)
('GAN loss 2.1340 ', 'GAN acc 0.0000', 'Discriminator loss 0.2215', 'Discriminator accuracy 0.9551', 'Total loss: 2.3555', 'for batch', 9)
('GAN loss 2.2117 ', 'GAN acc 0.0078', 'Discriminator loss 0.0980', 'Discriminator accuracy 0.9902', 'Total loss: 2.3096', 'for batch', 10)
('GAN loss 2.0829 ', 'GAN acc 0.0000', 'Discriminator loss 0.2146', 'Discriminator accuracy 0.9688', 'Total loss: 2.2974', 'for batch', 11)
('GAN loss 2.0755 ', 'GAN acc 0.0000', 'Discriminator loss 0.1409', 'Discriminator accuracy 0.9785', 'Total loss: 2.2164', 'for batch', 12)
('GAN loss 1.8010 ', 'GAN acc 0.0000', 'Discriminator loss 0.1980', 'Discriminator accuracy 0.9766', 'Total loss: 1.9990', 'for batch', 13)
('GAN loss 1.9701 ', 'GAN acc 0.0000', 'Discriminator loss 0.1673', 'Discriminator accuracy 0.9746', 'Total loss: 2.1374', 'for batch', 14)
('GAN loss 2.2404 ', 'GAN acc 0.0000', 'Discriminator loss 0.1992', 'Discriminator accuracy 0.9609', 'Total loss: 2.4397', 'for batch', 15)
('GAN loss 2.3027 ', 'GAN acc 0.0000', 'Discriminator loss 0.1887', 'Discriminator accuracy 0.9648', 'Total loss: 2.4914', 'for batch', 16)
('GAN loss 2.3936 ', 'GAN acc 0.0000', 'Discriminator loss 0.1348', 'Discriminator accuracy 0.9785', 'Total loss: 2.5284', 'for batch', 17)
('GAN loss 2.5049 ', 'GAN acc 0.0000', 'Discriminator loss 0.1618', 'Discriminator accuracy 0.9766', 'Total loss: 2.6667', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95359087)
('DISCRIMINATOR_Imagem FAKE=', 0.08702869)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.503110')
----------------------------------
('Epoch', 9, 'of', 50)
('Number of batches', 19)
('GAN loss 2.3613 ', 'GAN acc 0.0000', 'Discriminator loss 0.1581', 'Discriminator accuracy 0.9668', 'Total loss: 2.5194', 'for batch', 0)
('GAN loss 2.2819 ', 'GAN acc 0.0000', 'Discriminator loss 0.1423', 'Discriminator accuracy 0.9727', 'Total loss: 2.4243', 'for batch', 1)
('GAN loss 1.9388 ', 'GAN acc 0.0000', 'Discriminator loss 0.1406', 'Discriminator accuracy 0.9727', 'Total loss: 2.0794', 'for batch', 2)
('GAN loss 1.7143 ', 'GAN acc 0.0156', 'Discriminator loss 0.1631', 'Discriminator accuracy 0.9766', 'Total loss: 1.8774', 'for batch', 3)
('GAN loss 2.0247 ', 'GAN acc 0.0000', 'Discriminator loss 0.1908', 'Discriminator accuracy 0.9648', 'Total loss: 2.2155', 'for batch', 4)
('GAN loss 2.4127 ', 'GAN acc 0.0000', 'Discriminator loss 0.1428', 'Discriminator accuracy 0.9805', 'Total loss: 2.5554', 'for batch', 5)
('GAN loss 2.2893 ', 'GAN acc 0.0000', 'Discriminator loss 0.1573', 'Discriminator accuracy 0.9707', 'Total loss: 2.4466', 'for batch', 6)
('GAN loss 2.4882 ', 'GAN acc 0.0000', 'Discriminator loss 0.0980', 'Discriminator accuracy 0.9883', 'Total loss: 2.5863', 'for batch', 7)
('GAN loss 2.3425 ', 'GAN acc 0.0000', 'Discriminator loss 0.1924', 'Discriminator accuracy 0.9648', 'Total loss: 2.5349', 'for batch', 8)
('GAN loss 2.5308 ', 'GAN acc 0.0000', 'Discriminator loss 0.1343', 'Discriminator accuracy 0.9727', 'Total loss: 2.6651', 'for batch', 9)
('GAN loss 2.6903 ', 'GAN acc 0.0000', 'Discriminator loss 0.1132', 'Discriminator accuracy 0.9883', 'Total loss: 2.8034', 'for batch', 10)
('GAN loss 2.2539 ', 'GAN acc 0.0000', 'Discriminator loss 0.1865', 'Discriminator accuracy 0.9688', 'Total loss: 2.4404', 'for batch', 11)
('GAN loss 2.2591 ', 'GAN acc 0.0000', 'Discriminator loss 0.1017', 'Discriminator accuracy 0.9844', 'Total loss: 2.3608', 'for batch', 12)
('GAN loss 2.5348 ', 'GAN acc 0.0000', 'Discriminator loss 0.1022', 'Discriminator accuracy 0.9863', 'Total loss: 2.6370', 'for batch', 13)
('GAN loss 2.6418 ', 'GAN acc 0.0000', 'Discriminator loss 0.1467', 'Discriminator accuracy 0.9707', 'Total loss: 2.7884', 'for batch', 14)
('GAN loss 2.6093 ', 'GAN acc 0.0000', 'Discriminator loss 0.1573', 'Discriminator accuracy 0.9648', 'Total loss: 2.7666', 'for batch', 15)
('GAN loss 2.5817 ', 'GAN acc 0.0000', 'Discriminator loss 0.1839', 'Discriminator accuracy 0.9629', 'Total loss: 2.7657', 'for batch', 16)
('GAN loss 2.6956 ', 'GAN acc 0.0000', 'Discriminator loss 0.1053', 'Discriminator accuracy 0.9785', 'Total loss: 2.8009', 'for batch', 17)
('GAN loss 2.3326 ', 'GAN acc 0.0000', 'Discriminator loss 0.1482', 'Discriminator accuracy 0.9746', 'Total loss: 2.4808', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95794219)
('DISCRIMINATOR_Imagem FAKE=', 0.088852257)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.982268')
----------------------------------
('Epoch', 10, 'of', 50)
('Number of batches', 19)
('GAN loss 2.1524 ', 'GAN acc 0.0039', 'Discriminator loss 0.1689', 'Discriminator accuracy 0.9688', 'Total loss: 2.3213', 'for batch', 0)
('GAN loss 2.1533 ', 'GAN acc 0.0000', 'Discriminator loss 0.1660', 'Discriminator accuracy 0.9727', 'Total loss: 2.3192', 'for batch', 1)
('GAN loss 2.4068 ', 'GAN acc 0.0000', 'Discriminator loss 0.1265', 'Discriminator accuracy 0.9824', 'Total loss: 2.5333', 'for batch', 2)
('GAN loss 2.7520 ', 'GAN acc 0.0000', 'Discriminator loss 0.1503', 'Discriminator accuracy 0.9766', 'Total loss: 2.9023', 'for batch', 3)
('GAN loss 2.9163 ', 'GAN acc 0.0000', 'Discriminator loss 0.1469', 'Discriminator accuracy 0.9707', 'Total loss: 3.0632', 'for batch', 4)
('GAN loss 2.8520 ', 'GAN acc 0.0000', 'Discriminator loss 0.1082', 'Discriminator accuracy 0.9785', 'Total loss: 2.9602', 'for batch', 5)
('GAN loss 2.7611 ', 'GAN acc 0.0000', 'Discriminator loss 0.1268', 'Discriminator accuracy 0.9727', 'Total loss: 2.8879', 'for batch', 6)
('GAN loss 2.8894 ', 'GAN acc 0.0000', 'Discriminator loss 0.0744', 'Discriminator accuracy 0.9883', 'Total loss: 2.9637', 'for batch', 7)
('GAN loss 1.9628 ', 'GAN acc 0.0000', 'Discriminator loss 0.2729', 'Discriminator accuracy 0.9551', 'Total loss: 2.2356', 'for batch', 8)
('GAN loss 1.8368 ', 'GAN acc 0.0039', 'Discriminator loss 0.1610', 'Discriminator accuracy 0.9746', 'Total loss: 1.9978', 'for batch', 9)
('GAN loss 2.3902 ', 'GAN acc 0.0000', 'Discriminator loss 0.1372', 'Discriminator accuracy 0.9863', 'Total loss: 2.5274', 'for batch', 10)
('GAN loss 2.8189 ', 'GAN acc 0.0000', 'Discriminator loss 0.1557', 'Discriminator accuracy 0.9746', 'Total loss: 2.9746', 'for batch', 11)
('GAN loss 2.9833 ', 'GAN acc 0.0000', 'Discriminator loss 0.1234', 'Discriminator accuracy 0.9824', 'Total loss: 3.1067', 'for batch', 12)
('GAN loss 2.6982 ', 'GAN acc 0.0000', 'Discriminator loss 0.0998', 'Discriminator accuracy 0.9824', 'Total loss: 2.7980', 'for batch', 13)
('GAN loss 2.5442 ', 'GAN acc 0.0000', 'Discriminator loss 0.1356', 'Discriminator accuracy 0.9707', 'Total loss: 2.6798', 'for batch', 14)
('GAN loss 2.6477 ', 'GAN acc 0.0000', 'Discriminator loss 0.1370', 'Discriminator accuracy 0.9688', 'Total loss: 2.7847', 'for batch', 15)
('GAN loss 2.6295 ', 'GAN acc 0.0000', 'Discriminator loss 0.1531', 'Discriminator accuracy 0.9648', 'Total loss: 2.7826', 'for batch', 16)
('GAN loss 2.8983 ', 'GAN acc 0.0000', 'Discriminator loss 0.0931', 'Discriminator accuracy 0.9805', 'Total loss: 2.9913', 'for batch', 17)
('GAN loss 2.9138 ', 'GAN acc 0.0000', 'Discriminator loss 0.1182', 'Discriminator accuracy 0.9766', 'Total loss: 3.0320', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95419919)
('DISCRIMINATOR_Imagem FAKE=', 0.047942329)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.484839')
----------------------------------
('Epoch', 11, 'of', 50)
('Number of batches', 19)
('GAN loss 2.8530 ', 'GAN acc 0.0000', 'Discriminator loss 0.1383', 'Discriminator accuracy 0.9668', 'Total loss: 2.9913', 'for batch', 0)
('GAN loss 2.6640 ', 'GAN acc 0.0000', 'Discriminator loss 0.1078', 'Discriminator accuracy 0.9746', 'Total loss: 2.7718', 'for batch', 1)
('GAN loss 2.5503 ', 'GAN acc 0.0000', 'Discriminator loss 0.1036', 'Discriminator accuracy 0.9805', 'Total loss: 2.6539', 'for batch', 2)
('GAN loss 2.5258 ', 'GAN acc 0.0000', 'Discriminator loss 0.1152', 'Discriminator accuracy 0.9824', 'Total loss: 2.6410', 'for batch', 3)
('GAN loss 2.5477 ', 'GAN acc 0.0000', 'Discriminator loss 0.1416', 'Discriminator accuracy 0.9707', 'Total loss: 2.6893', 'for batch', 4)
('GAN loss 2.7333 ', 'GAN acc 0.0000', 'Discriminator loss 0.0992', 'Discriminator accuracy 0.9844', 'Total loss: 2.8325', 'for batch', 5)
('GAN loss 2.8842 ', 'GAN acc 0.0000', 'Discriminator loss 0.1155', 'Discriminator accuracy 0.9785', 'Total loss: 2.9997', 'for batch', 6)
('GAN loss 3.0962 ', 'GAN acc 0.0000', 'Discriminator loss 0.0729', 'Discriminator accuracy 0.9883', 'Total loss: 3.1690', 'for batch', 7)
('GAN loss 2.2337 ', 'GAN acc 0.0117', 'Discriminator loss 0.1765', 'Discriminator accuracy 0.9629', 'Total loss: 2.4102', 'for batch', 8)
('GAN loss 2.1104 ', 'GAN acc 0.0039', 'Discriminator loss 0.1451', 'Discriminator accuracy 0.9766', 'Total loss: 2.2556', 'for batch', 9)
('GAN loss 2.5291 ', 'GAN acc 0.0000', 'Discriminator loss 0.1166', 'Discriminator accuracy 0.9902', 'Total loss: 2.6457', 'for batch', 10)
('GAN loss 3.1900 ', 'GAN acc 0.0000', 'Discriminator loss 0.1079', 'Discriminator accuracy 0.9785', 'Total loss: 3.2979', 'for batch', 11)
('GAN loss 3.6694 ', 'GAN acc 0.0000', 'Discriminator loss 0.0713', 'Discriminator accuracy 0.9844', 'Total loss: 3.7408', 'for batch', 12)
('GAN loss 3.4580 ', 'GAN acc 0.0000', 'Discriminator loss 0.0838', 'Discriminator accuracy 0.9805', 'Total loss: 3.5418', 'for batch', 13)
('GAN loss 3.1829 ', 'GAN acc 0.0000', 'Discriminator loss 0.1527', 'Discriminator accuracy 0.9707', 'Total loss: 3.3357', 'for batch', 14)
('GAN loss 3.0582 ', 'GAN acc 0.0000', 'Discriminator loss 0.1306', 'Discriminator accuracy 0.9668', 'Total loss: 3.1889', 'for batch', 15)
('GAN loss 2.7273 ', 'GAN acc 0.0000', 'Discriminator loss 0.1395', 'Discriminator accuracy 0.9648', 'Total loss: 2.8669', 'for batch', 16)
('GAN loss 3.0614 ', 'GAN acc 0.0000', 'Discriminator loss 0.0977', 'Discriminator accuracy 0.9805', 'Total loss: 3.1591', 'for batch', 17)
('GAN loss 2.8227 ', 'GAN acc 0.0000', 'Discriminator loss 0.0836', 'Discriminator accuracy 0.9824', 'Total loss: 2.9063', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95760143)
('DISCRIMINATOR_Imagem FAKE=', 0.055949524)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.024590')
----------------------------------
('Epoch', 12, 'of', 50)
('Number of batches', 19)
('GAN loss 2.8544 ', 'GAN acc 0.0000', 'Discriminator loss 0.1183', 'Discriminator accuracy 0.9727', 'Total loss: 2.9727', 'for batch', 0)
('GAN loss 2.9410 ', 'GAN acc 0.0000', 'Discriminator loss 0.0983', 'Discriminator accuracy 0.9766', 'Total loss: 3.0394', 'for batch', 1)
('GAN loss 2.6999 ', 'GAN acc 0.0039', 'Discriminator loss 0.1036', 'Discriminator accuracy 0.9785', 'Total loss: 2.8035', 'for batch', 2)
('GAN loss 2.8783 ', 'GAN acc 0.0000', 'Discriminator loss 0.1024', 'Discriminator accuracy 0.9805', 'Total loss: 2.9806', 'for batch', 3)
('GAN loss 3.1726 ', 'GAN acc 0.0000', 'Discriminator loss 0.1243', 'Discriminator accuracy 0.9727', 'Total loss: 3.2970', 'for batch', 4)
('GAN loss 3.1312 ', 'GAN acc 0.0000', 'Discriminator loss 0.1008', 'Discriminator accuracy 0.9824', 'Total loss: 3.2320', 'for batch', 5)
('GAN loss 3.0755 ', 'GAN acc 0.0000', 'Discriminator loss 0.1123', 'Discriminator accuracy 0.9746', 'Total loss: 3.1878', 'for batch', 6)
('GAN loss 3.1955 ', 'GAN acc 0.0000', 'Discriminator loss 0.0673', 'Discriminator accuracy 0.9883', 'Total loss: 3.2628', 'for batch', 7)
('GAN loss 2.5075 ', 'GAN acc 0.0039', 'Discriminator loss 0.1303', 'Discriminator accuracy 0.9707', 'Total loss: 2.6378', 'for batch', 8)
('GAN loss 2.5969 ', 'GAN acc 0.0000', 'Discriminator loss 0.1473', 'Discriminator accuracy 0.9688', 'Total loss: 2.7442', 'for batch', 9)
('GAN loss 3.3688 ', 'GAN acc 0.0000', 'Discriminator loss 0.0861', 'Discriminator accuracy 0.9844', 'Total loss: 3.4549', 'for batch', 10)
('GAN loss 3.0672 ', 'GAN acc 0.0000', 'Discriminator loss 0.1149', 'Discriminator accuracy 0.9766', 'Total loss: 3.1820', 'for batch', 11)
('GAN loss 3.3581 ', 'GAN acc 0.0000', 'Discriminator loss 0.0717', 'Discriminator accuracy 0.9863', 'Total loss: 3.4298', 'for batch', 12)
('GAN loss 3.7170 ', 'GAN acc 0.0000', 'Discriminator loss 0.0622', 'Discriminator accuracy 0.9863', 'Total loss: 3.7792', 'for batch', 13)
('GAN loss 3.8242 ', 'GAN acc 0.0000', 'Discriminator loss 0.0997', 'Discriminator accuracy 0.9746', 'Total loss: 3.9238', 'for batch', 14)
('GAN loss 3.8912 ', 'GAN acc 0.0000', 'Discriminator loss 0.1236', 'Discriminator accuracy 0.9668', 'Total loss: 4.0149', 'for batch', 15)
('GAN loss 3.4979 ', 'GAN acc 0.0000', 'Discriminator loss 0.1153', 'Discriminator accuracy 0.9668', 'Total loss: 3.6132', 'for batch', 16)
('GAN loss 3.3945 ', 'GAN acc 0.0000', 'Discriminator loss 0.0765', 'Discriminator accuracy 0.9785', 'Total loss: 3.4710', 'for batch', 17)
('GAN loss 3.3139 ', 'GAN acc 0.0000', 'Discriminator loss 0.0816', 'Discriminator accuracy 0.9844', 'Total loss: 3.3955', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95592201)
('DISCRIMINATOR_Imagem FAKE=', 0.034830678)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.470962')
----------------------------------
('Epoch', 13, 'of', 50)
('Number of batches', 19)
('GAN loss 3.0835 ', 'GAN acc 0.0000', 'Discriminator loss 0.1111', 'Discriminator accuracy 0.9727', 'Total loss: 3.1946', 'for batch', 0)
('GAN loss 2.9428 ', 'GAN acc 0.0000', 'Discriminator loss 0.0901', 'Discriminator accuracy 0.9766', 'Total loss: 3.0329', 'for batch', 1)
('GAN loss 2.5053 ', 'GAN acc 0.0039', 'Discriminator loss 0.1030', 'Discriminator accuracy 0.9746', 'Total loss: 2.6083', 'for batch', 2)
('GAN loss 2.6704 ', 'GAN acc 0.0000', 'Discriminator loss 0.1129', 'Discriminator accuracy 0.9785', 'Total loss: 2.7833', 'for batch', 3)
('GAN loss 3.2498 ', 'GAN acc 0.0000', 'Discriminator loss 0.1265', 'Discriminator accuracy 0.9707', 'Total loss: 3.3762', 'for batch', 4)
('GAN loss 3.5901 ', 'GAN acc 0.0000', 'Discriminator loss 0.0807', 'Discriminator accuracy 0.9863', 'Total loss: 3.6707', 'for batch', 5)
('GAN loss 3.5555 ', 'GAN acc 0.0000', 'Discriminator loss 0.0892', 'Discriminator accuracy 0.9766', 'Total loss: 3.6447', 'for batch', 6)
('GAN loss 3.5850 ', 'GAN acc 0.0000', 'Discriminator loss 0.0560', 'Discriminator accuracy 0.9883', 'Total loss: 3.6409', 'for batch', 7)
('GAN loss 3.0832 ', 'GAN acc 0.0000', 'Discriminator loss 0.1489', 'Discriminator accuracy 0.9688', 'Total loss: 3.2321', 'for batch', 8)
('GAN loss 2.9002 ', 'GAN acc 0.0000', 'Discriminator loss 0.1068', 'Discriminator accuracy 0.9707', 'Total loss: 3.0070', 'for batch', 9)
('GAN loss 2.8709 ', 'GAN acc 0.0000', 'Discriminator loss 0.0639', 'Discriminator accuracy 0.9902', 'Total loss: 2.9348', 'for batch', 10)
('GAN loss 2.7983 ', 'GAN acc 0.0000', 'Discriminator loss 0.1084', 'Discriminator accuracy 0.9785', 'Total loss: 2.9068', 'for batch', 11)
('GAN loss 3.0415 ', 'GAN acc 0.0000', 'Discriminator loss 0.0833', 'Discriminator accuracy 0.9844', 'Total loss: 3.1247', 'for batch', 12)
('GAN loss 3.4251 ', 'GAN acc 0.0000', 'Discriminator loss 0.0650', 'Discriminator accuracy 0.9883', 'Total loss: 3.4901', 'for batch', 13)
('GAN loss 3.6252 ', 'GAN acc 0.0000', 'Discriminator loss 0.0987', 'Discriminator accuracy 0.9746', 'Total loss: 3.7238', 'for batch', 14)
('GAN loss 3.5758 ', 'GAN acc 0.0000', 'Discriminator loss 0.1233', 'Discriminator accuracy 0.9668', 'Total loss: 3.6991', 'for batch', 15)
('GAN loss 3.2854 ', 'GAN acc 0.0000', 'Discriminator loss 0.1275', 'Discriminator accuracy 0.9668', 'Total loss: 3.4129', 'for batch', 16)
('GAN loss 3.2142 ', 'GAN acc 0.0000', 'Discriminator loss 0.0766', 'Discriminator accuracy 0.9805', 'Total loss: 3.2908', 'for batch', 17)
('GAN loss 3.1220 ', 'GAN acc 0.0000', 'Discriminator loss 0.0690', 'Discriminator accuracy 0.9824', 'Total loss: 3.1909', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95895523)
('DISCRIMINATOR_Imagem FAKE=', 0.043747131)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.010861')
----------------------------------
('Epoch', 14, 'of', 50)
('Number of batches', 19)
('GAN loss 3.0187 ', 'GAN acc 0.0000', 'Discriminator loss 0.1018', 'Discriminator accuracy 0.9707', 'Total loss: 3.1205', 'for batch', 0)
('GAN loss 3.0055 ', 'GAN acc 0.0000', 'Discriminator loss 0.0873', 'Discriminator accuracy 0.9785', 'Total loss: 3.0927', 'for batch', 1)
('GAN loss 2.9982 ', 'GAN acc 0.0000', 'Discriminator loss 0.0715', 'Discriminator accuracy 0.9863', 'Total loss: 3.0697', 'for batch', 2)
('GAN loss 3.1565 ', 'GAN acc 0.0000', 'Discriminator loss 0.0772', 'Discriminator accuracy 0.9805', 'Total loss: 3.2337', 'for batch', 3)
('GAN loss 3.2537 ', 'GAN acc 0.0000', 'Discriminator loss 0.1039', 'Discriminator accuracy 0.9746', 'Total loss: 3.3576', 'for batch', 4)
('GAN loss 3.3609 ', 'GAN acc 0.0000', 'Discriminator loss 0.0595', 'Discriminator accuracy 0.9883', 'Total loss: 3.4204', 'for batch', 5)
('GAN loss 3.4939 ', 'GAN acc 0.0000', 'Discriminator loss 0.0781', 'Discriminator accuracy 0.9805', 'Total loss: 3.5720', 'for batch', 6)
('GAN loss 3.5495 ', 'GAN acc 0.0000', 'Discriminator loss 0.0539', 'Discriminator accuracy 0.9883', 'Total loss: 3.6034', 'for batch', 7)
('GAN loss 3.5432 ', 'GAN acc 0.0000', 'Discriminator loss 0.0996', 'Discriminator accuracy 0.9727', 'Total loss: 3.6428', 'for batch', 8)
('GAN loss 3.4078 ', 'GAN acc 0.0000', 'Discriminator loss 0.0982', 'Discriminator accuracy 0.9727', 'Total loss: 3.5059', 'for batch', 9)
('GAN loss 3.3896 ', 'GAN acc 0.0000', 'Discriminator loss 0.0440', 'Discriminator accuracy 0.9922', 'Total loss: 3.4337', 'for batch', 10)
('GAN loss 3.3739 ', 'GAN acc 0.0000', 'Discriminator loss 0.0830', 'Discriminator accuracy 0.9785', 'Total loss: 3.4569', 'for batch', 11)
('GAN loss 3.3701 ', 'GAN acc 0.0000', 'Discriminator loss 0.0599', 'Discriminator accuracy 0.9844', 'Total loss: 3.4300', 'for batch', 12)
('GAN loss 3.3166 ', 'GAN acc 0.0000', 'Discriminator loss 0.0590', 'Discriminator accuracy 0.9883', 'Total loss: 3.3756', 'for batch', 13)
('GAN loss 3.3008 ', 'GAN acc 0.0000', 'Discriminator loss 0.0980', 'Discriminator accuracy 0.9727', 'Total loss: 3.3988', 'for batch', 14)
('GAN loss 3.0653 ', 'GAN acc 0.0000', 'Discriminator loss 0.1142', 'Discriminator accuracy 0.9688', 'Total loss: 3.1795', 'for batch', 15)
('GAN loss 3.0583 ', 'GAN acc 0.0000', 'Discriminator loss 0.1110', 'Discriminator accuracy 0.9707', 'Total loss: 3.1693', 'for batch', 16)
('GAN loss 3.0436 ', 'GAN acc 0.0000', 'Discriminator loss 0.0908', 'Discriminator accuracy 0.9785', 'Total loss: 3.1344', 'for batch', 17)
('GAN loss 3.0257 ', 'GAN acc 0.0000', 'Discriminator loss 0.0551', 'Discriminator accuracy 0.9922', 'Total loss: 3.0808', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96053296)
('DISCRIMINATOR_Imagem FAKE=', 0.050930969)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.547489')
----------------------------------
('Epoch', 15, 'of', 50)
('Number of batches', 19)
('GAN loss 3.1228 ', 'GAN acc 0.0000', 'Discriminator loss 0.0935', 'Discriminator accuracy 0.9766', 'Total loss: 3.2163', 'for batch', 0)
('GAN loss 3.0352 ', 'GAN acc 0.0000', 'Discriminator loss 0.0918', 'Discriminator accuracy 0.9766', 'Total loss: 3.1271', 'for batch', 1)
('GAN loss 3.0021 ', 'GAN acc 0.0000', 'Discriminator loss 0.0621', 'Discriminator accuracy 0.9883', 'Total loss: 3.0643', 'for batch', 2)
('GAN loss 2.9926 ', 'GAN acc 0.0000', 'Discriminator loss 0.0783', 'Discriminator accuracy 0.9805', 'Total loss: 3.0709', 'for batch', 3)
('GAN loss 3.0141 ', 'GAN acc 0.0000', 'Discriminator loss 0.1017', 'Discriminator accuracy 0.9766', 'Total loss: 3.1158', 'for batch', 4)
('GAN loss 3.0155 ', 'GAN acc 0.0000', 'Discriminator loss 0.0696', 'Discriminator accuracy 0.9863', 'Total loss: 3.0851', 'for batch', 5)
('GAN loss 3.0032 ', 'GAN acc 0.0000', 'Discriminator loss 0.0850', 'Discriminator accuracy 0.9805', 'Total loss: 3.0882', 'for batch', 6)
('GAN loss 3.0136 ', 'GAN acc 0.0000', 'Discriminator loss 0.0627', 'Discriminator accuracy 0.9883', 'Total loss: 3.0763', 'for batch', 7)
('GAN loss 3.0321 ', 'GAN acc 0.0000', 'Discriminator loss 0.1039', 'Discriminator accuracy 0.9746', 'Total loss: 3.1360', 'for batch', 8)
('GAN loss 3.0025 ', 'GAN acc 0.0000', 'Discriminator loss 0.1030', 'Discriminator accuracy 0.9727', 'Total loss: 3.1055', 'for batch', 9)
('GAN loss 3.0291 ', 'GAN acc 0.0000', 'Discriminator loss 0.0533', 'Discriminator accuracy 0.9922', 'Total loss: 3.0824', 'for batch', 10)
('GAN loss 3.0353 ', 'GAN acc 0.0000', 'Discriminator loss 0.0889', 'Discriminator accuracy 0.9785', 'Total loss: 3.1242', 'for batch', 11)
('GAN loss 3.0514 ', 'GAN acc 0.0000', 'Discriminator loss 0.0675', 'Discriminator accuracy 0.9863', 'Total loss: 3.1189', 'for batch', 12)
('GAN loss 3.1218 ', 'GAN acc 0.0000', 'Discriminator loss 0.0624', 'Discriminator accuracy 0.9883', 'Total loss: 3.1841', 'for batch', 13)
('GAN loss 3.1241 ', 'GAN acc 0.0000', 'Discriminator loss 0.1053', 'Discriminator accuracy 0.9746', 'Total loss: 3.2294', 'for batch', 14)
('GAN loss 3.1064 ', 'GAN acc 0.0000', 'Discriminator loss 0.1291', 'Discriminator accuracy 0.9688', 'Total loss: 3.2355', 'for batch', 15)
('GAN loss 3.0892 ', 'GAN acc 0.0000', 'Discriminator loss 0.1142', 'Discriminator accuracy 0.9707', 'Total loss: 3.2035', 'for batch', 16)
('GAN loss 3.0947 ', 'GAN acc 0.0000', 'Discriminator loss 0.0846', 'Discriminator accuracy 0.9785', 'Total loss: 3.1793', 'for batch', 17)
('GAN loss 3.1216 ', 'GAN acc 0.0000', 'Discriminator loss 0.0515', 'Discriminator accuracy 0.9922', 'Total loss: 3.1732', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96112078)
('DISCRIMINATOR_Imagem FAKE=', 0.053013813)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.983696')
----------------------------------
('Epoch', 16, 'of', 50)
('Number of batches', 19)
('GAN loss 3.1596 ', 'GAN acc 0.0000', 'Discriminator loss 0.1001', 'Discriminator accuracy 0.9766', 'Total loss: 3.2597', 'for batch', 0)
('GAN loss 3.1685 ', 'GAN acc 0.0000', 'Discriminator loss 0.0888', 'Discriminator accuracy 0.9805', 'Total loss: 3.2573', 'for batch', 1)
('GAN loss 3.1211 ', 'GAN acc 0.0000', 'Discriminator loss 0.0657', 'Discriminator accuracy 0.9844', 'Total loss: 3.1868', 'for batch', 2)
('GAN loss 3.1261 ', 'GAN acc 0.0000', 'Discriminator loss 0.0800', 'Discriminator accuracy 0.9824', 'Total loss: 3.2061', 'for batch', 3)
('GAN loss 3.1542 ', 'GAN acc 0.0000', 'Discriminator loss 0.0981', 'Discriminator accuracy 0.9766', 'Total loss: 3.2523', 'for batch', 4)
('GAN loss 3.1523 ', 'GAN acc 0.0000', 'Discriminator loss 0.0620', 'Discriminator accuracy 0.9883', 'Total loss: 3.2143', 'for batch', 5)
('GAN loss 3.1688 ', 'GAN acc 0.0000', 'Discriminator loss 0.0825', 'Discriminator accuracy 0.9824', 'Total loss: 3.2514', 'for batch', 6)
('GAN loss 3.2114 ', 'GAN acc 0.0000', 'Discriminator loss 0.0610', 'Discriminator accuracy 0.9883', 'Total loss: 3.2725', 'for batch', 7)
('GAN loss 3.1701 ', 'GAN acc 0.0000', 'Discriminator loss 0.1085', 'Discriminator accuracy 0.9727', 'Total loss: 3.2786', 'for batch', 8)
('GAN loss 3.2218 ', 'GAN acc 0.0000', 'Discriminator loss 0.1013', 'Discriminator accuracy 0.9766', 'Total loss: 3.3231', 'for batch', 9)
('GAN loss 3.2097 ', 'GAN acc 0.0000', 'Discriminator loss 0.0497', 'Discriminator accuracy 0.9922', 'Total loss: 3.2594', 'for batch', 10)
('GAN loss 3.2504 ', 'GAN acc 0.0000', 'Discriminator loss 0.0844', 'Discriminator accuracy 0.9805', 'Total loss: 3.3348', 'for batch', 11)
('GAN loss 3.2799 ', 'GAN acc 0.0000', 'Discriminator loss 0.0647', 'Discriminator accuracy 0.9863', 'Total loss: 3.3446', 'for batch', 12)
('GAN loss 3.2758 ', 'GAN acc 0.0000', 'Discriminator loss 0.0598', 'Discriminator accuracy 0.9883', 'Total loss: 3.3356', 'for batch', 13)
('GAN loss 3.3103 ', 'GAN acc 0.0000', 'Discriminator loss 0.1072', 'Discriminator accuracy 0.9746', 'Total loss: 3.4175', 'for batch', 14)
('GAN loss 3.2748 ', 'GAN acc 0.0000', 'Discriminator loss 0.1138', 'Discriminator accuracy 0.9707', 'Total loss: 3.3886', 'for batch', 15)
('GAN loss 3.2122 ', 'GAN acc 0.0000', 'Discriminator loss 0.1177', 'Discriminator accuracy 0.9707', 'Total loss: 3.3300', 'for batch', 16)
('GAN loss 3.2564 ', 'GAN acc 0.0000', 'Discriminator loss 0.0852', 'Discriminator accuracy 0.9805', 'Total loss: 3.3417', 'for batch', 17)
('GAN loss 3.2724 ', 'GAN acc 0.0000', 'Discriminator loss 0.0453', 'Discriminator accuracy 0.9922', 'Total loss: 3.3177', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96150804)
('DISCRIMINATOR_Imagem FAKE=', 0.045187876)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.038636')
----------------------------------
('Epoch', 17, 'of', 50)
('Number of batches', 19)
('GAN loss 3.2516 ', 'GAN acc 0.0000', 'Discriminator loss 0.0975', 'Discriminator accuracy 0.9766', 'Total loss: 3.3491', 'for batch', 0)
('GAN loss 3.2487 ', 'GAN acc 0.0000', 'Discriminator loss 0.0856', 'Discriminator accuracy 0.9805', 'Total loss: 3.3344', 'for batch', 1)
('GAN loss 3.2599 ', 'GAN acc 0.0000', 'Discriminator loss 0.0582', 'Discriminator accuracy 0.9863', 'Total loss: 3.3182', 'for batch', 2)
('GAN loss 3.2649 ', 'GAN acc 0.0000', 'Discriminator loss 0.0704', 'Discriminator accuracy 0.9824', 'Total loss: 3.3353', 'for batch', 3)
('GAN loss 3.3047 ', 'GAN acc 0.0000', 'Discriminator loss 0.1000', 'Discriminator accuracy 0.9766', 'Total loss: 3.4047', 'for batch', 4)
('GAN loss 3.2971 ', 'GAN acc 0.0000', 'Discriminator loss 0.0634', 'Discriminator accuracy 0.9883', 'Total loss: 3.3606', 'for batch', 5)
('GAN loss 3.2953 ', 'GAN acc 0.0000', 'Discriminator loss 0.0808', 'Discriminator accuracy 0.9824', 'Total loss: 3.3761', 'for batch', 6)
('GAN loss 3.3134 ', 'GAN acc 0.0000', 'Discriminator loss 0.0596', 'Discriminator accuracy 0.9883', 'Total loss: 3.3730', 'for batch', 7)
('GAN loss 3.3164 ', 'GAN acc 0.0000', 'Discriminator loss 0.1084', 'Discriminator accuracy 0.9746', 'Total loss: 3.4248', 'for batch', 8)
('GAN loss 3.2823 ', 'GAN acc 0.0000', 'Discriminator loss 0.0996', 'Discriminator accuracy 0.9766', 'Total loss: 3.3818', 'for batch', 9)
('GAN loss 3.3117 ', 'GAN acc 0.0000', 'Discriminator loss 0.0475', 'Discriminator accuracy 0.9922', 'Total loss: 3.3592', 'for batch', 10)
('GAN loss 3.3409 ', 'GAN acc 0.0000', 'Discriminator loss 0.0852', 'Discriminator accuracy 0.9805', 'Total loss: 3.4261', 'for batch', 11)
('GAN loss 3.3216 ', 'GAN acc 0.0000', 'Discriminator loss 0.0655', 'Discriminator accuracy 0.9863', 'Total loss: 3.3871', 'for batch', 12)
('GAN loss 3.3618 ', 'GAN acc 0.0000', 'Discriminator loss 0.0613', 'Discriminator accuracy 0.9883', 'Total loss: 3.4231', 'for batch', 13)
('GAN loss 3.3409 ', 'GAN acc 0.0000', 'Discriminator loss 0.1027', 'Discriminator accuracy 0.9746', 'Total loss: 3.4436', 'for batch', 14)
('GAN loss 3.3260 ', 'GAN acc 0.0000', 'Discriminator loss 0.1105', 'Discriminator accuracy 0.9707', 'Total loss: 3.4365', 'for batch', 15)
('GAN loss 3.2875 ', 'GAN acc 0.0000', 'Discriminator loss 0.1147', 'Discriminator accuracy 0.9707', 'Total loss: 3.4022', 'for batch', 16)
('GAN loss 3.2793 ', 'GAN acc 0.0000', 'Discriminator loss 0.0810', 'Discriminator accuracy 0.9805', 'Total loss: 3.3603', 'for batch', 17)
('GAN loss 3.2868 ', 'GAN acc 0.0000', 'Discriminator loss 0.0466', 'Discriminator accuracy 0.9922', 'Total loss: 3.3333', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.96171278)
('DISCRIMINATOR_Imagem FAKE=', 0.042913809)
('Discriminator trained', 0, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.561563')
----------------------------------
('Epoch', 18, 'of', 50)
('Number of batches', 19)
('GAN loss 3.3157 ', 'GAN acc 0.0000', 'Discriminator loss 0.0945', 'Discriminator accuracy 0.9766', 'Total loss: 3.4101', 'for batch', 0)
('GAN loss 3.2952 ', 'GAN acc 0.0000', 'Discriminator loss 0.0860', 'Discriminator accuracy 0.9805', 'Total loss: 3.3813', 'for batch', 1)

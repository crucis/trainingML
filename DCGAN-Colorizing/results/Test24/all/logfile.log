----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_11 (Sequential)       (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_10 (Sequential)       (None, 1)             0           lambda_4[0][0]                   
====================================================================================================
Total params: 1596531
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_40 (Convolution2D) (None, 16, 16, 16)    304         convolution2d_input_7[0][0]      
____________________________________________________________________________________________________
leakyrelu_40 (LeakyReLU)         (None, 16, 16, 16)    0           convolution2d_40[0][0]           
____________________________________________________________________________________________________
dropout_16 (Dropout)             (None, 16, 16, 16)    0           leakyrelu_40[0][0]               
____________________________________________________________________________________________________
convolution2d_41 (Convolution2D) (None, 32, 8, 8)      4640        dropout_16[0][0]                 
____________________________________________________________________________________________________
leakyrelu_41 (LeakyReLU)         (None, 32, 8, 8)      0           convolution2d_41[0][0]           
____________________________________________________________________________________________________
dropout_17 (Dropout)             (None, 32, 8, 8)      0           leakyrelu_41[0][0]               
____________________________________________________________________________________________________
convolution2d_42 (Convolution2D) (None, 64, 4, 4)      18496       dropout_17[0][0]                 
____________________________________________________________________________________________________
leakyrelu_42 (LeakyReLU)         (None, 64, 4, 4)      0           convolution2d_42[0][0]           
____________________________________________________________________________________________________
dropout_18 (Dropout)             (None, 64, 4, 4)      0           leakyrelu_42[0][0]               
____________________________________________________________________________________________________
convolution2d_43 (Convolution2D) (None, 128, 2, 2)     73856       dropout_18[0][0]                 
____________________________________________________________________________________________________
leakyrelu_43 (LeakyReLU)         (None, 128, 2, 2)     0           convolution2d_43[0][0]           
____________________________________________________________________________________________________
dropout_19 (Dropout)             (None, 128, 2, 2)     0           leakyrelu_43[0][0]               
____________________________________________________________________________________________________
flatten_4 (Flatten)              (None, 512)           0           dropout_19[0][0]                 
____________________________________________________________________________________________________
dense_7 (Dense)                  (None, 256)           131328      flatten_4[0][0]                  
____________________________________________________________________________________________________
leakyrelu_44 (LeakyReLU)         (None, 256)           0           dense_7[0][0]                    
____________________________________________________________________________________________________
dropout_20 (Dropout)             (None, 256)           0           leakyrelu_44[0][0]               
____________________________________________________________________________________________________
dense_8 (Dense)                  (None, 1)             257         dropout_20[0][0]                 
====================================================================================================
Total params: 228881
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
('GAN loss 1.0943 ', 'GAN acc 0.1836', 'Discriminator loss 0.6858', 'Discriminator accuracy 0.5234', 'Total loss: 1.7801', 'for batch', 0)
('GAN loss 0.9648 ', 'GAN acc 0.2891', 'Discriminator loss 0.6973', 'Discriminator accuracy 0.5254', 'Total loss: 1.6621', 'for batch', 1)
('GAN loss 0.9391 ', 'GAN acc 0.3164', 'Discriminator loss 0.7241', 'Discriminator accuracy 0.4961', 'Total loss: 1.6632', 'for batch', 2)
('GAN loss 0.9778 ', 'GAN acc 0.2578', 'Discriminator loss 0.7013', 'Discriminator accuracy 0.5430', 'Total loss: 1.6791', 'for batch', 3)
('GAN loss 1.0080 ', 'GAN acc 0.2148', 'Discriminator loss 0.6392', 'Discriminator accuracy 0.6133', 'Total loss: 1.6472', 'for batch', 4)
('GAN loss 1.0092 ', 'GAN acc 0.2148', 'Discriminator loss 0.6246', 'Discriminator accuracy 0.6719', 'Total loss: 1.6339', 'for batch', 5)
('GAN loss 0.9613 ', 'GAN acc 0.1914', 'Discriminator loss 0.5900', 'Discriminator accuracy 0.7324', 'Total loss: 1.5514', 'for batch', 6)
('GAN loss 0.9969 ', 'GAN acc 0.1641', 'Discriminator loss 0.5796', 'Discriminator accuracy 0.7695', 'Total loss: 1.5765', 'for batch', 7)
('GAN loss 1.0261 ', 'GAN acc 0.1719', 'Discriminator loss 0.5697', 'Discriminator accuracy 0.7695', 'Total loss: 1.5957', 'for batch', 8)
('GAN loss 1.0648 ', 'GAN acc 0.1836', 'Discriminator loss 0.5466', 'Discriminator accuracy 0.7988', 'Total loss: 1.6114', 'for batch', 9)
('GAN loss 1.0422 ', 'GAN acc 0.1641', 'Discriminator loss 0.5769', 'Discriminator accuracy 0.7949', 'Total loss: 1.6191', 'for batch', 10)
('GAN loss 1.0613 ', 'GAN acc 0.1758', 'Discriminator loss 0.5784', 'Discriminator accuracy 0.7637', 'Total loss: 1.6397', 'for batch', 11)
('GAN loss 0.9853 ', 'GAN acc 0.2031', 'Discriminator loss 0.5644', 'Discriminator accuracy 0.7812', 'Total loss: 1.5497', 'for batch', 12)
('GAN loss 1.0636 ', 'GAN acc 0.2070', 'Discriminator loss 0.5509', 'Discriminator accuracy 0.7988', 'Total loss: 1.6145', 'for batch', 13)
('GAN loss 1.0257 ', 'GAN acc 0.1914', 'Discriminator loss 0.5880', 'Discriminator accuracy 0.7773', 'Total loss: 1.6137', 'for batch', 14)
('GAN loss 1.0697 ', 'GAN acc 0.1875', 'Discriminator loss 0.5424', 'Discriminator accuracy 0.8164', 'Total loss: 1.6121', 'for batch', 15)
('GAN loss 1.0858 ', 'GAN acc 0.1992', 'Discriminator loss 0.5555', 'Discriminator accuracy 0.7754', 'Total loss: 1.6413', 'for batch', 16)
('GAN loss 1.2120 ', 'GAN acc 0.1641', 'Discriminator loss 0.5455', 'Discriminator accuracy 0.7949', 'Total loss: 1.7574', 'for batch', 17)
('GAN loss 1.1816 ', 'GAN acc 0.2070', 'Discriminator loss 0.5167', 'Discriminator accuracy 0.8086', 'Total loss: 1.6982', 'for batch', 18)
('GAN loss 1.3671 ', 'GAN acc 0.1406', 'Discriminator loss 0.5607', 'Discriminator accuracy 0.7246', 'Total loss: 1.9278', 'for batch', 19)
('GAN loss 1.2903 ', 'GAN acc 0.1953', 'Discriminator loss 0.5680', 'Discriminator accuracy 0.6934', 'Total loss: 1.8583', 'for batch', 20)
('GAN loss 1.4078 ', 'GAN acc 0.1602', 'Discriminator loss 0.5541', 'Discriminator accuracy 0.7285', 'Total loss: 1.9619', 'for batch', 21)
('GAN loss 1.2720 ', 'GAN acc 0.1953', 'Discriminator loss 0.5746', 'Discriminator accuracy 0.6797', 'Total loss: 1.8466', 'for batch', 22)
('GAN loss 1.5711 ', 'GAN acc 0.1328', 'Discriminator loss 0.5601', 'Discriminator accuracy 0.7246', 'Total loss: 2.1313', 'for batch', 23)
('GAN loss 1.5523 ', 'GAN acc 0.1445', 'Discriminator loss 0.5643', 'Discriminator accuracy 0.7227', 'Total loss: 2.1166', 'for batch', 24)
('GAN loss 1.5538 ', 'GAN acc 0.1406', 'Discriminator loss 0.6232', 'Discriminator accuracy 0.5918', 'Total loss: 2.1770', 'for batch', 25)
('GAN loss 1.4718 ', 'GAN acc 0.1875', 'Discriminator loss 0.6001', 'Discriminator accuracy 0.6445', 'Total loss: 2.0718', 'for batch', 26)
('GAN loss 1.4593 ', 'GAN acc 0.1875', 'Discriminator loss 0.5858', 'Discriminator accuracy 0.6777', 'Total loss: 2.0451', 'for batch', 27)
('GAN loss 1.1970 ', 'GAN acc 0.3438', 'Discriminator loss 0.6313', 'Discriminator accuracy 0.5898', 'Total loss: 1.8283', 'for batch', 28)
('GAN loss 1.6336 ', 'GAN acc 0.1211', 'Discriminator loss 0.6174', 'Discriminator accuracy 0.6621', 'Total loss: 2.2511', 'for batch', 29)
('GAN loss 1.2810 ', 'GAN acc 0.2148', 'Discriminator loss 0.5991', 'Discriminator accuracy 0.6113', 'Total loss: 1.8801', 'for batch', 30)
('GAN loss 1.1959 ', 'GAN acc 0.2344', 'Discriminator loss 0.6160', 'Discriminator accuracy 0.6191', 'Total loss: 1.8119', 'for batch', 31)
('GAN loss 1.2042 ', 'GAN acc 0.2539', 'Discriminator loss 0.5925', 'Discriminator accuracy 0.6504', 'Total loss: 1.7967', 'for batch', 32)
('GAN loss 1.3473 ', 'GAN acc 0.1914', 'Discriminator loss 0.6012', 'Discriminator accuracy 0.6777', 'Total loss: 1.9485', 'for batch', 33)
('GAN loss 1.2899 ', 'GAN acc 0.1914', 'Discriminator loss 0.6003', 'Discriminator accuracy 0.6562', 'Total loss: 1.8902', 'for batch', 34)
('GAN loss 1.2012 ', 'GAN acc 0.2031', 'Discriminator loss 0.6073', 'Discriminator accuracy 0.6289', 'Total loss: 1.8084', 'for batch', 35)
('GAN loss 1.0912 ', 'GAN acc 0.2656', 'Discriminator loss 0.6388', 'Discriminator accuracy 0.6133', 'Total loss: 1.7299', 'for batch', 36)
('GAN loss 1.0597 ', 'GAN acc 0.2617', 'Discriminator loss 0.6310', 'Discriminator accuracy 0.6152', 'Total loss: 1.6907', 'for batch', 37)
('GAN loss 1.1166 ', 'GAN acc 0.2695', 'Discriminator loss 0.6068', 'Discriminator accuracy 0.6484', 'Total loss: 1.7234', 'for batch', 38)
('GAN loss 1.1384 ', 'GAN acc 0.1914', 'Discriminator loss 0.6601', 'Discriminator accuracy 0.5586', 'Total loss: 1.7984', 'for batch', 39)
('GAN loss 1.0369 ', 'GAN acc 0.2656', 'Discriminator loss 0.6239', 'Discriminator accuracy 0.6113', 'Total loss: 1.6608', 'for batch', 40)
('GAN loss 1.1265 ', 'GAN acc 0.2070', 'Discriminator loss 0.6347', 'Discriminator accuracy 0.6172', 'Total loss: 1.7612', 'for batch', 41)
('GAN loss 0.9390 ', 'GAN acc 0.3242', 'Discriminator loss 0.6287', 'Discriminator accuracy 0.6211', 'Total loss: 1.5677', 'for batch', 42)
('GAN loss 0.9935 ', 'GAN acc 0.2930', 'Discriminator loss 0.6285', 'Discriminator accuracy 0.6562', 'Total loss: 1.6221', 'for batch', 43)
('GAN loss 1.0088 ', 'GAN acc 0.2734', 'Discriminator loss 0.6372', 'Discriminator accuracy 0.5996', 'Total loss: 1.6459', 'for batch', 44)
('GAN loss 1.0198 ', 'GAN acc 0.2422', 'Discriminator loss 0.6565', 'Discriminator accuracy 0.5820', 'Total loss: 1.6763', 'for batch', 45)
('GAN loss 0.9549 ', 'GAN acc 0.3516', 'Discriminator loss 0.6412', 'Discriminator accuracy 0.6289', 'Total loss: 1.5961', 'for batch', 46)
('GAN loss 0.8431 ', 'GAN acc 0.3711', 'Discriminator loss 0.6521', 'Discriminator accuracy 0.6055', 'Total loss: 1.4952', 'for batch', 47)
('GAN loss 0.9473 ', 'GAN acc 0.2930', 'Discriminator loss 0.6443', 'Discriminator accuracy 0.6250', 'Total loss: 1.5915', 'for batch', 48)
('GAN loss 0.9574 ', 'GAN acc 0.3008', 'Discriminator loss 0.6172', 'Discriminator accuracy 0.6562', 'Total loss: 1.5746', 'for batch', 49)
('GAN loss 0.8651 ', 'GAN acc 0.4141', 'Discriminator loss 0.6167', 'Discriminator accuracy 0.6504', 'Total loss: 1.4817', 'for batch', 50)
('GAN loss 0.9892 ', 'GAN acc 0.2812', 'Discriminator loss 0.6464', 'Discriminator accuracy 0.6250', 'Total loss: 1.6356', 'for batch', 51)
('GAN loss 0.9558 ', 'GAN acc 0.2812', 'Discriminator loss 0.6415', 'Discriminator accuracy 0.6016', 'Total loss: 1.5973', 'for batch', 52)
('GAN loss 0.8211 ', 'GAN acc 0.4102', 'Discriminator loss 0.6301', 'Discriminator accuracy 0.6328', 'Total loss: 1.4512', 'for batch', 53)
('GAN loss 0.8595 ', 'GAN acc 0.3984', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.6016', 'Total loss: 1.5162', 'for batch', 54)
('GAN loss 0.8620 ', 'GAN acc 0.4102', 'Discriminator loss 0.6573', 'Discriminator accuracy 0.6016', 'Total loss: 1.5193', 'for batch', 55)
('GAN loss 0.8594 ', 'GAN acc 0.3594', 'Discriminator loss 0.6552', 'Discriminator accuracy 0.5801', 'Total loss: 1.5145', 'for batch', 56)
('GAN loss 0.8207 ', 'GAN acc 0.4414', 'Discriminator loss 0.6511', 'Discriminator accuracy 0.5781', 'Total loss: 1.4718', 'for batch', 57)
('GAN loss 0.7989 ', 'GAN acc 0.4766', 'Discriminator loss 0.6495', 'Discriminator accuracy 0.6113', 'Total loss: 1.4485', 'for batch', 58)
('GAN loss 0.8476 ', 'GAN acc 0.3750', 'Discriminator loss 0.6122', 'Discriminator accuracy 0.6719', 'Total loss: 1.4598', 'for batch', 59)
('GAN loss 0.9360 ', 'GAN acc 0.2930', 'Discriminator loss 0.6128', 'Discriminator accuracy 0.6582', 'Total loss: 1.5488', 'for batch', 60)
('GAN loss 0.8590 ', 'GAN acc 0.3984', 'Discriminator loss 0.6277', 'Discriminator accuracy 0.6348', 'Total loss: 1.4867', 'for batch', 61)
('GAN loss 0.9191 ', 'GAN acc 0.3086', 'Discriminator loss 0.6185', 'Discriminator accuracy 0.6602', 'Total loss: 1.5376', 'for batch', 62)
('GAN loss 0.8876 ', 'GAN acc 0.3789', 'Discriminator loss 0.6286', 'Discriminator accuracy 0.6445', 'Total loss: 1.5162', 'for batch', 63)
('GAN loss 0.8717 ', 'GAN acc 0.4141', 'Discriminator loss 0.6626', 'Discriminator accuracy 0.5977', 'Total loss: 1.5344', 'for batch', 64)
('GAN loss 0.8072 ', 'GAN acc 0.4375', 'Discriminator loss 0.6439', 'Discriminator accuracy 0.6035', 'Total loss: 1.4511', 'for batch', 65)
('GAN loss 0.8901 ', 'GAN acc 0.4805', 'Discriminator loss 0.6349', 'Discriminator accuracy 0.6348', 'Total loss: 1.5250', 'for batch', 66)
('GAN loss 1.0943 ', 'GAN acc 0.2773', 'Discriminator loss 0.5781', 'Discriminator accuracy 0.7168', 'Total loss: 1.6724', 'for batch', 67)
('GAN loss 0.9401 ', 'GAN acc 0.3945', 'Discriminator loss 0.5818', 'Discriminator accuracy 0.7148', 'Total loss: 1.5219', 'for batch', 68)
('GAN loss 1.0125 ', 'GAN acc 0.3281', 'Discriminator loss 0.5638', 'Discriminator accuracy 0.7285', 'Total loss: 1.5762', 'for batch', 69)
('GAN loss 1.0418 ', 'GAN acc 0.2930', 'Discriminator loss 0.6103', 'Discriminator accuracy 0.6797', 'Total loss: 1.6521', 'for batch', 70)
('GAN loss 1.0002 ', 'GAN acc 0.3398', 'Discriminator loss 0.6030', 'Discriminator accuracy 0.6758', 'Total loss: 1.6031', 'for batch', 71)
('GAN loss 0.8618 ', 'GAN acc 0.4531', 'Discriminator loss 0.6029', 'Discriminator accuracy 0.6523', 'Total loss: 1.4647', 'for batch', 72)
('GAN loss 1.0166 ', 'GAN acc 0.3125', 'Discriminator loss 0.6279', 'Discriminator accuracy 0.6504', 'Total loss: 1.6445', 'for batch', 73)
('GAN loss 1.0732 ', 'GAN acc 0.4336', 'Discriminator loss 0.6016', 'Discriminator accuracy 0.6562', 'Total loss: 1.6748', 'for batch', 74)
('GAN loss 1.1097 ', 'GAN acc 0.3281', 'Discriminator loss 0.5877', 'Discriminator accuracy 0.6855', 'Total loss: 1.6974', 'for batch', 75)
('GAN loss 1.1879 ', 'GAN acc 0.2344', 'Discriminator loss 0.6031', 'Discriminator accuracy 0.6387', 'Total loss: 1.7909', 'for batch', 76)
('GAN loss 0.9787 ', 'GAN acc 0.3828', 'Discriminator loss 0.6232', 'Discriminator accuracy 0.6113', 'Total loss: 1.6019', 'for batch', 77)
('GAN loss 0.9510 ', 'GAN acc 0.3828', 'Discriminator loss 0.6539', 'Discriminator accuracy 0.6055', 'Total loss: 1.6049', 'for batch', 78)
('GAN loss 0.9375 ', 'GAN acc 0.3711', 'Discriminator loss 0.6697', 'Discriminator accuracy 0.5605', 'Total loss: 1.6072', 'for batch', 79)
('GAN loss 0.7566 ', 'GAN acc 0.5664', 'Discriminator loss 0.6591', 'Discriminator accuracy 0.5605', 'Total loss: 1.4157', 'for batch', 80)
('GAN loss 0.8869 ', 'GAN acc 0.3984', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.5918', 'Total loss: 1.5517', 'for batch', 81)
('GAN loss 0.8751 ', 'GAN ac
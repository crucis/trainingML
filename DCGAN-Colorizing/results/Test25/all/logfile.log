----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_11 (Sequential)       (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_10 (Sequential)       (None, 1)             0           lambda_4[0][0]                   
====================================================================================================
Total params: 1887107
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_40 (Convolution2D) (None, 32, 16, 16)    608         convolution2d_input_7[0][0]      
____________________________________________________________________________________________________
leakyrelu_40 (LeakyReLU)         (None, 32, 16, 16)    0           convolution2d_40[0][0]           
____________________________________________________________________________________________________
dropout_16 (Dropout)             (None, 32, 16, 16)    0           leakyrelu_40[0][0]               
____________________________________________________________________________________________________
convolution2d_41 (Convolution2D) (None, 64, 8, 8)      18496       dropout_16[0][0]                 
____________________________________________________________________________________________________
leakyrelu_41 (LeakyReLU)         (None, 64, 8, 8)      0           convolution2d_41[0][0]           
____________________________________________________________________________________________________
dropout_17 (Dropout)             (None, 64, 8, 8)      0           leakyrelu_41[0][0]               
____________________________________________________________________________________________________
convolution2d_42 (Convolution2D) (None, 128, 4, 4)     73856       dropout_17[0][0]                 
____________________________________________________________________________________________________
leakyrelu_42 (LeakyReLU)         (None, 128, 4, 4)     0           convolution2d_42[0][0]           
____________________________________________________________________________________________________
dropout_18 (Dropout)             (None, 128, 4, 4)     0           leakyrelu_42[0][0]               
____________________________________________________________________________________________________
convolution2d_43 (Convolution2D) (None, 256, 2, 2)     295168      dropout_18[0][0]                 
____________________________________________________________________________________________________
leakyrelu_43 (LeakyReLU)         (None, 256, 2, 2)     0           convolution2d_43[0][0]           
____________________________________________________________________________________________________
dropout_19 (Dropout)             (None, 256, 2, 2)     0           leakyrelu_43[0][0]               
____________________________________________________________________________________________________
flatten_4 (Flatten)              (None, 1024)          0           dropout_19[0][0]                 
____________________________________________________________________________________________________
dense_7 (Dense)                  (None, 128)           131200      flatten_4[0][0]                  
____________________________________________________________________________________________________
leakyrelu_44 (LeakyReLU)         (None, 128)           0           dense_7[0][0]                    
____________________________________________________________________________________________________
dropout_20 (Dropout)             (None, 128)           0           leakyrelu_44[0][0]               
____________________________________________________________________________________________________
dense_8 (Dense)                  (None, 1)             129         dropout_20[0][0]                 
====================================================================================================
Total params: 519457
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
('GAN loss 0.7836 ', 'GAN acc 0.4023', 'Discriminator loss 0.7001', 'Discriminator accuracy 0.5820', 'Total loss: 1.4837', 'for batch', 0)
('GAN loss 0.8273 ', 'GAN acc 0.3555', 'Discriminator loss 0.6933', 'Discriminator accuracy 0.5723', 'Total loss: 1.5206', 'for batch', 1)
('GAN loss 0.9431 ', 'GAN acc 0.2383', 'Discriminator loss 0.6480', 'Discriminator accuracy 0.6309', 'Total loss: 1.5911', 'for batch', 2)
('GAN loss 1.1022 ', 'GAN acc 0.1328', 'Discriminator loss 0.5994', 'Discriminator accuracy 0.7051', 'Total loss: 1.7016', 'for batch', 3)
('GAN loss 1.2482 ', 'GAN acc 0.1016', 'Discriminator loss 0.5379', 'Discriminator accuracy 0.7871', 'Total loss: 1.7860', 'for batch', 4)
('GAN loss 1.4725 ', 'GAN acc 0.0781', 'Discriminator loss 0.5311', 'Discriminator accuracy 0.7832', 'Total loss: 2.0036', 'for batch', 5)
('GAN loss 1.3791 ', 'GAN acc 0.1562', 'Discriminator loss 0.5058', 'Discriminator accuracy 0.7949', 'Total loss: 1.8849', 'for batch', 6)
('GAN loss 1.6562 ', 'GAN acc 0.0820', 'Discriminator loss 0.5316', 'Discriminator accuracy 0.8008', 'Total loss: 2.1877', 'for batch', 7)
('GAN loss 1.3994 ', 'GAN acc 0.1953', 'Discriminator loss 0.5566', 'Discriminator accuracy 0.6875', 'Total loss: 1.9560', 'for batch', 8)
('GAN loss 1.9233 ', 'GAN acc 0.0430', 'Discriminator loss 0.5719', 'Discriminator accuracy 0.7520', 'Total loss: 2.4952', 'for batch', 9)
('GAN loss 0.9496 ', 'GAN acc 0.3906', 'Discriminator loss 0.6108', 'Discriminator accuracy 0.5977', 'Total loss: 1.5604', 'for batch', 10)
('GAN loss 1.7015 ', 'GAN acc 0.0820', 'Discriminator loss 0.6205', 'Discriminator accuracy 0.7441', 'Total loss: 2.3219', 'for batch', 11)
('GAN loss 1.2893 ', 'GAN acc 0.1992', 'Discriminator loss 0.5801', 'Discriminator accuracy 0.6016', 'Total loss: 1.8694', 'for batch', 12)
('GAN loss 1.3333 ', 'GAN acc 0.2148', 'Discriminator loss 0.5654', 'Discriminator accuracy 0.7148', 'Total loss: 1.8987', 'for batch', 13)
('GAN loss 1.4808 ', 'GAN acc 0.1602', 'Discriminator loss 0.5973', 'Discriminator accuracy 0.6660', 'Total loss: 2.0781', 'for batch', 14)
('GAN loss 1.2662 ', 'GAN acc 0.2656', 'Discriminator loss 0.5914', 'Discriminator accuracy 0.6074', 'Total loss: 1.8575', 'for batch', 15)
('GAN loss 1.4811 ', 'GAN acc 0.1016', 'Discriminator loss 0.5885', 'Discriminator accuracy 0.6758', 'Total loss: 2.0696', 'for batch', 16)
('GAN loss 1.1448 ', 'GAN acc 0.2656', 'Discriminator loss 0.5810', 'Discriminator accuracy 0.6250', 'Total loss: 1.7258', 'for batch', 17)
('GAN loss 1.3652 ', 'GAN acc 0.1719', 'Discriminator loss 0.5888', 'Discriminator accuracy 0.6816', 'Total loss: 1.9541', 'for batch', 18)
('GAN loss 1.2385 ', 'GAN acc 0.1992', 'Discriminator loss 0.5941', 'Discriminator accuracy 0.6367', 'Total loss: 1.8325', 'for batch', 19)
('GAN loss 1.3320 ', 'GAN acc 0.1758', 'Discriminator loss 0.6026', 'Discriminator accuracy 0.6562', 'Total loss: 1.9346', 'for batch', 20)
('GAN loss 1.0808 ', 'GAN acc 0.3086', 'Discriminator loss 0.5991', 'Discriminator accuracy 0.6426', 'Total loss: 1.6798', 'for batch', 21)
('GAN loss 1.2353 ', 'GAN acc 0.1875', 'Discriminator loss 0.6048', 'Discriminator accuracy 0.6816', 'Total loss: 1.8402', 'for batch', 22)
('GAN loss 0.8673 ', 'GAN acc 0.4414', 'Discriminator loss 0.6228', 'Discriminator accuracy 0.6016', 'Total loss: 1.4901', 'for batch', 23)
('GAN loss 1.2662 ', 'GAN acc 0.1641', 'Discriminator loss 0.6250', 'Discriminator accuracy 0.6914', 'Total loss: 1.8912', 'for batch', 24)
('GAN loss 0.9408 ', 'GAN acc 0.3789', 'Discriminator loss 0.6272', 'Discriminator accuracy 0.5977', 'Total loss: 1.5681', 'for batch', 25)
('GAN loss 1.0031 ', 'GAN acc 0.3477', 'Discriminator loss 0.5896', 'Discriminator accuracy 0.6992', 'Total loss: 1.5927', 'for batch', 26)
('GAN loss 1.1400 ', 'GAN acc 0.2109', 'Discriminator loss 0.6002', 'Discriminator accuracy 0.6855', 'Total loss: 1.7402', 'for batch', 27)
('GAN loss 0.9400 ', 'GAN acc 0.4141', 'Discriminator loss 0.6158', 'Discriminator accuracy 0.6172', 'Total loss: 1.5558', 'for batch', 28)
('GAN loss 0.9527 ', 'GAN acc 0.4023', 'Discriminator loss 0.6179', 'Discriminator accuracy 0.6602', 'Total loss: 1.5705', 'for batch', 29)
('GAN loss 1.0246 ', 'GAN acc 0.3164', 'Discriminator loss 0.5958', 'Discriminator accuracy 0.6641', 'Total loss: 1.6204', 'for batch', 30)
('GAN loss 0.9047 ', 'GAN acc 0.4297', 'Discriminator loss 0.6101', 'Discriminator accuracy 0.6445', 'Total loss: 1.5148', 'for batch', 31)
('GAN loss 0.9122 ', 'GAN acc 0.4023', 'Discriminator loss 0.6183', 'Discriminator accuracy 0.6523', 'Total loss: 1.5304', 'for batch', 32)
('GAN loss 0.9075 ', 'GAN acc 0.4688', 'Discriminator loss 0.5681', 'Discriminator accuracy 0.7305', 'Total loss: 1.4756', 'for batch', 33)
('GAN loss 1.0475 ', 'GAN acc 0.3594', 'Discriminator loss 0.5265', 'Discriminator accuracy 0.7637', 'Total loss: 1.5740', 'for batch', 34)
('GAN loss 1.2251 ', 'GAN acc 0.2188', 'Discriminator loss 0.5724', 'Discriminator accuracy 0.6992', 'Total loss: 1.7976', 'for batch', 35)
('GAN loss 0.8169 ', 'GAN acc 0.5664', 'Discriminator loss 0.6061', 'Discriminator accuracy 0.6133', 'Total loss: 1.4230', 'for batch', 36)
('GAN loss 1.1737 ', 'GAN acc 0.1914', 'Discriminator loss 0.6293', 'Discriminator accuracy 0.6582', 'Total loss: 1.8030', 'for batch', 37)
('GAN loss 0.8022 ', 'GAN acc 0.5312', 'Discriminator loss 0.6216', 'Discriminator accuracy 0.6289', 'Total loss: 1.4237', 'for batch', 38)
('GAN loss 1.0248 ', 'GAN acc 0.3398', 'Discriminator loss 0.6308', 'Discriminator accuracy 0.6562', 'Total loss: 1.6556', 'for batch', 39)
('GAN loss 0.8376 ', 'GAN acc 0.5352', 'Discriminator loss 0.6077', 'Discriminator accuracy 0.6289', 'Total loss: 1.4452', 'for batch', 40)
('GAN loss 0.7675 ', 'GAN acc 0.5859', 'Discriminator loss 0.6262', 'Discriminator accuracy 0.6445', 'Total loss: 1.3937', 'for batch', 41)
('GAN loss 0.9247 ', 'GAN acc 0.4102', 'Discriminator loss 0.6347', 'Discriminator accuracy 0.6406', 'Total loss: 1.5594', 'for batch', 42)
('GAN loss 0.8408 ', 'GAN acc 0.5391', 'Discriminator loss 0.6250', 'Discriminator accuracy 0.6230', 'Total loss: 1.4658', 'for batch', 43)
('GAN loss 0.7130 ', 'GAN acc 0.6367', 'Discriminator loss 0.6079', 'Discriminator accuracy 0.6719', 'Total loss: 1.3209', 'for batch', 44)
('GAN loss 0.8794 ', 'GAN acc 0.4844', 'Discriminator loss 0.5951', 'Discriminator accuracy 0.6602', 'Total loss: 1.4745', 'for batch', 45)
('GAN loss 0.9138 ', 'GAN acc 0.4609', 'Discriminator loss 0.6052', 'Discriminator accuracy 0.6484', 'Total loss: 1.5190', 'for batch', 46)
('GAN loss 0.7511 ', 'GAN acc 0.6289', 'Discriminator loss 0.6150', 'Discriminator accuracy 0.6426', 'Total loss: 1.3662', 'for batch', 47)
('GAN loss 0.8106 ', 'GAN acc 0.5312', 'Discriminator loss 0.6284', 'Discriminator accuracy 0.6348', 'Total loss: 1.4390', 'for batch', 48)
('GAN loss 0.7895 ', 'GAN acc 0.5859', 'Discriminator loss 0.5900', 'Discriminator accuracy 0.6660', 'Total loss: 1.3795', 'for batch', 49)
('GAN loss 1.0013 ', 'GAN acc 0.4023', 'Discriminator loss 0.5798', 'Discriminator accuracy 0.6719', 'Total loss: 1.5811', 'for batch', 50)
('GAN loss 0.9269 ', 'GAN acc 0.4453', 'Discriminator loss 0.6091', 'Discriminator accuracy 0.6348', 'Total loss: 1.5360', 'for batch', 51)
('GAN loss 0.8166 ', 'GAN acc 0.5938', 'Discriminator loss 0.6035', 'Discriminator accuracy 0.6582', 'Total loss: 1.4201', 'for batch', 52)
('GAN loss 0.8887 ', 'GAN acc 0.4453', 'Discriminator loss 0.6147', 'Discriminator accuracy 0.6465', 'Total loss: 1.5034', 'for batch', 53)
('GAN loss 0.8477 ', 'GAN acc 0.5703', 'Discriminator loss 0.6457', 'Discriminator accuracy 0.5957', 'Total loss: 1.4934', 'for batch', 54)
('GAN loss 0.7823 ', 'GAN acc 0.6445', 'Discriminator loss 0.6263', 'Discriminator accuracy 0.6191', 'Total loss: 1.4086', 'for batch', 55)
('GAN loss 0.8151 ', 'GAN acc 0.6016', 'Discriminator loss 0.6225', 'Discriminator accuracy 0.6191', 'Total loss: 1.4376', 'for batch', 56)
('GAN loss 0.9386 ', 'GAN acc 0.5039', 'Discriminator loss 0.5887', 'Discriminator accuracy 0.6719', 'Total loss: 1.5273', 'for batch', 57)
('GAN loss 0.9072 ', 'GAN acc 0.5000', 'Discriminator loss 0.5839', 'Discriminator accuracy 0.6602', 'Total loss: 1.4911', 'for batch', 58)
('GAN loss 0.9354 ', 'GAN acc 0.4727', 'Discriminator loss 0.5991', 'Discriminator accuracy 0.6504', 'Total loss: 1.5345', 'for batch', 59)
('GAN loss 0.9752 ', 'GAN acc 0.4180', 'Discriminator loss 0.6184', 'Discriminator accuracy 0.6191', 'Total loss: 1.5936', 'for batch', 60)
('GAN loss 0.6693 ', 'GAN acc 0.7891', 'Discriminator loss 0.6247', 'Discriminator accuracy 0.6113', 'Total loss: 1.2939', 'for batch', 61)
('GAN loss 1.1333 ', 'GAN acc 0.1992', 'Discriminator loss 0.6363', 'Discriminator accuracy 0.6328', 'Total loss: 1.7696', 'for batch', 62)
('GAN loss 0.6279 ', 'GAN acc 0.7930', 'Discriminator loss 0.6484', 'Discriminator accuracy 0.5801', 'Total loss: 1.2763', 'for batch', 63)
('GAN loss 0.8233 ', 'GAN acc 0.6133', 'Discriminator loss 0.6558', 'Discriminator accuracy 0.5957', 'Total loss: 1.4791', 'for batch', 64)
('GAN loss 0.9691 ', 'GAN acc 0.4062', 'Discriminator loss 0.6102', 'Discriminator accuracy 0.6641', 'Total loss: 1.5793', 'for batch', 65)
('GAN loss 0.7677 ', 'GAN acc 0.7148', 'Discriminator loss 0.6286', 'Discriminator accuracy 0.6113', 'Total loss: 1.3964', 'for batch', 66)
('GAN loss 0.8660 ', 'GAN acc 0.5742', 'Discriminator loss 0.6244', 'Discriminator accuracy 0.6367', 'Total loss: 1.4904', 'for batch', 67)
('GAN loss 0.9246 ', 'GAN acc 0.4297', 'Discriminator loss 0.6181', 'Discriminator accuracy 0.6270', 'Total loss: 1.5427', 'for batch', 68)
('GAN loss 0.8346 ', 'GAN acc 0.6289', 'Discriminator loss 0.6099', 'Discriminator accuracy 0.6562', 'Total loss: 1.4445', 'for batch', 69)
('GAN loss 1.0245 ', 'GAN acc 0.3945', 'Discriminator loss 0.6070', 'Discriminator accuracy 0.6504', 'Total loss: 1.6316', 'for batch', 70)
('GAN loss 0.8684 ', 'GAN acc 0.6172', 'Discriminator loss 0.6277', 'Discriminator accuracy 0.6094', 'Total loss: 1.4960', 'for batch', 71)
('GAN loss 0.9883 ', 'GAN acc 0.4727', 'Discriminator loss 0.6391', 'Discriminator accuracy 0.6270', 'Total loss: 1.6274', 'for batch', 72)
('GAN loss 0.9146 ', 'GAN acc 0.5156', 'Discriminator loss 0.6195', 'Discriminator accuracy 0.6406', 'Total loss: 1.5341', 'for batch', 73)
('GAN loss 0.9252 ', 'GAN acc 0.5703', 'Discriminator loss 0.6250', 'Discriminator accuracy 0.6230', 'Total loss: 1.5502', 'for batch', 74)
('GAN loss 1.0626 ', 'GAN acc 0.3359', 'Discriminator loss 0.6302', 'Discriminator accuracy 0.6211', 'Total loss: 1.6928', 'for batch', 75)
('GAN loss 0.7846 ', 'GAN acc 0.7031', 'Discriminator loss 0.6284', 'Discriminator accuracy 0.6211', 'Total loss: 1.4130', 'for batch', 76)
('GAN loss 1.2197 ', 'GAN acc 0.1719', 'Discriminator loss 0.6606', 'Discriminator accuracy 0.6309', 'Total loss: 1.8804', 'for batch', 77)
('GAN loss 0.6719 ', 'GAN acc 0.7695', 'Discriminator loss 0.6639', 'Discriminator accuracy 0.5605', 'Total loss: 1.3358', 'for batch', 78)
('GAN loss 0.8185 ', 'GAN acc 0.5781', 'Discriminator loss 0.6920', 'Discriminator accuracy 0.5723', 'Total loss: 1.5105', 'for batch', 79)
('GAN loss 1.0261 ', 'GAN acc 0.2656', 'Discriminator loss 0.6456', 'Discriminator accuracy 0.6113', 'Total loss: 1.6717', 'for batch', 80)
('GAN loss 0.6975 ', 'GAN acc 0.6992', 'Discriminator loss 0.6745', 'Discriminator accuracy 0.5371', 'Total loss: 1.3721', 'for batch', 81)
('GAN loss 0.7162 ', 'GAN acc 0.7539', 'Discriminator loss 0.6772', 'Discriminator accuracy 0.5547', 'Total loss: 1.3934', 'for batch', 82)
('GAN loss 0.9687 ', 'GAN acc 0.4102', 'Discriminator loss 0.6590', 'Discriminator accuracy 0.5742', 'Total loss: 1.6277', 'for batch', 83)
('GAN loss 0.8046 ', 'GAN acc 0.5859', 'Discriminator loss 0.6740', 'Discriminator accuracy 0.5488', 'Total loss: 1.4786', 'for batch', 84)
('GAN loss 0.8240 ', 'GAN acc 0.5078', 'Discriminator loss 0.6743', 'Discriminator accuracy 0.5781', 'Total loss: 1.4982', 'for batch', 85)
('GAN loss 0.8638 ', 'GAN acc 0.5742', 'Discriminator loss 0.6770', 'Discriminator accuracy 0.5625', 'Total loss: 1.5408', 'for batch', 86)
('GAN loss 0.8291 ', 'GAN acc 0.4375', 'Discriminator loss 0.6783', 'Discriminator accuracy 0.5293', 'Total loss: 1.5074', 'for batch', 87)
('GAN loss 0.8443 ', 'GAN acc 0.5625', 'Discriminator loss 0.6640', 'Discriminator accuracy 0.5508', 'Total loss: 1.5083', 'for batch', 88)
('GAN loss 0.8622 ', 'GAN acc 0.4180', 'Discriminator loss 0.6738', 'Discriminator accuracy 0.5957', 'Total loss: 1.5360', 'for batch', 89)
('GAN loss 0.8735 ', 'GAN acc 0.3906', 'Discriminator loss 0.6812', 'Discriminator accuracy 0.5273', 'Total loss: 1.5548', 'for batch', 90)
('GAN loss 0.7623 ', 'GAN acc 0.5312', 'Discriminator loss 0.6887', 'Discriminator accuracy 0.5293', 'Total loss: 1.4510', 'for batch', 91)
('GAN loss 0.7377 ', 'GAN acc 0.6055', 'Discriminator loss 0.6927', 'Discriminator accuracy 0.5176', 'Total loss: 1.4304', 'for batch', 92)
('GAN loss 0.8382 ', 'GAN acc 0.4766', 'Discriminator loss 0.6836', 'Discriminator accuracy 0.5293', 'Total loss: 1.5218', 'for batch', 93)
('GAN loss 0.8497 ', 'GAN acc 0.4531', 'Discriminator loss 0.6880', 'Discriminator accuracy 0.5176', 'Total loss: 1.5377', 'for batch', 94)
('GAN loss 0.8236 ', 'GAN acc 0.3320', 'Discriminator loss 0.6948', 'Discriminator accuracy 0.5117', 'Total loss: 1.5183', 'for batch', 95)
('GAN loss 0.7825 ', 'GAN acc 0.5273', 'Discriminator loss 0.7031', 'Discriminator accuracy 0.4844', 'Total loss: 1.4857', 'for batch', 96)
('GAN loss 0.8209 ', 'GAN acc 0.4023', 'Discriminator loss 0.6855', 'Discriminator accuracy 0.4961', 'Total loss: 1.5064', 'for batch', 97)
('GAN loss 0.8061 ', 'GAN acc 0.2969', 'Discriminator loss 0.6970', 'Discriminator accuracy 0.4941', 'Total loss: 1.5031', 'for batch', 98)
('GAN loss 0.8058 ', 'GAN acc 0.3320', 'Discriminator loss 0.6868', 'Discriminator accuracy 0.5137', 'Total loss: 1.4925', 'for batch', 99)
('GAN loss 0.8060 ', 'GAN acc 0.3594', 'Discriminator loss 0.6866', 'Discriminator accuracy 0.5215', 'Total loss: 1.4927', 'for batch', 100)
('GAN loss 0.8157 ', 'GAN acc 0.2891', 'Discriminator loss 0.6863', 'Discriminator accuracy 0.5137', 'Total loss: 1.5020', 'for batch', 101)
('GAN loss 0.7835 ', 'GAN acc 0.3711', 'Discriminator loss 0.6862', 'Discriminator accuracy 0.5156', 'Total loss: 1.4697', 'for batch', 102)
('GAN loss 0.8053 ', 'GAN acc 0.2734', 'Discriminator loss 0.7043', 'Discriminator accuracy 0.4766', 'Total loss: 1.5096', 'for batch', 103)
('GAN loss 0.7654 ', 'GAN acc 0.3359', 'Discriminator loss 0.6947', 'Discriminator accuracy 0.5117', 'Total loss: 1.4600', 'for batch', 104)
('GAN loss 0.8115 ', 'GAN acc 0.2539', 'Discriminator loss 0.6983', 'Discriminator accuracy 0.5098', 'Total loss: 1.5098', 'for batch', 105)
('GAN loss 0.7859 ', 'GAN acc 0.2812', 'Discriminator loss 0.6927', 'Discriminator accuracy 0.5352', 'Total loss: 1.4786', 'for batch', 106)
('GAN loss 0.7536 ', 'GAN acc 0.3750', 'Discriminator loss 0.6968', 'Discriminator accuracy 0.4883', 'Total loss: 1.4503', 'for batch', 107)
('GAN loss 0.7598 ', 'GAN acc 0.3828', 'Discriminator loss 0.7030', 'Discriminator accuracy 0.4609', 'Total loss: 1.4628', 'for batch', 108)
('GAN loss 0.7919 ', 'GAN acc 0.2969', 'Discriminator loss 0.6926', 'Discriminator accuracy 0.4922', 'Total loss: 1.4845', 'for batch', 109)
('GAN loss 0.8122 ', 'GAN acc 0.1992', 'Discriminator loss 0.6942', 'Discriminator accuracy 0.5176', 'Total loss: 1.5064', 'for batch', 110)
('GAN loss 0.7801 ', 'GAN acc 0.2891', 'Discriminator
----------------------------------
('Training with dataset based on class - ', 'horse', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
sequential_2 (Sequential)        (None, 2, 32, 32)     1367650                                      
____________________________________________________________________________________________________
sequential_1 (Sequential)        (None, 1)             0           lambda_1[0][0]                   
====================================================================================================
Total params: 1887107
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_1 (Convolution2D)  (None, 32, 16, 16)    608         convolution2d_input_1[0][0]      
____________________________________________________________________________________________________
leakyrelu_1 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_1[0][0]            
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_1[0][0]                
____________________________________________________________________________________________________
convolution2d_2 (Convolution2D)  (None, 64, 8, 8)      18496       dropout_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_2 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_2[0][0]            
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_2[0][0]                
____________________________________________________________________________________________________
convolution2d_3 (Convolution2D)  (None, 128, 4, 4)     73856       dropout_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_3 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_3[0][0]            
____________________________________________________________________________________________________
dropout_3 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_3[0][0]                
____________________________________________________________________________________________________
convolution2d_4 (Convolution2D)  (None, 256, 2, 2)     295168      dropout_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_4 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_4[0][0]            
____________________________________________________________________________________________________
dropout_4 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_4[0][0]                
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 1024)          0           dropout_4[0][0]                  
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 128)           131200      flatten_1[0][0]                  
____________________________________________________________________________________________________
leakyrelu_5 (LeakyReLU)          (None, 128)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_5 (Dropout)              (None, 128)           0           leakyrelu_5[0][0]                
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             129         dropout_5[0][0]                  
====================================================================================================
Total params: 519457
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7951 ', 'GAN acc 0.3516', 'Discriminator loss 0.7410', 'Discriminator accuracy 0.4961', 'Total loss: 1.5361', 'for batch', 0)
('GAN loss 0.7386 ', 'GAN acc 0.4648', 'Discriminator loss 0.7154', 'Discriminator accuracy 0.5293', 'Total loss: 1.4541', 'for batch', 1)
('GAN loss 0.8286 ', 'GAN acc 0.3398', 'Discriminator loss 0.6863', 'Discriminator accuracy 0.5605', 'Total loss: 1.5149', 'for batch', 2)
('GAN loss 0.9957 ', 'GAN acc 0.1602', 'Discriminator loss 0.6315', 'Discriminator accuracy 0.6914', 'Total loss: 1.6272', 'for batch', 3)
('GAN loss 1.0553 ', 'GAN acc 0.1328', 'Discriminator loss 0.5782', 'Discriminator accuracy 0.7559', 'Total loss: 1.6335', 'for batch', 4)
('GAN loss 1.1129 ', 'GAN acc 0.1211', 'Discriminator loss 0.5318', 'Discriminator accuracy 0.8320', 'Total loss: 1.6447', 'for batch', 5)
('GAN loss 1.2774 ', 'GAN acc 0.0898', 'Discriminator loss 0.5186', 'Discriminator accuracy 0.8203', 'Total loss: 1.7959', 'for batch', 6)
('GAN loss 1.3021 ', 'GAN acc 0.0898', 'Discriminator loss 0.4806', 'Discriminator accuracy 0.8789', 'Total loss: 1.7827', 'for batch', 7)
('GAN loss 1.4553 ', 'GAN acc 0.0859', 'Discriminator loss 0.4767', 'Discriminator accuracy 0.8438', 'Total loss: 1.9320', 'for batch', 8)
('GAN loss 1.4130 ', 'GAN acc 0.1133', 'Discriminator loss 0.4526', 'Discriminator accuracy 0.8672', 'Total loss: 1.8655', 'for batch', 9)
('GAN loss 1.7611 ', 'GAN acc 0.0508', 'Discriminator loss 0.4425', 'Discriminator accuracy 0.8828', 'Total loss: 2.2036', 'for batch', 10)
('GAN loss 1.1399 ', 'GAN acc 0.2578', 'Discriminator loss 0.4071', 'Discriminator accuracy 0.8672', 'Total loss: 1.5471', 'for batch', 11)
('GAN loss 2.3196 ', 'GAN acc 0.0273', 'Discriminator loss 0.4813', 'Discriminator accuracy 0.8086', 'Total loss: 2.8009', 'for batch', 12)
('GAN loss 1.3501 ', 'GAN acc 0.1875', 'Discriminator loss 0.4964', 'Discriminator accuracy 0.7246', 'Total loss: 1.8465', 'for batch', 13)
('GAN loss 1.7122 ', 'GAN acc 0.0977', 'Discriminator loss 0.4501', 'Discriminator accuracy 0.8535', 'Total loss: 2.1622', 'for batch', 14)
('GAN loss 1.8750 ', 'GAN acc 0.1133', 'Discriminator loss 0.4682', 'Discriminator accuracy 0.8105', 'Total loss: 2.3433', 'for batch', 15)
('GAN loss 1.3919 ', 'GAN acc 0.2305', 'Discriminator loss 0.4594', 'Discriminator accuracy 0.7734', 'Total loss: 1.8513', 'for batch', 16)
('GAN loss 2.3646 ', 'GAN acc 0.0742', 'Discriminator loss 0.5498', 'Discriminator accuracy 0.8008', 'Total loss: 2.9144', 'for batch', 17)
('GAN loss 1.2519 ', 'GAN acc 0.3281', 'Discriminator loss 0.5670', 'Discriminator accuracy 0.6328', 'Total loss: 1.8189', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.95621622)
('DISCRIMINATOR_Imagem FAKE=', 0.80437857)
('Discriminator trained', 4, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:45.194536')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 2.0310 ', 'GAN acc 0.0664', 'Discriminator loss 0.5595', 'Discriminator accuracy 0.7793', 'Total loss: 2.5905', 'for batch', 0)
('GAN loss 1.4572 ', 'GAN acc 0.2539', 'Discriminator loss 0.5266', 'Discriminator accuracy 0.6797', 'Total loss: 1.9838', 'for batch', 1)
('GAN loss 1.6573 ', 'GAN acc 0.2305', 'Discriminator loss 0.5042', 'Discriminator accuracy 0.7871', 'Total loss: 2.1615', 'for batch', 2)
('GAN loss 1.7492 ', 'GAN acc 0.1211', 'Discriminator loss 0.5055', 'Discriminator accuracy 0.7754', 'Total loss: 2.2547', 'for batch', 3)
('GAN loss 1.2616 ', 'GAN acc 0.3086', 'Discriminator loss 0.5795', 'Discriminator accuracy 0.6484', 'Total loss: 1.8411', 'for batch', 4)
('GAN loss 1.5986 ', 'GAN acc 0.1797', 'Discriminator loss 0.5754', 'Discriminator accuracy 0.7285', 'Total loss: 2.1740', 'for batch', 5)
('GAN loss 1.1826 ', 'GAN acc 0.3477', 'Discriminator loss 0.5670', 'Discriminator accuracy 0.6797', 'Total loss: 1.7496', 'for batch', 6)
('GAN loss 1.5492 ', 'GAN acc 0.1836', 'Discriminator loss 0.5345', 'Discriminator accuracy 0.7578', 'Total loss: 2.0837', 'for batch', 7)
('GAN loss 1.2900 ', 'GAN acc 0.2969', 'Discriminator loss 0.5385', 'Discriminator accuracy 0.7051', 'Total loss: 1.8286', 'for batch', 8)
('GAN loss 1.3755 ', 'GAN acc 0.2109', 'Discriminator loss 0.5249', 'Discriminator accuracy 0.7578', 'Total loss: 1.9004', 'for batch', 9)
('GAN loss 1.3703 ', 'GAN acc 0.2070', 'Discriminator loss 0.5856', 'Discriminator accuracy 0.6934', 'Total loss: 1.9559', 'for batch', 10)
('GAN loss 1.2564 ', 'GAN acc 0.3008', 'Discriminator loss 0.5759', 'Discriminator accuracy 0.6895', 'Total loss: 1.8323', 'for batch', 11)
('GAN loss 1.3039 ', 'GAN acc 0.3711', 'Discriminator loss 0.5051', 'Discriminator accuracy 0.7246', 'Total loss: 1.8090', 'for batch', 12)
('GAN loss 2.0264 ', 'GAN acc 0.0859', 'Discriminator loss 0.4630', 'Discriminator accuracy 0.7988', 'Total loss: 2.4894', 'for batch', 13)
('GAN loss 1.4630 ', 'GAN acc 0.2656', 'Discriminator loss 0.4814', 'Discriminator accuracy 0.7520', 'Total loss: 1.9444', 'for batch', 14)
('GAN loss 1.8211 ', 'GAN acc 0.1133', 'Discriminator loss 0.4936', 'Discriminator accuracy 0.7891', 'Total loss: 2.3148', 'for batch', 15)
('GAN loss 1.2388 ', 'GAN acc 0.3594', 'Discriminator loss 0.5009', 'Discriminator accuracy 0.7422', 'Total loss: 1.7397', 'for batch', 16)
('GAN loss 2.0342 ', 'GAN acc 0.1016', 'Discriminator loss 0.5295', 'Discriminator accuracy 0.7637', 'Total loss: 2.5637', 'for batch', 17)
('GAN loss 1.1405 ', 'GAN acc 0.4219', 'Discriminator loss 0.5495', 'Discriminator accuracy 0.6562', 'Total loss: 1.6900', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.9641605)
('DISCRIMINATOR_Imagem FAKE=', 0.85879284)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.223822')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 1.7045 ', 'GAN acc 0.1367', 'Discriminator loss 0.5598', 'Discriminator accuracy 0.7539', 'Total loss: 2.2642', 'for batch', 0)
('GAN loss 1.0780 ', 'GAN acc 0.4141', 'Discriminator loss 0.5474', 'Discriminator accuracy 0.6855', 'Total loss: 1.6253', 'for batch', 1)
('GAN loss 1.4253 ', 'GAN acc 0.1992', 'Discriminator loss 0.5480', 'Discriminator accuracy 0.7109', 'Total loss: 1.9733', 'for batch', 2)
('GAN loss 1.3332 ', 'GAN acc 0.2852', 'Discriminator loss 0.5464', 'Discriminator accuracy 0.7109', 'Total loss: 1.8795', 'for batch', 3)
('GAN loss 1.1761 ', 'GAN acc 0.2734', 'Discriminator loss 0.5807', 'Discriminator accuracy 0.6758', 'Total loss: 1.7568', 'for batch', 4)
('GAN loss 1.3037 ', 'GAN acc 0.2773', 'Discriminator loss 0.5634', 'Discriminator accuracy 0.7031', 'Total loss: 1.8671', 'for batch', 5)
('GAN loss 1.0767 ', 'GAN acc 0.3633', 'Discriminator loss 0.5826', 'Discriminator accuracy 0.6621', 'Total loss: 1.6594', 'for batch', 6)
('GAN loss 1.3952 ', 'GAN acc 0.1914', 'Discriminator loss 0.5747', 'Discriminator accuracy 0.6992', 'Total loss: 1.9698', 'for batch', 7)
('GAN loss 1.0935 ', 'GAN acc 0.3789', 'Discriminator loss 0.5818', 'Discriminator accuracy 0.6914', 'Total loss: 1.6753', 'for batch', 8)
('GAN loss 1.2111 ', 'GAN acc 0.2461', 'Discriminator loss 0.5956', 'Discriminator accuracy 0.6855', 'Total loss: 1.8067', 'for batch', 9)
('GAN loss 0.9042 ', 'GAN acc 0.4922', 'Discriminator loss 0.5945', 'Discriminator accuracy 0.6562', 'Total loss: 1.4987', 'for batch', 10)
('GAN loss 1.5595 ', 'GAN acc 0.1094', 'Discriminator loss 0.5946', 'Discriminator accuracy 0.6836', 'Total loss: 2.1542', 'for batch', 11)
('GAN loss 0.7131 ', 'GAN acc 0.6758', 'Discriminator loss 0.5461', 'Discriminator accuracy 0.6816', 'Total loss: 1.2591', 'for batch', 12)
('GAN loss 1.9036 ', 'GAN acc 0.0391', 'Discriminator loss 0.6778', 'Discriminator accuracy 0.6465', 'Total loss: 2.5814', 'for batch', 13)
('GAN loss 1.2084 ', 'GAN acc 0.3164', 'Discriminator loss 0.5910', 'Discriminator accuracy 0.6094', 'Total loss: 1.7995', 'for batch', 14)
('GAN loss 1.1023 ', 'GAN acc 0.3477', 'Discriminator loss 0.5537', 'Discriminator accuracy 0.7207', 'Total loss: 1.6560', 'for batch', 15)
('GAN loss 1.3642 ', 'GAN acc 0.1836', 'Discriminator loss 0.5703', 'Discriminator accuracy 0.7012', 'Total loss: 1.9344', 'for batch', 16)
('GAN loss 1.1820 ', 'GAN acc 0.3320', 'Discriminator loss 0.5844', 'Discriminator accuracy 0.6445', 'Total loss: 1.7664', 'for batch', 17)
('GAN loss 1.0810 ', 'GAN acc 0.3086', 'Discriminator loss 0.6027', 'Discriminator accuracy 0.6582', 'Total loss: 1.6837', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.93819493)
('DISCRIMINATOR_Imagem FAKE=', 0.89301515)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:27.885371')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 1.0587 ', 'GAN acc 0.3164', 'Discriminator loss 0.6051', 'Discriminator accuracy 0.6348', 'Total loss: 1.6639', 'for batch', 0)
('GAN loss 0.8668 ', 'GAN acc 0.4688', 'Discriminator loss 0.6404', 'Discriminator accuracy 0.5879', 'Total loss: 1.5072', 'for batch', 1)
('GAN loss 1.0832 ', 'GAN acc 0.2852', 'Discriminator loss 0.6160', 'Discriminator accuracy 0.6562', 'Total loss: 1.6992', 'for batch', 2)
('GAN loss 0.8467 ', 'GAN acc 0.5039', 'Discriminator loss 0.6386', 'Discriminator accuracy 0.5996', 'Total loss: 1.4853', 'for batch', 3)
('GAN loss 0.9198 ', 'GAN acc 0.3828', 'Discriminator loss 0.6557', 'Discriminator accuracy 0.5957', 'Total loss: 1.5755', 'for batch', 4)
('GAN loss 0.8627 ', 'GAN acc 0.4883', 'Discriminator loss 0.6038', 'Discriminator accuracy 0.6680', 'Total loss: 1.4665', 'for batch', 5)
('GAN loss 0.8827 ', 'GAN acc 0.5078', 'Discriminator loss 0.5822', 'Discriminator accuracy 0.7012', 'Total loss: 1.4649', 'for batch', 6)
('GAN loss 1.0292 ', 'GAN acc 0.2969', 'Discriminator loss 0.6310', 'Discriminator accuracy 0.6445', 'Total loss: 1.6602', 'for batch', 7)
('GAN loss 0.9932 ', 'GAN acc 0.5391', 'Discriminator loss 0.5428', 'Discriminator accuracy 0.6641', 'Total loss: 1.5360', 'for batch', 8)
('GAN loss 1.2580 ', 'GAN acc 0.2734', 'Discriminator loss 0.5625', 'Discriminator accuracy 0.7246', 'Total loss: 1.8205', 'for batch', 9)
('GAN loss 1.3546 ', 'GAN acc 0.2461', 'Discriminator loss 0.5574', 'Discriminator accuracy 0.7188', 'Total loss: 1.9120', 'for batch', 10)
('GAN loss 0.9594 ', 'GAN acc 0.4844', 'Discriminator loss 0.5732', 'Discriminator accuracy 0.6758', 'Total loss: 1.5326', 'for batch', 11)
('GAN loss 1.1351 ', 'GAN acc 0.2617', 'Discriminator loss 0.6011', 'Discriminator accuracy 0.6484', 'Total loss: 1.7362', 'for batch', 12)
('GAN loss 1.0160 ', 'GAN acc 0.4141', 'Discriminator loss 0.6014', 'Discriminator accuracy 0.6621', 'Total loss: 1.6175', 'for batch', 13)
('GAN loss 0.9828 ', 'GAN acc 0.3594', 'Discriminator loss 0.6107', 'Discriminator accuracy 0.6504', 'Total loss: 1.5935', 'for batch', 14)
('GAN loss 0.7855 ', 'GAN acc 0.5703', 'Discriminator loss 0.6229', 'Discriminator accuracy 0.6309', 'Total loss: 1.4083', 'for batch', 15)
('GAN loss 1.1768 ', 'GAN acc 0.2773', 'Discriminator loss 0.5866', 'Discriminator accuracy 0.6797', 'Total loss: 1.7634', 'for batch', 16)
('GAN loss 1.2981 ', 'GAN acc 0.5000', 'Discriminator loss 0.4960', 'Discriminator accuracy 0.7500', 'Total loss: 1.7942', 'for batch', 17)
('GAN loss 1.8500 ', 'GAN acc 0.0625', 'Discriminator loss 0.5755', 'Discriminator accuracy 0.7031', 'Total loss: 2.4255', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.94042408)
('DISCRIMINATOR_Imagem FAKE=', 0.8302325)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.536963')
----------------------------------
('Epoch', 5, 'of', 50)
('Number of batches', 19)
('GAN loss 0.7883 ', 'GAN acc 0.6445', 'Discriminator loss 0.6053', 'Discriminator accuracy 0.6113', 'Total loss: 1.3937', 'for batch', 0)
('GAN loss 1.1733 ', 'GAN acc 0.3242', 'Discriminator loss 0.6051', 'Discriminator accuracy 0.6582', 'Total loss: 1.7785', 'for batch', 1)
('GAN loss 1.4189 ', 'GAN acc 0.1602', 'Discriminator loss 0.5563', 'Discriminator accuracy 0.7227', 'Total loss: 1.9752', 'for batch', 2)
('GAN loss 0.8375 ', 'GAN acc 0.5430', 'Discriminator loss 0.6027', 'Discriminator accuracy 0.6465', 'Total loss: 1.4402', 'for batch', 3)
('GAN loss 1.3554 ', 'GAN acc 0.1484', 'Discriminator loss 0.6196', 'Discriminator accuracy 0.6582', 'Total loss: 1.9750', 'for batch', 4)
('GAN loss 0.8347 ', 'GAN acc 0.5352', 'Discriminator loss 0.6471', 'Discriminator accuracy 0.5918', 'Total loss: 1.4818', 'for batch', 5)
('GAN loss 1.2366 ', 'GAN acc 0.1797', 'Discriminator loss 0.6205', 'Discriminator accuracy 0.6719', 'Total loss: 1.8571', 'for batch', 6)
('GAN loss 0.9171 ', 'GAN acc 0.4492', 'Discriminator loss 0.6138', 'Discriminator accuracy 0.6309', 'Total loss: 1.5310', 'for batch', 7)
('GAN loss 1.0800 ', 'GAN acc 0.2656', 'Discriminator loss 0.6588', 'Discriminator accuracy 0.5840', 'Total loss: 1.7389', 'for batch', 8)
('GAN loss 1.0677 ', 'GAN acc 0.3945', 'Discriminator loss 0.6348', 'Discriminator accuracy 0.6074', 'Total loss: 1.7025', 'for batch', 9)
('GAN loss 0.9410 ', 'GAN acc 0.4102', 'Discriminator loss 0.5775', 'Discriminator accuracy 0.6875', 'Total loss: 1.5186', 'for batch', 10)
('GAN loss 1.1946 ', 'GAN acc 0.1914', 'Discriminator loss 0.6016', 'Discriminator accuracy 0.6953', 'Total loss: 1.7962', 'for batch', 11)
('GAN loss 0.8894 ', 'GAN acc 0.4688', 'Discriminator loss 0.6212', 'Discriminator accuracy 0.6465', 'Total loss: 1.5106', 'for batch', 12)
('GAN loss 1.0703 ', 'GAN acc 0.3008', 'Discriminator loss 0.6443', 'Discriminator accuracy 0.6191', 'Total loss: 1.7145', 'for batch', 13)
('GAN loss 0.8866 ', 'GAN acc 0.4414', 'Discriminator loss 0.6497', 'Discriminator accuracy 0.5781', 'Total loss: 1.5364', 'for batch', 14)
('GAN loss 1.0693 ', 'GAN acc 0.2812', 'Discriminator loss 0.6228', 'Discriminator accuracy 0.6660', 'Total loss: 1.6921', 'for batch', 15)
('GAN loss 0.9183 ', 'GAN acc 0.4414', 'Discriminator loss 0.6366', 'Discriminator accuracy 0.5996', 'Total loss: 1.5549', 'for batch', 16)
('GAN loss 1.1151 ', 'GAN acc 0.2305', 'Discriminator loss 0.6602', 'Discriminator accuracy 0.6152', 'Total loss: 1.7753', 'for batch', 17)
('GAN loss 0.7831 ', 'GAN acc 0.5977', 'Discriminator loss 0.6365', 'Discriminator accuracy 0.6074', 'Total loss: 1.4196', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.93997771)
('DISCRIMINATOR_Imagem FAKE=', 0.95495147)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.022389')
----------------------------------
('Epoch', 6, 'of', 50)
('Number of batches', 19)
('GAN loss 1.3942 ', 'GAN acc 0.0898', 'Discriminator loss 0.6887', 'Discriminator accuracy 0.5996', 'Total loss: 2.0828', 'for batch', 0)
('GAN loss 0.6334 ', 'GAN acc 0.7344', 'Discriminator loss 0.6947', 'Discriminator accuracy 0.5547', 'Total loss: 1.3281', 'for batch', 1)
('GAN loss 1.0338 ', 'GAN acc 0.2266', 'Discriminator loss 0.6810', 'Discriminator accuracy 0.5938', 'Total loss: 1.7148', 'for batch', 2)
('GAN loss 0.9090 ', 'GAN acc 0.3164', 'Discriminator loss 0.6450', 'Discriminator accuracy 0.5781', 'Total loss: 1.5540', 'for batch', 3)
('GAN loss 0.7955 ', 'GAN acc 0.4531', 'Discriminator loss 0.6674', 'Discriminator accuracy 0.5859', 'Total loss: 1.4629', 'for batch', 4)
('GAN loss 0.9446 ', 'GAN acc 0.2734', 'Discriminator loss 0.6465', 'Discriminator accuracy 0.6328', 'Total loss: 1.5911', 'for batch', 5)
('GAN loss 0.9521 ', 'GAN acc 0.2578', 'Discriminator loss 0.6475', 'Discriminator accuracy 0.6172', 'Total loss: 1.5996', 'for batch', 6)
('GAN loss 0.8459 ', 'GAN acc 0.3359', 'Discriminator loss 0.6846', 'Discriminator accuracy 0.5410', 'Total loss: 1.5305', 'for batch', 7)
('GAN loss 0.7609 ', 'GAN acc 0.4453', 'Discriminator loss 0.6803', 'Discriminator accuracy 0.5430', 'Total loss: 1.4412', 'for batch', 8)
('GAN loss 0.7544 ', 'GAN acc 0.5352', 'Discriminator loss 0.6926', 'Discriminator accuracy 0.5586', 'Total loss: 1.4470', 'for batch', 9)
('GAN loss 0.9708 ', 'GAN acc 0.4922', 'Discriminator loss 0.6544', 'Discriminator accuracy 0.5781', 'Total loss: 1.6252', 'for batch', 10)
('GAN loss 0.8094 ', 'GAN acc 0.4688', 'Discriminator loss 0.6541', 'Discriminator accuracy 0.5625', 'Total loss: 1.4636', 'for batch', 11)
('GAN loss 0.8308 ', 'GAN acc 0.3945', 'Discriminator loss 0.6310', 'Discriminator accuracy 0.6484', 'Total loss: 1.4618', 'for batch', 12)
('GAN loss 0.8776 ', 'GAN acc 0.3867', 'Discriminator loss 0.6222', 'Discriminator accuracy 0.6699', 'Total loss: 1.4998', 'for batch', 13)
('GAN loss 0.8695 ', 'GAN acc 0.3789', 'Discriminator loss 0.6495', 'Discriminator accuracy 0.5977', 'Total loss: 1.5190', 'for batch', 14)
('GAN loss 0.8861 ', 'GAN acc 0.3555', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.5508', 'Total loss: 1.5631', 'for batch', 15)
('GAN loss 0.7989 ', 'GAN acc 0.4609', 'Discriminator loss 0.6717', 'Discriminator accuracy 0.5820', 'Total loss: 1.4706', 'for batch', 16)
('GAN loss 0.7809 ', 'GAN acc 0.4258', 'Discriminator loss 0.6957', 'Discriminator accuracy 0.5332', 'Total loss: 1.4766', 'for batch', 17)
('GAN loss 0.7951 ', 'GAN acc 0.4102', 'Discriminator loss 0.6735', 'Discriminator accuracy 0.5703', 'Total loss: 1.4686', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.89422095)
('DISCRIMINATOR_Imagem FAKE=', 0.9008432)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.590583')
----------------------------------
('Epoch', 7, 'of', 50)
('Number of batches', 19)
('GAN loss 0.8081 ', 'GAN acc 0.4258', 'Discriminator loss 0.6822', 'Discriminator accuracy 0.5391', 'Total loss: 1.4903', 'for batch', 0)
('GAN loss 0.6736 ', 'GAN acc 0.6328', 'Discriminator loss 0.6996', 'Discriminator accuracy 0.5391', 'Total loss: 1.3732', 'for batch', 1)
('GAN loss 0.7776 ', 'GAN acc 0.3984', 'Discriminator loss 0.6886', 'Discriminator accuracy 0.5234', 'Total loss: 1.4661', 'for batch', 2)
('GAN loss 0.7435 ', 'GAN acc 0.5078', 'Discriminator loss 0.6908', 'Discriminator accuracy 0.5391', 'Total loss: 1.4343', 'for batch', 3)
('GAN loss 0.7252 ', 'GAN acc 0.5273', 'Discriminator loss 0.7069', 'Discriminator accuracy 0.5039', 'Total loss: 1.4322', 'for batch', 4)
('GAN loss 0.7175 ', 'GAN acc 0.5703', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.5508', 'Total loss: 1.4093', 'for batch', 5)
('GAN loss 0.7424 ', 'GAN acc 0.5000', 'Discriminator loss 0.6899', 'Discriminator accuracy 0.5371', 'Total loss: 1.4322', 'for batch', 6)
('GAN loss 0.6797 ', 'GAN acc 0.5859', 'Discriminator loss 0.6944', 'Discriminator accuracy 0.5156', 'Total loss: 1.3741', 'for batch', 7)
('GAN loss 0.7064 ', 'GAN acc 0.5312', 'Discriminator loss 0.6991', 'Discriminator accuracy 0.5293', 'Total loss: 1.4055', 'for batch', 8)
('GAN loss 0.6767 ', 'GAN acc 0.5977', 'Discriminator loss 0.7059', 'Discriminator accuracy 0.5000', 'Total loss: 1.3826', 'for batch', 9)
('GAN loss 0.6692 ', 'GAN acc 0.6094', 'Discriminator loss 0.6973', 'Discriminator accuracy 0.5098', 'Total loss: 1.3665', 'for batch', 10)
('GAN loss 0.6887 ', 'GAN acc 0.5430', 'Discriminator loss 0.7121', 'Discriminator accuracy 0.4668', 'Total loss: 1.4008', 'for batch', 11)
('GAN loss 0.6742 ', 'GAN acc 0.5820', 'Discriminator loss 0.6981', 'Discriminator accuracy 0.5098', 'Total loss: 1.3723', 'for batch', 12)
('GAN loss 0.6341 ', 'GAN acc 0.7070', 'Discriminator loss 0.7037', 'Discriminator accuracy 0.5098', 'Total loss: 1.3378', 'for batch', 13)
('GAN loss 0.6500 ', 'GAN acc 0.6328', 'Discriminator loss 0.6831', 'Discriminator accuracy 0.5469', 'Total loss: 1.3331', 'for batch', 14)
('GAN loss 0.6640 ', 'GAN acc 0.6172', 'Discriminator loss 0.7169', 'Discriminator accuracy 0.4824', 'Total loss: 1.3809', 'for batch', 15)
('GAN loss 0.6596 ', 'GAN acc 0.6133', 'Discriminator loss 0.7008', 'Discriminator accuracy 0.5195', 'Total loss: 1.3604', 'for batch', 16)
('GAN loss 0.6420 ', 'GAN acc 0.7109', 'Discriminator loss 0.7012', 'Discriminator accuracy 0.4980', 'Total loss: 1.3432', 'for batch', 17)
('GAN loss 0.6545 ', 'GAN acc 0.6250', 'Discriminator loss 0.7099', 'Discriminator accuracy 0.5020', 'Total loss: 1.3643', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.8397578)
('DISCRIMINATOR_Imagem FAKE=', 0.82108855)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.104714')
----------------------------------
('Epoch', 8, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6471 ', 'GAN acc 0.6797', 'Discriminator loss 0.7006', 'Discriminator accuracy 0.5156', 'Total loss: 1.3477', 'for batch', 0)
('GAN loss 0.6091 ', 'GAN acc 0.8125', 'Discriminator loss 0.7031', 'Discriminator accuracy 0.4922', 'Total loss: 1.3122', 'for batch', 1)
('GAN loss 0.6226 ', 'GAN acc 0.7656', 'Discriminator loss 0.6962', 'Discriminator accuracy 0.5176', 'Total loss: 1.3188', 'for batch', 2)
('GAN loss 0.6292 ', 'GAN acc 0.7656', 'Discriminator loss 0.7064', 'Discriminator accuracy 0.4883', 'Total loss: 1.3355', 'for batch', 3)
('GAN loss 0.6236 ', 'GAN acc 0.7266', 'Discriminator loss 0.7155', 'Discriminator accuracy 0.4883', 'Total loss: 1.3391', 'for batch', 4)
('GAN loss 0.6223 ', 'GAN acc 0.7617', 'Discriminator loss 0.6981', 'Discriminator accuracy 0.5078', 'Total loss: 1.3205', 'for batch', 5)
('GAN loss 0.6465 ', 'GAN acc 0.6797', 'Discriminator loss 0.7102', 'Discriminator accuracy 0.4785', 'Total loss: 1.3567', 'for batch', 6)
('GAN loss 0.6220 ', 'GAN acc 0.7734', 'Discriminator loss 0.7044', 'Discriminator accuracy 0.5215', 'Total loss: 1.3264', 'for batch', 7)
('GAN loss 0.6275 ', 'GAN acc 0.7617', 'Discriminator loss 0.7009', 'Discriminator accuracy 0.5117', 'Total loss: 1.3284', 'for batch', 8)
('GAN loss 0.6138 ', 'GAN acc 0.8086', 'Discriminator loss 0.7117', 'Discriminator accuracy 0.4824', 'Total loss: 1.3254', 'for batch', 9)
('GAN loss 0.6262 ', 'GAN acc 0.7617', 'Discriminator loss 0.7154', 'Discriminator accuracy 0.4512', 'Total loss: 1.3417', 'for batch', 10)
('GAN loss 0.6203 ', 'GAN acc 0.7656', 'Discriminator loss 0.7078', 'Discriminator accuracy 0.4609', 'Total loss: 1.3281', 'for batch', 11)
('GAN loss 0.6232 ', 'GAN acc 0.8164', 'Discriminator loss 0.6989', 'Discriminator accuracy 0.4941', 'Total loss: 1.3221', 'for batch', 12)
('GAN loss 0.6306 ', 'GAN acc 0.7422', 'Discriminator loss 0.7048', 'Discriminator accuracy 0.4902', 'Total loss: 1.3354', 'for batch', 13)
('GAN loss 0.6340 ', 'GAN acc 0.7148', 'Discriminator loss 0.7079', 'Discriminator accuracy 0.4473', 'Total loss: 1.3420', 'for batch', 14)
('GAN loss 0.6241 ', 'GAN acc 0.8164', 'Discriminator loss 0.6979', 'Discriminator accuracy 0.5059', 'Total loss: 1.3220', 'for batch', 15)
('GAN loss 0.6377 ', 'GAN acc 0.7383', 'Discriminator loss 0.6983', 'Discriminator accuracy 0.5059', 'Total loss: 1.3360', 'for batch', 16)
('GAN loss 0.6375 ', 'GAN acc 0.7227', 'Discriminator loss 0.7010', 'Discriminator accuracy 0.5039', 'Total loss: 1.3385', 'for batch', 17)
('GAN loss 0.6421 ', 'GAN acc 0.7422', 'Discriminator loss 0.7079', 'Discriminator accuracy 0.4668', 'Total loss: 1.3500', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.76624608)
('DISCRIMINATOR_Imagem FAKE=', 0.73848647)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.156721')
----------------------------------
('Epoch', 9, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6260 ', 'GAN acc 0.7734', 'Discriminator loss 0.6943', 'Discriminator accuracy 0.4922', 'Total loss: 1.3203', 'for batch', 0)
('GAN loss 0.6130 ', 'GAN acc 0.8438', 'Discriminator loss 0.7050', 'Discriminator accuracy 0.4746', 'Total loss: 1.3180', 'for batch', 1)
('GAN loss 0.6122 ', 'GAN acc 0.8555', 'Discriminator loss 0.7080', 'Discriminator accuracy 0.4688', 'Total loss: 1.3202', 'for batch', 2)
('GAN loss 0.6205 ', 'GAN acc 0.7695', 'Discriminator loss 0.6940', 'Discriminator accuracy 0.5020', 'Total loss: 1.3145', 'for batch', 3)
('GAN loss 0.6256 ', 'GAN acc 0.8125', 'Discriminator loss 0.7100', 'Discriminator accuracy 0.4551', 'Total loss: 1.3356', 'for batch', 4)
('GAN loss 0.6370 ', 'GAN acc 0.7500', 'Discriminator loss 0.6914', 'Discriminator accuracy 0.5273', 'Total loss: 1.3284', 'for batch', 5)
('GAN loss 0.6409 ', 'GAN acc 0.7461', 'Discriminator loss 0.6935', 'Discriminator accuracy 0.5215', 'Total loss: 1.3344', 'for batch', 6)
('GAN loss 0.6389 ', 'GAN acc 0.7578', 'Discriminator loss 0.6941', 'Discriminator accuracy 0.5098', 'Total loss: 1.3330', 'for batch', 7)
('GAN loss 0.6463 ', 'GAN acc 0.7344', 'Discriminator loss 0.6972', 'Discriminator accuracy 0.4961', 'Total loss: 1.3435', 'for batch', 8)
('GAN loss 0.6265 ', 'GAN acc 0.8359', 'Discriminator loss 0.7023', 'Discriminator accuracy 0.4688', 'Total loss: 1.3287', 'for batch', 9)
('GAN loss 0.6187 ', 'GAN acc 0.8594', 'Discriminator loss 0.6960', 'Discriminator accuracy 0.5117', 'Total loss: 1.3147', 'for batch', 10)
('GAN loss 0.6374 ', 'GAN acc 0.7695', 'Discriminator loss 0.6954', 'Discriminator accuracy 0.4883', 'Total loss: 1.3328', 'for batch', 11)
('GAN loss 0.6354 ', 'GAN acc 0.7500', 'Discriminator loss 0.7016', 'Discriminator accuracy 0.4844', 'Total loss: 1.3370', 'for batch', 12)
('GAN loss 0.6427 ', 'GAN acc 0.7344', 'Discriminator loss 0.6964', 'Discriminator accuracy 0.5098', 'Total loss: 1.3392', 'for batch', 13)
('GAN loss 0.6364 ', 'GAN acc 0.7500', 'Discriminator loss 0.6957', 'Discriminator accuracy 0.4922', 'Total loss: 1.3321', 'for batch', 14)
('GAN loss 0.6430 ', 'GAN acc 0.7422', 'Discriminator loss 0.6895', 'Discriminator accuracy 0.5371', 'Total loss: 1.3325', 'for batch', 15)
('GAN loss 0.6511 ', 'GAN acc 0.7422', 'Discriminator loss 0.6950', 'Discriminator accuracy 0.4961', 'Total loss: 1.3461', 'for batch', 16)
('GAN loss 0.6450 ', 'GAN acc 0.7617', 'Discriminator loss 0.6961', 'Discriminator accuracy 0.5078', 'Total loss: 1.3411', 'for batch', 17)
('GAN loss 0.6316 ', 'GAN acc 0.8008', 'Discriminator loss 0.6998', 'Discriminator accuracy 0.4883', 'Total loss: 1.3315', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.70571959)
('DISCRIMINATOR_Imagem FAKE=', 0.68336046)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:28.815325')
----------------------------------
('Epoch', 10, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6398 ', 'GAN acc 0.7773', 'Discriminator loss 0.6965', 'Discriminator accuracy 0.4844', 'Total loss: 1.3363', 'for batch', 0)
('GAN loss 0.6193 ', 'GAN acc 0.8555', 'Discriminator loss 0.7023', 'Discriminator accuracy 0.4746', 'Total loss: 1.3216', 'for batch', 1)
('GAN loss 0.6286 ', 'GAN acc 0.8125', 'Discriminator loss 0.6961', 'Discriminator accuracy 0.4961', 'Total loss: 1.3247', 'for batch', 2)
('GAN loss 0.6378 ', 'GAN acc 0.7891', 'Discriminator loss 0.6898', 'Discriminator accuracy 0.5332', 'Total loss: 1.3276', 'for batch', 3)
('GAN loss 0.6276 ', 'GAN acc 0.7930', 'Discriminator loss 0.6977', 'Discriminator accuracy 0.4824', 'Total loss: 1.3253', 'for batch', 4)
('GAN loss 0.6355 ', 'GAN acc 0.7930', 'Discriminator loss 0.6968', 'Discriminator accuracy 0.5117', 'Total loss: 1.3323', 'for batch', 5)
('GAN loss 0.6477 ', 'GAN acc 0.7148', 'Discriminator loss 0.7012', 'Discriminator accuracy 0.4805', 'Total loss: 1.3489', 'for batch', 6)
('GAN loss 0.6570 ', 'GAN acc 0.6875', 'Discriminator loss 0.6839', 'Discriminator accuracy 0.5469', 'Total loss: 1.3409', 'for batch', 7)
('GAN loss 0.6689 ', 'GAN acc 0.6562', 'Discriminator loss 0.6962', 'Discriminator accura
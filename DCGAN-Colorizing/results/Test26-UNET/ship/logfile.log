----------------------------------
('Training with dataset based on class - ', 'ship', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_2 (Model)                  (None, 2, 32, 32)     7846626                                      
____________________________________________________________________________________________________
sequential_3 (Sequential)        (None, 1)             0           convolution2d_46[0][0]           
====================================================================================================
Total params: 8366083
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_24 (Convolution2D) (None, 32, 16, 16)    608         convolution2d_input_2[0][0]      
____________________________________________________________________________________________________
leakyrelu_6 (LeakyReLU)          (None, 32, 16, 16)    0           convolution2d_24[0][0]           
____________________________________________________________________________________________________
dropout_6 (Dropout)              (None, 32, 16, 16)    0           leakyrelu_6[0][0]                
____________________________________________________________________________________________________
convolution2d_25 (Convolution2D) (None, 64, 8, 8)      18496       dropout_6[0][0]                  
____________________________________________________________________________________________________
leakyrelu_7 (LeakyReLU)          (None, 64, 8, 8)      0           convolution2d_25[0][0]           
____________________________________________________________________________________________________
dropout_7 (Dropout)              (None, 64, 8, 8)      0           leakyrelu_7[0][0]                
____________________________________________________________________________________________________
convolution2d_26 (Convolution2D) (None, 128, 4, 4)     73856       dropout_7[0][0]                  
____________________________________________________________________________________________________
leakyrelu_8 (LeakyReLU)          (None, 128, 4, 4)     0           convolution2d_26[0][0]           
____________________________________________________________________________________________________
dropout_8 (Dropout)              (None, 128, 4, 4)     0           leakyrelu_8[0][0]                
____________________________________________________________________________________________________
convolution2d_27 (Convolution2D) (None, 256, 2, 2)     295168      dropout_8[0][0]                  
____________________________________________________________________________________________________
leakyrelu_9 (LeakyReLU)          (None, 256, 2, 2)     0           convolution2d_27[0][0]           
____________________________________________________________________________________________________
dropout_9 (Dropout)              (None, 256, 2, 2)     0           leakyrelu_9[0][0]                
____________________________________________________________________________________________________
flatten_2 (Flatten)              (None, 1024)          0           dropout_9[0][0]                  
____________________________________________________________________________________________________
dense_3 (Dense)                  (None, 128)           131200      flatten_2[0][0]                  
____________________________________________________________________________________________________
leakyrelu_10 (LeakyReLU)         (None, 128)           0           dense_3[0][0]                    
____________________________________________________________________________________________________
dropout_10 (Dropout)             (None, 128)           0           leakyrelu_10[0][0]               
____________________________________________________________________________________________________
dense_4 (Dense)                  (None, 1)             129         dropout_10[0][0]                 
====================================================================================================
Total params: 519457
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6811 ', 'GAN acc 0.7266', 'Discriminator loss 0.6370', 'Discriminator accuracy 0.5762', 'Total loss: 1.3181', 'for batch', 0)
('GAN loss 0.6557 ', 'GAN acc 0.9219', 'Discriminator loss 0.4899', 'Discriminator accuracy 0.5859', 'Total loss: 1.1456', 'for batch', 1)
('GAN loss 0.6195 ', 'GAN acc 0.9922', 'Discriminator loss 0.4377', 'Discriminator accuracy 0.5039', 'Total loss: 1.0573', 'for batch', 2)
('GAN loss 0.5814 ', 'GAN acc 0.9961', 'Discriminator loss 0.4409', 'Discriminator accuracy 0.5000', 'Total loss: 1.0223', 'for batch', 3)
('GAN loss 0.5658 ', 'GAN acc 0.9336', 'Discriminator loss 0.5341', 'Discriminator accuracy 0.5000', 'Total loss: 1.0999', 'for batch', 4)
('GAN loss 0.8745 ', 'GAN acc 0.2891', 'Discriminator loss 0.9506', 'Discriminator accuracy 0.5000', 'Total loss: 1.8251', 'for batch', 5)
('GAN loss 0.5916 ', 'GAN acc 0.8594', 'Discriminator loss 0.6181', 'Discriminator accuracy 0.5020', 'Total loss: 1.2097', 'for batch', 6)
('GAN loss 0.8928 ', 'GAN acc 0.2891', 'Discriminator loss 0.8333', 'Discriminator accuracy 0.4766', 'Total loss: 1.7260', 'for batch', 7)
('GAN loss 0.7922 ', 'GAN acc 0.1719', 'Discriminator loss 0.6433', 'Discriminator accuracy 0.6602', 'Total loss: 1.4356', 'for batch', 8)
('GAN loss 0.6649 ', 'GAN acc 0.6914', 'Discriminator loss 0.5846', 'Discriminator accuracy 0.7715', 'Total loss: 1.2495', 'for batch', 9)
('GAN loss 0.6170 ', 'GAN acc 0.9297', 'Discriminator loss 0.5134', 'Discriminator accuracy 0.6484', 'Total loss: 1.1303', 'for batch', 10)
('GAN loss 0.5748 ', 'GAN acc 0.9883', 'Discriminator loss 0.4805', 'Discriminator accuracy 0.5215', 'Total loss: 1.0553', 'for batch', 11)
('GAN loss 0.5330 ', 'GAN acc 0.9922', 'Discriminator loss 0.4934', 'Discriminator accuracy 0.5039', 'Total loss: 1.0264', 'for batch', 12)
('GAN loss 0.5082 ', 'GAN acc 0.9883', 'Discriminator loss 0.5353', 'Discriminator accuracy 0.5000', 'Total loss: 1.0435', 'for batch', 13)
('GAN loss 0.5277 ', 'GAN acc 0.9375', 'Discriminator loss 0.5756', 'Discriminator accuracy 0.5039', 'Total loss: 1.1033', 'for batch', 14)
('GAN loss 0.6111 ', 'GAN acc 0.7188', 'Discriminator loss 0.6287', 'Discriminator accuracy 0.5195', 'Total loss: 1.2398', 'for batch', 15)
('GAN loss 0.7665 ', 'GAN acc 0.4062', 'Discriminator loss 0.6470', 'Discriminator accuracy 0.5488', 'Total loss: 1.4135', 'for batch', 16)
('GAN loss 0.7272 ', 'GAN acc 0.4609', 'Discriminator loss 0.7131', 'Discriminator accuracy 0.4766', 'Total loss: 1.4403', 'for batch', 17)
('GAN loss 0.8885 ', 'GAN acc 0.2812', 'Discriminator loss 0.9981', 'Discriminator accuracy 0.3223', 'Total loss: 1.8866', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.52575105)
('DISCRIMINATOR_Imagem FAKE=', 0.57279998)
('Discriminator trained', 17, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:31.085228')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6317 ', 'GAN acc 0.7383', 'Discriminator loss 0.8279', 'Discriminator accuracy 0.2715', 'Total loss: 1.4596', 'for batch', 0)
('GAN loss 0.5184 ', 'GAN acc 0.8984', 'Discriminator loss 0.8798', 'Discriminator accuracy 0.3320', 'Total loss: 1.3982', 'for batch', 1)
('GAN loss 2.9684 ', 'GAN acc 0.0000', 'Discriminator loss 1.5504', 'Discriminator accuracy 0.3965', 'Total loss: 4.5188', 'for batch', 2)
('GAN loss 0.8225 ', 'GAN acc 0.0000', 'Discriminator loss 0.8685', 'Discriminator accuracy 0.5098', 'Total loss: 1.6910', 'for batch', 3)
('GAN loss 0.7514 ', 'GAN acc 0.0000', 'Discriminator loss 0.8694', 'Discriminator accuracy 0.5059', 'Total loss: 1.6209', 'for batch', 4)
('GAN loss 0.7313 ', 'GAN acc 0.0078', 'Discriminator loss 0.7246', 'Discriminator accuracy 0.6133', 'Total loss: 1.4559', 'for batch', 5)
('GAN loss 0.7154 ', 'GAN acc 0.0391', 'Discriminator loss 0.6204', 'Discriminator accuracy 0.8906', 'Total loss: 1.3359', 'for batch', 6)
('GAN loss 0.6933 ', 'GAN acc 0.4766', 'Discriminator loss 0.5440', 'Discriminator accuracy 0.9238', 'Total loss: 1.2373', 'for batch', 7)
('GAN loss 0.6705 ', 'GAN acc 0.8555', 'Discriminator loss 0.4925', 'Discriminator accuracy 0.6582', 'Total loss: 1.1630', 'for batch', 8)
('GAN loss 0.6414 ', 'GAN acc 0.9688', 'Discriminator loss 0.4650', 'Discriminator accuracy 0.5312', 'Total loss: 1.1064', 'for batch', 9)
('GAN loss 0.6114 ', 'GAN acc 0.9961', 'Discriminator loss 0.4603', 'Discriminator accuracy 0.5039', 'Total loss: 1.0717', 'for batch', 10)
('GAN loss 0.5841 ', 'GAN acc 1.0000', 'Discriminator loss 0.4625', 'Discriminator accuracy 0.5020', 'Total loss: 1.0466', 'for batch', 11)
('GAN loss 0.5611 ', 'GAN acc 0.9961', 'Discriminator loss 0.4777', 'Discriminator accuracy 0.5000', 'Total loss: 1.0388', 'for batch', 12)
('GAN loss 0.5359 ', 'GAN acc 1.0000', 'Discriminator loss 0.4974', 'Discriminator accuracy 0.5000', 'Total loss: 1.0333', 'for batch', 13)
('GAN loss 0.5221 ', 'GAN acc 1.0000', 'Discriminator loss 0.5113', 'Discriminator accuracy 0.5000', 'Total loss: 1.0334', 'for batch', 14)
('GAN loss 0.5205 ', 'GAN acc 1.0000', 'Discriminator loss 0.5290', 'Discriminator accuracy 0.5000', 'Total loss: 1.0496', 'for batch', 15)
('GAN loss 0.5106 ', 'GAN acc 0.9961', 'Discriminator loss 0.5492', 'Discriminator accuracy 0.5000', 'Total loss: 1.0598', 'for batch', 16)
('GAN loss 0.5070 ', 'GAN acc 0.9961', 'Discriminator loss 0.5698', 'Discriminator accuracy 0.5000', 'Total loss: 1.0768', 'for batch', 17)
('GAN loss 0.5054 ', 'GAN acc 1.0000', 'Discriminator loss 0.6134', 'Discriminator accuracy 0.5000', 'Total loss: 1.1188', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.81524169)
('DISCRIMINATOR_Imagem FAKE=', 0.69643724)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:11.716030')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5148 ', 'GAN acc 0.9766', 'Discriminator loss 0.6889', 'Discriminator accuracy 0.5000', 'Total loss: 1.2037', 'for batch', 0)
('GAN loss 0.8512 ', 'GAN acc 0.3086', 'Discriminator loss 1.0069', 'Discriminator accuracy 0.5000', 'Total loss: 1.8582', 'for batch', 1)
('GAN loss 0.9621 ', 'GAN acc 0.0273', 'Discriminator loss 0.6688', 'Discriminator accuracy 0.5859', 'Total loss: 1.6309', 'for batch', 2)
('GAN loss 0.8161 ', 'GAN acc 0.0195', 'Discriminator loss 0.7037', 'Discriminator accuracy 0.5996', 'Total loss: 1.5198', 'for batch', 3)
('GAN loss 0.7658 ', 'GAN acc 0.0469', 'Discriminator loss 0.7094', 'Discriminator accuracy 0.5879', 'Total loss: 1.4752', 'for batch', 4)
('GAN loss 0.7254 ', 'GAN acc 0.2188', 'Discriminator loss 0.6746', 'Discriminator accuracy 0.6934', 'Total loss: 1.4001', 'for batch', 5)
('GAN loss 0.6609 ', 'GAN acc 0.7852', 'Discriminator loss 0.6385', 'Discriminator accuracy 0.6562', 'Total loss: 1.2994', 'for batch', 6)
('GAN loss 0.6029 ', 'GAN acc 0.9297', 'Discriminator loss 0.6166', 'Discriminator accuracy 0.5488', 'Total loss: 1.2195', 'for batch', 7)
('GAN loss 0.4753 ', 'GAN acc 1.0000', 'Discriminator loss 0.6852', 'Discriminator accuracy 0.4980', 'Total loss: 1.1605', 'for batch', 8)
('GAN loss 0.6849 ', 'GAN acc 0.5898', 'Discriminator loss 1.2547', 'Discriminator accuracy 0.5000', 'Total loss: 1.9395', 'for batch', 9)
('GAN loss 2.4978 ', 'GAN acc 0.0000', 'Discriminator loss 0.8424', 'Discriminator accuracy 0.4824', 'Total loss: 3.3402', 'for batch', 10)
('GAN loss 1.2913 ', 'GAN acc 0.0000', 'Discriminator loss 0.7199', 'Discriminator accuracy 0.5020', 'Total loss: 2.0112', 'for batch', 11)
('GAN loss 0.9493 ', 'GAN acc 0.0000', 'Discriminator loss 0.8252', 'Discriminator accuracy 0.5020', 'Total loss: 1.7745', 'for batch', 12)
('GAN loss 0.8730 ', 'GAN acc 0.0000', 'Discriminator loss 0.7912', 'Discriminator accuracy 0.5020', 'Total loss: 1.6642', 'for batch', 13)
('GAN loss 0.8131 ', 'GAN acc 0.0000', 'Discriminator loss 0.7388', 'Discriminator accuracy 0.5137', 'Total loss: 1.5520', 'for batch', 14)
('GAN loss 0.7628 ', 'GAN acc 0.0391', 'Discriminator loss 0.6921', 'Discriminator accuracy 0.6016', 'Total loss: 1.4549', 'for batch', 15)
('GAN loss 0.7279 ', 'GAN acc 0.1562', 'Discriminator loss 0.6667', 'Discriminator accuracy 0.7051', 'Total loss: 1.3946', 'for batch', 16)
('GAN loss 0.6995 ', 'GAN acc 0.4297', 'Discriminator loss 0.6383', 'Discriminator accuracy 0.8184', 'Total loss: 1.3378', 'for batch', 17)
('GAN loss 0.6745 ', 'GAN acc 0.6484', 'Discriminator loss 0.6163', 'Discriminator accuracy 0.7676', 'Total loss: 1.2908', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.64950365)
('DISCRIMINATOR_Imagem FAKE=', 0.52889359)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:11.166433')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6387 ', 'GAN acc 0.9336', 'Discriminator loss 0.5988', 'Discriminator accuracy 0.6211', 'Total loss: 1.2375', 'for batch', 0)
('GAN loss 0.6074 ', 'GAN acc 0.9766', 'Discriminator loss 0.5914', 'Discriminator accuracy 0.5449', 'Total loss: 1.1988', 'for batch', 1)
('GAN loss 0.5573 ', 'GAN acc 0.9961', 'Discriminator loss 0.6022', 'Discriminator accuracy 0.5059', 'Total loss: 1.1595', 'for batch', 2)
('GAN loss 0.5128 ', 'GAN acc 0.9961', 'Discriminator loss 0.6419', 'Discriminator accuracy 0.5000', 'Total loss: 1.1547', 'for batch', 3)
('GAN loss 0.4785 ', 'GAN acc 0.9922', 'Discriminator loss 0.7279', 'Discriminator accuracy 0.5000', 'Total loss: 1.2064', 'for batch', 4)
('GAN loss 0.7060 ', 'GAN acc 0.5117', 'Discriminator loss 0.9022', 'Discriminator accuracy 0.5059', 'Total loss: 1.6082', 'for batch', 5)
('GAN loss 0.8968 ', 'GAN acc 0.1367', 'Discriminator loss 0.7023', 'Discriminator accuracy 0.5820', 'Total loss: 1.5991', 'for batch', 6)
('GAN loss 0.8265 ', 'GAN acc 0.0898', 'Discriminator loss 0.6681', 'Discriminator accuracy 0.6133', 'Total loss: 1.4946', 'for batch', 7)
('GAN loss 0.7451 ', 'GAN acc 0.2461', 'Discriminator loss 0.6958', 'Discriminator accuracy 0.5254', 'Total loss: 1.4409', 'for batch', 8)
('GAN loss 0.6877 ', 'GAN acc 0.5469', 'Discriminator loss 0.7188', 'Discriminator accuracy 0.4297', 'Total loss: 1.4065', 'for batch', 9)
('GAN loss 0.6265 ', 'GAN acc 0.8359', 'Discriminator loss 0.7507', 'Discriminator accuracy 0.2871', 'Total loss: 1.3772', 'for batch', 10)
('GAN loss 0.6098 ', 'GAN acc 0.7383', 'Discriminator loss 0.8730', 'Discriminator accuracy 0.2930', 'Total loss: 1.4828', 'for batch', 11)
('GAN loss 2.2171 ', 'GAN acc 0.0039', 'Discriminator loss 1.1765', 'Discriminator accuracy 0.3125', 'Total loss: 3.3937', 'for batch', 12)
('GAN loss 0.9749 ', 'GAN acc 0.0039', 'Discriminator loss 0.6964', 'Discriminator accuracy 0.5293', 'Total loss: 1.6713', 'for batch', 13)
('GAN loss 0.8389 ', 'GAN acc 0.0078', 'Discriminator loss 0.7350', 'Discriminator accuracy 0.5098', 'Total loss: 1.5739', 'for batch', 14)
('GAN loss 0.7799 ', 'GAN acc 0.0312', 'Discriminator loss 0.7309', 'Discriminator accuracy 0.5156', 'Total loss: 1.5109', 'for batch', 15)
('GAN loss 0.7413 ', 'GAN acc 0.1602', 'Discriminator loss 0.7048', 'Discriminator accuracy 0.5703', 'Total loss: 1.4461', 'for batch', 16)
('GAN loss 0.7122 ', 'GAN acc 0.3242', 'Discriminator loss 0.6808', 'Discriminator accuracy 0.6504', 'Total loss: 1.3930', 'for batch', 17)
('GAN loss 0.6684 ', 'GAN acc 0.6914', 'Discriminator loss 0.6629', 'Discriminator accuracy 0.
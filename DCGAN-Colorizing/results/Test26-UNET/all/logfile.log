----------------------------------
('Training with dataset based on class - ', 'all', 'with', 32768, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_4 (Model)                  (None, 2, 32, 32)     7846626                                      
____________________________________________________________________________________________________
sequential_7 (Sequential)        (None, 1)             0           convolution2d_92[0][0]           
====================================================================================================
Total params: 8366083
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_70 (Convolution2D) (None, 32, 16, 16)    608         convolution2d_input_4[0][0]      
____________________________________________________________________________________________________
leakyrelu_16 (LeakyReLU)         (None, 32, 16, 16)    0           convolution2d_70[0][0]           
____________________________________________________________________________________________________
dropout_16 (Dropout)             (None, 32, 16, 16)    0           leakyrelu_16[0][0]               
____________________________________________________________________________________________________
convolution2d_71 (Convolution2D) (None, 64, 8, 8)      18496       dropout_16[0][0]                 
____________________________________________________________________________________________________
leakyrelu_17 (LeakyReLU)         (None, 64, 8, 8)      0           convolution2d_71[0][0]           
____________________________________________________________________________________________________
dropout_17 (Dropout)             (None, 64, 8, 8)      0           leakyrelu_17[0][0]               
____________________________________________________________________________________________________
convolution2d_72 (Convolution2D) (None, 128, 4, 4)     73856       dropout_17[0][0]                 
____________________________________________________________________________________________________
leakyrelu_18 (LeakyReLU)         (None, 128, 4, 4)     0           convolution2d_72[0][0]           
____________________________________________________________________________________________________
dropout_18 (Dropout)             (None, 128, 4, 4)     0           leakyrelu_18[0][0]               
____________________________________________________________________________________________________
convolution2d_73 (Convolution2D) (None, 256, 2, 2)     295168      dropout_18[0][0]                 
____________________________________________________________________________________________________
leakyrelu_19 (LeakyReLU)         (None, 256, 2, 2)     0           convolution2d_73[0][0]           
____________________________________________________________________________________________________
dropout_19 (Dropout)             (None, 256, 2, 2)     0           leakyrelu_19[0][0]               
____________________________________________________________________________________________________
flatten_4 (Flatten)              (None, 1024)          0           dropout_19[0][0]                 
____________________________________________________________________________________________________
dense_7 (Dense)                  (None, 128)           131200      flatten_4[0][0]                  
____________________________________________________________________________________________________
leakyrelu_20 (LeakyReLU)         (None, 128)           0           dense_7[0][0]                    
____________________________________________________________________________________________________
dropout_20 (Dropout)             (None, 128)           0           leakyrelu_20[0][0]               
____________________________________________________________________________________________________
dense_8 (Dense)                  (None, 1)             129         dropout_20[0][0]                 
====================================================================================================
Total params: 519457
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 128)
('GAN loss 0.6895 ', 'GAN acc 0.5625', 'Discriminator loss 0.6851', 'Discriminator accuracy 0.4746', 'Total loss: 1.3746', 'for batch', 0)
('GAN loss 0.6915 ', 'GAN acc 0.5312', 'Discriminator loss 0.4621', 'Discriminator accuracy 0.6523', 'Total loss: 1.1536', 'for batch', 1)
('GAN loss 0.7188 ', 'GAN acc 0.2109', 'Discriminator loss 0.3912', 'Discriminator accuracy 0.6855', 'Total loss: 1.1100', 'for batch', 2)
('GAN loss 0.7347 ', 'GAN acc 0.0703', 'Discriminator loss 0.3582', 'Discriminator accuracy 0.8359', 'Total loss: 1.0929', 'for batch', 3)
('GAN loss 0.7262 ', 'GAN acc 0.0234', 'Discriminator loss 0.3452', 'Discriminator accuracy 0.9492', 'Total loss: 1.0713', 'for batch', 4)
('GAN loss 0.6838 ', 'GAN acc 0.9102', 'Discriminator loss 0.3586', 'Discriminator accuracy 0.5020', 'Total loss: 1.0424', 'for batch', 5)
('GAN loss 0.4151 ', 'GAN acc 1.0000', 'Discriminator loss 0.6171', 'Discriminator accuracy 0.5000', 'Total loss: 1.0322', 'for batch', 6)
('GAN loss 0.1439 ', 'GAN acc 0.9414', 'Discriminator loss 5.6285', 'Discriminator accuracy 0.5000', 'Total loss: 5.7725', 'for batch', 7)
('GAN loss 12.9653 ', 'GAN acc 0.0664', 'Discriminator loss 7.4771', 'Discriminator accuracy 0.5078', 'Total loss: 20.4424', 'for batch', 8)
('GAN loss 3.2646 ', 'GAN acc 0.0000', 'Discriminator loss 0.7069', 'Discriminator accuracy 0.5449', 'Total loss: 3.9715', 'for batch', 9)
('GAN loss 0.7826 ', 'GAN acc 0.0039', 'Discriminator loss 1.1829', 'Discriminator accuracy 0.5137', 'Total loss: 1.9655', 'for batch', 10)
('GAN loss 0.7182 ', 'GAN acc 0.0078', 'Discriminator loss 1.0643', 'Discriminator accuracy 0.5117', 'Total loss: 1.7825', 'for batch', 11)
('GAN loss 0.7047 ', 'GAN acc 0.0742', 'Discriminator loss 0.8378', 'Discriminator accuracy 0.5996', 'Total loss: 1.5425', 'for batch', 12)
('GAN loss 0.6982 ', 'GAN acc 0.1914', 'Discriminator loss 0.6680', 'Discriminator accuracy 0.7793', 'Total loss: 1.3663', 'for batch', 13)
('GAN loss 0.6921 ', 'GAN acc 0.5273', 'Discriminator loss 0.5568', 'Discriminator accuracy 0.7852', 'Total loss: 1.2489', 'for batch', 14)
('GAN loss 0.6850 ', 'GAN acc 0.8242', 'Discriminator loss 0.4951', 'Discriminator accuracy 0.6523', 'Total loss: 1.1801', 'for batch', 15)
('GAN loss 0.6771 ', 'GAN acc 0.9219', 'Discriminator loss 0.4577', 'Discriminator accuracy 0.5762', 'Total loss: 1.1348', 'for batch', 16)
('GAN loss 0.6668 ', 'GAN acc 0.9609', 'Discriminator loss 0.4398', 'Discriminator accuracy 0.5117', 'Total loss: 1.1066', 'for batch', 17)
('GAN loss 0.6535 ', 'GAN acc 0.9844', 'Discriminator loss 0.4366', 'Discriminator accuracy 0.5117', 'Total loss: 1.0901', 'for batch', 18)
('GAN loss 0.6378 ', 'GAN acc 0.9844', 'Discriminator loss 0.4345', 'Discriminator accuracy 0.5078', 'Total loss: 1.0723', 'for batch', 19)
('GAN loss 0.6081 ', 'GAN acc 1.0000', 'Discriminator loss 0.4405', 'Discriminator accuracy 0.5000', 'Total loss: 1.0486', 'for batch', 20)
('GAN loss 0.5755 ', 'GAN acc 1.0000', 'Discriminator loss 0.4627', 'Discriminator accuracy 0.5000', 'Total loss: 1.0382', 'for batch', 21)
('GAN loss 0.5117 ', 'GAN acc 0.9922', 'Discriminator loss 0.5066', 'Discriminator accuracy 0.5020', 'Total loss: 1.0184', 'for batch', 22)
('GAN loss 0.4244 ', 'GAN acc 0.9961', 'Discriminator loss 0.6366', 'Discriminator accuracy 0.5000', 'Total loss: 1.0610', 'for batch', 23)
('GAN loss 0.4498 ', 'GAN acc 0.8438', 'Discriminator loss 0.9801', 'Discriminator accuracy 0.5059', 'Total loss: 1.4298', 'for batch', 24)
('GAN loss 1.8629 ', 'GAN acc 0.0977', 'Discriminator loss 1.1524', 'Discriminator accuracy 0.5293', 'Total loss: 3.0154', 'for batch', 25)
('GAN loss 0.8714 ', 'GAN acc 0.1445', 'Discriminator loss 0.6142', 'Discriminator accuracy 0.6660', 'Total loss: 1.4856', 'for batch', 26)
('GAN loss 0.7204 ', 'GAN acc 0.3711', 'Discriminator loss 0.7363', 'Discriminator accuracy 0.4746', 'Total loss: 1.4568', 'for batch', 27)
('GAN loss 0.6616 ', 'GAN acc 0.7070', 'Discriminator loss 0.7419', 'Discriminator accuracy 0.3906', 'Total loss: 1.4036', 'for batch', 28)
('GAN loss 0.6035 ', 'GAN acc 0.9531', 'Discriminator loss 0.7184', 'Discriminator accuracy 0.3477', 'Total loss: 1.3219', 'for batch', 29)
('GAN loss 0.5675 ', 'GAN acc 1.0000', 'Discriminator loss 0.6654', 'Discriminator accuracy 0.4375', 'Total loss: 1.2329', 'for batch', 30)
('GAN loss 0.4924 ', 'GAN acc 1.0000', 'Discriminator loss 0.6764', 'Discriminator accuracy 0.4648', 'Total loss: 1.1688', 'for batch', 31)
('GAN loss 0.4224 ', 'GAN acc 0.9961', 'Discriminator loss 0.7496', 'Discriminator accuracy 0.4961', 'Total loss: 1.1720', 'for batch', 32)
('GAN loss 0.4132 ', 'GAN acc 0.9531', 'Discriminator loss 0.9743', 'Discriminator accuracy 0.4961', 'Total loss: 1.3875', 'for batch', 33)
('GAN loss 1.0800 ', 'GAN acc 0.2969', 'Discriminator loss 1.2077', 'Discriminator accuracy 0.4980', 'Total loss: 2.2877', 'for batch', 34)
('GAN loss 0.8084 ', 'GAN acc 0.2422', 'Discriminator loss 0.7108', 'Discriminator accuracy 0.4727', 'Total loss: 1.5192', 'for batch', 35)
('GAN loss 0.7472 ', 'GAN acc 0.2305', 'Discriminator loss 0.7032', 'Discriminator accuracy 0.5156', 'Total loss: 1.4503', 'for batch', 36)
('GAN loss 0.7108 ', 'GAN acc 0.4023', 'Discriminator loss 0.6932', 'Discriminator accuracy 0.5684', 'Total loss: 1.4041', 'for batch', 37)
('GAN loss 0.6600 ', 'GAN acc 0.6953', 'Discriminator loss 0.6683', 'Discriminator accuracy 0.5371', 'Total loss: 1.3283', 'for batch', 38)
('GAN loss 0.6120 ', 'GAN acc 0.8828', 'Discriminator loss 0.6603', 'Discriminator accuracy 0.5000', 'Total loss: 1.2723', 'for batch', 39)
('GAN loss 0.5370 ', 'GAN acc 0.9453', 'Discriminator loss 0.6703', 'Discriminator accuracy 0.4902', 'Total loss: 1.2073', 'for batch', 40)
('GAN loss 0.5561 ', 'GAN acc 0.8008', 'Discriminator loss 0.7972', 'Discriminator accuracy 0.5098', 'Total loss: 1.3533', 'for batch', 41)
('GAN loss 0.9462 ', 'GAN acc 0.3398', 'Discriminator loss 0.9396', 'Discriminator accuracy 0.4844', 'Total loss: 1.8858', 'for batch', 42)
('GAN loss 0.8094 ', 'GAN acc 0.3438', 'Discriminator loss 0.7004', 'Discriminator accuracy 0.5195', 'Total loss: 1.5097', 'for batch', 43)
('GAN loss 0.7254 ', 'GAN acc 0.3984', 'Discriminator loss 0.7213', 'Discriminator accuracy 0.4551', 'Total loss: 1.4468', 'for batch', 44)
('GAN loss 0.6894 ', 'GAN acc 0.5312', 'Discriminator loss 0.7184', 'Discriminator accuracy 0.4902', 'Total loss: 1.4078', 'for batch', 45)
('GAN loss 0.6232 ', 'GAN acc 0.8594', 'Discriminator loss 0.6994', 'Discriminator accuracy 0.4609', 'Total loss: 1.3226', 'for batch', 46)
('GAN loss 0.5664 ', 'GAN acc 0.8906', 'Discriminator loss 0.7062', 'Discriminator accuracy 0.4473', 'Total loss: 1.2726', 'for batch', 47)
('GAN loss 0.5061 ', 'GAN acc 0.8789', 'Discriminator loss 0.8241', 'Discriminator accuracy 0.4570', 'Total loss: 1.3302', 'for batch', 48)
('GAN loss 0.8286 ', 'GAN acc 0.4336', 'Discriminator loss 1.0068', 'Discriminator accuracy 0.4883', 'Total loss: 1.8354', 'for batch', 49)
('GAN loss 0.9248 ', 'GAN acc 0.1797', 'Discriminator loss 0.7696', 'Discriminator accuracy 0.3926', 'Total loss: 1.6944', 'for batch', 50)
('GAN loss 0.7807 ', 'GAN acc 0.2461', 'Discriminator loss 0.7806', 'Discriminator accuracy 0.4043', 'Total loss: 1.5613', 'for batch', 51)
('GAN loss 0.7294 ', 'GAN acc 0.3672', 'Discriminator loss 0.7628', 'Discriminator accuracy 0.4141', 'Total loss: 1.4922', 'for batch', 52)
('GAN loss 0.6755 ', 'GAN acc 0.6094', 'Discriminator loss 0.7538', 'Discriminator accuracy 0.4082', 'Total loss: 1.4293', 'for batch', 53)
('GAN loss 0.6059 ', 'GAN acc 0.8711', 'Discriminator loss 0.7226', 'Discriminator accuracy 0.4141', 'Total loss: 1.3285', 'for batch', 54)
('GAN loss 0.5381 ', 'GAN acc 0.9023', 'Discriminator loss 0.7553', 'Discriminator accuracy 0.3945', 'Total loss: 1.2934', 'for batch', 55)
('GAN loss 0.5525 ', 'GAN acc 0.7891', 'Discriminator loss 0.8858', 'Discriminator accuracy 0.4238', 'Total loss: 1.4383', 'for batch', 56)
('GAN loss 1.0409 ', 'GAN acc 0.2305', 'Discriminator loss 0.9678', 'Discriminator accuracy 0.3691', 'Total loss: 2.0087', 'for batch', 57)
('GAN loss 0.9849 ', 'GAN acc 0.0117', 'Discriminator loss 0.7374', 'Discriminator accuracy 0.4727', 'Total loss: 1.7223', 'for batch', 58)
('GAN loss 0.7951 ', 'GAN acc 0.0234', 'Discriminator loss 0.7931', 'Discriminator accuracy 0.4961', 'Total loss: 1.5882', 'for batch', 59)
('GAN loss 0.7479 ', 'GAN acc 0.0859', 'Discriminator loss 0.7784', 'Discriminator accuracy 0.5137', 'Total loss: 1.5263', 'for batch', 60)
('GAN loss 0.7165 ', 'GAN acc 0.2188', 'Discriminator loss 0.7354', 'Discriminator accuracy 0.5449', 'Total loss: 1.4519', 'for batch', 61)
('GAN loss 0.6880 ', 'GAN acc 0.5625', 'Discriminator loss 0.6918', 'Discriminator accuracy 0.5645', 'Total loss: 1.3798', 'for batch', 62)
('GAN loss 0.6557 ', 'GAN acc 0.8242', 'Discriminator loss 0.6619', 'Discriminator accuracy 0.5293', 'Total loss: 1.3176', 'for batch', 63)
('GAN loss 0.6234 ', 'GAN acc 0.9297', 'Discriminator loss 0.6457', 'Discriminator accuracy 0.5020', 'Total loss: 1.2691', 'for batch', 64)
('GAN loss 0.5763 ', 'GAN acc 0.9648', 'Discriminator loss 0.6528', 'Discriminator accuracy 0.5078', 'Total loss: 1.2291', 'for batch', 65)
('GAN loss 0.4870 ', 'GAN acc 0.9961', 'Discriminator loss 0.7082', 'Discriminator accuracy 0.5020', 'Total loss: 1.1952', 'for batch', 66)
('GAN loss 0.4343 ', 'GAN acc 0.9727', 'Discriminator loss 0.8792', 'Discriminator accuracy 0.5020', 'Total loss: 1.3135', 'for batch', 67)
('GAN loss 0.9960 ', 'GAN acc 0.3203', 'Discriminator loss 1.1383', 'Discriminator accuracy 0.4844', 'Total loss: 2.1343', 'for batch', 68)
('GAN loss 1.0412 ', 'GAN acc 0.1016', 'Discriminator loss 0.7473', 'Discriminator accuracy 0.4199', 'Total loss: 1.7885', 'for batch', 69)
('GAN loss 0.8535 ', 'GAN acc 0.0078', 'Discriminator loss 0.7702', 'Discriminator accuracy 0.4805', 'Total loss: 1.6237', 'for batch', 70)
('GAN loss 0.7969 ', 'GAN acc 0.0078', 'Discriminator loss 0.7892', 'Discriminator accuracy 0.5020', 'Total loss: 1.5861', 'for batch', 71)
('GAN loss 0.7585 ', 'GAN acc 0.0117', 'Discriminator loss 0.7832', 'Discriminator accuracy 0.5176', 'Total loss: 1.5417', 'for batch', 72)
('GAN loss 0.7375 ', 'GAN acc 0.0508', 'Discriminator loss 0.7572', 'Discriminator accuracy 0.5195', 'Total loss: 1.4947', 'for batch', 73)
('GAN loss 0.7175 ', 'GAN acc 0.1562', 'Discriminator loss 0.7215', 'Discriminator accuracy 0.5742', 'Total loss: 1.4390', 'for batch', 74)
('GAN loss 0.6976 ', 'GAN acc 0.4141', 'Discriminator loss 0.6918', 'Discriminator accuracy 0.6270', 'Total loss: 1.3894', 'for batch', 75)
('GAN loss 0.6760 ', 'GAN acc 0.7109', 'Discriminator loss 0.6657', 'Discriminator accuracy 0.5879', 'Total loss: 1.3417', 'for batch', 76)
('GAN loss 0.6513 ', 'GAN acc 0.9062', 'Discriminator loss 0.6469', 'Discriminator accuracy 0.5527', 'Total loss: 1.2981', 'for batch', 77)
('GAN loss 0.6231 ', 'GAN acc 0.9648', 'Discriminator loss 0.6420', 'Discriminator accuracy 0.5215', 'Total loss: 1.2651', 'for batch', 78)
('GAN loss 0.5815 ', 'GAN acc 0.9805', 'Discriminator loss 0.6567', 'Discriminator accuracy 0.5020', 'Total loss: 1.2382', 'for batch', 79)
('GAN loss 0.5198 ', 'GAN acc 0.9922', 'Discriminator loss 0.6879', 'Discriminator accuracy 0.5078', 'Total loss: 1.2077', 'for batch', 80)
('GAN loss 0.4696 ', 'GAN acc 0.9805', 'Discriminator loss 0.7999', 'Discriminator accuracy 0.4961', 'Total loss: 1.2695', 'for batch', 81)
('GAN loss 0.6902 ', 'GAN 
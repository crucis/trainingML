----------------------------------
('Training with dataset based on class - ', 'truck', 'with', 5000, 'samples')
----------------------------------
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
model_3 (Model)                  (None, 2, 32, 32)     7846626                                      
____________________________________________________________________________________________________
sequential_5 (Sequential)        (None, 1)             0           convolution2d_69[0][0]           
====================================================================================================
Total params: 8366083
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
convolution2d_47 (Convolution2D) (None, 32, 16, 16)    608         convolution2d_input_3[0][0]      
____________________________________________________________________________________________________
leakyrelu_11 (LeakyReLU)         (None, 32, 16, 16)    0           convolution2d_47[0][0]           
____________________________________________________________________________________________________
dropout_11 (Dropout)             (None, 32, 16, 16)    0           leakyrelu_11[0][0]               
____________________________________________________________________________________________________
convolution2d_48 (Convolution2D) (None, 64, 8, 8)      18496       dropout_11[0][0]                 
____________________________________________________________________________________________________
leakyrelu_12 (LeakyReLU)         (None, 64, 8, 8)      0           convolution2d_48[0][0]           
____________________________________________________________________________________________________
dropout_12 (Dropout)             (None, 64, 8, 8)      0           leakyrelu_12[0][0]               
____________________________________________________________________________________________________
convolution2d_49 (Convolution2D) (None, 128, 4, 4)     73856       dropout_12[0][0]                 
____________________________________________________________________________________________________
leakyrelu_13 (LeakyReLU)         (None, 128, 4, 4)     0           convolution2d_49[0][0]           
____________________________________________________________________________________________________
dropout_13 (Dropout)             (None, 128, 4, 4)     0           leakyrelu_13[0][0]               
____________________________________________________________________________________________________
convolution2d_50 (Convolution2D) (None, 256, 2, 2)     295168      dropout_13[0][0]                 
____________________________________________________________________________________________________
leakyrelu_14 (LeakyReLU)         (None, 256, 2, 2)     0           convolution2d_50[0][0]           
____________________________________________________________________________________________________
dropout_14 (Dropout)             (None, 256, 2, 2)     0           leakyrelu_14[0][0]               
____________________________________________________________________________________________________
flatten_3 (Flatten)              (None, 1024)          0           dropout_14[0][0]                 
____________________________________________________________________________________________________
dense_5 (Dense)                  (None, 128)           131200      flatten_3[0][0]                  
____________________________________________________________________________________________________
leakyrelu_15 (LeakyReLU)         (None, 128)           0           dense_5[0][0]                    
____________________________________________________________________________________________________
dropout_15 (Dropout)             (None, 128)           0           leakyrelu_15[0][0]               
____________________________________________________________________________________________________
dense_6 (Dense)                  (None, 1)             129         dropout_15[0][0]                 
====================================================================================================
Total params: 519457
____________________________________________________________________________________________________
('Epoch', 1, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6610 ', 'GAN acc 0.6914', 'Discriminator loss 0.5780', 'Discriminator accuracy 0.5723', 'Total loss: 1.2390', 'for batch', 0)
('GAN loss 0.6351 ', 'GAN acc 0.8008', 'Discriminator loss 0.4481', 'Discriminator accuracy 0.5898', 'Total loss: 1.0832', 'for batch', 1)
('GAN loss 0.5605 ', 'GAN acc 0.9219', 'Discriminator loss 0.5023', 'Discriminator accuracy 0.5059', 'Total loss: 1.0628', 'for batch', 2)
('GAN loss 0.4886 ', 'GAN acc 0.8750', 'Discriminator loss 0.7634', 'Discriminator accuracy 0.5000', 'Total loss: 1.2520', 'for batch', 3)
('GAN loss 1.2552 ', 'GAN acc 0.2305', 'Discriminator loss 1.4623', 'Discriminator accuracy 0.5059', 'Total loss: 2.7176', 'for batch', 4)
('GAN loss 1.0155 ', 'GAN acc 0.1211', 'Discriminator loss 0.7800', 'Discriminator accuracy 0.4707', 'Total loss: 1.7956', 'for batch', 5)
('GAN loss 0.7991 ', 'GAN acc 0.1992', 'Discriminator loss 0.8064', 'Discriminator accuracy 0.5742', 'Total loss: 1.6055', 'for batch', 6)
('GAN loss 0.6753 ', 'GAN acc 0.5742', 'Discriminator loss 0.6596', 'Discriminator accuracy 0.6230', 'Total loss: 1.3349', 'for batch', 7)
('GAN loss 0.6108 ', 'GAN acc 0.8398', 'Discriminator loss 0.5410', 'Discriminator accuracy 0.6641', 'Total loss: 1.1518', 'for batch', 8)
('GAN loss 0.5713 ', 'GAN acc 0.9141', 'Discriminator loss 0.4983', 'Discriminator accuracy 0.5762', 'Total loss: 1.0695', 'for batch', 9)
('GAN loss 0.5454 ', 'GAN acc 0.9180', 'Discriminator loss 0.5068', 'Discriminator accuracy 0.5195', 'Total loss: 1.0521', 'for batch', 10)
('GAN loss 0.5421 ', 'GAN acc 0.8945', 'Discriminator loss 0.5440', 'Discriminator accuracy 0.5137', 'Total loss: 1.0861', 'for batch', 11)
('GAN loss 0.5683 ', 'GAN acc 0.7891', 'Discriminator loss 0.5621', 'Discriminator accuracy 0.5293', 'Total loss: 1.1304', 'for batch', 12)
('GAN loss 0.5821 ', 'GAN acc 0.7656', 'Discriminator loss 0.6272', 'Discriminator accuracy 0.5117', 'Total loss: 1.2093', 'for batch', 13)
('GAN loss 0.5322 ', 'GAN acc 0.8164', 'Discriminator loss 0.7937', 'Discriminator accuracy 0.4902', 'Total loss: 1.3260', 'for batch', 14)
('GAN loss 1.6427 ', 'GAN acc 0.1094', 'Discriminator loss 1.6143', 'Discriminator accuracy 0.4238', 'Total loss: 3.2569', 'for batch', 15)
('GAN loss 0.7990 ', 'GAN acc 0.1641', 'Discriminator loss 0.8257', 'Discriminator accuracy 0.5195', 'Total loss: 1.6247', 'for batch', 16)
('GAN loss 0.7005 ', 'GAN acc 0.4609', 'Discriminator loss 0.7784', 'Discriminator accuracy 0.5605', 'Total loss: 1.4789', 'for batch', 17)
('GAN loss 0.6192 ', 'GAN acc 0.9141', 'Discriminator loss 0.6648', 'Discriminator accuracy 0.5625', 'Total loss: 1.2840', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.77505344)
('DISCRIMINATOR_Imagem FAKE=', 0.56614649)
('Discriminator trained', 18, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:31.404036')
----------------------------------
('Epoch', 2, 'of', 50)
('Number of batches', 19)
('GAN loss 0.5523 ', 'GAN acc 0.9805', 'Discriminator loss 0.5947', 'Discriminator accuracy 0.5098', 'Total loss: 1.1470', 'for batch', 0)
('GAN loss 0.4941 ', 'GAN acc 0.9961', 'Discriminator loss 0.5996', 'Discriminator accuracy 0.5020', 'Total loss: 1.0937', 'for batch', 1)
('GAN loss 0.4628 ', 'GAN acc 0.9961', 'Discriminator loss 0.6382', 'Discriminator accuracy 0.5020', 'Total loss: 1.1010', 'for batch', 2)
('GAN loss 0.5317 ', 'GAN acc 0.8594', 'Discriminator loss 0.7113', 'Discriminator accuracy 0.5117', 'Total loss: 1.2430', 'for batch', 3)
('GAN loss 0.7769 ', 'GAN acc 0.3945', 'Discriminator loss 0.6706', 'Discriminator accuracy 0.5645', 'Total loss: 1.4475', 'for batch', 4)
('GAN loss 0.6751 ', 'GAN acc 0.5781', 'Discriminator loss 0.6333', 'Discriminator accuracy 0.5645', 'Total loss: 1.3084', 'for batch', 5)
('GAN loss 0.6782 ', 'GAN acc 0.5898', 'Discriminator loss 0.6300', 'Discriminator accuracy 0.5918', 'Total loss: 1.3082', 'for batch', 6)
('GAN loss 0.6237 ', 'GAN acc 0.7578', 'Discriminator loss 0.6568', 'Discriminator accuracy 0.5176', 'Total loss: 1.2805', 'for batch', 7)
('GAN loss 0.5303 ', 'GAN acc 0.9102', 'Discriminator loss 0.6724', 'Discriminator accuracy 0.5059', 'Total loss: 1.2026', 'for batch', 8)
('GAN loss 0.6105 ', 'GAN acc 0.6914', 'Discriminator loss 0.8808', 'Discriminator accuracy 0.4883', 'Total loss: 1.4913', 'for batch', 9)
('GAN loss 1.3063 ', 'GAN acc 0.0977', 'Discriminator loss 0.9462', 'Discriminator accuracy 0.4492', 'Total loss: 2.2525', 'for batch', 10)
('GAN loss 0.8490 ', 'GAN acc 0.0586', 'Discriminator loss 0.7638', 'Discriminator accuracy 0.5371', 'Total loss: 1.6128', 'for batch', 11)
('GAN loss 0.7493 ', 'GAN acc 0.2422', 'Discriminator loss 0.7781', 'Discriminator accuracy 0.5410', 'Total loss: 1.5274', 'for batch', 12)
('GAN loss 0.6672 ', 'GAN acc 0.7031', 'Discriminator loss 0.6848', 'Discriminator accuracy 0.6289', 'Total loss: 1.3520', 'for batch', 13)
('GAN loss 0.5932 ', 'GAN acc 0.9648', 'Discriminator loss 0.6191', 'Discriminator accuracy 0.5566', 'Total loss: 1.2123', 'for batch', 14)
('GAN loss 0.5269 ', 'GAN acc 0.9922', 'Discriminator loss 0.5979', 'Discriminator accuracy 0.5059', 'Total loss: 1.1248', 'for batch', 15)
('GAN loss 0.4657 ', 'GAN acc 1.0000', 'Discriminator loss 0.6328', 'Discriminator accuracy 0.5020', 'Total loss: 1.0985', 'for batch', 16)
('GAN loss 0.4270 ', 'GAN acc 0.9844', 'Discriminator loss 0.7603', 'Discriminator accuracy 0.5000', 'Total loss: 1.1873', 'for batch', 17)
('GAN loss 0.5337 ', 'GAN acc 0.8438', 'Discriminator loss 0.9900', 'Discriminator accuracy 0.5000', 'Total loss: 1.5237', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.68345565)
('DISCRIMINATOR_Imagem FAKE=', 0.90513462)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:11.192672')
----------------------------------
('Epoch', 3, 'of', 50)
('Number of batches', 19)
('GAN loss 2.1176 ', 'GAN acc 0.0156', 'Discriminator loss 1.0574', 'Discriminator accuracy 0.4883', 'Total loss: 3.1750', 'for batch', 0)
('GAN loss 0.9180 ', 'GAN acc 0.0000', 'Discriminator loss 0.8290', 'Discriminator accuracy 0.4883', 'Total loss: 1.7470', 'for batch', 1)
('GAN loss 0.8113 ', 'GAN acc 0.0156', 'Discriminator loss 0.8949', 'Discriminator accuracy 0.5000', 'Total loss: 1.7062', 'for batch', 2)
('GAN loss 0.7467 ', 'GAN acc 0.0469', 'Discriminator loss 0.8379', 'Discriminator accuracy 0.5078', 'Total loss: 1.5846', 'for batch', 3)
('GAN loss 0.7048 ', 'GAN acc 0.3477', 'Discriminator loss 0.7453', 'Discriminator accuracy 0.5449', 'Total loss: 1.4502', 'for batch', 4)
('GAN loss 0.6718 ', 'GAN acc 0.7383', 'Discriminator loss 0.6804', 'Discriminator accuracy 0.5977', 'Total loss: 1.3522', 'for batch', 5)
('GAN loss 0.6390 ', 'GAN acc 0.9219', 'Discriminator loss 0.6477', 'Discriminator accuracy 0.5254', 'Total loss: 1.2866', 'for batch', 6)
('GAN loss 0.6062 ', 'GAN acc 0.9688', 'Discriminator loss 0.6227', 'Discriminator accuracy 0.5098', 'Total loss: 1.2288', 'for batch', 7)
('GAN loss 0.5583 ', 'GAN acc 1.0000', 'Discriminator loss 0.6189', 'Discriminator accuracy 0.4961', 'Total loss: 1.1772', 'for batch', 8)
('GAN loss 0.5007 ', 'GAN acc 1.0000', 'Discriminator loss 0.6564', 'Discriminator accuracy 0.5000', 'Total loss: 1.1571', 'for batch', 9)
('GAN loss 0.4349 ', 'GAN acc 0.9922', 'Discriminator loss 0.7655', 'Discriminator accuracy 0.5000', 'Total loss: 1.2004', 'for batch', 10)
('GAN loss 0.7356 ', 'GAN acc 0.5039', 'Discriminator loss 1.1099', 'Discriminator accuracy 0.5039', 'Total loss: 1.8455', 'for batch', 11)
('GAN loss 1.0457 ', 'GAN acc 0.1328', 'Discriminator loss 0.8673', 'Discriminator accuracy 0.4531', 'Total loss: 1.9130', 'for batch', 12)
('GAN loss 0.9200 ', 'GAN acc 0.0195', 'Discriminator loss 0.7271', 'Discriminator accuracy 0.4883', 'Total loss: 1.6472', 'for batch', 13)
('GAN loss 0.8161 ', 'GAN acc 0.0430', 'Discriminator loss 0.7682', 'Discriminator accuracy 0.4805', 'Total loss: 1.5844', 'for batch', 14)
('GAN loss 0.7568 ', 'GAN acc 0.1289', 'Discriminator loss 0.7641', 'Discriminator accuracy 0.4746', 'Total loss: 1.5209', 'for batch', 15)
('GAN loss 0.7193 ', 'GAN acc 0.3281', 'Discriminator loss 0.7446', 'Discriminator accuracy 0.4609', 'Total loss: 1.4639', 'for batch', 16)
('GAN loss 0.6890 ', 'GAN acc 0.5312', 'Discriminator loss 0.7299', 'Discriminator accuracy 0.4375', 'Total loss: 1.4189', 'for batch', 17)
('GAN loss 0.6488 ', 'GAN acc 0.8281', 'Discriminator loss 0.6975', 'Discriminator accuracy 0.4609', 'Total loss: 1.3464', 'for batch', 18)
('DISCRIMINATOR_Imagem REAL=', 0.58871752)
('DISCRIMINATOR_Imagem FAKE=', 0.55874878)
('Discriminator trained', 19, 'times of', 19, 'batchs')
Saving weights...
Saving sample images...
('Elapsed time in epoch = ', '0:00:11.197110')
----------------------------------
('Epoch', 4, 'of', 50)
('Number of batches', 19)
('GAN loss 0.6068 ', 'GAN acc 0.9102', 'Discriminator loss 0.7083', 'Discriminator accuracy 0.3984', 'Total loss: 1.3151', 'for batch', 0)
('GAN loss 0.5412 ', 'GAN acc 0.9648', 'Discriminator loss 0.7491', 'Discriminator accuracy 0.4297', 'Total loss: 1.2903', 'for batch', 1)
('GAN loss 0.5732 ', 'GAN acc 0.7578', 'Discriminator loss 0.9243', 'Discriminator accuracy 0.4512', 'Total loss: 1.4976', 'for batch', 2)
('GAN loss 2.6042 ', 'GAN acc 0.0039', 'Discriminator loss 1.2186', 'Discriminator accuracy 0.4238', 'Total loss: 3.8228', 'for batch', 3)
('GAN loss 0.8425 ', 'GAN acc 0.0039', 'Discriminator loss 0.7490', 'Discriminator accuracy 0.5098', 'Total loss: 1.5915', 'for batch', 4)
('GAN loss 0.7983 ', 'GAN acc 0.0000', 'Discriminator loss 0.7904', 'Discriminator accuracy 0.5039', 'Total loss: 1.5888', 'for batch', 5)
('GAN loss 0.7742 ', 'GAN acc 0.0000', 'Discriminator loss 0.7930', 'Discriminator accuracy 0.5039', 'Total loss: 1.5672', 'for batch', 6)
('GAN loss 0.7519 ', 'GAN acc 0.0117', 'Discriminator loss 0.7587', 'Discriminator accuracy 0.5254', 'Total loss: 1.5106', 'for batch', 7)
('GAN loss 0.7289 ', 'GAN acc 0.0703', 'Discriminator loss 0.7249', 'Discriminator accuracy 0.5566', 'Total loss: 1.4538', 'for batch', 8)
('GAN loss 0.7118 ', 'GAN acc 0.2031', 'Discriminator loss 0.7021', 'Discriminator accuracy 0.6230', 'Total loss: 1.4139', 'for batch', 9)
('GAN loss 0.6946 ', 'GAN acc 0.4570', 'Discriminator loss 0.6769', 'Discriminator accuracy 0.6680', 'Total loss: 1.3715', 'for batch', 10)
('GAN loss 0.6756 ', 'GAN acc 0.7266', 'Discriminator loss 0.6540', 'Discriminator accuracy 0.6523', 'Total loss: 1.3297', 'for batch', 11)
('GAN loss 0.6559 ', 'GAN acc 0.8711', 'Discriminator loss 0.6424', 'Discriminator accuracy 0.5781', 'Total loss: 1.2983', 'for batch', 12)
('GAN loss 0.6295 ', 'GAN acc 0.9688', 'Discriminator loss 0.6391', 'Discriminator accuracy 0.5195', 'Total loss: 1.2686', 'for batch', 13)
('GAN loss 0.6107 ', 'GAN acc 0.9922', 'Discriminator loss 0.6333', 'Discriminator accuracy 0.5078', 'Total loss: 1.2441', 'for batch', 14)
('GAN loss 0.5784 ', 'GAN acc 0.9883', 'Discriminator loss 0.6352', 'Discriminator accuracy 0.4941', 'Total loss: 1.2136', 'for batch', 15)
('GAN loss 0.5354 ', 'GAN acc 1.0000', 'Discriminator loss 0.6534', 'Discriminator accuracy 0.4980', 'Total loss: 1.1888', 'for batch', 16)
('GAN loss 0.4857 ', 'GAN acc 1.0000', 'Discriminator loss 0.6917', 'Discriminator accuracy 0.5000', 'Total loss: 1.1774', 'for batch', 17)
('GAN loss 0.4489 ', 'GAN acc 1.0000', 'Discriminator loss 0.7572', 'Discriminator accuracy 0